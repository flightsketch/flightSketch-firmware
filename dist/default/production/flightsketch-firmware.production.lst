

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jun 29 00:26:20 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F15325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.00
    71                           ; Generated 27/05/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F15325 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  0012                     	;# 
   119  0014                     	;# 
   120  0018                     	;# 
   121  001A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  020C                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  020F                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0210                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  028C                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028D                     	;# 
   174  028E                     	;# 
   175  028F                     	;# 
   176  0290                     	;# 
   177  0291                     	;# 
   178  030C                     	;# 
   179  030C                     	;# 
   180  030D                     	;# 
   181  030E                     	;# 
   182  030F                     	;# 
   183  0310                     	;# 
   184  0310                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0314                     	;# 
   189  0314                     	;# 
   190  0315                     	;# 
   191  0316                     	;# 
   192  0318                     	;# 
   193  0318                     	;# 
   194  0319                     	;# 
   195  031A                     	;# 
   196  031C                     	;# 
   197  031C                     	;# 
   198  031D                     	;# 
   199  031E                     	;# 
   200  038C                     	;# 
   201  038C                     	;# 
   202  038D                     	;# 
   203  038E                     	;# 
   204  058C                     	;# 
   205  058C                     	;# 
   206  058D                     	;# 
   207  058E                     	;# 
   208  058F                     	;# 
   209  058F                     	;# 
   210  0590                     	;# 
   211  0591                     	;# 
   212  0592                     	;# 
   213  0593                     	;# 
   214  059C                     	;# 
   215  059C                     	;# 
   216  059D                     	;# 
   217  059D                     	;# 
   218  059E                     	;# 
   219  059F                     	;# 
   220  060C                     	;# 
   221  060D                     	;# 
   222  060E                     	;# 
   223  060F                     	;# 
   224  0610                     	;# 
   225  0611                     	;# 
   226  0612                     	;# 
   227  0613                     	;# 
   228  0614                     	;# 
   229  070C                     	;# 
   230  070D                     	;# 
   231  070E                     	;# 
   232  070F                     	;# 
   233  0710                     	;# 
   234  0711                     	;# 
   235  0712                     	;# 
   236  0713                     	;# 
   237  0716                     	;# 
   238  0717                     	;# 
   239  0718                     	;# 
   240  0719                     	;# 
   241  071A                     	;# 
   242  071B                     	;# 
   243  071C                     	;# 
   244  071D                     	;# 
   245  0796                     	;# 
   246  0797                     	;# 
   247  0798                     	;# 
   248  0799                     	;# 
   249  079A                     	;# 
   250  079B                     	;# 
   251  080C                     	;# 
   252  080D                     	;# 
   253  080E                     	;# 
   254  080F                     	;# 
   255  0810                     	;# 
   256  0811                     	;# 
   257  0812                     	;# 
   258  0813                     	;# 
   259  0814                     	;# 
   260  081A                     	;# 
   261  081A                     	;# 
   262  081B                     	;# 
   263  081C                     	;# 
   264  081C                     	;# 
   265  081D                     	;# 
   266  081E                     	;# 
   267  081F                     	;# 
   268  088C                     	;# 
   269  088D                     	;# 
   270  088E                     	;# 
   271  088F                     	;# 
   272  0890                     	;# 
   273  0891                     	;# 
   274  0892                     	;# 
   275  0893                     	;# 
   276  0895                     	;# 
   277  0896                     	;# 
   278  090C                     	;# 
   279  090E                     	;# 
   280  090F                     	;# 
   281  091F                     	;# 
   282  098F                     	;# 
   283  098F                     	;# 
   284  0990                     	;# 
   285  0991                     	;# 
   286  0992                     	;# 
   287  0993                     	;# 
   288  0994                     	;# 
   289  0995                     	;# 
   290  0996                     	;# 
   291  0997                     	;# 
   292  0A19                     	;# 
   293  0A19                     	;# 
   294  0A1A                     	;# 
   295  0A1A                     	;# 
   296  0A1B                     	;# 
   297  0A1B                     	;# 
   298  0A1B                     	;# 
   299  0A1C                     	;# 
   300  0A1C                     	;# 
   301  0A1D                     	;# 
   302  0A1D                     	;# 
   303  0A1E                     	;# 
   304  0A1E                     	;# 
   305  0A1F                     	;# 
   306  0A1F                     	;# 
   307  0A1F                     	;# 
   308  1E0F                     	;# 
   309  1E10                     	;# 
   310  1E11                     	;# 
   311  1E12                     	;# 
   312  1E13                     	;# 
   313  1E14                     	;# 
   314  1E15                     	;# 
   315  1E16                     	;# 
   316  1E17                     	;# 
   317  1E18                     	;# 
   318  1E19                     	;# 
   319  1E1A                     	;# 
   320  1E1B                     	;# 
   321  1E1C                     	;# 
   322  1E1D                     	;# 
   323  1E1E                     	;# 
   324  1E1F                     	;# 
   325  1E20                     	;# 
   326  1E21                     	;# 
   327  1E22                     	;# 
   328  1E23                     	;# 
   329  1E24                     	;# 
   330  1E25                     	;# 
   331  1E26                     	;# 
   332  1E27                     	;# 
   333  1E28                     	;# 
   334  1E29                     	;# 
   335  1E2A                     	;# 
   336  1E2B                     	;# 
   337  1E2C                     	;# 
   338  1E2D                     	;# 
   339  1E2E                     	;# 
   340  1E2F                     	;# 
   341  1E30                     	;# 
   342  1E31                     	;# 
   343  1E32                     	;# 
   344  1E33                     	;# 
   345  1E34                     	;# 
   346  1E35                     	;# 
   347  1E36                     	;# 
   348  1E37                     	;# 
   349  1E8F                     	;# 
   350  1E90                     	;# 
   351  1E91                     	;# 
   352  1E92                     	;# 
   353  1E93                     	;# 
   354  1E9C                     	;# 
   355  1EA1                     	;# 
   356  1EA2                     	;# 
   357  1EB1                     	;# 
   358  1EBB                     	;# 
   359  1EBC                     	;# 
   360  1EBD                     	;# 
   361  1EBE                     	;# 
   362  1EC3                     	;# 
   363  1EC5                     	;# 
   364  1EC6                     	;# 
   365  1EC7                     	;# 
   366  1ECB                     	;# 
   367  1ECC                     	;# 
   368  1ECD                     	;# 
   369  1ECE                     	;# 
   370  1F10                     	;# 
   371  1F11                     	;# 
   372  1F12                     	;# 
   373  1F13                     	;# 
   374  1F14                     	;# 
   375  1F15                     	;# 
   376  1F20                     	;# 
   377  1F21                     	;# 
   378  1F22                     	;# 
   379  1F23                     	;# 
   380  1F24                     	;# 
   381  1F25                     	;# 
   382  1F38                     	;# 
   383  1F39                     	;# 
   384  1F3A                     	;# 
   385  1F3B                     	;# 
   386  1F3C                     	;# 
   387  1F3D                     	;# 
   388  1F3E                     	;# 
   389  1F3F                     	;# 
   390  1F4E                     	;# 
   391  1F4F                     	;# 
   392  1F50                     	;# 
   393  1F51                     	;# 
   394  1F52                     	;# 
   395  1F53                     	;# 
   396  1F54                     	;# 
   397  1F55                     	;# 
   398  1FE4                     	;# 
   399  1FE5                     	;# 
   400  1FE6                     	;# 
   401  1FE7                     	;# 
   402  1FE8                     	;# 
   403  1FE8                     	;# 
   404  1FE9                     	;# 
   405  1FEA                     	;# 
   406  1FEA                     	;# 
   407  1FEB                     	;# 
   408  1FED                     	;# 
   409  1FEE                     	;# 
   410  1FEF                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000E                     	;# 
   425  0012                     	;# 
   426  0014                     	;# 
   427  0018                     	;# 
   428  001A                     	;# 
   429  009B                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0119                     	;# 
   436  0119                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011A                     	;# 
   440  011A                     	;# 
   441  011B                     	;# 
   442  011B                     	;# 
   443  011B                     	;# 
   444  011B                     	;# 
   445  011B                     	;# 
   446  011C                     	;# 
   447  011C                     	;# 
   448  011C                     	;# 
   449  011D                     	;# 
   450  011D                     	;# 
   451  011D                     	;# 
   452  011E                     	;# 
   453  011E                     	;# 
   454  011E                     	;# 
   455  011F                     	;# 
   456  011F                     	;# 
   457  011F                     	;# 
   458  011F                     	;# 
   459  011F                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  018E                     	;# 
   463  018F                     	;# 
   464  0190                     	;# 
   465  0191                     	;# 
   466  0192                     	;# 
   467  020C                     	;# 
   468  020C                     	;# 
   469  020D                     	;# 
   470  020E                     	;# 
   471  020F                     	;# 
   472  020F                     	;# 
   473  0210                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  028C                     	;# 
   478  028C                     	;# 
   479  028D                     	;# 
   480  028D                     	;# 
   481  028E                     	;# 
   482  028F                     	;# 
   483  0290                     	;# 
   484  0291                     	;# 
   485  030C                     	;# 
   486  030C                     	;# 
   487  030D                     	;# 
   488  030E                     	;# 
   489  030F                     	;# 
   490  0310                     	;# 
   491  0310                     	;# 
   492  0311                     	;# 
   493  0312                     	;# 
   494  0313                     	;# 
   495  0314                     	;# 
   496  0314                     	;# 
   497  0315                     	;# 
   498  0316                     	;# 
   499  0318                     	;# 
   500  0318                     	;# 
   501  0319                     	;# 
   502  031A                     	;# 
   503  031C                     	;# 
   504  031C                     	;# 
   505  031D                     	;# 
   506  031E                     	;# 
   507  038C                     	;# 
   508  038C                     	;# 
   509  038D                     	;# 
   510  038E                     	;# 
   511  058C                     	;# 
   512  058C                     	;# 
   513  058D                     	;# 
   514  058E                     	;# 
   515  058F                     	;# 
   516  058F                     	;# 
   517  0590                     	;# 
   518  0591                     	;# 
   519  0592                     	;# 
   520  0593                     	;# 
   521  059C                     	;# 
   522  059C                     	;# 
   523  059D                     	;# 
   524  059D                     	;# 
   525  059E                     	;# 
   526  059F                     	;# 
   527  060C                     	;# 
   528  060D                     	;# 
   529  060E                     	;# 
   530  060F                     	;# 
   531  0610                     	;# 
   532  0611                     	;# 
   533  0612                     	;# 
   534  0613                     	;# 
   535  0614                     	;# 
   536  070C                     	;# 
   537  070D                     	;# 
   538  070E                     	;# 
   539  070F                     	;# 
   540  0710                     	;# 
   541  0711                     	;# 
   542  0712                     	;# 
   543  0713                     	;# 
   544  0716                     	;# 
   545  0717                     	;# 
   546  0718                     	;# 
   547  0719                     	;# 
   548  071A                     	;# 
   549  071B                     	;# 
   550  071C                     	;# 
   551  071D                     	;# 
   552  0796                     	;# 
   553  0797                     	;# 
   554  0798                     	;# 
   555  0799                     	;# 
   556  079A                     	;# 
   557  079B                     	;# 
   558  080C                     	;# 
   559  080D                     	;# 
   560  080E                     	;# 
   561  080F                     	;# 
   562  0810                     	;# 
   563  0811                     	;# 
   564  0812                     	;# 
   565  0813                     	;# 
   566  0814                     	;# 
   567  081A                     	;# 
   568  081A                     	;# 
   569  081B                     	;# 
   570  081C                     	;# 
   571  081C                     	;# 
   572  081D                     	;# 
   573  081E                     	;# 
   574  081F                     	;# 
   575  088C                     	;# 
   576  088D                     	;# 
   577  088E                     	;# 
   578  088F                     	;# 
   579  0890                     	;# 
   580  0891                     	;# 
   581  0892                     	;# 
   582  0893                     	;# 
   583  0895                     	;# 
   584  0896                     	;# 
   585  090C                     	;# 
   586  090E                     	;# 
   587  090F                     	;# 
   588  091F                     	;# 
   589  098F                     	;# 
   590  098F                     	;# 
   591  0990                     	;# 
   592  0991                     	;# 
   593  0992                     	;# 
   594  0993                     	;# 
   595  0994                     	;# 
   596  0995                     	;# 
   597  0996                     	;# 
   598  0997                     	;# 
   599  0A19                     	;# 
   600  0A19                     	;# 
   601  0A1A                     	;# 
   602  0A1A                     	;# 
   603  0A1B                     	;# 
   604  0A1B                     	;# 
   605  0A1B                     	;# 
   606  0A1C                     	;# 
   607  0A1C                     	;# 
   608  0A1D                     	;# 
   609  0A1D                     	;# 
   610  0A1E                     	;# 
   611  0A1E                     	;# 
   612  0A1F                     	;# 
   613  0A1F                     	;# 
   614  0A1F                     	;# 
   615  1E0F                     	;# 
   616  1E10                     	;# 
   617  1E11                     	;# 
   618  1E12                     	;# 
   619  1E13                     	;# 
   620  1E14                     	;# 
   621  1E15                     	;# 
   622  1E16                     	;# 
   623  1E17                     	;# 
   624  1E18                     	;# 
   625  1E19                     	;# 
   626  1E1A                     	;# 
   627  1E1B                     	;# 
   628  1E1C                     	;# 
   629  1E1D                     	;# 
   630  1E1E                     	;# 
   631  1E1F                     	;# 
   632  1E20                     	;# 
   633  1E21                     	;# 
   634  1E22                     	;# 
   635  1E23                     	;# 
   636  1E24                     	;# 
   637  1E25                     	;# 
   638  1E26                     	;# 
   639  1E27                     	;# 
   640  1E28                     	;# 
   641  1E29                     	;# 
   642  1E2A                     	;# 
   643  1E2B                     	;# 
   644  1E2C                     	;# 
   645  1E2D                     	;# 
   646  1E2E                     	;# 
   647  1E2F                     	;# 
   648  1E30                     	;# 
   649  1E31                     	;# 
   650  1E32                     	;# 
   651  1E33                     	;# 
   652  1E34                     	;# 
   653  1E35                     	;# 
   654  1E36                     	;# 
   655  1E37                     	;# 
   656  1E8F                     	;# 
   657  1E90                     	;# 
   658  1E91                     	;# 
   659  1E92                     	;# 
   660  1E93                     	;# 
   661  1E9C                     	;# 
   662  1EA1                     	;# 
   663  1EA2                     	;# 
   664  1EB1                     	;# 
   665  1EBB                     	;# 
   666  1EBC                     	;# 
   667  1EBD                     	;# 
   668  1EBE                     	;# 
   669  1EC3                     	;# 
   670  1EC5                     	;# 
   671  1EC6                     	;# 
   672  1EC7                     	;# 
   673  1ECB                     	;# 
   674  1ECC                     	;# 
   675  1ECD                     	;# 
   676  1ECE                     	;# 
   677  1F10                     	;# 
   678  1F11                     	;# 
   679  1F12                     	;# 
   680  1F13                     	;# 
   681  1F14                     	;# 
   682  1F15                     	;# 
   683  1F20                     	;# 
   684  1F21                     	;# 
   685  1F22                     	;# 
   686  1F23                     	;# 
   687  1F24                     	;# 
   688  1F25                     	;# 
   689  1F38                     	;# 
   690  1F39                     	;# 
   691  1F3A                     	;# 
   692  1F3B                     	;# 
   693  1F3C                     	;# 
   694  1F3D                     	;# 
   695  1F3E                     	;# 
   696  1F3F                     	;# 
   697  1F4E                     	;# 
   698  1F4F                     	;# 
   699  1F50                     	;# 
   700  1F51                     	;# 
   701  1F52                     	;# 
   702  1F53                     	;# 
   703  1F54                     	;# 
   704  1F55                     	;# 
   705  1FE4                     	;# 
   706  1FE5                     	;# 
   707  1FE6                     	;# 
   708  1FE7                     	;# 
   709  1FE8                     	;# 
   710  1FE8                     	;# 
   711  1FE9                     	;# 
   712  1FEA                     	;# 
   713  1FEA                     	;# 
   714  1FEB                     	;# 
   715  1FED                     	;# 
   716  1FEE                     	;# 
   717  1FEF                     	;# 
   718  0000                     	;# 
   719  0001                     	;# 
   720  0002                     	;# 
   721  0003                     	;# 
   722  0004                     	;# 
   723  0005                     	;# 
   724  0006                     	;# 
   725  0007                     	;# 
   726  0008                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000E                     	;# 
   732  0012                     	;# 
   733  0014                     	;# 
   734  0018                     	;# 
   735  001A                     	;# 
   736  009B                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009E                     	;# 
   741  009F                     	;# 
   742  0119                     	;# 
   743  0119                     	;# 
   744  0119                     	;# 
   745  011A                     	;# 
   746  011A                     	;# 
   747  011A                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011B                     	;# 
   753  011C                     	;# 
   754  011C                     	;# 
   755  011C                     	;# 
   756  011D                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  011E                     	;# 
   760  011E                     	;# 
   761  011E                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  011F                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  018F                     	;# 
   771  0190                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  020C                     	;# 
   775  020C                     	;# 
   776  020D                     	;# 
   777  020E                     	;# 
   778  020F                     	;# 
   779  020F                     	;# 
   780  0210                     	;# 
   781  0210                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  028C                     	;# 
   785  028C                     	;# 
   786  028D                     	;# 
   787  028D                     	;# 
   788  028E                     	;# 
   789  028F                     	;# 
   790  0290                     	;# 
   791  0291                     	;# 
   792  030C                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  0310                     	;# 
   799  0311                     	;# 
   800  0312                     	;# 
   801  0313                     	;# 
   802  0314                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0316                     	;# 
   806  0318                     	;# 
   807  0318                     	;# 
   808  0319                     	;# 
   809  031A                     	;# 
   810  031C                     	;# 
   811  031C                     	;# 
   812  031D                     	;# 
   813  031E                     	;# 
   814  038C                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  058C                     	;# 
   819  058C                     	;# 
   820  058D                     	;# 
   821  058E                     	;# 
   822  058F                     	;# 
   823  058F                     	;# 
   824  0590                     	;# 
   825  0591                     	;# 
   826  0592                     	;# 
   827  0593                     	;# 
   828  059C                     	;# 
   829  059C                     	;# 
   830  059D                     	;# 
   831  059D                     	;# 
   832  059E                     	;# 
   833  059F                     	;# 
   834  060C                     	;# 
   835  060D                     	;# 
   836  060E                     	;# 
   837  060F                     	;# 
   838  0610                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0614                     	;# 
   843  070C                     	;# 
   844  070D                     	;# 
   845  070E                     	;# 
   846  070F                     	;# 
   847  0710                     	;# 
   848  0711                     	;# 
   849  0712                     	;# 
   850  0713                     	;# 
   851  0716                     	;# 
   852  0717                     	;# 
   853  0718                     	;# 
   854  0719                     	;# 
   855  071A                     	;# 
   856  071B                     	;# 
   857  071C                     	;# 
   858  071D                     	;# 
   859  0796                     	;# 
   860  0797                     	;# 
   861  0798                     	;# 
   862  0799                     	;# 
   863  079A                     	;# 
   864  079B                     	;# 
   865  080C                     	;# 
   866  080D                     	;# 
   867  080E                     	;# 
   868  080F                     	;# 
   869  0810                     	;# 
   870  0811                     	;# 
   871  0812                     	;# 
   872  0813                     	;# 
   873  0814                     	;# 
   874  081A                     	;# 
   875  081A                     	;# 
   876  081B                     	;# 
   877  081C                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  090C                     	;# 
   893  090E                     	;# 
   894  090F                     	;# 
   895  091F                     	;# 
   896  098F                     	;# 
   897  098F                     	;# 
   898  0990                     	;# 
   899  0991                     	;# 
   900  0992                     	;# 
   901  0993                     	;# 
   902  0994                     	;# 
   903  0995                     	;# 
   904  0996                     	;# 
   905  0997                     	;# 
   906  0A19                     	;# 
   907  0A19                     	;# 
   908  0A1A                     	;# 
   909  0A1A                     	;# 
   910  0A1B                     	;# 
   911  0A1B                     	;# 
   912  0A1B                     	;# 
   913  0A1C                     	;# 
   914  0A1C                     	;# 
   915  0A1D                     	;# 
   916  0A1D                     	;# 
   917  0A1E                     	;# 
   918  0A1E                     	;# 
   919  0A1F                     	;# 
   920  0A1F                     	;# 
   921  0A1F                     	;# 
   922  1E0F                     	;# 
   923  1E10                     	;# 
   924  1E11                     	;# 
   925  1E12                     	;# 
   926  1E13                     	;# 
   927  1E14                     	;# 
   928  1E15                     	;# 
   929  1E16                     	;# 
   930  1E17                     	;# 
   931  1E18                     	;# 
   932  1E19                     	;# 
   933  1E1A                     	;# 
   934  1E1B                     	;# 
   935  1E1C                     	;# 
   936  1E1D                     	;# 
   937  1E1E                     	;# 
   938  1E1F                     	;# 
   939  1E20                     	;# 
   940  1E21                     	;# 
   941  1E22                     	;# 
   942  1E23                     	;# 
   943  1E24                     	;# 
   944  1E25                     	;# 
   945  1E26                     	;# 
   946  1E27                     	;# 
   947  1E28                     	;# 
   948  1E29                     	;# 
   949  1E2A                     	;# 
   950  1E2B                     	;# 
   951  1E2C                     	;# 
   952  1E2D                     	;# 
   953  1E2E                     	;# 
   954  1E2F                     	;# 
   955  1E30                     	;# 
   956  1E31                     	;# 
   957  1E32                     	;# 
   958  1E33                     	;# 
   959  1E34                     	;# 
   960  1E35                     	;# 
   961  1E36                     	;# 
   962  1E37                     	;# 
   963  1E8F                     	;# 
   964  1E90                     	;# 
   965  1E91                     	;# 
   966  1E92                     	;# 
   967  1E93                     	;# 
   968  1E9C                     	;# 
   969  1EA1                     	;# 
   970  1EA2                     	;# 
   971  1EB1                     	;# 
   972  1EBB                     	;# 
   973  1EBC                     	;# 
   974  1EBD                     	;# 
   975  1EBE                     	;# 
   976  1EC3                     	;# 
   977  1EC5                     	;# 
   978  1EC6                     	;# 
   979  1EC7                     	;# 
   980  1ECB                     	;# 
   981  1ECC                     	;# 
   982  1ECD                     	;# 
   983  1ECE                     	;# 
   984  1F10                     	;# 
   985  1F11                     	;# 
   986  1F12                     	;# 
   987  1F13                     	;# 
   988  1F14                     	;# 
   989  1F15                     	;# 
   990  1F20                     	;# 
   991  1F21                     	;# 
   992  1F22                     	;# 
   993  1F23                     	;# 
   994  1F24                     	;# 
   995  1F25                     	;# 
   996  1F38                     	;# 
   997  1F39                     	;# 
   998  1F3A                     	;# 
   999  1F3B                     	;# 
  1000  1F3C                     	;# 
  1001  1F3D                     	;# 
  1002  1F3E                     	;# 
  1003  1F3F                     	;# 
  1004  1F4E                     	;# 
  1005  1F4F                     	;# 
  1006  1F50                     	;# 
  1007  1F51                     	;# 
  1008  1F52                     	;# 
  1009  1F53                     	;# 
  1010  1F54                     	;# 
  1011  1F55                     	;# 
  1012  1FE4                     	;# 
  1013  1FE5                     	;# 
  1014  1FE6                     	;# 
  1015  1FE7                     	;# 
  1016  1FE8                     	;# 
  1017  1FE8                     	;# 
  1018  1FE9                     	;# 
  1019  1FEA                     	;# 
  1020  1FEA                     	;# 
  1021  1FEB                     	;# 
  1022  1FED                     	;# 
  1023  1FEE                     	;# 
  1024  1FEF                     	;# 
  1025  0000                     	;# 
  1026  0001                     	;# 
  1027  0002                     	;# 
  1028  0003                     	;# 
  1029  0004                     	;# 
  1030  0005                     	;# 
  1031  0006                     	;# 
  1032  0007                     	;# 
  1033  0008                     	;# 
  1034  0009                     	;# 
  1035  000A                     	;# 
  1036  000B                     	;# 
  1037  000C                     	;# 
  1038  000E                     	;# 
  1039  0012                     	;# 
  1040  0014                     	;# 
  1041  0018                     	;# 
  1042  001A                     	;# 
  1043  009B                     	;# 
  1044  009B                     	;# 
  1045  009C                     	;# 
  1046  009D                     	;# 
  1047  009E                     	;# 
  1048  009F                     	;# 
  1049  0119                     	;# 
  1050  0119                     	;# 
  1051  0119                     	;# 
  1052  011A                     	;# 
  1053  011A                     	;# 
  1054  011A                     	;# 
  1055  011B                     	;# 
  1056  011B                     	;# 
  1057  011B                     	;# 
  1058  011B                     	;# 
  1059  011B                     	;# 
  1060  011C                     	;# 
  1061  011C                     	;# 
  1062  011C                     	;# 
  1063  011D                     	;# 
  1064  011D                     	;# 
  1065  011D                     	;# 
  1066  011E                     	;# 
  1067  011E                     	;# 
  1068  011E                     	;# 
  1069  011F                     	;# 
  1070  011F                     	;# 
  1071  011F                     	;# 
  1072  011F                     	;# 
  1073  011F                     	;# 
  1074  018C                     	;# 
  1075  018D                     	;# 
  1076  018E                     	;# 
  1077  018F                     	;# 
  1078  0190                     	;# 
  1079  0191                     	;# 
  1080  0192                     	;# 
  1081  020C                     	;# 
  1082  020C                     	;# 
  1083  020D                     	;# 
  1084  020E                     	;# 
  1085  020F                     	;# 
  1086  020F                     	;# 
  1087  0210                     	;# 
  1088  0210                     	;# 
  1089  0211                     	;# 
  1090  0211                     	;# 
  1091  028C                     	;# 
  1092  028C                     	;# 
  1093  028D                     	;# 
  1094  028D                     	;# 
  1095  028E                     	;# 
  1096  028F                     	;# 
  1097  0290                     	;# 
  1098  0291                     	;# 
  1099  030C                     	;# 
  1100  030C                     	;# 
  1101  030D                     	;# 
  1102  030E                     	;# 
  1103  030F                     	;# 
  1104  0310                     	;# 
  1105  0310                     	;# 
  1106  0311                     	;# 
  1107  0312                     	;# 
  1108  0313                     	;# 
  1109  0314                     	;# 
  1110  0314                     	;# 
  1111  0315                     	;# 
  1112  0316                     	;# 
  1113  0318                     	;# 
  1114  0318                     	;# 
  1115  0319                     	;# 
  1116  031A                     	;# 
  1117  031C                     	;# 
  1118  031C                     	;# 
  1119  031D                     	;# 
  1120  031E                     	;# 
  1121  038C                     	;# 
  1122  038C                     	;# 
  1123  038D                     	;# 
  1124  038E                     	;# 
  1125  058C                     	;# 
  1126  058C                     	;# 
  1127  058D                     	;# 
  1128  058E                     	;# 
  1129  058F                     	;# 
  1130  058F                     	;# 
  1131  0590                     	;# 
  1132  0591                     	;# 
  1133  0592                     	;# 
  1134  0593                     	;# 
  1135  059C                     	;# 
  1136  059C                     	;# 
  1137  059D                     	;# 
  1138  059D                     	;# 
  1139  059E                     	;# 
  1140  059F                     	;# 
  1141  060C                     	;# 
  1142  060D                     	;# 
  1143  060E                     	;# 
  1144  060F                     	;# 
  1145  0610                     	;# 
  1146  0611                     	;# 
  1147  0612                     	;# 
  1148  0613                     	;# 
  1149  0614                     	;# 
  1150  070C                     	;# 
  1151  070D                     	;# 
  1152  070E                     	;# 
  1153  070F                     	;# 
  1154  0710                     	;# 
  1155  0711                     	;# 
  1156  0712                     	;# 
  1157  0713                     	;# 
  1158  0716                     	;# 
  1159  0717                     	;# 
  1160  0718                     	;# 
  1161  0719                     	;# 
  1162  071A                     	;# 
  1163  071B                     	;# 
  1164  071C                     	;# 
  1165  071D                     	;# 
  1166  0796                     	;# 
  1167  0797                     	;# 
  1168  0798                     	;# 
  1169  0799                     	;# 
  1170  079A                     	;# 
  1171  079B                     	;# 
  1172  080C                     	;# 
  1173  080D                     	;# 
  1174  080E                     	;# 
  1175  080F                     	;# 
  1176  0810                     	;# 
  1177  0811                     	;# 
  1178  0812                     	;# 
  1179  0813                     	;# 
  1180  0814                     	;# 
  1181  081A                     	;# 
  1182  081A                     	;# 
  1183  081B                     	;# 
  1184  081C                     	;# 
  1185  081C                     	;# 
  1186  081D                     	;# 
  1187  081E                     	;# 
  1188  081F                     	;# 
  1189  088C                     	;# 
  1190  088D                     	;# 
  1191  088E                     	;# 
  1192  088F                     	;# 
  1193  0890                     	;# 
  1194  0891                     	;# 
  1195  0892                     	;# 
  1196  0893                     	;# 
  1197  0895                     	;# 
  1198  0896                     	;# 
  1199  090C                     	;# 
  1200  090E                     	;# 
  1201  090F                     	;# 
  1202  091F                     	;# 
  1203  098F                     	;# 
  1204  098F                     	;# 
  1205  0990                     	;# 
  1206  0991                     	;# 
  1207  0992                     	;# 
  1208  0993                     	;# 
  1209  0994                     	;# 
  1210  0995                     	;# 
  1211  0996                     	;# 
  1212  0997                     	;# 
  1213  0A19                     	;# 
  1214  0A19                     	;# 
  1215  0A1A                     	;# 
  1216  0A1A                     	;# 
  1217  0A1B                     	;# 
  1218  0A1B                     	;# 
  1219  0A1B                     	;# 
  1220  0A1C                     	;# 
  1221  0A1C                     	;# 
  1222  0A1D                     	;# 
  1223  0A1D                     	;# 
  1224  0A1E                     	;# 
  1225  0A1E                     	;# 
  1226  0A1F                     	;# 
  1227  0A1F                     	;# 
  1228  0A1F                     	;# 
  1229  1E0F                     	;# 
  1230  1E10                     	;# 
  1231  1E11                     	;# 
  1232  1E12                     	;# 
  1233  1E13                     	;# 
  1234  1E14                     	;# 
  1235  1E15                     	;# 
  1236  1E16                     	;# 
  1237  1E17                     	;# 
  1238  1E18                     	;# 
  1239  1E19                     	;# 
  1240  1E1A                     	;# 
  1241  1E1B                     	;# 
  1242  1E1C                     	;# 
  1243  1E1D                     	;# 
  1244  1E1E                     	;# 
  1245  1E1F                     	;# 
  1246  1E20                     	;# 
  1247  1E21                     	;# 
  1248  1E22                     	;# 
  1249  1E23                     	;# 
  1250  1E24                     	;# 
  1251  1E25                     	;# 
  1252  1E26                     	;# 
  1253  1E27                     	;# 
  1254  1E28                     	;# 
  1255  1E29                     	;# 
  1256  1E2A                     	;# 
  1257  1E2B                     	;# 
  1258  1E2C                     	;# 
  1259  1E2D                     	;# 
  1260  1E2E                     	;# 
  1261  1E2F                     	;# 
  1262  1E30                     	;# 
  1263  1E31                     	;# 
  1264  1E32                     	;# 
  1265  1E33                     	;# 
  1266  1E34                     	;# 
  1267  1E35                     	;# 
  1268  1E36                     	;# 
  1269  1E37                     	;# 
  1270  1E8F                     	;# 
  1271  1E90                     	;# 
  1272  1E91                     	;# 
  1273  1E92                     	;# 
  1274  1E93                     	;# 
  1275  1E9C                     	;# 
  1276  1EA1                     	;# 
  1277  1EA2                     	;# 
  1278  1EB1                     	;# 
  1279  1EBB                     	;# 
  1280  1EBC                     	;# 
  1281  1EBD                     	;# 
  1282  1EBE                     	;# 
  1283  1EC3                     	;# 
  1284  1EC5                     	;# 
  1285  1EC6                     	;# 
  1286  1EC7                     	;# 
  1287  1ECB                     	;# 
  1288  1ECC                     	;# 
  1289  1ECD                     	;# 
  1290  1ECE                     	;# 
  1291  1F10                     	;# 
  1292  1F11                     	;# 
  1293  1F12                     	;# 
  1294  1F13                     	;# 
  1295  1F14                     	;# 
  1296  1F15                     	;# 
  1297  1F20                     	;# 
  1298  1F21                     	;# 
  1299  1F22                     	;# 
  1300  1F23                     	;# 
  1301  1F24                     	;# 
  1302  1F25                     	;# 
  1303  1F38                     	;# 
  1304  1F39                     	;# 
  1305  1F3A                     	;# 
  1306  1F3B                     	;# 
  1307  1F3C                     	;# 
  1308  1F3D                     	;# 
  1309  1F3E                     	;# 
  1310  1F3F                     	;# 
  1311  1F4E                     	;# 
  1312  1F4F                     	;# 
  1313  1F50                     	;# 
  1314  1F51                     	;# 
  1315  1F52                     	;# 
  1316  1F53                     	;# 
  1317  1F54                     	;# 
  1318  1F55                     	;# 
  1319  1FE4                     	;# 
  1320  1FE5                     	;# 
  1321  1FE6                     	;# 
  1322  1FE7                     	;# 
  1323  1FE8                     	;# 
  1324  1FE8                     	;# 
  1325  1FE9                     	;# 
  1326  1FEA                     	;# 
  1327  1FEA                     	;# 
  1328  1FEB                     	;# 
  1329  1FED                     	;# 
  1330  1FEE                     	;# 
  1331  1FEF                     	;# 
  1332  0000                     	;# 
  1333  0001                     	;# 
  1334  0002                     	;# 
  1335  0003                     	;# 
  1336  0004                     	;# 
  1337  0005                     	;# 
  1338  0006                     	;# 
  1339  0007                     	;# 
  1340  0008                     	;# 
  1341  0009                     	;# 
  1342  000A                     	;# 
  1343  000B                     	;# 
  1344  000C                     	;# 
  1345  000E                     	;# 
  1346  0012                     	;# 
  1347  0014                     	;# 
  1348  0018                     	;# 
  1349  001A                     	;# 
  1350  009B                     	;# 
  1351  009B                     	;# 
  1352  009C                     	;# 
  1353  009D                     	;# 
  1354  009E                     	;# 
  1355  009F                     	;# 
  1356  0119                     	;# 
  1357  0119                     	;# 
  1358  0119                     	;# 
  1359  011A                     	;# 
  1360  011A                     	;# 
  1361  011A                     	;# 
  1362  011B                     	;# 
  1363  011B                     	;# 
  1364  011B                     	;# 
  1365  011B                     	;# 
  1366  011B                     	;# 
  1367  011C                     	;# 
  1368  011C                     	;# 
  1369  011C                     	;# 
  1370  011D                     	;# 
  1371  011D                     	;# 
  1372  011D                     	;# 
  1373  011E                     	;# 
  1374  011E                     	;# 
  1375  011E                     	;# 
  1376  011F                     	;# 
  1377  011F                     	;# 
  1378  011F                     	;# 
  1379  011F                     	;# 
  1380  011F                     	;# 
  1381  018C                     	;# 
  1382  018D                     	;# 
  1383  018E                     	;# 
  1384  018F                     	;# 
  1385  0190                     	;# 
  1386  0191                     	;# 
  1387  0192                     	;# 
  1388  020C                     	;# 
  1389  020C                     	;# 
  1390  020D                     	;# 
  1391  020E                     	;# 
  1392  020F                     	;# 
  1393  020F                     	;# 
  1394  0210                     	;# 
  1395  0210                     	;# 
  1396  0211                     	;# 
  1397  0211                     	;# 
  1398  028C                     	;# 
  1399  028C                     	;# 
  1400  028D                     	;# 
  1401  028D                     	;# 
  1402  028E                     	;# 
  1403  028F                     	;# 
  1404  0290                     	;# 
  1405  0291                     	;# 
  1406  030C                     	;# 
  1407  030C                     	;# 
  1408  030D                     	;# 
  1409  030E                     	;# 
  1410  030F                     	;# 
  1411  0310                     	;# 
  1412  0310                     	;# 
  1413  0311                     	;# 
  1414  0312                     	;# 
  1415  0313                     	;# 
  1416  0314                     	;# 
  1417  0314                     	;# 
  1418  0315                     	;# 
  1419  0316                     	;# 
  1420  0318                     	;# 
  1421  0318                     	;# 
  1422  0319                     	;# 
  1423  031A                     	;# 
  1424  031C                     	;# 
  1425  031C                     	;# 
  1426  031D                     	;# 
  1427  031E                     	;# 
  1428  038C                     	;# 
  1429  038C                     	;# 
  1430  038D                     	;# 
  1431  038E                     	;# 
  1432  058C                     	;# 
  1433  058C                     	;# 
  1434  058D                     	;# 
  1435  058E                     	;# 
  1436  058F                     	;# 
  1437  058F                     	;# 
  1438  0590                     	;# 
  1439  0591                     	;# 
  1440  0592                     	;# 
  1441  0593                     	;# 
  1442  059C                     	;# 
  1443  059C                     	;# 
  1444  059D                     	;# 
  1445  059D                     	;# 
  1446  059E                     	;# 
  1447  059F                     	;# 
  1448  060C                     	;# 
  1449  060D                     	;# 
  1450  060E                     	;# 
  1451  060F                     	;# 
  1452  0610                     	;# 
  1453  0611                     	;# 
  1454  0612                     	;# 
  1455  0613                     	;# 
  1456  0614                     	;# 
  1457  070C                     	;# 
  1458  070D                     	;# 
  1459  070E                     	;# 
  1460  070F                     	;# 
  1461  0710                     	;# 
  1462  0711                     	;# 
  1463  0712                     	;# 
  1464  0713                     	;# 
  1465  0716                     	;# 
  1466  0717                     	;# 
  1467  0718                     	;# 
  1468  0719                     	;# 
  1469  071A                     	;# 
  1470  071B                     	;# 
  1471  071C                     	;# 
  1472  071D                     	;# 
  1473  0796                     	;# 
  1474  0797                     	;# 
  1475  0798                     	;# 
  1476  0799                     	;# 
  1477  079A                     	;# 
  1478  079B                     	;# 
  1479  080C                     	;# 
  1480  080D                     	;# 
  1481  080E                     	;# 
  1482  080F                     	;# 
  1483  0810                     	;# 
  1484  0811                     	;# 
  1485  0812                     	;# 
  1486  0813                     	;# 
  1487  0814                     	;# 
  1488  081A                     	;# 
  1489  081A                     	;# 
  1490  081B                     	;# 
  1491  081C                     	;# 
  1492  081C                     	;# 
  1493  081D                     	;# 
  1494  081E                     	;# 
  1495  081F                     	;# 
  1496  088C                     	;# 
  1497  088D                     	;# 
  1498  088E                     	;# 
  1499  088F                     	;# 
  1500  0890                     	;# 
  1501  0891                     	;# 
  1502  0892                     	;# 
  1503  0893                     	;# 
  1504  0895                     	;# 
  1505  0896                     	;# 
  1506  090C                     	;# 
  1507  090E                     	;# 
  1508  090F                     	;# 
  1509  091F                     	;# 
  1510  098F                     	;# 
  1511  098F                     	;# 
  1512  0990                     	;# 
  1513  0991                     	;# 
  1514  0992                     	;# 
  1515  0993                     	;# 
  1516  0994                     	;# 
  1517  0995                     	;# 
  1518  0996                     	;# 
  1519  0997                     	;# 
  1520  0A19                     	;# 
  1521  0A19                     	;# 
  1522  0A1A                     	;# 
  1523  0A1A                     	;# 
  1524  0A1B                     	;# 
  1525  0A1B                     	;# 
  1526  0A1B                     	;# 
  1527  0A1C                     	;# 
  1528  0A1C                     	;# 
  1529  0A1D                     	;# 
  1530  0A1D                     	;# 
  1531  0A1E                     	;# 
  1532  0A1E                     	;# 
  1533  0A1F                     	;# 
  1534  0A1F                     	;# 
  1535  0A1F                     	;# 
  1536  1E0F                     	;# 
  1537  1E10                     	;# 
  1538  1E11                     	;# 
  1539  1E12                     	;# 
  1540  1E13                     	;# 
  1541  1E14                     	;# 
  1542  1E15                     	;# 
  1543  1E16                     	;# 
  1544  1E17                     	;# 
  1545  1E18                     	;# 
  1546  1E19                     	;# 
  1547  1E1A                     	;# 
  1548  1E1B                     	;# 
  1549  1E1C                     	;# 
  1550  1E1D                     	;# 
  1551  1E1E                     	;# 
  1552  1E1F                     	;# 
  1553  1E20                     	;# 
  1554  1E21                     	;# 
  1555  1E22                     	;# 
  1556  1E23                     	;# 
  1557  1E24                     	;# 
  1558  1E25                     	;# 
  1559  1E26                     	;# 
  1560  1E27                     	;# 
  1561  1E28                     	;# 
  1562  1E29                     	;# 
  1563  1E2A                     	;# 
  1564  1E2B                     	;# 
  1565  1E2C                     	;# 
  1566  1E2D                     	;# 
  1567  1E2E                     	;# 
  1568  1E2F                     	;# 
  1569  1E30                     	;# 
  1570  1E31                     	;# 
  1571  1E32                     	;# 
  1572  1E33                     	;# 
  1573  1E34                     	;# 
  1574  1E35                     	;# 
  1575  1E36                     	;# 
  1576  1E37                     	;# 
  1577  1E8F                     	;# 
  1578  1E90                     	;# 
  1579  1E91                     	;# 
  1580  1E92                     	;# 
  1581  1E93                     	;# 
  1582  1E9C                     	;# 
  1583  1EA1                     	;# 
  1584  1EA2                     	;# 
  1585  1EB1                     	;# 
  1586  1EBB                     	;# 
  1587  1EBC                     	;# 
  1588  1EBD                     	;# 
  1589  1EBE                     	;# 
  1590  1EC3                     	;# 
  1591  1EC5                     	;# 
  1592  1EC6                     	;# 
  1593  1EC7                     	;# 
  1594  1ECB                     	;# 
  1595  1ECC                     	;# 
  1596  1ECD                     	;# 
  1597  1ECE                     	;# 
  1598  1F10                     	;# 
  1599  1F11                     	;# 
  1600  1F12                     	;# 
  1601  1F13                     	;# 
  1602  1F14                     	;# 
  1603  1F15                     	;# 
  1604  1F20                     	;# 
  1605  1F21                     	;# 
  1606  1F22                     	;# 
  1607  1F23                     	;# 
  1608  1F24                     	;# 
  1609  1F25                     	;# 
  1610  1F38                     	;# 
  1611  1F39                     	;# 
  1612  1F3A                     	;# 
  1613  1F3B                     	;# 
  1614  1F3C                     	;# 
  1615  1F3D                     	;# 
  1616  1F3E                     	;# 
  1617  1F3F                     	;# 
  1618  1F4E                     	;# 
  1619  1F4F                     	;# 
  1620  1F50                     	;# 
  1621  1F51                     	;# 
  1622  1F52                     	;# 
  1623  1F53                     	;# 
  1624  1F54                     	;# 
  1625  1F55                     	;# 
  1626  1FE4                     	;# 
  1627  1FE5                     	;# 
  1628  1FE6                     	;# 
  1629  1FE7                     	;# 
  1630  1FE8                     	;# 
  1631  1FE8                     	;# 
  1632  1FE9                     	;# 
  1633  1FEA                     	;# 
  1634  1FEA                     	;# 
  1635  1FEB                     	;# 
  1636  1FED                     	;# 
  1637  1FEE                     	;# 
  1638  1FEF                     	;# 
  1639  0000                     	;# 
  1640  0001                     	;# 
  1641  0002                     	;# 
  1642  0003                     	;# 
  1643  0004                     	;# 
  1644  0005                     	;# 
  1645  0006                     	;# 
  1646  0007                     	;# 
  1647  0008                     	;# 
  1648  0009                     	;# 
  1649  000A                     	;# 
  1650  000B                     	;# 
  1651  000C                     	;# 
  1652  000E                     	;# 
  1653  0012                     	;# 
  1654  0014                     	;# 
  1655  0018                     	;# 
  1656  001A                     	;# 
  1657  009B                     	;# 
  1658  009B                     	;# 
  1659  009C                     	;# 
  1660  009D                     	;# 
  1661  009E                     	;# 
  1662  009F                     	;# 
  1663  0119                     	;# 
  1664  0119                     	;# 
  1665  0119                     	;# 
  1666  011A                     	;# 
  1667  011A                     	;# 
  1668  011A                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011C                     	;# 
  1675  011C                     	;# 
  1676  011C                     	;# 
  1677  011D                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  011E                     	;# 
  1681  011E                     	;# 
  1682  011E                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  018C                     	;# 
  1689  018D                     	;# 
  1690  018E                     	;# 
  1691  018F                     	;# 
  1692  0190                     	;# 
  1693  0191                     	;# 
  1694  0192                     	;# 
  1695  020C                     	;# 
  1696  020C                     	;# 
  1697  020D                     	;# 
  1698  020E                     	;# 
  1699  020F                     	;# 
  1700  020F                     	;# 
  1701  0210                     	;# 
  1702  0210                     	;# 
  1703  0211                     	;# 
  1704  0211                     	;# 
  1705  028C                     	;# 
  1706  028C                     	;# 
  1707  028D                     	;# 
  1708  028D                     	;# 
  1709  028E                     	;# 
  1710  028F                     	;# 
  1711  0290                     	;# 
  1712  0291                     	;# 
  1713  030C                     	;# 
  1714  030C                     	;# 
  1715  030D                     	;# 
  1716  030E                     	;# 
  1717  030F                     	;# 
  1718  0310                     	;# 
  1719  0310                     	;# 
  1720  0311                     	;# 
  1721  0312                     	;# 
  1722  0313                     	;# 
  1723  0314                     	;# 
  1724  0314                     	;# 
  1725  0315                     	;# 
  1726  0316                     	;# 
  1727  0318                     	;# 
  1728  0318                     	;# 
  1729  0319                     	;# 
  1730  031A                     	;# 
  1731  031C                     	;# 
  1732  031C                     	;# 
  1733  031D                     	;# 
  1734  031E                     	;# 
  1735  038C                     	;# 
  1736  038C                     	;# 
  1737  038D                     	;# 
  1738  038E                     	;# 
  1739  058C                     	;# 
  1740  058C                     	;# 
  1741  058D                     	;# 
  1742  058E                     	;# 
  1743  058F                     	;# 
  1744  058F                     	;# 
  1745  0590                     	;# 
  1746  0591                     	;# 
  1747  0592                     	;# 
  1748  0593                     	;# 
  1749  059C                     	;# 
  1750  059C                     	;# 
  1751  059D                     	;# 
  1752  059D                     	;# 
  1753  059E                     	;# 
  1754  059F                     	;# 
  1755  060C                     	;# 
  1756  060D                     	;# 
  1757  060E                     	;# 
  1758  060F                     	;# 
  1759  0610                     	;# 
  1760  0611                     	;# 
  1761  0612                     	;# 
  1762  0613                     	;# 
  1763  0614                     	;# 
  1764  070C                     	;# 
  1765  070D                     	;# 
  1766  070E                     	;# 
  1767  070F                     	;# 
  1768  0710                     	;# 
  1769  0711                     	;# 
  1770  0712                     	;# 
  1771  0713                     	;# 
  1772  0716                     	;# 
  1773  0717                     	;# 
  1774  0718                     	;# 
  1775  0719                     	;# 
  1776  071A                     	;# 
  1777  071B                     	;# 
  1778  071C                     	;# 
  1779  071D                     	;# 
  1780  0796                     	;# 
  1781  0797                     	;# 
  1782  0798                     	;# 
  1783  0799                     	;# 
  1784  079A                     	;# 
  1785  079B                     	;# 
  1786  080C                     	;# 
  1787  080D                     	;# 
  1788  080E                     	;# 
  1789  080F                     	;# 
  1790  0810                     	;# 
  1791  0811                     	;# 
  1792  0812                     	;# 
  1793  0813                     	;# 
  1794  0814                     	;# 
  1795  081A                     	;# 
  1796  081A                     	;# 
  1797  081B                     	;# 
  1798  081C                     	;# 
  1799  081C                     	;# 
  1800  081D                     	;# 
  1801  081E                     	;# 
  1802  081F                     	;# 
  1803  088C                     	;# 
  1804  088D                     	;# 
  1805  088E                     	;# 
  1806  088F                     	;# 
  1807  0890                     	;# 
  1808  0891                     	;# 
  1809  0892                     	;# 
  1810  0893                     	;# 
  1811  0895                     	;# 
  1812  0896                     	;# 
  1813  090C                     	;# 
  1814  090E                     	;# 
  1815  090F                     	;# 
  1816  091F                     	;# 
  1817  098F                     	;# 
  1818  098F                     	;# 
  1819  0990                     	;# 
  1820  0991                     	;# 
  1821  0992                     	;# 
  1822  0993                     	;# 
  1823  0994                     	;# 
  1824  0995                     	;# 
  1825  0996                     	;# 
  1826  0997                     	;# 
  1827  0A19                     	;# 
  1828  0A19                     	;# 
  1829  0A1A                     	;# 
  1830  0A1A                     	;# 
  1831  0A1B                     	;# 
  1832  0A1B                     	;# 
  1833  0A1B                     	;# 
  1834  0A1C                     	;# 
  1835  0A1C                     	;# 
  1836  0A1D                     	;# 
  1837  0A1D                     	;# 
  1838  0A1E                     	;# 
  1839  0A1E                     	;# 
  1840  0A1F                     	;# 
  1841  0A1F                     	;# 
  1842  0A1F                     	;# 
  1843  1E0F                     	;# 
  1844  1E10                     	;# 
  1845  1E11                     	;# 
  1846  1E12                     	;# 
  1847  1E13                     	;# 
  1848  1E14                     	;# 
  1849  1E15                     	;# 
  1850  1E16                     	;# 
  1851  1E17                     	;# 
  1852  1E18                     	;# 
  1853  1E19                     	;# 
  1854  1E1A                     	;# 
  1855  1E1B                     	;# 
  1856  1E1C                     	;# 
  1857  1E1D                     	;# 
  1858  1E1E                     	;# 
  1859  1E1F                     	;# 
  1860  1E20                     	;# 
  1861  1E21                     	;# 
  1862  1E22                     	;# 
  1863  1E23                     	;# 
  1864  1E24                     	;# 
  1865  1E25                     	;# 
  1866  1E26                     	;# 
  1867  1E27                     	;# 
  1868  1E28                     	;# 
  1869  1E29                     	;# 
  1870  1E2A                     	;# 
  1871  1E2B                     	;# 
  1872  1E2C                     	;# 
  1873  1E2D                     	;# 
  1874  1E2E                     	;# 
  1875  1E2F                     	;# 
  1876  1E30                     	;# 
  1877  1E31                     	;# 
  1878  1E32                     	;# 
  1879  1E33                     	;# 
  1880  1E34                     	;# 
  1881  1E35                     	;# 
  1882  1E36                     	;# 
  1883  1E37                     	;# 
  1884  1E8F                     	;# 
  1885  1E90                     	;# 
  1886  1E91                     	;# 
  1887  1E92                     	;# 
  1888  1E93                     	;# 
  1889  1E9C                     	;# 
  1890  1EA1                     	;# 
  1891  1EA2                     	;# 
  1892  1EB1                     	;# 
  1893  1EBB                     	;# 
  1894  1EBC                     	;# 
  1895  1EBD                     	;# 
  1896  1EBE                     	;# 
  1897  1EC3                     	;# 
  1898  1EC5                     	;# 
  1899  1EC6                     	;# 
  1900  1EC7                     	;# 
  1901  1ECB                     	;# 
  1902  1ECC                     	;# 
  1903  1ECD                     	;# 
  1904  1ECE                     	;# 
  1905  1F10                     	;# 
  1906  1F11                     	;# 
  1907  1F12                     	;# 
  1908  1F13                     	;# 
  1909  1F14                     	;# 
  1910  1F15                     	;# 
  1911  1F20                     	;# 
  1912  1F21                     	;# 
  1913  1F22                     	;# 
  1914  1F23                     	;# 
  1915  1F24                     	;# 
  1916  1F25                     	;# 
  1917  1F38                     	;# 
  1918  1F39                     	;# 
  1919  1F3A                     	;# 
  1920  1F3B                     	;# 
  1921  1F3C                     	;# 
  1922  1F3D                     	;# 
  1923  1F3E                     	;# 
  1924  1F3F                     	;# 
  1925  1F4E                     	;# 
  1926  1F4F                     	;# 
  1927  1F50                     	;# 
  1928  1F51                     	;# 
  1929  1F52                     	;# 
  1930  1F53                     	;# 
  1931  1F54                     	;# 
  1932  1F55                     	;# 
  1933  1FE4                     	;# 
  1934  1FE5                     	;# 
  1935  1FE6                     	;# 
  1936  1FE7                     	;# 
  1937  1FE8                     	;# 
  1938  1FE8                     	;# 
  1939  1FE9                     	;# 
  1940  1FEA                     	;# 
  1941  1FEA                     	;# 
  1942  1FEB                     	;# 
  1943  1FED                     	;# 
  1944  1FEE                     	;# 
  1945  1FEF                     	;# 
  1946  0000                     	;# 
  1947  0001                     	;# 
  1948  0002                     	;# 
  1949  0003                     	;# 
  1950  0004                     	;# 
  1951  0005                     	;# 
  1952  0006                     	;# 
  1953  0007                     	;# 
  1954  0008                     	;# 
  1955  0009                     	;# 
  1956  000A                     	;# 
  1957  000B                     	;# 
  1958  000C                     	;# 
  1959  000E                     	;# 
  1960  0012                     	;# 
  1961  0014                     	;# 
  1962  0018                     	;# 
  1963  001A                     	;# 
  1964  009B                     	;# 
  1965  009B                     	;# 
  1966  009C                     	;# 
  1967  009D                     	;# 
  1968  009E                     	;# 
  1969  009F                     	;# 
  1970  0119                     	;# 
  1971  0119                     	;# 
  1972  0119                     	;# 
  1973  011A                     	;# 
  1974  011A                     	;# 
  1975  011A                     	;# 
  1976  011B                     	;# 
  1977  011B                     	;# 
  1978  011B                     	;# 
  1979  011B                     	;# 
  1980  011B                     	;# 
  1981  011C                     	;# 
  1982  011C                     	;# 
  1983  011C                     	;# 
  1984  011D                     	;# 
  1985  011D                     	;# 
  1986  011D                     	;# 
  1987  011E                     	;# 
  1988  011E                     	;# 
  1989  011E                     	;# 
  1990  011F                     	;# 
  1991  011F                     	;# 
  1992  011F                     	;# 
  1993  011F                     	;# 
  1994  011F                     	;# 
  1995  018C                     	;# 
  1996  018D                     	;# 
  1997  018E                     	;# 
  1998  018F                     	;# 
  1999  0190                     	;# 
  2000  0191                     	;# 
  2001  0192                     	;# 
  2002  020C                     	;# 
  2003  020C                     	;# 
  2004  020D                     	;# 
  2005  020E                     	;# 
  2006  020F                     	;# 
  2007  020F                     	;# 
  2008  0210                     	;# 
  2009  0210                     	;# 
  2010  0211                     	;# 
  2011  0211                     	;# 
  2012  028C                     	;# 
  2013  028C                     	;# 
  2014  028D                     	;# 
  2015  028D                     	;# 
  2016  028E                     	;# 
  2017  028F                     	;# 
  2018  0290                     	;# 
  2019  0291                     	;# 
  2020  030C                     	;# 
  2021  030C                     	;# 
  2022  030D                     	;# 
  2023  030E                     	;# 
  2024  030F                     	;# 
  2025  0310                     	;# 
  2026  0310                     	;# 
  2027  0311                     	;# 
  2028  0312                     	;# 
  2029  0313                     	;# 
  2030  0314                     	;# 
  2031  0314                     	;# 
  2032  0315                     	;# 
  2033  0316                     	;# 
  2034  0318                     	;# 
  2035  0318                     	;# 
  2036  0319                     	;# 
  2037  031A                     	;# 
  2038  031C                     	;# 
  2039  031C                     	;# 
  2040  031D                     	;# 
  2041  031E                     	;# 
  2042  038C                     	;# 
  2043  038C                     	;# 
  2044  038D                     	;# 
  2045  038E                     	;# 
  2046  058C                     	;# 
  2047  058C                     	;# 
  2048  058D                     	;# 
  2049  058E                     	;# 
  2050  058F                     	;# 
  2051  058F                     	;# 
  2052  0590                     	;# 
  2053  0591                     	;# 
  2054  0592                     	;# 
  2055  0593                     	;# 
  2056  059C                     	;# 
  2057  059C                     	;# 
  2058  059D                     	;# 
  2059  059D                     	;# 
  2060  059E                     	;# 
  2061  059F                     	;# 
  2062  060C                     	;# 
  2063  060D                     	;# 
  2064  060E                     	;# 
  2065  060F                     	;# 
  2066  0610                     	;# 
  2067  0611                     	;# 
  2068  0612                     	;# 
  2069  0613                     	;# 
  2070  0614                     	;# 
  2071  070C                     	;# 
  2072  070D                     	;# 
  2073  070E                     	;# 
  2074  070F                     	;# 
  2075  0710                     	;# 
  2076  0711                     	;# 
  2077  0712                     	;# 
  2078  0713                     	;# 
  2079  0716                     	;# 
  2080  0717                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  071A                     	;# 
  2084  071B                     	;# 
  2085  071C                     	;# 
  2086  071D                     	;# 
  2087  0796                     	;# 
  2088  0797                     	;# 
  2089  0798                     	;# 
  2090  0799                     	;# 
  2091  079A                     	;# 
  2092  079B                     	;# 
  2093  080C                     	;# 
  2094  080D                     	;# 
  2095  080E                     	;# 
  2096  080F                     	;# 
  2097  0810                     	;# 
  2098  0811                     	;# 
  2099  0812                     	;# 
  2100  0813                     	;# 
  2101  0814                     	;# 
  2102  081A                     	;# 
  2103  081A                     	;# 
  2104  081B                     	;# 
  2105  081C                     	;# 
  2106  081C                     	;# 
  2107  081D                     	;# 
  2108  081E                     	;# 
  2109  081F                     	;# 
  2110  088C                     	;# 
  2111  088D                     	;# 
  2112  088E                     	;# 
  2113  088F                     	;# 
  2114  0890                     	;# 
  2115  0891                     	;# 
  2116  0892                     	;# 
  2117  0893                     	;# 
  2118  0895                     	;# 
  2119  0896                     	;# 
  2120  090C                     	;# 
  2121  090E                     	;# 
  2122  090F                     	;# 
  2123  091F                     	;# 
  2124  098F                     	;# 
  2125  098F                     	;# 
  2126  0990                     	;# 
  2127  0991                     	;# 
  2128  0992                     	;# 
  2129  0993                     	;# 
  2130  0994                     	;# 
  2131  0995                     	;# 
  2132  0996                     	;# 
  2133  0997                     	;# 
  2134  0A19                     	;# 
  2135  0A19                     	;# 
  2136  0A1A                     	;# 
  2137  0A1A                     	;# 
  2138  0A1B                     	;# 
  2139  0A1B                     	;# 
  2140  0A1B                     	;# 
  2141  0A1C                     	;# 
  2142  0A1C                     	;# 
  2143  0A1D                     	;# 
  2144  0A1D                     	;# 
  2145  0A1E                     	;# 
  2146  0A1E                     	;# 
  2147  0A1F                     	;# 
  2148  0A1F                     	;# 
  2149  0A1F                     	;# 
  2150  1E0F                     	;# 
  2151  1E10                     	;# 
  2152  1E11                     	;# 
  2153  1E12                     	;# 
  2154  1E13                     	;# 
  2155  1E14                     	;# 
  2156  1E15                     	;# 
  2157  1E16                     	;# 
  2158  1E17                     	;# 
  2159  1E18                     	;# 
  2160  1E19                     	;# 
  2161  1E1A                     	;# 
  2162  1E1B                     	;# 
  2163  1E1C                     	;# 
  2164  1E1D                     	;# 
  2165  1E1E                     	;# 
  2166  1E1F                     	;# 
  2167  1E20                     	;# 
  2168  1E21                     	;# 
  2169  1E22                     	;# 
  2170  1E23                     	;# 
  2171  1E24                     	;# 
  2172  1E25                     	;# 
  2173  1E26                     	;# 
  2174  1E27                     	;# 
  2175  1E28                     	;# 
  2176  1E29                     	;# 
  2177  1E2A                     	;# 
  2178  1E2B                     	;# 
  2179  1E2C                     	;# 
  2180  1E2D                     	;# 
  2181  1E2E                     	;# 
  2182  1E2F                     	;# 
  2183  1E30                     	;# 
  2184  1E31                     	;# 
  2185  1E32                     	;# 
  2186  1E33                     	;# 
  2187  1E34                     	;# 
  2188  1E35                     	;# 
  2189  1E36                     	;# 
  2190  1E37                     	;# 
  2191  1E8F                     	;# 
  2192  1E90                     	;# 
  2193  1E91                     	;# 
  2194  1E92                     	;# 
  2195  1E93                     	;# 
  2196  1E9C                     	;# 
  2197  1EA1                     	;# 
  2198  1EA2                     	;# 
  2199  1EB1                     	;# 
  2200  1EBB                     	;# 
  2201  1EBC                     	;# 
  2202  1EBD                     	;# 
  2203  1EBE                     	;# 
  2204  1EC3                     	;# 
  2205  1EC5                     	;# 
  2206  1EC6                     	;# 
  2207  1EC7                     	;# 
  2208  1ECB                     	;# 
  2209  1ECC                     	;# 
  2210  1ECD                     	;# 
  2211  1ECE                     	;# 
  2212  1F10                     	;# 
  2213  1F11                     	;# 
  2214  1F12                     	;# 
  2215  1F13                     	;# 
  2216  1F14                     	;# 
  2217  1F15                     	;# 
  2218  1F20                     	;# 
  2219  1F21                     	;# 
  2220  1F22                     	;# 
  2221  1F23                     	;# 
  2222  1F24                     	;# 
  2223  1F25                     	;# 
  2224  1F38                     	;# 
  2225  1F39                     	;# 
  2226  1F3A                     	;# 
  2227  1F3B                     	;# 
  2228  1F3C                     	;# 
  2229  1F3D                     	;# 
  2230  1F3E                     	;# 
  2231  1F3F                     	;# 
  2232  1F4E                     	;# 
  2233  1F4F                     	;# 
  2234  1F50                     	;# 
  2235  1F51                     	;# 
  2236  1F52                     	;# 
  2237  1F53                     	;# 
  2238  1F54                     	;# 
  2239  1F55                     	;# 
  2240  1FE4                     	;# 
  2241  1FE5                     	;# 
  2242  1FE6                     	;# 
  2243  1FE7                     	;# 
  2244  1FE8                     	;# 
  2245  1FE8                     	;# 
  2246  1FE9                     	;# 
  2247  1FEA                     	;# 
  2248  1FEA                     	;# 
  2249  1FEB                     	;# 
  2250  1FED                     	;# 
  2251  1FEE                     	;# 
  2252  1FEF                     	;# 
  2253  0000                     	;# 
  2254  0001                     	;# 
  2255  0002                     	;# 
  2256  0003                     	;# 
  2257  0004                     	;# 
  2258  0005                     	;# 
  2259  0006                     	;# 
  2260  0007                     	;# 
  2261  0008                     	;# 
  2262  0009                     	;# 
  2263  000A                     	;# 
  2264  000B                     	;# 
  2265  000C                     	;# 
  2266  000E                     	;# 
  2267  0012                     	;# 
  2268  0014                     	;# 
  2269  0018                     	;# 
  2270  001A                     	;# 
  2271  009B                     	;# 
  2272  009B                     	;# 
  2273  009C                     	;# 
  2274  009D                     	;# 
  2275  009E                     	;# 
  2276  009F                     	;# 
  2277  0119                     	;# 
  2278  0119                     	;# 
  2279  0119                     	;# 
  2280  011A                     	;# 
  2281  011A                     	;# 
  2282  011A                     	;# 
  2283  011B                     	;# 
  2284  011B                     	;# 
  2285  011B                     	;# 
  2286  011B                     	;# 
  2287  011B                     	;# 
  2288  011C                     	;# 
  2289  011C                     	;# 
  2290  011C                     	;# 
  2291  011D                     	;# 
  2292  011D                     	;# 
  2293  011D                     	;# 
  2294  011E                     	;# 
  2295  011E                     	;# 
  2296  011E                     	;# 
  2297  011F                     	;# 
  2298  011F                     	;# 
  2299  011F                     	;# 
  2300  011F                     	;# 
  2301  011F                     	;# 
  2302  018C                     	;# 
  2303  018D                     	;# 
  2304  018E                     	;# 
  2305  018F                     	;# 
  2306  0190                     	;# 
  2307  0191                     	;# 
  2308  0192                     	;# 
  2309  020C                     	;# 
  2310  020C                     	;# 
  2311  020D                     	;# 
  2312  020E                     	;# 
  2313  020F                     	;# 
  2314  020F                     	;# 
  2315  0210                     	;# 
  2316  0210                     	;# 
  2317  0211                     	;# 
  2318  0211                     	;# 
  2319  028C                     	;# 
  2320  028C                     	;# 
  2321  028D                     	;# 
  2322  028D                     	;# 
  2323  028E                     	;# 
  2324  028F                     	;# 
  2325  0290                     	;# 
  2326  0291                     	;# 
  2327  030C                     	;# 
  2328  030C                     	;# 
  2329  030D                     	;# 
  2330  030E                     	;# 
  2331  030F                     	;# 
  2332  0310                     	;# 
  2333  0310                     	;# 
  2334  0311                     	;# 
  2335  0312                     	;# 
  2336  0313                     	;# 
  2337  0314                     	;# 
  2338  0314                     	;# 
  2339  0315                     	;# 
  2340  0316                     	;# 
  2341  0318                     	;# 
  2342  0318                     	;# 
  2343  0319                     	;# 
  2344  031A                     	;# 
  2345  031C                     	;# 
  2346  031C                     	;# 
  2347  031D                     	;# 
  2348  031E                     	;# 
  2349  038C                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  058C                     	;# 
  2354  058C                     	;# 
  2355  058D                     	;# 
  2356  058E                     	;# 
  2357  058F                     	;# 
  2358  058F                     	;# 
  2359  0590                     	;# 
  2360  0591                     	;# 
  2361  0592                     	;# 
  2362  0593                     	;# 
  2363  059C                     	;# 
  2364  059C                     	;# 
  2365  059D                     	;# 
  2366  059D                     	;# 
  2367  059E                     	;# 
  2368  059F                     	;# 
  2369  060C                     	;# 
  2370  060D                     	;# 
  2371  060E                     	;# 
  2372  060F                     	;# 
  2373  0610                     	;# 
  2374  0611                     	;# 
  2375  0612                     	;# 
  2376  0613                     	;# 
  2377  0614                     	;# 
  2378  070C                     	;# 
  2379  070D                     	;# 
  2380  070E                     	;# 
  2381  070F                     	;# 
  2382  0710                     	;# 
  2383  0711                     	;# 
  2384  0712                     	;# 
  2385  0713                     	;# 
  2386  0716                     	;# 
  2387  0717                     	;# 
  2388  0718                     	;# 
  2389  0719                     	;# 
  2390  071A                     	;# 
  2391  071B                     	;# 
  2392  071C                     	;# 
  2393  071D                     	;# 
  2394  0796                     	;# 
  2395  0797                     	;# 
  2396  0798                     	;# 
  2397  0799                     	;# 
  2398  079A                     	;# 
  2399  079B                     	;# 
  2400  080C                     	;# 
  2401  080D                     	;# 
  2402  080E                     	;# 
  2403  080F                     	;# 
  2404  0810                     	;# 
  2405  0811                     	;# 
  2406  0812                     	;# 
  2407  0813                     	;# 
  2408  0814                     	;# 
  2409  081A                     	;# 
  2410  081A                     	;# 
  2411  081B                     	;# 
  2412  081C                     	;# 
  2413  081C                     	;# 
  2414  081D                     	;# 
  2415  081E                     	;# 
  2416  081F                     	;# 
  2417  088C                     	;# 
  2418  088D                     	;# 
  2419  088E                     	;# 
  2420  088F                     	;# 
  2421  0890                     	;# 
  2422  0891                     	;# 
  2423  0892                     	;# 
  2424  0893                     	;# 
  2425  0895                     	;# 
  2426  0896                     	;# 
  2427  090C                     	;# 
  2428  090E                     	;# 
  2429  090F                     	;# 
  2430  091F                     	;# 
  2431  098F                     	;# 
  2432  098F                     	;# 
  2433  0990                     	;# 
  2434  0991                     	;# 
  2435  0992                     	;# 
  2436  0993                     	;# 
  2437  0994                     	;# 
  2438  0995                     	;# 
  2439  0996                     	;# 
  2440  0997                     	;# 
  2441  0A19                     	;# 
  2442  0A19                     	;# 
  2443  0A1A                     	;# 
  2444  0A1A                     	;# 
  2445  0A1B                     	;# 
  2446  0A1B                     	;# 
  2447  0A1B                     	;# 
  2448  0A1C                     	;# 
  2449  0A1C                     	;# 
  2450  0A1D                     	;# 
  2451  0A1D                     	;# 
  2452  0A1E                     	;# 
  2453  0A1E                     	;# 
  2454  0A1F                     	;# 
  2455  0A1F                     	;# 
  2456  0A1F                     	;# 
  2457  1E0F                     	;# 
  2458  1E10                     	;# 
  2459  1E11                     	;# 
  2460  1E12                     	;# 
  2461  1E13                     	;# 
  2462  1E14                     	;# 
  2463  1E15                     	;# 
  2464  1E16                     	;# 
  2465  1E17                     	;# 
  2466  1E18                     	;# 
  2467  1E19                     	;# 
  2468  1E1A                     	;# 
  2469  1E1B                     	;# 
  2470  1E1C                     	;# 
  2471  1E1D                     	;# 
  2472  1E1E                     	;# 
  2473  1E1F                     	;# 
  2474  1E20                     	;# 
  2475  1E21                     	;# 
  2476  1E22                     	;# 
  2477  1E23                     	;# 
  2478  1E24                     	;# 
  2479  1E25                     	;# 
  2480  1E26                     	;# 
  2481  1E27                     	;# 
  2482  1E28                     	;# 
  2483  1E29                     	;# 
  2484  1E2A                     	;# 
  2485  1E2B                     	;# 
  2486  1E2C                     	;# 
  2487  1E2D                     	;# 
  2488  1E2E                     	;# 
  2489  1E2F                     	;# 
  2490  1E30                     	;# 
  2491  1E31                     	;# 
  2492  1E32                     	;# 
  2493  1E33                     	;# 
  2494  1E34                     	;# 
  2495  1E35                     	;# 
  2496  1E36                     	;# 
  2497  1E37                     	;# 
  2498  1E8F                     	;# 
  2499  1E90                     	;# 
  2500  1E91                     	;# 
  2501  1E92                     	;# 
  2502  1E93                     	;# 
  2503  1E9C                     	;# 
  2504  1EA1                     	;# 
  2505  1EA2                     	;# 
  2506  1EB1                     	;# 
  2507  1EBB                     	;# 
  2508  1EBC                     	;# 
  2509  1EBD                     	;# 
  2510  1EBE                     	;# 
  2511  1EC3                     	;# 
  2512  1EC5                     	;# 
  2513  1EC6                     	;# 
  2514  1EC7                     	;# 
  2515  1ECB                     	;# 
  2516  1ECC                     	;# 
  2517  1ECD                     	;# 
  2518  1ECE                     	;# 
  2519  1F10                     	;# 
  2520  1F11                     	;# 
  2521  1F12                     	;# 
  2522  1F13                     	;# 
  2523  1F14                     	;# 
  2524  1F15                     	;# 
  2525  1F20                     	;# 
  2526  1F21                     	;# 
  2527  1F22                     	;# 
  2528  1F23                     	;# 
  2529  1F24                     	;# 
  2530  1F25                     	;# 
  2531  1F38                     	;# 
  2532  1F39                     	;# 
  2533  1F3A                     	;# 
  2534  1F3B                     	;# 
  2535  1F3C                     	;# 
  2536  1F3D                     	;# 
  2537  1F3E                     	;# 
  2538  1F3F                     	;# 
  2539  1F4E                     	;# 
  2540  1F4F                     	;# 
  2541  1F50                     	;# 
  2542  1F51                     	;# 
  2543  1F52                     	;# 
  2544  1F53                     	;# 
  2545  1F54                     	;# 
  2546  1F55                     	;# 
  2547  1FE4                     	;# 
  2548  1FE5                     	;# 
  2549  1FE6                     	;# 
  2550  1FE7                     	;# 
  2551  1FE8                     	;# 
  2552  1FE8                     	;# 
  2553  1FE9                     	;# 
  2554  1FEA                     	;# 
  2555  1FEA                     	;# 
  2556  1FEB                     	;# 
  2557  1FED                     	;# 
  2558  1FEE                     	;# 
  2559  1FEF                     	;# 
  2560  0000                     	;# 
  2561  0001                     	;# 
  2562  0002                     	;# 
  2563  0003                     	;# 
  2564  0004                     	;# 
  2565  0005                     	;# 
  2566  0006                     	;# 
  2567  0007                     	;# 
  2568  0008                     	;# 
  2569  0009                     	;# 
  2570  000A                     	;# 
  2571  000B                     	;# 
  2572  000C                     	;# 
  2573  000E                     	;# 
  2574  0012                     	;# 
  2575  0014                     	;# 
  2576  0018                     	;# 
  2577  001A                     	;# 
  2578  009B                     	;# 
  2579  009B                     	;# 
  2580  009C                     	;# 
  2581  009D                     	;# 
  2582  009E                     	;# 
  2583  009F                     	;# 
  2584  0119                     	;# 
  2585  0119                     	;# 
  2586  0119                     	;# 
  2587  011A                     	;# 
  2588  011A                     	;# 
  2589  011A                     	;# 
  2590  011B                     	;# 
  2591  011B                     	;# 
  2592  011B                     	;# 
  2593  011B                     	;# 
  2594  011B                     	;# 
  2595  011C                     	;# 
  2596  011C                     	;# 
  2597  011C                     	;# 
  2598  011D                     	;# 
  2599  011D                     	;# 
  2600  011D                     	;# 
  2601  011E                     	;# 
  2602  011E                     	;# 
  2603  011E                     	;# 
  2604  011F                     	;# 
  2605  011F                     	;# 
  2606  011F                     	;# 
  2607  011F                     	;# 
  2608  011F                     	;# 
  2609  018C                     	;# 
  2610  018D                     	;# 
  2611  018E                     	;# 
  2612  018F                     	;# 
  2613  0190                     	;# 
  2614  0191                     	;# 
  2615  0192                     	;# 
  2616  020C                     	;# 
  2617  020C                     	;# 
  2618  020D                     	;# 
  2619  020E                     	;# 
  2620  020F                     	;# 
  2621  020F                     	;# 
  2622  0210                     	;# 
  2623  0210                     	;# 
  2624  0211                     	;# 
  2625  0211                     	;# 
  2626  028C                     	;# 
  2627  028C                     	;# 
  2628  028D                     	;# 
  2629  028D                     	;# 
  2630  028E                     	;# 
  2631  028F                     	;# 
  2632  0290                     	;# 
  2633  0291                     	;# 
  2634  030C                     	;# 
  2635  030C                     	;# 
  2636  030D                     	;# 
  2637  030E                     	;# 
  2638  030F                     	;# 
  2639  0310                     	;# 
  2640  0310                     	;# 
  2641  0311                     	;# 
  2642  0312                     	;# 
  2643  0313                     	;# 
  2644  0314                     	;# 
  2645  0314                     	;# 
  2646  0315                     	;# 
  2647  0316                     	;# 
  2648  0318                     	;# 
  2649  0318                     	;# 
  2650  0319                     	;# 
  2651  031A                     	;# 
  2652  031C                     	;# 
  2653  031C                     	;# 
  2654  031D                     	;# 
  2655  031E                     	;# 
  2656  038C                     	;# 
  2657  038C                     	;# 
  2658  038D                     	;# 
  2659  038E                     	;# 
  2660  058C                     	;# 
  2661  058C                     	;# 
  2662  058D                     	;# 
  2663  058E                     	;# 
  2664  058F                     	;# 
  2665  058F                     	;# 
  2666  0590                     	;# 
  2667  0591                     	;# 
  2668  0592                     	;# 
  2669  0593                     	;# 
  2670  059C                     	;# 
  2671  059C                     	;# 
  2672  059D                     	;# 
  2673  059D                     	;# 
  2674  059E                     	;# 
  2675  059F                     	;# 
  2676  060C                     	;# 
  2677  060D                     	;# 
  2678  060E                     	;# 
  2679  060F                     	;# 
  2680  0610                     	;# 
  2681  0611                     	;# 
  2682  0612                     	;# 
  2683  0613                     	;# 
  2684  0614                     	;# 
  2685  070C                     	;# 
  2686  070D                     	;# 
  2687  070E                     	;# 
  2688  070F                     	;# 
  2689  0710                     	;# 
  2690  0711                     	;# 
  2691  0712                     	;# 
  2692  0713                     	;# 
  2693  0716                     	;# 
  2694  0717                     	;# 
  2695  0718                     	;# 
  2696  0719                     	;# 
  2697  071A                     	;# 
  2698  071B                     	;# 
  2699  071C                     	;# 
  2700  071D                     	;# 
  2701  0796                     	;# 
  2702  0797                     	;# 
  2703  0798                     	;# 
  2704  0799                     	;# 
  2705  079A                     	;# 
  2706  079B                     	;# 
  2707  080C                     	;# 
  2708  080D                     	;# 
  2709  080E                     	;# 
  2710  080F                     	;# 
  2711  0810                     	;# 
  2712  0811                     	;# 
  2713  0812                     	;# 
  2714  0813                     	;# 
  2715  0814                     	;# 
  2716  081A                     	;# 
  2717  081A                     	;# 
  2718  081B                     	;# 
  2719  081C                     	;# 
  2720  081C                     	;# 
  2721  081D                     	;# 
  2722  081E                     	;# 
  2723  081F                     	;# 
  2724  088C                     	;# 
  2725  088D                     	;# 
  2726  088E                     	;# 
  2727  088F                     	;# 
  2728  0890                     	;# 
  2729  0891                     	;# 
  2730  0892                     	;# 
  2731  0893                     	;# 
  2732  0895                     	;# 
  2733  0896                     	;# 
  2734  090C                     	;# 
  2735  090E                     	;# 
  2736  090F                     	;# 
  2737  091F                     	;# 
  2738  098F                     	;# 
  2739  098F                     	;# 
  2740  0990                     	;# 
  2741  0991                     	;# 
  2742  0992                     	;# 
  2743  0993                     	;# 
  2744  0994                     	;# 
  2745  0995                     	;# 
  2746  0996                     	;# 
  2747  0997                     	;# 
  2748  0A19                     	;# 
  2749  0A19                     	;# 
  2750  0A1A                     	;# 
  2751  0A1A                     	;# 
  2752  0A1B                     	;# 
  2753  0A1B                     	;# 
  2754  0A1B                     	;# 
  2755  0A1C                     	;# 
  2756  0A1C                     	;# 
  2757  0A1D                     	;# 
  2758  0A1D                     	;# 
  2759  0A1E                     	;# 
  2760  0A1E                     	;# 
  2761  0A1F                     	;# 
  2762  0A1F                     	;# 
  2763  0A1F                     	;# 
  2764  1E0F                     	;# 
  2765  1E10                     	;# 
  2766  1E11                     	;# 
  2767  1E12                     	;# 
  2768  1E13                     	;# 
  2769  1E14                     	;# 
  2770  1E15                     	;# 
  2771  1E16                     	;# 
  2772  1E17                     	;# 
  2773  1E18                     	;# 
  2774  1E19                     	;# 
  2775  1E1A                     	;# 
  2776  1E1B                     	;# 
  2777  1E1C                     	;# 
  2778  1E1D                     	;# 
  2779  1E1E                     	;# 
  2780  1E1F                     	;# 
  2781  1E20                     	;# 
  2782  1E21                     	;# 
  2783  1E22                     	;# 
  2784  1E23                     	;# 
  2785  1E24                     	;# 
  2786  1E25                     	;# 
  2787  1E26                     	;# 
  2788  1E27                     	;# 
  2789  1E28                     	;# 
  2790  1E29                     	;# 
  2791  1E2A                     	;# 
  2792  1E2B                     	;# 
  2793  1E2C                     	;# 
  2794  1E2D                     	;# 
  2795  1E2E                     	;# 
  2796  1E2F                     	;# 
  2797  1E30                     	;# 
  2798  1E31                     	;# 
  2799  1E32                     	;# 
  2800  1E33                     	;# 
  2801  1E34                     	;# 
  2802  1E35                     	;# 
  2803  1E36                     	;# 
  2804  1E37                     	;# 
  2805  1E8F                     	;# 
  2806  1E90                     	;# 
  2807  1E91                     	;# 
  2808  1E92                     	;# 
  2809  1E93                     	;# 
  2810  1E9C                     	;# 
  2811  1EA1                     	;# 
  2812  1EA2                     	;# 
  2813  1EB1                     	;# 
  2814  1EBB                     	;# 
  2815  1EBC                     	;# 
  2816  1EBD                     	;# 
  2817  1EBE                     	;# 
  2818  1EC3                     	;# 
  2819  1EC5                     	;# 
  2820  1EC6                     	;# 
  2821  1EC7                     	;# 
  2822  1ECB                     	;# 
  2823  1ECC                     	;# 
  2824  1ECD                     	;# 
  2825  1ECE                     	;# 
  2826  1F10                     	;# 
  2827  1F11                     	;# 
  2828  1F12                     	;# 
  2829  1F13                     	;# 
  2830  1F14                     	;# 
  2831  1F15                     	;# 
  2832  1F20                     	;# 
  2833  1F21                     	;# 
  2834  1F22                     	;# 
  2835  1F23                     	;# 
  2836  1F24                     	;# 
  2837  1F25                     	;# 
  2838  1F38                     	;# 
  2839  1F39                     	;# 
  2840  1F3A                     	;# 
  2841  1F3B                     	;# 
  2842  1F3C                     	;# 
  2843  1F3D                     	;# 
  2844  1F3E                     	;# 
  2845  1F3F                     	;# 
  2846  1F4E                     	;# 
  2847  1F4F                     	;# 
  2848  1F50                     	;# 
  2849  1F51                     	;# 
  2850  1F52                     	;# 
  2851  1F53                     	;# 
  2852  1F54                     	;# 
  2853  1F55                     	;# 
  2854  1FE4                     	;# 
  2855  1FE5                     	;# 
  2856  1FE6                     	;# 
  2857  1FE7                     	;# 
  2858  1FE8                     	;# 
  2859  1FE8                     	;# 
  2860  1FE9                     	;# 
  2861  1FEA                     	;# 
  2862  1FEA                     	;# 
  2863  1FEB                     	;# 
  2864  1FED                     	;# 
  2865  1FEE                     	;# 
  2866  1FEF                     	;# 
  2867  0000                     	;# 
  2868  0001                     	;# 
  2869  0002                     	;# 
  2870  0003                     	;# 
  2871  0004                     	;# 
  2872  0005                     	;# 
  2873  0006                     	;# 
  2874  0007                     	;# 
  2875  0008                     	;# 
  2876  0009                     	;# 
  2877  000A                     	;# 
  2878  000B                     	;# 
  2879  000C                     	;# 
  2880  000E                     	;# 
  2881  0012                     	;# 
  2882  0014                     	;# 
  2883  0018                     	;# 
  2884  001A                     	;# 
  2885  009B                     	;# 
  2886  009B                     	;# 
  2887  009C                     	;# 
  2888  009D                     	;# 
  2889  009E                     	;# 
  2890  009F                     	;# 
  2891  0119                     	;# 
  2892  0119                     	;# 
  2893  0119                     	;# 
  2894  011A                     	;# 
  2895  011A                     	;# 
  2896  011A                     	;# 
  2897  011B                     	;# 
  2898  011B                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011C                     	;# 
  2903  011C                     	;# 
  2904  011C                     	;# 
  2905  011D                     	;# 
  2906  011D                     	;# 
  2907  011D                     	;# 
  2908  011E                     	;# 
  2909  011E                     	;# 
  2910  011E                     	;# 
  2911  011F                     	;# 
  2912  011F                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  018C                     	;# 
  2917  018D                     	;# 
  2918  018E                     	;# 
  2919  018F                     	;# 
  2920  0190                     	;# 
  2921  0191                     	;# 
  2922  0192                     	;# 
  2923  020C                     	;# 
  2924  020C                     	;# 
  2925  020D                     	;# 
  2926  020E                     	;# 
  2927  020F                     	;# 
  2928  020F                     	;# 
  2929  0210                     	;# 
  2930  0210                     	;# 
  2931  0211                     	;# 
  2932  0211                     	;# 
  2933  028C                     	;# 
  2934  028C                     	;# 
  2935  028D                     	;# 
  2936  028D                     	;# 
  2937  028E                     	;# 
  2938  028F                     	;# 
  2939  0290                     	;# 
  2940  0291                     	;# 
  2941  030C                     	;# 
  2942  030C                     	;# 
  2943  030D                     	;# 
  2944  030E                     	;# 
  2945  030F                     	;# 
  2946  0310                     	;# 
  2947  0310                     	;# 
  2948  0311                     	;# 
  2949  0312                     	;# 
  2950  0313                     	;# 
  2951  0314                     	;# 
  2952  0314                     	;# 
  2953  0315                     	;# 
  2954  0316                     	;# 
  2955  0318                     	;# 
  2956  0318                     	;# 
  2957  0319                     	;# 
  2958  031A                     	;# 
  2959  031C                     	;# 
  2960  031C                     	;# 
  2961  031D                     	;# 
  2962  031E                     	;# 
  2963  038C                     	;# 
  2964  038C                     	;# 
  2965  038D                     	;# 
  2966  038E                     	;# 
  2967  058C                     	;# 
  2968  058C                     	;# 
  2969  058D                     	;# 
  2970  058E                     	;# 
  2971  058F                     	;# 
  2972  058F                     	;# 
  2973  0590                     	;# 
  2974  0591                     	;# 
  2975  0592                     	;# 
  2976  0593                     	;# 
  2977  059C                     	;# 
  2978  059C                     	;# 
  2979  059D                     	;# 
  2980  059D                     	;# 
  2981  059E                     	;# 
  2982  059F                     	;# 
  2983  060C                     	;# 
  2984  060D                     	;# 
  2985  060E                     	;# 
  2986  060F                     	;# 
  2987  0610                     	;# 
  2988  0611                     	;# 
  2989  0612                     	;# 
  2990  0613                     	;# 
  2991  0614                     	;# 
  2992  070C                     	;# 
  2993  070D                     	;# 
  2994  070E                     	;# 
  2995  070F                     	;# 
  2996  0710                     	;# 
  2997  0711                     	;# 
  2998  0712                     	;# 
  2999  0713                     	;# 
  3000  0716                     	;# 
  3001  0717                     	;# 
  3002  0718                     	;# 
  3003  0719                     	;# 
  3004  071A                     	;# 
  3005  071B                     	;# 
  3006  071C                     	;# 
  3007  071D                     	;# 
  3008  0796                     	;# 
  3009  0797                     	;# 
  3010  0798                     	;# 
  3011  0799                     	;# 
  3012  079A                     	;# 
  3013  079B                     	;# 
  3014  080C                     	;# 
  3015  080D                     	;# 
  3016  080E                     	;# 
  3017  080F                     	;# 
  3018  0810                     	;# 
  3019  0811                     	;# 
  3020  0812                     	;# 
  3021  0813                     	;# 
  3022  0814                     	;# 
  3023  081A                     	;# 
  3024  081A                     	;# 
  3025  081B                     	;# 
  3026  081C                     	;# 
  3027  081C                     	;# 
  3028  081D                     	;# 
  3029  081E                     	;# 
  3030  081F                     	;# 
  3031  088C                     	;# 
  3032  088D                     	;# 
  3033  088E                     	;# 
  3034  088F                     	;# 
  3035  0890                     	;# 
  3036  0891                     	;# 
  3037  0892                     	;# 
  3038  0893                     	;# 
  3039  0895                     	;# 
  3040  0896                     	;# 
  3041  090C                     	;# 
  3042  090E                     	;# 
  3043  090F                     	;# 
  3044  091F                     	;# 
  3045  098F                     	;# 
  3046  098F                     	;# 
  3047  0990                     	;# 
  3048  0991                     	;# 
  3049  0992                     	;# 
  3050  0993                     	;# 
  3051  0994                     	;# 
  3052  0995                     	;# 
  3053  0996                     	;# 
  3054  0997                     	;# 
  3055  0A19                     	;# 
  3056  0A19                     	;# 
  3057  0A1A                     	;# 
  3058  0A1A                     	;# 
  3059  0A1B                     	;# 
  3060  0A1B                     	;# 
  3061  0A1B                     	;# 
  3062  0A1C                     	;# 
  3063  0A1C                     	;# 
  3064  0A1D                     	;# 
  3065  0A1D                     	;# 
  3066  0A1E                     	;# 
  3067  0A1E                     	;# 
  3068  0A1F                     	;# 
  3069  0A1F                     	;# 
  3070  0A1F                     	;# 
  3071  1E0F                     	;# 
  3072  1E10                     	;# 
  3073  1E11                     	;# 
  3074  1E12                     	;# 
  3075  1E13                     	;# 
  3076  1E14                     	;# 
  3077  1E15                     	;# 
  3078  1E16                     	;# 
  3079  1E17                     	;# 
  3080  1E18                     	;# 
  3081  1E19                     	;# 
  3082  1E1A                     	;# 
  3083  1E1B                     	;# 
  3084  1E1C                     	;# 
  3085  1E1D                     	;# 
  3086  1E1E                     	;# 
  3087  1E1F                     	;# 
  3088  1E20                     	;# 
  3089  1E21                     	;# 
  3090  1E22                     	;# 
  3091  1E23                     	;# 
  3092  1E24                     	;# 
  3093  1E25                     	;# 
  3094  1E26                     	;# 
  3095  1E27                     	;# 
  3096  1E28                     	;# 
  3097  1E29                     	;# 
  3098  1E2A                     	;# 
  3099  1E2B                     	;# 
  3100  1E2C                     	;# 
  3101  1E2D                     	;# 
  3102  1E2E                     	;# 
  3103  1E2F                     	;# 
  3104  1E30                     	;# 
  3105  1E31                     	;# 
  3106  1E32                     	;# 
  3107  1E33                     	;# 
  3108  1E34                     	;# 
  3109  1E35                     	;# 
  3110  1E36                     	;# 
  3111  1E37                     	;# 
  3112  1E8F                     	;# 
  3113  1E90                     	;# 
  3114  1E91                     	;# 
  3115  1E92                     	;# 
  3116  1E93                     	;# 
  3117  1E9C                     	;# 
  3118  1EA1                     	;# 
  3119  1EA2                     	;# 
  3120  1EB1                     	;# 
  3121  1EBB                     	;# 
  3122  1EBC                     	;# 
  3123  1EBD                     	;# 
  3124  1EBE                     	;# 
  3125  1EC3                     	;# 
  3126  1EC5                     	;# 
  3127  1EC6                     	;# 
  3128  1EC7                     	;# 
  3129  1ECB                     	;# 
  3130  1ECC                     	;# 
  3131  1ECD                     	;# 
  3132  1ECE                     	;# 
  3133  1F10                     	;# 
  3134  1F11                     	;# 
  3135  1F12                     	;# 
  3136  1F13                     	;# 
  3137  1F14                     	;# 
  3138  1F15                     	;# 
  3139  1F20                     	;# 
  3140  1F21                     	;# 
  3141  1F22                     	;# 
  3142  1F23                     	;# 
  3143  1F24                     	;# 
  3144  1F25                     	;# 
  3145  1F38                     	;# 
  3146  1F39                     	;# 
  3147  1F3A                     	;# 
  3148  1F3B                     	;# 
  3149  1F3C                     	;# 
  3150  1F3D                     	;# 
  3151  1F3E                     	;# 
  3152  1F3F                     	;# 
  3153  1F4E                     	;# 
  3154  1F4F                     	;# 
  3155  1F50                     	;# 
  3156  1F51                     	;# 
  3157  1F52                     	;# 
  3158  1F53                     	;# 
  3159  1F54                     	;# 
  3160  1F55                     	;# 
  3161  1FE4                     	;# 
  3162  1FE5                     	;# 
  3163  1FE6                     	;# 
  3164  1FE7                     	;# 
  3165  1FE8                     	;# 
  3166  1FE8                     	;# 
  3167  1FE9                     	;# 
  3168  1FEA                     	;# 
  3169  1FEA                     	;# 
  3170  1FEB                     	;# 
  3171  1FED                     	;# 
  3172  1FEE                     	;# 
  3173  1FEF                     	;# 
  3174                           
  3175 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  3176  0000                     
  3177 ;; Function _EUSART1_is_rx_ready is unused but had its address taken
  3178  0000                     
  3179 ;; Function _EUSART1_is_tx_done is unused but had its address taken
  3180  0000                     
  3181 ;; Function _EUSART1_Read is unused but had its address taken
  3182  0000                     
  3183                           	psect	idataBANK2
  3184  1629                     __pidataBANK2:	
  3185                           
  3186                           ;initializer for conf_sensor@F6604
  3187  1629  34F4               	retlw	244
  3188  162A  34F5               	retlw	245
  3189                           
  3190                           ;initializer for main@F6584
  3191  162B  3460               	retlw	96
  3192  162C  34B6               	retlw	182
  3193                           
  3194                           	psect	idataBANK4
  3195  16CB                     __pidataBANK4:	
  3196                           
  3197                           ;initializer for BMP280_SPI_bus_read@F6549
  3198  16CB  34FF               	retlw	-1
  3199  16CC  3400               	retlw	0
  3200  16CD  3400               	retlw	0
  3201  16CE  3400               	retlw	0
  3202  16CF  3400               	retlw	0
  3203  16D0  3400               	retlw	0
  3204  16D1  3400               	retlw	0
  3205  16D2  3400               	retlw	0
  3206  16D3  3400               	retlw	0
  3207  16D4  3400               	retlw	0
  3208  16D5  3400               	retlw	0
  3209  16D6  3400               	retlw	0
  3210  16D7  3400               	retlw	0
  3211  16D8  3400               	retlw	0
  3212  16D9  3400               	retlw	0
  3213  16DA  3400               	retlw	0
  3214  16DB  3400               	retlw	0
  3215  16DC  3400               	retlw	0
  3216  16DD  3400               	retlw	0
  3217  16DE  3400               	retlw	0
  3218  16DF  3400               	retlw	0
  3219  16E0  3400               	retlw	0
  3220  16E1  3400               	retlw	0
  3221  16E2  3400               	retlw	0
  3222  16E3  3400               	retlw	0
  3223  16E4  3400               	retlw	0
  3224  16E5  3400               	retlw	0
  3225  16E6  3400               	retlw	0
  3226  16E7  3400               	retlw	0
  3227  16E8  3400               	retlw	0
  3228                           
  3229                           	psect	stringtext1
  3230  1800                     __pstringtext1:	
  3231  1800                     _uart:	
  3232  1800  3400               	retlw	0
  3233  1801  3400               	retlw	0
  3234  1802  3477               	retlw	low _EUSART1_Initialize
  3235  1803  3416               	retlw	high _EUSART1_Initialize
  3236  1804  3400               	retlw	0
  3237  1805  3400               	retlw	0
  3238  1806  3400               	retlw	0
  3239  1807  3400               	retlw	0
  3240  1808  3400               	retlw	0
  3241  1809  3400               	retlw	0
  3242  180A  343F               	retlw	low _EUSART1_Write
  3243  180B  3416               	retlw	high _EUSART1_Write
  3244  180C                     __end_of_uart:	
  3245                           
  3246                           	psect	stringtext2
  3247  180C                     __pstringtext2:	
  3248  180C                     _spi1_configuration:	
  3249  180C  3400               	retlw	0
  3250  180D  3440               	retlw	64
  3251  180E  3402               	retlw	2
  3252  180F  3400               	retlw	0
  3253  1810  3440               	retlw	64
  3254  1811  3409               	retlw	9
  3255  1812                     __end_of_spi1_configuration:	
  3256                           
  3257                           	psect	stringtext3
  3258  1812                     __pstringtext3:	
  3259  1812                     bmp280_compute_meas_time@period_per_osrs:	
  3260  1812  34D0               	retlw	208
  3261  1813  3407               	retlw	7
  3262  1814  3400               	retlw	0
  3263  1815  3400               	retlw	0
  3264  1816                     __end_ofbmp280_compute_meas_time@period_per_osrs:	
  3265                           
  3266                           	psect	stringtext4
  3267  1816                     __pstringtext4:	
  3268  1816                     bmp280_compute_meas_time@startup:	
  3269  1816  34E8               	retlw	232
  3270  1817  3403               	retlw	3
  3271  1818  3400               	retlw	0
  3272  1819  3400               	retlw	0
  3273  181A                     __end_ofbmp280_compute_meas_time@startup:	
  3274                           
  3275                           	psect	nvBANK1
  3276  00D6                     __pnvBANK1:	
  3277  00D6                     _TMR0_InterruptHandler:	
  3278  00D6                     	ds	2
  3279  00D8                     _timer0ReloadVal16bit:	
  3280  00D8                     	ds	2
  3281  000B                     _INTCONbits	set	11
  3282  0018                     _LATAbits	set	24
  3283  0014                     _TRISC	set	20
  3284  0012                     _TRISA	set	18
  3285  001A                     _LATC	set	26
  3286  0018                     _LATA	set	24
  3287  0014                     _TRISCbits	set	20
  3288  009D                     _ADCON0bits	set	157
  3289  009C                     _ADRESH	set	156
  3290  009B                     _ADRESL	set	155
  3291  009F                     _ADACT	set	159
  3292  009E                     _ADCON1	set	158
  3293  009D                     _ADCON0	set	157
  3294  011A                     _TX1REG	set	282
  3295  0119                     _RC1REG	set	281
  3296  011D                     _RC1STAbits	set	285
  3297  011E                     _TX1STAbits	set	286
  3298  011C                     _SP1BRGH	set	284
  3299  011B                     _SP1BRGL	set	283
  3300  011E                     _TX1STA	set	286
  3301  011D                     _RC1STA	set	285
  3302  011F                     _BAUD1CON	set	287
  3303  018C                     _SSP1BUF	set	396
  3304  018D                     _SSP1ADD	set	397
  3305  0191                     _SSP1CON2	set	401
  3306  0190                     _SSP1CON1	set	400
  3307  018F                     _SSP1STAT	set	399
  3308  0190                     _SSP1CON1bits	set	400
  3309  059E                     _T0CON0bits	set	1438
  3310  059E                     _T0CON0	set	1438
  3311  059C                     _TMR0L	set	1436
  3312  059D                     _TMR0H	set	1437
  3313  059F                     _T0CON1	set	1439
  3314  0716                     _PIE0bits	set	1814
  3315  070C                     _PIR0bits	set	1804
  3316  070F                     _PIR3bits	set	1807
  3317  079B                     _PMD5	set	1947
  3318  079A                     _PMD4	set	1946
  3319  0799                     _PMD3	set	1945
  3320  0798                     _PMD2	set	1944
  3321  0797                     _PMD1	set	1943
  3322  0796                     _PMD0	set	1942
  3323  0892                     _OSCTUNE	set	2194
  3324  0890                     _OSCSTAT	set	2192
  3325  0893                     _OSCFRQ	set	2195
  3326  0891                     _OSCEN	set	2193
  3327  088F                     _OSCCON3	set	2191
  3328  088D                     _OSCCON1	set	2189
  3329  1ECB                     _RX1DTPPSbits	set	7883
  3330  1EC6                     _SSP1DATPPSbits	set	7878
  3331  1EC5                     _SSP1CLKPPSbits	set	7877
  3332  1F22                     _RC2PPS	set	7970
  3333  1F24                     _RC4PPS	set	7972
  3334  1F20                     _RC0PPS	set	7968
  3335  1F50                     _ODCONC	set	8016
  3336  1F3A                     _ODCONA	set	7994
  3337  1F4F                     _WPUC	set	8015
  3338  1F39                     _WPUA	set	7993
  3339  1F38                     _ANSELA	set	7992
  3340  1F4E                     _ANSELC	set	8014
  3341                           
  3342                           ; #config settings
  3343  0000                     
  3344                           	psect	cinit
  3345  0010                     start_initialization:	
  3346  0010                     __initialization:	
  3347                           
  3348                           ; Initialize objects allocated to BANK2
  3349  0010  3029               	movlw	low __pidataBANK2
  3350  0011  0084               	movwf	4
  3351  0012  3096               	movlw	(high __pidataBANK2)| (0+128)
  3352  0013  0085               	movwf	5
  3353  0014  3069               	movlw	low __pdataBANK2
  3354  0015  0086               	movwf	6
  3355  0016  3001               	movlw	high __pdataBANK2
  3356  0017  0087               	movwf	7
  3357  0018  3004               	movlw	4
  3358  0019  3196  2639  3180   	fcall	init_ram
  3359                           
  3360                           ; Initialize objects allocated to BANK4
  3361  001C  30CB               	movlw	low __pidataBANK4
  3362  001D  0084               	movwf	4
  3363  001E  3096               	movlw	(high __pidataBANK4)| (0+128)
  3364  001F  0085               	movwf	5
  3365  0020  3020               	movlw	low __pdataBANK4
  3366  0021  0086               	movwf	6
  3367  0022  3002               	movlw	high __pdataBANK4
  3368  0023  0087               	movwf	7
  3369  0024  301E               	movlw	30
  3370  0025  3196  2639  3180   	fcall	init_ram
  3371                           
  3372                           ; Clear objects allocated to BANK0
  3373  0028  01E6               	clrf	__pbssBANK0& (0+127)
  3374  0029  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  3375  002A  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  3376  002B  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  3377  002C  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  3378  002D  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  3379                           
  3380                           ; Clear objects allocated to BANK1
  3381  002E  0141               	movlb	1	; select bank1
  3382  002F  01DA               	clrf	__pbssBANK1& (0+127)
  3383  0030  01DB               	clrf	(__pbssBANK1+1)& (0+127)
  3384  0031  01DC               	clrf	(__pbssBANK1+2)& (0+127)
  3385  0032  01DD               	clrf	(__pbssBANK1+3)& (0+127)
  3386                           
  3387                           ; Clear objects allocated to BANK2
  3388  0033  0142               	movlb	2	; select bank2
  3389  0034  01ED               	clrf	__pbssBANK2& (0+127)
  3390  0035  01EE               	clrf	(__pbssBANK2+1)& (0+127)
  3391                           
  3392                           ; Clear objects allocated to BANK3
  3393  0036  30A0               	movlw	low __pbssBANK3
  3394  0037  0084               	movwf	4
  3395  0038  3001               	movlw	high __pbssBANK3
  3396  0039  0085               	movwf	5
  3397  003A  3042               	movlw	66
  3398  003B  3196  2633         	fcall	clear_ram0
  3399  003D                     end_of_initialization:	
  3400                           ;End of C runtime variable initialization code
  3401                           
  3402  003D                     __end_of__initialization:	
  3403  003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3404  003E  0140               	movlb	0
  3405  003F  318C  2CAB         	ljmp	_main	;jump to C main() function
  3406                           
  3407                           	psect	bssBANK0
  3408  0066                     __pbssBANK0:	
  3409  0066                     bmp280_get_uncomp_data@F6465:	
  3410  0066                     	ds	6
  3411                           
  3412                           	psect	bssBANK1
  3413  00DA                     __pbssBANK1:	
  3414  00DA                     TMR0_ISR@CountCallBack:	
  3415  00DA                     	ds	2
  3416  00DC                     bmp280_get_config@F6430:	
  3417  00DC                     	ds	2
  3418                           
  3419                           	psect	bssBANK2
  3420  016D                     __pbssBANK2:	
  3421  016D                     conf_sensor@F6602:	
  3422  016D                     	ds	2
  3423                           
  3424                           	psect	dataBANK2
  3425  0169                     __pdataBANK2:	
  3426  0169                     conf_sensor@F6604:	
  3427  0169                     	ds	2
  3428  016B                     main@F6584:	
  3429  016B                     	ds	2
  3430                           
  3431                           	psect	bssBANK3
  3432  01A0                     __pbssBANK3:	
  3433  01A0                     get_calib_param@F6534:	
  3434  01A0                     	ds	24
  3435  01B8                     _bmp:	
  3436  01B8                     	ds	42
  3437                           
  3438                           	psect	dataBANK4
  3439  0220                     __pdataBANK4:	
  3440  0220                     BMP280_SPI_bus_read@F6549:	
  3441  0220                     	ds	30
  3442                           
  3443                           	psect	inittext
  3444  1639                     init_ram:	
  3445  1639  00FE               	movwf	126
  3446  163A                     initloop:	
  3447  163A  0012               	moviw fsr0++
  3448  163B  001E               	movwi fsr1++
  3449  163C  0BFE               	decfsz	126,f
  3450  163D  2E3A               	goto	initloop
  3451  163E  3400               	retlw	0
  3452                           
  3453                           	psect	clrtext
  3454  1633                     clear_ram0:	
  3455                           ;	Called with FSR0 containing the base address, and
  3456                           ;	WREG with the size to clear
  3457                           
  3458  1633  0064               	clrwdt	;clear the watchdog before getting into this loop
  3459  1634                     clrloop0:	
  3460  1634  0180               	clrf	0	;clear RAM location pointed to by FSR
  3461  1635  3101               	addfsr 0,1
  3462  1636  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3463  1637  2E34               	goto	clrloop0	;have we reached the end yet?
  3464  1638  3400               	retlw	0	;all done for this memory range, return
  3465                           
  3466                           	psect	cstackBANK3
  3467  01E2                     __pcstackBANK3:	
  3468  01E2                     main@tx:	
  3469                           
  3470                           ; 2 bytes @ 0x0
  3471  01E2                     	ds	2
  3472  01E4                     main@rslt:	
  3473                           
  3474                           ; 1 bytes @ 0x2
  3475  01E4                     	ds	1
  3476  01E5                     main@conf:	
  3477                           
  3478                           ; 5 bytes @ 0x3
  3479  01E5                     	ds	5
  3480                           
  3481                           	psect	cstackBANK2
  3482  0120                     __pcstackBANK2:	
  3483  0120                     bmp280_soft_reset@soft_rst_cmd:	
  3484  0120                     BMP280_SPI_bus_read@array:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487                           
  3488                           ; 30 bytes @ 0x0
  3489  0120                     	ds	1
  3490  0121                     bmp280_soft_reset@rslt:	
  3491                           
  3492                           ; 1 bytes @ 0x1
  3493  0121                     	ds	1
  3494  0122                     bmp280_soft_reset@reg_addr:	
  3495                           
  3496                           ; 1 bytes @ 0x2
  3497  0122                     	ds	1
  3498  0123                     bmp280_soft_reset@dev:	
  3499                           
  3500                           ; 1 bytes @ 0x3
  3501  0123                     	ds	27
  3502  013E                     BMP280_SPI_bus_read@iError:	
  3503                           
  3504                           ; 4 bytes @ 0x1E
  3505  013E                     	ds	4
  3506  0142                     BMP280_SPI_bus_read@stringpos:	
  3507                           
  3508                           ; 1 bytes @ 0x22
  3509  0142                     	ds	1
  3510  0143                     BMP280_SPI_bus_read@i:	
  3511                           
  3512                           ; 1 bytes @ 0x23
  3513  0143                     	ds	1
  3514  0144                     ?_bmp280_get_regs:	
  3515  0144                     bmp280_get_regs@reg_data:	
  3516                           ; 1 bytes @ 0x24
  3517                           
  3518                           
  3519                           ; 2 bytes @ 0x24
  3520  0144                     	ds	2
  3521  0146                     bmp280_get_regs@len:	
  3522                           
  3523                           ; 1 bytes @ 0x26
  3524  0146                     	ds	1
  3525  0147                     bmp280_get_regs@dev:	
  3526                           
  3527                           ; 1 bytes @ 0x27
  3528  0147                     	ds	1
  3529  0148                     ?_conf_sensor:	
  3530  0148                     conf_sensor@conf:	
  3531                           ; 1 bytes @ 0x28
  3532                           
  3533  0148                     get_calib_param@temp:	
  3534                           ; 1 bytes @ 0x28
  3535                           
  3536                           
  3537                           ; 24 bytes @ 0x28
  3538  0148                     	ds	1
  3539  0149                     conf_sensor@dev:	
  3540                           
  3541                           ; 1 bytes @ 0x29
  3542  0149                     	ds	1
  3543  014A                     ??_conf_sensor:	
  3544                           
  3545                           ; 1 bytes @ 0x2A
  3546  014A                     	ds	4
  3547  014E                     conf_sensor@reg_addr:	
  3548                           
  3549                           ; 2 bytes @ 0x2E
  3550  014E                     	ds	2
  3551  0150                     conf_sensor@mode:	
  3552                           
  3553                           ; 1 bytes @ 0x30
  3554  0150                     	ds	1
  3555  0151                     conf_sensor@rslt:	
  3556                           
  3557                           ; 1 bytes @ 0x31
  3558  0151                     	ds	1
  3559  0152                     conf_sensor@temp:	
  3560                           
  3561                           ; 2 bytes @ 0x32
  3562  0152                     	ds	2
  3563  0154                     ?_bmp280_set_config:	
  3564  0154                     ?_bmp280_set_power_mode:	
  3565                           ; 1 bytes @ 0x34
  3566                           
  3567  0154                     bmp280_set_config@dev:	
  3568                           ; 1 bytes @ 0x34
  3569                           
  3570  0154                     bmp280_set_power_mode@dev:	
  3571                           ; 1 bytes @ 0x34
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x34
  3575  0154                     	ds	1
  3576  0155                     ??_bmp280_set_config:	
  3577  0155                     ??_bmp280_set_power_mode:	
  3578                           ; 1 bytes @ 0x35
  3579                           
  3580                           
  3581                           ; 1 bytes @ 0x35
  3582  0155                     	ds	3
  3583  0158                     bmp280_set_power_mode@mode:	
  3584                           
  3585                           ; 1 bytes @ 0x38
  3586  0158                     	ds	1
  3587  0159                     bmp280_set_power_mode@rslt:	
  3588                           
  3589                           ; 1 bytes @ 0x39
  3590  0159                     	ds	7
  3591  0160                     get_calib_param@rslt:	
  3592                           
  3593                           ; 1 bytes @ 0x40
  3594  0160                     	ds	1
  3595  0161                     get_calib_param@dev:	
  3596                           
  3597                           ; 1 bytes @ 0x41
  3598  0161                     	ds	1
  3599  0162                     ??_bmp280_init:	
  3600                           
  3601                           ; 1 bytes @ 0x42
  3602  0162                     	ds	2
  3603  0164                     bmp280_init@try_count:	
  3604                           
  3605                           ; 1 bytes @ 0x44
  3606  0164                     	ds	1
  3607  0165                     bmp280_init@rslt:	
  3608                           
  3609                           ; 1 bytes @ 0x45
  3610  0165                     	ds	1
  3611  0166                     bmp280_init@dev:	
  3612                           
  3613                           ; 1 bytes @ 0x46
  3614  0166                     	ds	1
  3615  0167                     ??_main:	
  3616                           
  3617                           ; 1 bytes @ 0x47
  3618  0167                     	ds	2
  3619                           
  3620                           	psect	cstackBANK1
  3621  00A0                     __pcstackBANK1:	
  3622  00A0                     tmr_fire@rslt:	
  3623                           
  3624                           ; 1 bytes @ 0x0
  3625  00A0                     	ds	1
  3626  00A1                     tmr_fire@meas_dur:	
  3627                           
  3628                           ; 1 bytes @ 0x1
  3629  00A1                     	ds	1
  3630  00A2                     tmr_fire@temp32:	
  3631                           
  3632                           ; 4 bytes @ 0x2
  3633  00A2                     	ds	4
  3634  00A6                     tmr_fire@pres32:	
  3635                           
  3636                           ; 4 bytes @ 0x6
  3637  00A6                     	ds	4
  3638  00AA                     tmr_fire@ucomp_data:	
  3639                           
  3640                           ; 8 bytes @ 0xA
  3641  00AA                     	ds	8
  3642  00B2                     ??_EUSART1_Initialize:	
  3643  00B2                     ??_PMD_Initialize:	
  3644                           ; 1 bytes @ 0x12
  3645                           
  3646  00B2                     ??_PIN_MANAGER_Initialize:	
  3647                           ; 1 bytes @ 0x12
  3648                           
  3649  00B2                     ??_OSCILLATOR_Initialize:	
  3650                           ; 1 bytes @ 0x12
  3651                           
  3652  00B2                     ??_ADC_Initialize:	
  3653                           ; 1 bytes @ 0x12
  3654                           
  3655  00B2                     ?_TMR0_SetInterruptHandler:	
  3656                           ; 1 bytes @ 0x12
  3657                           
  3658  00B2                     ??_TMR0_StartTimer:	
  3659                           ; 1 bytes @ 0x12
  3660                           
  3661  00B2                     ??_null_ptr_check:	
  3662                           ; 1 bytes @ 0x12
  3663                           
  3664  00B2                     ?_interleave_data:	
  3665                           ; 1 bytes @ 0x12
  3666                           
  3667  00B2                     ??_spi1_exchangeByte:	
  3668                           ; 1 bytes @ 0x12
  3669                           
  3670  00B2                     ?_BMP280_delay_msek:	
  3671                           ; 1 bytes @ 0x12
  3672                           
  3673  00B2                     ?___wmul:	
  3674                           ; 1 bytes @ 0x12
  3675                           
  3676  00B2                     spi1_exchangeByte@b:	
  3677                           ; 2 bytes @ 0x12
  3678                           
  3679  00B2                     interleave_data@temp_buff:	
  3680                           ; 1 bytes @ 0x12
  3681                           
  3682  00B2                     TMR0_SetInterruptHandler@InterruptHandler:	
  3683                           ; 1 bytes @ 0x12
  3684                           
  3685  00B2                     ___wmul@multiplier:	
  3686                           ; 2 bytes @ 0x12
  3687                           
  3688  00B2                     BMP280_delay_msek@msek:	
  3689                           ; 2 bytes @ 0x12
  3690                           
  3691                           
  3692                           ; 4 bytes @ 0x12
  3693  00B2                     	ds	1
  3694  00B3                     ?_BMP280_SPI_bus_read:	
  3695  00B3                     ?_BMP280_SPI_bus_write:	
  3696                           ; 1 bytes @ 0x13
  3697                           
  3698  00B3                     BMP280_SPI_bus_read@dev_addr:	
  3699                           ; 1 bytes @ 0x13
  3700                           
  3701  00B3                     BMP280_SPI_bus_write@dev_addr:	
  3702                           ; 1 bytes @ 0x13
  3703                           
  3704  00B3                     interleave_data@reg_data:	
  3705                           ; 1 bytes @ 0x13
  3706                           
  3707                           
  3708                           ; 1 bytes @ 0x13
  3709  00B3                     	ds	1
  3710  00B4                     ??_TMR0_Initialize:	
  3711  00B4                     ??_TMR0_SetInterruptHandler:	
  3712                           ; 1 bytes @ 0x14
  3713                           
  3714  00B4                     ??_SYSTEM_Initialize:	
  3715                           ; 1 bytes @ 0x14
  3716                           
  3717  00B4                     BMP280_SPI_bus_read@reg_addr:	
  3718                           ; 1 bytes @ 0x14
  3719                           
  3720  00B4                     BMP280_SPI_bus_write@reg_addr:	
  3721                           ; 1 bytes @ 0x14
  3722                           
  3723  00B4                     null_ptr_check@rslt:	
  3724                           ; 1 bytes @ 0x14
  3725                           
  3726  00B4                     interleave_data@len:	
  3727                           ; 1 bytes @ 0x14
  3728                           
  3729  00B4                     ___wmul@multiplicand:	
  3730                           ; 1 bytes @ 0x14
  3731                           
  3732                           
  3733                           ; 2 bytes @ 0x14
  3734  00B4                     	ds	1
  3735  00B5                     ??_interleave_data:	
  3736  00B5                     null_ptr_check@dev:	
  3737                           ; 1 bytes @ 0x15
  3738                           
  3739  00B5                     BMP280_SPI_bus_read@reg_data:	
  3740                           ; 1 bytes @ 0x15
  3741                           
  3742  00B5                     BMP280_SPI_bus_write@reg_data:	
  3743                           ; 2 bytes @ 0x15
  3744                           
  3745                           
  3746                           ; 2 bytes @ 0x15
  3747  00B5                     	ds	1
  3748  00B6                     ??_BMP280_delay_msek:	
  3749  00B6                     ??___wmul:	
  3750                           ; 1 bytes @ 0x16
  3751                           
  3752  00B6                     ___wmul@product:	
  3753                           ; 1 bytes @ 0x16
  3754                           
  3755  00B6                     BMP280_delay_msek@i:	
  3756                           ; 2 bytes @ 0x16
  3757                           
  3758                           
  3759                           ; 4 bytes @ 0x16
  3760  00B6                     	ds	1
  3761  00B7                     BMP280_SPI_bus_read@cnt:	
  3762  00B7                     BMP280_SPI_bus_write@cnt:	
  3763                           ; 1 bytes @ 0x17
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0x17
  3767  00B7                     	ds	1
  3768  00B8                     ??_spi1_master_open:	
  3769  00B8                     ??_BMP280_SPI_bus_read:	
  3770                           ; 1 bytes @ 0x18
  3771                           
  3772  00B8                     ??_BMP280_SPI_bus_write:	
  3773                           ; 1 bytes @ 0x18
  3774                           
  3775  00B8                     interleave_data@reg_addr:	
  3776                           ; 1 bytes @ 0x18
  3777                           
  3778                           
  3779                           ; 1 bytes @ 0x18
  3780  00B8                     	ds	1
  3781  00B9                     interleave_data@index:	
  3782                           
  3783                           ; 1 bytes @ 0x19
  3784  00B9                     	ds	1
  3785  00BA                     BMP280_SPI_bus_write@iError:	
  3786                           
  3787                           ; 4 bytes @ 0x1A
  3788  00BA                     	ds	2
  3789  00BC                     spi1_master_open@spiUniqueConfiguration:	
  3790                           
  3791                           ; 1 bytes @ 0x1C
  3792  00BC                     	ds	1
  3793  00BD                     ??_bmp280_get_regs:	
  3794                           
  3795                           ; 1 bytes @ 0x1D
  3796  00BD                     	ds	1
  3797  00BE                     BMP280_SPI_bus_write@i:	
  3798                           
  3799                           ; 1 bytes @ 0x1E
  3800  00BE                     	ds	1
  3801  00BF                     ?_bmp280_set_regs:	
  3802  00BF                     bmp280_set_regs@reg_data:	
  3803                           ; 1 bytes @ 0x1F
  3804                           
  3805                           
  3806                           ; 1 bytes @ 0x1F
  3807  00BF                     	ds	1
  3808  00C0                     bmp280_get_regs@reg_addr:	
  3809  00C0                     bmp280_set_regs@len:	
  3810                           ; 1 bytes @ 0x20
  3811                           
  3812                           
  3813                           ; 1 bytes @ 0x20
  3814  00C0                     	ds	1
  3815  00C1                     bmp280_get_regs@rslt:	
  3816  00C1                     bmp280_set_regs@dev:	
  3817                           ; 1 bytes @ 0x21
  3818                           
  3819                           
  3820                           ; 1 bytes @ 0x21
  3821  00C1                     	ds	1
  3822  00C2                     ?_bmp280_get_config:	
  3823  00C2                     ??_get_calib_param:	
  3824                           ; 1 bytes @ 0x22
  3825                           
  3826  00C2                     ??_bmp280_set_regs:	
  3827                           ; 1 bytes @ 0x22
  3828                           
  3829  00C2                     bmp280_get_config@dev:	
  3830                           ; 1 bytes @ 0x22
  3831                           
  3832                           
  3833                           ; 1 bytes @ 0x22
  3834  00C2                     	ds	1
  3835  00C3                     ??_bmp280_get_config:	
  3836                           
  3837                           ; 1 bytes @ 0x23
  3838  00C3                     	ds	2
  3839  00C5                     bmp280_set_regs@temp_buff:	
  3840                           
  3841                           ; 8 bytes @ 0x25
  3842  00C5                     	ds	1
  3843  00C6                     bmp280_get_config@rslt:	
  3844                           
  3845                           ; 1 bytes @ 0x26
  3846  00C6                     	ds	1
  3847  00C7                     bmp280_get_config@temp:	
  3848                           
  3849                           ; 2 bytes @ 0x27
  3850  00C7                     	ds	2
  3851  00C9                     bmp280_get_config@conf:	
  3852                           
  3853                           ; 1 bytes @ 0x29
  3854  00C9                     	ds	4
  3855  00CD                     bmp280_set_regs@temp_len:	
  3856                           
  3857                           ; 2 bytes @ 0x2D
  3858  00CD                     	ds	2
  3859  00CF                     bmp280_set_regs@reg_addr_cnt:	
  3860                           
  3861                           ; 1 bytes @ 0x2F
  3862  00CF                     	ds	1
  3863  00D0                     bmp280_set_regs@rslt:	
  3864                           
  3865                           ; 1 bytes @ 0x30
  3866  00D0                     	ds	1
  3867  00D1                     bmp280_set_regs@reg_addr:	
  3868                           
  3869                           ; 1 bytes @ 0x31
  3870  00D1                     	ds	1
  3871  00D2                     ??_bmp280_soft_reset:	
  3872                           
  3873                           ; 1 bytes @ 0x32
  3874  00D2                     	ds	3
  3875  00D5                     bmp280_set_config@conf:	
  3876                           
  3877                           ; 1 bytes @ 0x35
  3878  00D5                     	ds	1
  3879                           
  3880                           	psect	cstackCOMMON
  3881  0070                     __pcstackCOMMON:	
  3882  0070                     ?_spi1_master_open:	
  3883  0070                     ?_EUSART1_Initialize:	
  3884                           ; 1 bit 
  3885                           
  3886  0070                     ?_EUSART1_Write:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ?_PMD_Initialize:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ?_PIN_MANAGER_Initialize:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?_OSCILLATOR_Initialize:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ?_ADC_Initialize:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?_TMR0_Initialize:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_bmp280_compute_meas_time:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?_TMR0_StartTimer:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     ?_bmp280_init:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ?_null_ptr_check:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_get_calib_param:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ?_TMR0_DefaultInterruptHandler:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     ??_TMR0_DefaultInterruptHandler:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     ?_TMR0_CallBack:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     ?_spi1_exchangeByte:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0070                     ?_SYSTEM_Initialize:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0070                     ?_tmr_fire:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0070                     ?_main:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0070                     ?_bmp280_soft_reset:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0070                     ?_TMR0_ISR:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0070                     ?_INTERRUPT_InterruptManager:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0070                     ?i1_spi1_exchangeByte:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0070                     ??i1_spi1_exchangeByte:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0070                     ?i1_null_ptr_check:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958  0070                     ??i1_null_ptr_check:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  0070                     ?___lmul:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964  0070                     ?___lldiv:	
  3965                           ; 4 bytes @ 0x0
  3966                           
  3967  0070                     EUSART1_Write@txData:	
  3968                           ; 4 bytes @ 0x0
  3969                           
  3970  0070                     i1spi1_exchangeByte@b:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  0070                     ___lmul@multiplier:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  0070                     ___lldiv@divisor:	
  3977                           ; 4 bytes @ 0x0
  3978                           
  3979                           
  3980                           ; 4 bytes @ 0x0
  3981  0070                     	ds	1
  3982  0071                     ??_EUSART1_Write:	
  3983  0071                     ?i1_BMP280_SPI_bus_read:	
  3984                           ; 1 bytes @ 0x1
  3985                           
  3986  0071                     i1BMP280_SPI_bus_read@dev_addr:	
  3987                           ; 1 bytes @ 0x1
  3988                           
  3989                           
  3990                           ; 1 bytes @ 0x1
  3991  0071                     	ds	1
  3992  0072                     i1BMP280_SPI_bus_read@reg_addr:	
  3993  0072                     i1null_ptr_check@rslt:	
  3994                           ; 1 bytes @ 0x2
  3995                           
  3996                           
  3997                           ; 1 bytes @ 0x2
  3998  0072                     	ds	1
  3999  0073                     i1null_ptr_check@dev:	
  4000  0073                     i1BMP280_SPI_bus_read@reg_data:	
  4001                           ; 1 bytes @ 0x3
  4002                           
  4003                           
  4004                           ; 2 bytes @ 0x3
  4005  0073                     	ds	1
  4006  0074                     ___lmul@multiplicand:	
  4007  0074                     ___lldiv@dividend:	
  4008                           ; 4 bytes @ 0x4
  4009                           
  4010                           
  4011                           ; 4 bytes @ 0x4
  4012  0074                     	ds	1
  4013  0075                     i1BMP280_SPI_bus_read@cnt:	
  4014                           
  4015                           ; 1 bytes @ 0x5
  4016  0075                     	ds	1
  4017  0076                     ??i1_BMP280_SPI_bus_read:	
  4018                           
  4019                           ; 1 bytes @ 0x6
  4020  0076                     	ds	2
  4021  0078                     ??___lmul:	
  4022  0078                     ??___lldiv:	
  4023                           ; 1 bytes @ 0x8
  4024                           
  4025  0078                     ___lmul@product:	
  4026                           ; 1 bytes @ 0x8
  4027                           
  4028                           
  4029                           ; 4 bytes @ 0x8
  4030  0078                     	ds	1
  4031  0079                     ___lldiv@quotient:	
  4032                           
  4033                           ; 4 bytes @ 0x9
  4034  0079                     	ds	2
  4035  007B                     ??i1_bmp280_get_regs:	
  4036                           
  4037                           ; 1 bytes @ 0xB
  4038  007B                     	ds	2
  4039  007D                     ___lldiv@counter:	
  4040                           
  4041                           ; 1 bytes @ 0xD
  4042  007D                     	ds	1
  4043  007E                     ??_TMR0_CallBack:	
  4044  007E                     ??_TMR0_ISR:	
  4045                           ; 1 bytes @ 0xE
  4046                           
  4047  007E                     ??_INTERRUPT_InterruptManager:	
  4048                           ; 1 bytes @ 0xE
  4049                           
  4050                           
  4051                           	psect	cstackBANK0
  4052  0020                     __pcstackBANK0:	
  4053                           ; 1 bytes @ 0xE
  4054                           
  4055  0020                     ??_bmp280_compute_meas_time:	
  4056  0020                     ?_bmp280_comp_temp_32bit:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0020                     ?_bmp280_comp_pres_32bit:	
  4060                           ; 4 bytes @ 0x0
  4061                           
  4062  0020                     bmp280_comp_temp_32bit@uncomp_temp:	
  4063                           ; 4 bytes @ 0x0
  4064                           
  4065  0020                     bmp280_comp_pres_32bit@uncomp_pres:	
  4066                           ; 4 bytes @ 0x0
  4067                           
  4068  0020                     i1BMP280_SPI_bus_read@array:	
  4069                           ; 4 bytes @ 0x0
  4070                           
  4071                           
  4072                           ; 30 bytes @ 0x0
  4073  0020                     	ds	4
  4074  0024                     bmp280_comp_temp_32bit@dev:	
  4075  0024                     bmp280_comp_pres_32bit@dev:	
  4076                           ; 1 bytes @ 0x4
  4077                           
  4078                           
  4079                           ; 1 bytes @ 0x4
  4080  0024                     	ds	1
  4081  0025                     ??_bmp280_comp_temp_32bit:	
  4082  0025                     ??_bmp280_comp_pres_32bit:	
  4083                           ; 1 bytes @ 0x5
  4084                           
  4085                           
  4086                           ; 1 bytes @ 0x5
  4087  0025                     	ds	11
  4088  0030                     bmp280_compute_meas_time@t_dur:	
  4089                           
  4090                           ; 4 bytes @ 0x10
  4091  0030                     	ds	4
  4092  0034                     bmp280_compute_meas_time@p_dur:	
  4093                           
  4094                           ; 4 bytes @ 0x14
  4095  0034                     	ds	4
  4096  0038                     bmp280_comp_pres_32bit@rslt:	
  4097  0038                     bmp280_compute_meas_time@p_startup:	
  4098                           ; 1 bytes @ 0x18
  4099                           
  4100                           
  4101                           ; 4 bytes @ 0x18
  4102  0038                     	ds	1
  4103  0039                     _bmp280_comp_pres_32bit$1773:	
  4104                           
  4105                           ; 4 bytes @ 0x19
  4106  0039                     	ds	3
  4107  003C                     _bmp280_compute_meas_time$1111:	
  4108                           
  4109                           ; 2 bytes @ 0x1C
  4110  003C                     	ds	1
  4111  003D                     bmp280_comp_temp_32bit@var1:	
  4112  003D                     bmp280_comp_pres_32bit@var2:	
  4113                           ; 4 bytes @ 0x1D
  4114                           
  4115                           
  4116                           ; 4 bytes @ 0x1D
  4117  003D                     	ds	1
  4118  003E                     bmp280_compute_meas_time@rslt:	
  4119  003E                     i1BMP280_SPI_bus_read@iError:	
  4120                           ; 1 bytes @ 0x1E
  4121                           
  4122                           
  4123                           ; 4 bytes @ 0x1E
  4124  003E                     	ds	1
  4125  003F                     bmp280_compute_meas_time@period:	
  4126                           
  4127                           ; 4 bytes @ 0x1F
  4128  003F                     	ds	2
  4129  0041                     bmp280_comp_temp_32bit@var2:	
  4130  0041                     bmp280_comp_pres_32bit@pressure:	
  4131                           ; 4 bytes @ 0x21
  4132                           
  4133                           
  4134                           ; 4 bytes @ 0x21
  4135  0041                     	ds	1
  4136  0042                     i1BMP280_SPI_bus_read@stringpos:	
  4137                           
  4138                           ; 1 bytes @ 0x22
  4139  0042                     	ds	1
  4140  0043                     bmp280_compute_meas_time@dev:	
  4141  0043                     i1BMP280_SPI_bus_read@i:	
  4142                           ; 1 bytes @ 0x23
  4143                           
  4144                           
  4145                           ; 1 bytes @ 0x23
  4146  0043                     	ds	1
  4147  0044                     ?i1_bmp280_get_regs:	
  4148  0044                     i1bmp280_get_regs@reg_data:	
  4149                           ; 1 bytes @ 0x24
  4150                           
  4151                           
  4152                           ; 2 bytes @ 0x24
  4153  0044                     	ds	1
  4154  0045                     bmp280_comp_pres_32bit@var1:	
  4155  0045                     _bmp280_comp_temp_32bit$1772:	
  4156                           ; 4 bytes @ 0x25
  4157                           
  4158                           
  4159                           ; 4 bytes @ 0x25
  4160  0045                     	ds	1
  4161  0046                     i1bmp280_get_regs@len:	
  4162                           
  4163                           ; 1 bytes @ 0x26
  4164  0046                     	ds	1
  4165  0047                     i1bmp280_get_regs@dev:	
  4166                           
  4167                           ; 1 bytes @ 0x27
  4168  0047                     	ds	1
  4169  0048                     i1bmp280_get_regs@reg_addr:	
  4170                           
  4171                           ; 1 bytes @ 0x28
  4172  0048                     	ds	1
  4173  0049                     i1bmp280_get_regs@rslt:	
  4174  0049                     bmp280_comp_temp_32bit@temperature:	
  4175                           ; 1 bytes @ 0x29
  4176                           
  4177                           
  4178                           ; 4 bytes @ 0x29
  4179  0049                     	ds	1
  4180  004A                     ?_bmp280_get_uncomp_data:	
  4181  004A                     bmp280_get_uncomp_data@dev:	
  4182                           ; 1 bytes @ 0x2A
  4183                           
  4184                           
  4185                           ; 1 bytes @ 0x2A
  4186  004A                     	ds	1
  4187  004B                     ??_bmp280_get_uncomp_data:	
  4188                           
  4189                           ; 1 bytes @ 0x2B
  4190  004B                     	ds	2
  4191  004D                     bmp280_comp_temp_32bit@rslt:	
  4192                           
  4193                           ; 1 bytes @ 0x2D
  4194  004D                     	ds	11
  4195  0058                     bmp280_get_uncomp_data@temp:	
  4196                           
  4197                           ; 6 bytes @ 0x38
  4198  0058                     	ds	6
  4199  005E                     bmp280_get_uncomp_data@rslt:	
  4200                           
  4201                           ; 1 bytes @ 0x3E
  4202  005E                     	ds	1
  4203  005F                     bmp280_get_uncomp_data@uncomp_data:	
  4204                           
  4205                           ; 1 bytes @ 0x3F
  4206  005F                     	ds	1
  4207  0060                     ??_tmr_fire:	
  4208                           
  4209                           ; 1 bytes @ 0x40
  4210  0060                     	ds	6
  4211                           
  4212                           	psect	maintext
  4213  0CAB                     __pmaintext:	
  4214 ;;
  4215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4216 ;;
  4217 ;; *************** function _main *****************
  4218 ;; Defined at:
  4219 ;;		line 123 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  conf            5    3[BANK3 ] struct bmp280_config
  4224 ;;  tx              2    0[BANK3 ] unsigned char [2]
  4225 ;;  rslt            1    2[BANK3 ] char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : B3F/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Totals:         0       0       0       2       8       0       0       0       0       0       0       0       
      +0       0
  4239 ;;Total ram usage:       10 bytes
  4240 ;; Hardware stack levels required when called:   14
  4241 ;; This function calls:
  4242 ;;		_BMP280_SPI_bus_write
  4243 ;;		_SYSTEM_Initialize
  4244 ;;		_TMR0_SetInterruptHandler
  4245 ;;		_TMR0_StartTimer
  4246 ;;		_bmp280_get_config
  4247 ;;		_bmp280_init
  4248 ;;		_bmp280_set_config
  4249 ;;		_bmp280_set_power_mode
  4250 ;;		_spi1_master_open
  4251 ;; This function is called by:
  4252 ;;		Startup code after reset
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _main
  4258  0CAB                     _main:	
  4259                           
  4260                           ;main.c: 125: SYSTEM_Initialize();
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4264  0CAB  3196  269D  318C   	fcall	_SYSTEM_Initialize
  4265                           
  4266                           ;main.c: 126: INTCONbits.GIE = 1;
  4267  0CAE  178B               	bsf	11,7	;volatile
  4268                           
  4269                           ;main.c: 127: INTCONbits.PEIE = 1;
  4270  0CAF  170B               	bsf	11,6	;volatile
  4271                           
  4272                           ;main.c: 128: TMR0_SetInterruptHandler(tmr_fire);
  4273  0CB0  30AD               	movlw	low _tmr_fire
  4274  0CB1  0141               	movlb	1	; select bank1
  4275  0CB2  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4276  0CB3  3005               	movlw	high _tmr_fire
  4277  0CB4  00B3               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4278  0CB5  3196  262D  318C   	fcall	_TMR0_SetInterruptHandler
  4279                           
  4280                           ;main.c: 129: TMR0_StartTimer();
  4281  0CB8  3196  2626  318C   	fcall	_TMR0_StartTimer
  4282                           
  4283                           ;main.c: 130: spi1_master_open(CUSTOM0);
  4284  0CBB  3000               	movlw	0
  4285  0CBC  3189  218F  318C   	fcall	_spi1_master_open
  4286                           
  4287                           ;main.c: 132: do { LATAbits.LATA2 = 1; } while(0);
  4288  0CBF  0140               	movlb	0	; select bank0
  4289  0CC0  1518               	bsf	24,2	;volatile
  4290                           
  4291                           ;main.c: 133: _delay((unsigned long)((10)*(4000000/4000.0)));
  4292  0CC1  300D               	movlw	13
  4293  0CC2  0142               	movlb	2	; select bank2
  4294  0CC3  00E7               	movwf	??_main^(0+256)
  4295  0CC4  30FB               	movlw	251
  4296  0CC5                     u5897:	
  4297  0CC5  0B89               	decfsz	9,f
  4298  0CC6  2CC5               	goto	u5897
  4299  0CC7  0BE7               	decfsz	??_main^(0+256),f
  4300  0CC8  2CC5               	goto	u5897
  4301  0CC9  3200               	nop2
  4302                           
  4303                           ;main.c: 134: char tx[] = {0x60, 0xB6};
  4304  0CCA  0142               	movlb	2	; select bank2
  4305  0CCB  086C               	movf	(main@F6584+1)^(0+256),w
  4306  0CCC  0143               	movlb	3	; select bank3
  4307  0CCD  00E3               	movwf	(main@tx+1)^(0+384)
  4308  0CCE  0142               	movlb	2	; select bank2
  4309  0CCF  086B               	movf	main@F6584^(0+256),w
  4310  0CD0  0143               	movlb	3	; select bank3
  4311  0CD1  00E2               	movwf	main@tx^(0+384)
  4312                           
  4313                           ;main.c: 135: BMP280_SPI_bus_write(0x00, 0x00, &tx, 2);
  4314  0CD2  0141               	movlb	1	; select bank1
  4315  0CD3  01B3               	clrf	BMP280_SPI_bus_write@dev_addr^(0+128)
  4316  0CD4  01B4               	clrf	BMP280_SPI_bus_write@reg_addr^(0+128)
  4317  0CD5  30E2               	movlw	low main@tx
  4318  0CD6  00B5               	movwf	BMP280_SPI_bus_write@reg_data^(0+128)
  4319  0CD7  3001               	movlw	high main@tx
  4320  0CD8  00B6               	movwf	(BMP280_SPI_bus_write@reg_data+1)^(0+128)
  4321  0CD9  3002               	movlw	2
  4322  0CDA  0142               	movlb	2	; select bank2
  4323  0CDB  00E7               	movwf	??_main^(0+256)
  4324  0CDC  0867               	movf	??_main^(0+256),w
  4325  0CDD  0141               	movlb	1	; select bank1
  4326  0CDE  00B7               	movwf	BMP280_SPI_bus_write@cnt^(0+128)
  4327  0CDF  3188  201C  318C   	fcall	_BMP280_SPI_bus_write
  4328                           
  4329                           ;main.c: 137: int8_t rslt;;main.c: 138: bmp.dev_id = 0;
  4330  0CE2  0143               	movlb	3	; select bank3
  4331  0CE3  01B9               	clrf	(_bmp^(0+384)+1)
  4332                           
  4333                           ;main.c: 139: bmp.intf = (unsigned char) 0;
  4334  0CE4  01BA               	clrf	(_bmp^(0+384)+2)
  4335                           
  4336                           ;main.c: 140: bmp.read = BMP280_SPI_bus_read;
  4337  0CE5  3064               	movlw	low _BMP280_SPI_bus_read
  4338  0CE6  00BB               	movwf	(low ((_bmp| (0+256)+3)))^(0+128)
  4339  0CE7  300A               	movlw	high _BMP280_SPI_bus_read
  4340  0CE8  00BC               	movwf	((low ((_bmp| (0+256)+3)))^(0+128)+1)
  4341                           
  4342                           ;main.c: 141: bmp.write = BMP280_SPI_bus_write;
  4343  0CE9  301C               	movlw	low _BMP280_SPI_bus_write
  4344  0CEA  00BD               	movwf	(low ((_bmp| (0+256)+5)))^(0+128)
  4345  0CEB  3008               	movlw	high _BMP280_SPI_bus_write
  4346  0CEC  00BE               	movwf	((low ((_bmp| (0+256)+5)))^(0+128)+1)
  4347                           
  4348                           ;main.c: 142: bmp.delay_ms = BMP280_delay_msek;
  4349  0CED  307A               	movlw	low _BMP280_delay_msek
  4350  0CEE  00BF               	movwf	(low ((_bmp| (0+256)+7)))^(0+128)
  4351  0CEF  3017               	movlw	high _BMP280_delay_msek
  4352  0CF0  00C0               	movwf	((low ((_bmp| (0+256)+7)))^(0+128)+1)
  4353                           
  4354                           ;main.c: 144: rslt = bmp280_init(&bmp);
  4355  0CF1  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4356  0CF2  318B  237C  318C   	fcall	_bmp280_init
  4357  0CF5  0142               	movlb	2	; select bank2
  4358  0CF6  00E7               	movwf	??_main^(0+256)
  4359  0CF7  0867               	movf	??_main^(0+256),w
  4360  0CF8  0143               	movlb	3	; select bank3
  4361  0CF9  00E4               	movwf	main@rslt^(0+384)
  4362                           
  4363                           ;main.c: 146: struct bmp280_config conf;;main.c: 148: rslt = bmp280_get_config(&conf, &b
      +                          mp);
  4364  0CFA  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4365  0CFB  0142               	movlb	2	; select bank2
  4366  0CFC  00E7               	movwf	??_main^(0+256)
  4367  0CFD  0867               	movf	??_main^(0+256),w
  4368  0CFE  0141               	movlb	1	; select bank1
  4369  0CFF  00C2               	movwf	bmp280_get_config@dev^(0+128)
  4370  0D00  30E5               	movlw	(low (main@conf| (0+256)))& (0+255)
  4371  0D01  318A  22F0  318C   	fcall	_bmp280_get_config
  4372  0D04  0142               	movlb	2	; select bank2
  4373  0D05  00E8               	movwf	(??_main+1)^(0+256)
  4374  0D06  0868               	movf	(??_main+1)^(0+256),w
  4375  0D07  0143               	movlb	3	; select bank3
  4376  0D08  00E4               	movwf	main@rslt^(0+384)
  4377                           
  4378                           ;main.c: 150: conf.filter = (unsigned char) 0x01;
  4379  0D09  01E8               	clrf	(main@conf^(0+384)+3)
  4380  0D0A  0AE8               	incf	(main@conf^(0+384)+3),f
  4381                           
  4382                           ;main.c: 151: conf.os_pres = (unsigned char) 0x05;
  4383  0D0B  3005               	movlw	5
  4384  0D0C  0142               	movlb	2	; select bank2
  4385  0D0D  00E7               	movwf	??_main^(0+256)
  4386  0D0E  0867               	movf	??_main^(0+256),w
  4387  0D0F  0143               	movlb	3	; select bank3
  4388  0D10  00E6               	movwf	(main@conf^(0+384)+1)
  4389                           
  4390                           ;main.c: 152: conf.os_temp = (unsigned char) 0x01;
  4391  0D11  01E5               	clrf	main@conf^(0+384)
  4392  0D12  0AE5               	incf	main@conf^(0+384),f
  4393                           
  4394                           ;main.c: 153: conf.odr = (unsigned char) 0x00;
  4395  0D13  01E7               	clrf	(main@conf^(0+384)+2)
  4396                           
  4397                           ;main.c: 155: rslt = bmp280_set_config(&conf, &bmp);
  4398  0D14  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4399  0D15  0142               	movlb	2	; select bank2
  4400  0D16  00E7               	movwf	??_main^(0+256)
  4401  0D17  0867               	movf	??_main^(0+256),w
  4402  0D18  00D4               	movwf	bmp280_set_config@dev^(0+256)
  4403  0D19  30E5               	movlw	(low (main@conf| (0+256)))& (0+255)
  4404  0D1A  3196  268E  318C   	fcall	_bmp280_set_config
  4405  0D1D  0142               	movlb	2	; select bank2
  4406  0D1E  00E8               	movwf	(??_main+1)^(0+256)
  4407  0D1F  0868               	movf	(??_main+1)^(0+256),w
  4408  0D20  0143               	movlb	3	; select bank3
  4409  0D21  00E4               	movwf	main@rslt^(0+384)
  4410                           
  4411                           ;main.c: 157: rslt = bmp280_get_config(&conf, &bmp);
  4412  0D22  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4413  0D23  0142               	movlb	2	; select bank2
  4414  0D24  00E7               	movwf	??_main^(0+256)
  4415  0D25  0867               	movf	??_main^(0+256),w
  4416  0D26  0141               	movlb	1	; select bank1
  4417  0D27  00C2               	movwf	bmp280_get_config@dev^(0+128)
  4418  0D28  30E5               	movlw	(low (main@conf| (0+256)))& (0+255)
  4419  0D29  318A  22F0  318C   	fcall	_bmp280_get_config
  4420  0D2C  0142               	movlb	2	; select bank2
  4421  0D2D  00E8               	movwf	(??_main+1)^(0+256)
  4422  0D2E  0868               	movf	(??_main+1)^(0+256),w
  4423  0D2F  0143               	movlb	3	; select bank3
  4424  0D30  00E4               	movwf	main@rslt^(0+384)
  4425                           
  4426                           ;main.c: 159: rslt = bmp280_set_power_mode((unsigned char) 0x03, &bmp);
  4427  0D31  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4428  0D32  0142               	movlb	2	; select bank2
  4429  0D33  00E7               	movwf	??_main^(0+256)
  4430  0D34  0867               	movf	??_main^(0+256),w
  4431  0D35  00D4               	movwf	bmp280_set_power_mode@dev^(0+256)
  4432  0D36  3003               	movlw	3
  4433  0D37  3196  26E9  318C   	fcall	_bmp280_set_power_mode
  4434  0D3A  0142               	movlb	2	; select bank2
  4435  0D3B  00E8               	movwf	(??_main+1)^(0+256)
  4436  0D3C  0868               	movf	(??_main+1)^(0+256),w
  4437  0D3D  0143               	movlb	3	; select bank3
  4438  0D3E  00E4               	movwf	main@rslt^(0+384)
  4439                           
  4440                           ;main.c: 161: rslt = bmp280_get_config(&conf, &bmp);
  4441  0D3F  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  4442  0D40  0142               	movlb	2	; select bank2
  4443  0D41  00E7               	movwf	??_main^(0+256)
  4444  0D42  0867               	movf	??_main^(0+256),w
  4445  0D43  0141               	movlb	1	; select bank1
  4446  0D44  00C2               	movwf	bmp280_get_config@dev^(0+128)
  4447  0D45  30E5               	movlw	(low (main@conf| (0+256)))& (0+255)
  4448  0D46  318A  22F0  318C   	fcall	_bmp280_get_config
  4449  0D49  0142               	movlb	2	; select bank2
  4450  0D4A  00E8               	movwf	(??_main+1)^(0+256)
  4451  0D4B  0868               	movf	(??_main+1)^(0+256),w
  4452  0D4C  0143               	movlb	3	; select bank3
  4453  0D4D  00E4               	movwf	main@rslt^(0+384)
  4454  0D4E                     l311:	
  4455                           ;main.c: 163: while(1){
  4456                           
  4457  0D4E  2D4E               	goto	l311
  4458  0D4F                     __end_of_main:	
  4459                           ;main.c: 165: };main.c: 168: return;
  4460                           
  4461                           
  4462                           	psect	text1
  4463  098F                     __ptext1:	
  4464 ;; *************** function _spi1_master_open *****************
  4465 ;; Defined at:
  4466 ;;		line 45 in file "mcc_generated_files/spi1_driver.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  spiUniqueCon    1    wreg     enum E6352
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  spiUniqueCon    1   28[BANK1 ] enum E6352
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;Total ram usage:        5 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    9
  4487 ;; This function calls:
  4488 ;;		___wmul
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function _spi1_master_open
  4496  098F                     _spi1_master_open:	
  4497                           
  4498                           ;incstack = 0
  4499                           ; Regs used in _spi1_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4500                           ;spi1_master_open@spiUniqueConfiguration stored from wreg
  4501  098F  0141               	movlb	1	; select bank1
  4502  0990  00BC               	movwf	spi1_master_open@spiUniqueConfiguration^(0+128)
  4503                           
  4504                           ;spi1_driver.c: 47: if(!SSP1CON1bits.SSPEN)
  4505  0991  0143               	movlb	3	; select bank3
  4506  0992  1A90               	btfsc	16,5	;volatile
  4507  0993  0008               	return
  4508                           
  4509                           ;spi1_driver.c: 48: {;spi1_driver.c: 49: SSP1STAT = spi1_configuration[spiUniqueConfigur
      +                          ation].stat;
  4510  0994  0141               	movlb	1	; select bank1
  4511  0995  083C               	movf	spi1_master_open@spiUniqueConfiguration^(0+128),w
  4512  0996  00B8               	movwf	??_spi1_master_open^(0+128)
  4513  0997  01B9               	clrf	(??_spi1_master_open^(0+128)+1)
  4514  0998  0838               	movf	??_spi1_master_open^(0+128),w
  4515  0999  00B2               	movwf	___wmul@multiplier^(0+128)
  4516  099A  0839               	movf	(??_spi1_master_open+1)^(0+128),w
  4517  099B  00B3               	movwf	(___wmul@multiplier+1)^(0+128)
  4518  099C  3003               	movlw	3
  4519  099D  00B4               	movwf	___wmul@multiplicand^(0+128)
  4520  099E  3000               	movlw	0
  4521  099F  00B5               	movwf	(___wmul@multiplicand^(0+128)+1)
  4522  09A0  3187  27E3  3189   	fcall	___wmul
  4523  09A3  0141               	movlb	1	; select bank1
  4524  09A4  0832               	movf	?___wmul^(0+128),w
  4525  09A5  3E01               	addlw	1
  4526  09A6  00BA               	movwf	(??_spi1_master_open+2)^(0+128)
  4527  09A7  3000               	movlw	0
  4528  09A8  3D33               	addwfc	(?___wmul+1)^(0+128),w
  4529  09A9  00BB               	movwf	(??_spi1_master_open+3)^(0+128)
  4530  09AA  300C               	movlw	low (_spi1_configuration| (0+32768))
  4531  09AB  073A               	addwf	(??_spi1_master_open+2)^(0+128),w
  4532  09AC  0084               	movwf	4
  4533  09AD  3098               	movlw	high (_spi1_configuration| (0+32768))
  4534  09AE  3D3B               	addwfc	(??_spi1_master_open+3)^(0+128),w
  4535  09AF  0085               	movwf	5
  4536  09B0  0800               	movf	0,w	;code access
  4537  09B1  0143               	movlb	3	; select bank3
  4538  09B2  008F               	movwf	15	;volatile
  4539                           
  4540                           ;spi1_driver.c: 50: SSP1CON1 = spi1_configuration[spiUniqueConfiguration].con1 | 0x2A;
  4541  09B3  0141               	movlb	1	; select bank1
  4542  09B4  083C               	movf	spi1_master_open@spiUniqueConfiguration^(0+128),w
  4543  09B5  00B8               	movwf	??_spi1_master_open^(0+128)
  4544  09B6  01B9               	clrf	(??_spi1_master_open^(0+128)+1)
  4545  09B7  0838               	movf	??_spi1_master_open^(0+128),w
  4546  09B8  00B2               	movwf	___wmul@multiplier^(0+128)
  4547  09B9  0839               	movf	(??_spi1_master_open+1)^(0+128),w
  4548  09BA  00B3               	movwf	(___wmul@multiplier+1)^(0+128)
  4549  09BB  3003               	movlw	3
  4550  09BC  00B4               	movwf	___wmul@multiplicand^(0+128)
  4551  09BD  3000               	movlw	0
  4552  09BE  00B5               	movwf	(___wmul@multiplicand^(0+128)+1)
  4553  09BF  3187  27E3  3189   	fcall	___wmul
  4554  09C2  0141               	movlb	1	; select bank1
  4555  09C3  0833               	movf	(?___wmul+1)^(0+128),w
  4556  09C4  0085               	movwf	5
  4557  09C5  0832               	movf	?___wmul^(0+128),w
  4558  09C6  0084               	movwf	4
  4559  09C7  300C               	movlw	low (_spi1_configuration| (0+32768))
  4560  09C8  0784               	addwf	4,f
  4561  09C9  3098               	movlw	high (_spi1_configuration| (0+32768))
  4562  09CA  3D85               	addwfc	5,f
  4563  09CB  0800               	movf	0,w	;code access
  4564  09CC  382A               	iorlw	42
  4565  09CD  0143               	movlb	3	; select bank3
  4566  09CE  0090               	movwf	16	;volatile
  4567                           
  4568                           ;spi1_driver.c: 51: SSP1CON2 = 0x00;
  4569  09CF  0191               	clrf	17	;volatile
  4570                           
  4571                           ;spi1_driver.c: 52: SSP1ADD = spi1_configuration[spiUniqueConfiguration].add | 0;
  4572  09D0  0141               	movlb	1	; select bank1
  4573  09D1  083C               	movf	spi1_master_open@spiUniqueConfiguration^(0+128),w
  4574  09D2  00B8               	movwf	??_spi1_master_open^(0+128)
  4575  09D3  01B9               	clrf	(??_spi1_master_open^(0+128)+1)
  4576  09D4  0838               	movf	??_spi1_master_open^(0+128),w
  4577  09D5  00B2               	movwf	___wmul@multiplier^(0+128)
  4578  09D6  0839               	movf	(??_spi1_master_open+1)^(0+128),w
  4579  09D7  00B3               	movwf	(___wmul@multiplier+1)^(0+128)
  4580  09D8  3003               	movlw	3
  4581  09D9  00B4               	movwf	___wmul@multiplicand^(0+128)
  4582  09DA  3000               	movlw	0
  4583  09DB  00B5               	movwf	(___wmul@multiplicand^(0+128)+1)
  4584  09DC  3187  27E3         	fcall	___wmul
  4585  09DE  0141               	movlb	1	; select bank1
  4586  09DF  0832               	movf	?___wmul^(0+128),w
  4587  09E0  3E02               	addlw	2
  4588  09E1  00BA               	movwf	(??_spi1_master_open+2)^(0+128)
  4589  09E2  3000               	movlw	0
  4590  09E3  3D33               	addwfc	(?___wmul+1)^(0+128),w
  4591  09E4  00BB               	movwf	(??_spi1_master_open+3)^(0+128)
  4592  09E5  300C               	movlw	low (_spi1_configuration| (0+32768))
  4593  09E6  073A               	addwf	(??_spi1_master_open+2)^(0+128),w
  4594  09E7  0084               	movwf	4
  4595  09E8  3098               	movlw	high (_spi1_configuration| (0+32768))
  4596  09E9  3D3B               	addwfc	(??_spi1_master_open+3)^(0+128),w
  4597  09EA  0085               	movwf	5
  4598  09EB  0800               	movf	0,w	;code access
  4599  09EC  0143               	movlb	3	; select bank3
  4600  09ED  008D               	movwf	13	;volatile
  4601                           
  4602                           ;spi1_driver.c: 54: TRISCbits.TRISC0 = 0;
  4603  09EE  0140               	movlb	0	; select bank0
  4604  09EF  1014               	bcf	20,0	;volatile
  4605                           
  4606                           ;spi1_driver.c: 55: return 1;;	Return value of _spi1_master_open is never used
  4607  09F0  0008               	return
  4608  09F1                     __end_of_spi1_master_open:	
  4609                           ;spi1_driver.c: 56: };spi1_driver.c: 57: return 0;;	Return value of _spi1_master_open is
      +                           never used
  4610                           
  4611                           
  4612                           	psect	text2
  4613  07E3                     __ptext2:	
  4614 ;; *************** function ___wmul *****************
  4615 ;; Defined at:
  4616 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  multiplier      2   18[BANK1 ] unsigned int 
  4619 ;;  multiplicand    2   20[BANK1 ] unsigned int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  product         2   22[BANK1 ] unsigned int 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2   18[BANK1 ] unsigned int 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4631 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;Total ram usage:        6 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    8
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_spi1_master_open
  4642 ;;		_spi1_slave_open
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function ___wmul
  4648  07E3                     ___wmul:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4652  07E3  0141               	movlb	1	; select bank1
  4653  07E4  01B6               	clrf	___wmul@product^(0+128)
  4654  07E5  01B7               	clrf	(___wmul@product+1)^(0+128)
  4655  07E6                     l3571:	
  4656  07E6  1C32               	btfss	___wmul@multiplier^(0+128),0
  4657  07E7  2FEC               	goto	l527
  4658  07E8  0834               	movf	___wmul@multiplicand^(0+128),w
  4659  07E9  07B6               	addwf	___wmul@product^(0+128),f
  4660  07EA  0835               	movf	(___wmul@multiplicand+1)^(0+128),w
  4661  07EB  3DB7               	addwfc	(___wmul@product+1)^(0+128),f
  4662  07EC                     l527:	
  4663  07EC  3001               	movlw	1
  4664  07ED                     u4695:	
  4665  07ED  35B4               	lslf	___wmul@multiplicand^(0+128),f
  4666  07EE  0DB5               	rlf	(___wmul@multiplicand+1)^(0+128),f
  4667  07EF  0B89               	decfsz	9,f
  4668  07F0  2FED               	goto	u4695
  4669  07F1  3001               	movlw	1
  4670  07F2                     u4705:	
  4671  07F2  36B3               	lsrf	(___wmul@multiplier+1)^(0+128),f
  4672  07F3  0CB2               	rrf	___wmul@multiplier^(0+128),f
  4673  07F4  0B89               	decfsz	9,f
  4674  07F5  2FF2               	goto	u4705
  4675  07F6  0832               	movf	___wmul@multiplier^(0+128),w
  4676  07F7  0433               	iorwf	(___wmul@multiplier+1)^(0+128),w
  4677  07F8  1D03               	btfss	3,2
  4678  07F9  2FE6               	goto	l3571
  4679  07FA  0837               	movf	(___wmul@product+1)^(0+128),w
  4680  07FB  00B3               	movwf	(?___wmul+1)^(0+128)
  4681  07FC  0836               	movf	___wmul@product^(0+128),w
  4682  07FD  00B2               	movwf	?___wmul^(0+128)
  4683  07FE  0008               	return
  4684  07FF                     __end_of___wmul:	
  4685                           
  4686                           	psect	text3
  4687  16E9                     __ptext3:	
  4688 ;; *************** function _bmp280_set_power_mode *****************
  4689 ;; Defined at:
  4690 ;;		line 344 in file "bmp280.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  mode            1    wreg     unsigned char 
  4693 ;;  dev             1   52[BANK2 ] PTR struct bmp280_dev
  4694 ;;		 -> bmp(42), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  mode            1   56[BANK2 ] unsigned char 
  4697 ;;  rslt            1   57[BANK2 ] char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      char 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:   13
  4714 ;; This function calls:
  4715 ;;		_conf_sensor
  4716 ;;		_null_ptr_check
  4717 ;; This function is called by:
  4718 ;;		_main
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _bmp280_set_power_mode
  4724  16E9                     _bmp280_set_power_mode:	
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _bmp280_set_power_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4728                           ;bmp280_set_power_mode@mode stored from wreg
  4729  16E9  0142               	movlb	2	; select bank2
  4730  16EA  00D8               	movwf	bmp280_set_power_mode@mode^(0+256)
  4731                           
  4732                           ;bmp280.c: 346: int8_t rslt;;bmp280.c: 348: rslt = null_ptr_check(dev);
  4733  16EB  0854               	movf	bmp280_set_power_mode@dev^(0+256),w
  4734  16EC  3197  272D  3196   	fcall	_null_ptr_check
  4735  16EF  0142               	movlb	2	; select bank2
  4736  16F0  00D5               	movwf	??_bmp280_set_power_mode^(0+256)
  4737  16F1  0855               	movf	??_bmp280_set_power_mode^(0+256),w
  4738  16F2  00D9               	movwf	bmp280_set_power_mode@rslt^(0+256)
  4739                           
  4740                           ;bmp280.c: 350: if (rslt == (0))
  4741  16F3  0859               	movf	bmp280_set_power_mode@rslt^(0+256),w
  4742  16F4  1D03               	btfss	3,2
  4743  16F5  2F06               	goto	l4171
  4744                           
  4745                           ;bmp280.c: 351: rslt = conf_sensor(mode, &dev->conf, dev);
  4746  16F6  0854               	movf	bmp280_set_power_mode@dev^(0+256),w
  4747  16F7  3E25               	addlw	37
  4748  16F8  00D5               	movwf	??_bmp280_set_power_mode^(0+256)
  4749  16F9  0855               	movf	??_bmp280_set_power_mode^(0+256),w
  4750  16FA  00C8               	movwf	conf_sensor@conf^(0+256)
  4751  16FB  0854               	movf	bmp280_set_power_mode@dev^(0+256),w
  4752  16FC  00D6               	movwf	(??_bmp280_set_power_mode+1)^(0+256)
  4753  16FD  0856               	movf	(??_bmp280_set_power_mode+1)^(0+256),w
  4754  16FE  00C9               	movwf	conf_sensor@dev^(0+256)
  4755  16FF  0858               	movf	bmp280_set_power_mode@mode^(0+256),w
  4756  1700  318D  25F7         	fcall	_conf_sensor
  4757  1702  0142               	movlb	2	; select bank2
  4758  1703  00D7               	movwf	(??_bmp280_set_power_mode+2)^(0+256)
  4759  1704  0857               	movf	(??_bmp280_set_power_mode+2)^(0+256),w
  4760  1705  00D9               	movwf	bmp280_set_power_mode@rslt^(0+256)
  4761  1706                     l4171:	
  4762                           
  4763                           ;bmp280.c: 353: return rslt;
  4764  1706  0859               	movf	bmp280_set_power_mode@rslt^(0+256),w
  4765  1707  0008               	return
  4766  1708                     __end_of_bmp280_set_power_mode:	
  4767                           
  4768                           	psect	text4
  4769  168E                     __ptext4:	
  4770 ;; *************** function _bmp280_set_config *****************
  4771 ;; Defined at:
  4772 ;;		line 294 in file "bmp280.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  conf            1    wreg     PTR const struct bmp280_
  4775 ;;		 -> main@conf(5), 
  4776 ;;  dev             1   52[BANK2 ] PTR struct bmp280_dev
  4777 ;;		 -> bmp(42), 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  conf            1   53[BANK1 ] PTR const struct bmp280_
  4780 ;;		 -> main@conf(5), 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      char 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4790 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Totals:         0       0       1       3       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;Total ram usage:        4 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:   13
  4797 ;; This function calls:
  4798 ;;		_conf_sensor
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _bmp280_set_config
  4806  168E                     _bmp280_set_config:	
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _bmp280_set_config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4810                           ;bmp280_set_config@conf stored from wreg
  4811  168E  0141               	movlb	1	; select bank1
  4812  168F  00D5               	movwf	bmp280_set_config@conf^(0+128)
  4813                           
  4814                           ;bmp280.c: 296: return conf_sensor((unsigned char) 0x00, conf, dev);
  4815  1690  0855               	movf	bmp280_set_config@conf^(0+128),w
  4816  1691  0142               	movlb	2	; select bank2
  4817  1692  00D5               	movwf	??_bmp280_set_config^(0+256)
  4818  1693  0855               	movf	??_bmp280_set_config^(0+256),w
  4819  1694  00C8               	movwf	conf_sensor@conf^(0+256)
  4820  1695  0854               	movf	bmp280_set_config@dev^(0+256),w
  4821  1696  00D6               	movwf	(??_bmp280_set_config+1)^(0+256)
  4822  1697  0856               	movf	(??_bmp280_set_config+1)^(0+256),w
  4823  1698  00C9               	movwf	conf_sensor@dev^(0+256)
  4824  1699  3000               	movlw	0
  4825  169A  318D  25F7         	fcall	_conf_sensor
  4826  169C  0008               	return
  4827  169D                     __end_of_bmp280_set_config:	
  4828                           
  4829                           	psect	text5
  4830  0DF7                     __ptext5:	
  4831 ;; *************** function _conf_sensor *****************
  4832 ;; Defined at:
  4833 ;;		line 663 in file "bmp280.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  mode            1    wreg     unsigned char 
  4836 ;;  conf            1   40[BANK2 ] PTR const struct bmp280_
  4837 ;;		 -> bmp.conf(5), main@conf(5), bmp(42), 
  4838 ;;  dev             1   41[BANK2 ] PTR struct bmp280_dev
  4839 ;;		 -> bmp(42), 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  mode            1   48[BANK2 ] unsigned char 
  4842 ;;  temp            2   50[BANK2 ] unsigned char [2]
  4843 ;;  reg_addr        2   46[BANK2 ] unsigned char [2]
  4844 ;;  rslt            1   49[BANK2 ] char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      char 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4854 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;Total ram usage:       12 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:   12
  4861 ;; This function calls:
  4862 ;;		_bmp280_get_regs
  4863 ;;		_bmp280_set_regs
  4864 ;;		_bmp280_soft_reset
  4865 ;;		_null_ptr_check
  4866 ;; This function is called by:
  4867 ;;		_bmp280_set_config
  4868 ;;		_bmp280_set_power_mode
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _conf_sensor
  4874  0DF7                     _conf_sensor:	
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _conf_sensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4878                           ;conf_sensor@mode stored from wreg
  4879  0DF7  0142               	movlb	2	; select bank2
  4880  0DF8  00D0               	movwf	conf_sensor@mode^(0+256)
  4881                           
  4882                           ;bmp280.c: 665: int8_t rslt;;bmp280.c: 666: uint8_t temp[2] = { 0, 0 };
  4883  0DF9  086E               	movf	(conf_sensor@F6602+1)^(0+256),w
  4884  0DFA  00D3               	movwf	(conf_sensor@temp+1)^(0+256)
  4885  0DFB  086D               	movf	conf_sensor@F6602^(0+256),w
  4886  0DFC  00D2               	movwf	conf_sensor@temp^(0+256)
  4887                           
  4888                           ;bmp280.c: 667: uint8_t reg_addr[2] = { (unsigned char) 0xF4, (unsigned char) 0xF5 };
  4889  0DFD  086A               	movf	(conf_sensor@F6604+1)^(0+256),w
  4890  0DFE  00CF               	movwf	(conf_sensor@reg_addr+1)^(0+256)
  4891  0DFF  0869               	movf	conf_sensor@F6604^(0+256),w
  4892  0E00  00CE               	movwf	conf_sensor@reg_addr^(0+256)
  4893                           
  4894                           ;bmp280.c: 669: rslt = null_ptr_check(dev);
  4895  0E01  0849               	movf	conf_sensor@dev^(0+256),w
  4896  0E02  3197  272D  318D   	fcall	_null_ptr_check
  4897  0E05  0142               	movlb	2	; select bank2
  4898  0E06  00CA               	movwf	??_conf_sensor^(0+256)
  4899  0E07  084A               	movf	??_conf_sensor^(0+256),w
  4900  0E08  00D1               	movwf	conf_sensor@rslt^(0+256)
  4901                           
  4902                           ;bmp280.c: 671: if ((rslt == (0)) && (conf != (0))) {
  4903  0E09  0851               	movf	conf_sensor@rslt^(0+256),w
  4904  0E0A  1D03               	btfss	3,2
  4905  0E0B  2EDA               	goto	l446
  4906  0E0C  0848               	movf	conf_sensor@conf^(0+256),w
  4907  0E0D  1903               	btfsc	3,2
  4908  0E0E  2EDA               	goto	l446
  4909                           
  4910                           ;bmp280.c: 673: rslt = bmp280_get_regs((unsigned char) 0xF4, temp, 2, dev);
  4911  0E0F  3052               	movlw	low conf_sensor@temp
  4912  0E10  00C4               	movwf	bmp280_get_regs@reg_data^(0+256)
  4913  0E11  3001               	movlw	high conf_sensor@temp
  4914  0E12  00C5               	movwf	(bmp280_get_regs@reg_data+1)^(0+256)
  4915  0E13  3002               	movlw	2
  4916  0E14  00CA               	movwf	??_conf_sensor^(0+256)
  4917  0E15  084A               	movf	??_conf_sensor^(0+256),w
  4918  0E16  00C6               	movwf	bmp280_get_regs@len^(0+256)
  4919  0E17  0849               	movf	conf_sensor@dev^(0+256),w
  4920  0E18  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  4921  0E19  084B               	movf	(??_conf_sensor+1)^(0+256),w
  4922  0E1A  00C7               	movwf	bmp280_get_regs@dev^(0+256)
  4923  0E1B  30F4               	movlw	244
  4924  0E1C  3189  2137  318D   	fcall	_bmp280_get_regs
  4925  0E1F  0142               	movlb	2	; select bank2
  4926  0E20  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  4927  0E21  084C               	movf	(??_conf_sensor+2)^(0+256),w
  4928  0E22  00D1               	movwf	conf_sensor@rslt^(0+256)
  4929                           
  4930                           ;bmp280.c: 675: if (rslt == (0)) {
  4931  0E23  0851               	movf	conf_sensor@rslt^(0+256),w
  4932  0E24  1D03               	btfss	3,2
  4933  0E25  2EDC               	goto	l4091
  4934                           
  4935                           ;bmp280.c: 679: rslt = bmp280_soft_reset(dev);
  4936  0E26  0849               	movf	conf_sensor@dev^(0+256),w
  4937  0E27  3188  2053  318D   	fcall	_bmp280_soft_reset
  4938  0E2A  0142               	movlb	2	; select bank2
  4939  0E2B  00CA               	movwf	??_conf_sensor^(0+256)
  4940  0E2C  084A               	movf	??_conf_sensor^(0+256),w
  4941  0E2D  00D1               	movwf	conf_sensor@rslt^(0+256)
  4942                           
  4943                           ;bmp280.c: 681: if (rslt == (0)) {
  4944  0E2E  0851               	movf	conf_sensor@rslt^(0+256),w
  4945  0E2F  1D03               	btfss	3,2
  4946  0E30  2EDC               	goto	l4091
  4947                           
  4948                           ;bmp280.c: 682: temp[0] = ((temp[0] & ~(unsigned char) 0xE0) | ((conf->os_temp << (unsig
      +                          ned char) 5) & (unsigned char) 0xE0));
  4949  0E31  0848               	movf	conf_sensor@conf^(0+256),w
  4950  0E32  0086               	movwf	6
  4951  0E33  3001               	movlw	1	; select bank2/3
  4952  0E34  0087               	movwf	7
  4953  0E35  0801               	movf	1,w
  4954  0E36  00CA               	movwf	??_conf_sensor^(0+256)
  4955  0E37  3005               	movlw	5
  4956  0E38                     u5535:	
  4957  0E38  35CA               	lslf	??_conf_sensor^(0+256),f
  4958  0E39  0B89               	decfsz	9,f
  4959  0E3A  2E38               	goto	u5535
  4960  0E3B  30E0               	movlw	224
  4961  0E3C  054A               	andwf	??_conf_sensor^(0+256),w
  4962  0E3D  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  4963  0E3E  0852               	movf	conf_sensor@temp^(0+256),w
  4964  0E3F  391F               	andlw	31
  4965  0E40  044B               	iorwf	(??_conf_sensor+1)^(0+256),w
  4966  0E41  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  4967  0E42  084C               	movf	(??_conf_sensor+2)^(0+256),w
  4968  0E43  00D2               	movwf	conf_sensor@temp^(0+256)
  4969                           
  4970                           ;bmp280.c: 683: temp[0] = ((temp[0] & ~(unsigned char) 0x1C) | ((conf->os_pres << (unsig
      +                          ned char) 2) & (unsigned char) 0x1C));
  4971  0E44  0A48               	incf	conf_sensor@conf^(0+256),w
  4972  0E45  0086               	movwf	6
  4973  0E46  3001               	movlw	1	; select bank2/3
  4974  0E47  0087               	movwf	7
  4975  0E48  0801               	movf	1,w
  4976  0E49  00CA               	movwf	??_conf_sensor^(0+256)
  4977  0E4A  3002               	movlw	2
  4978  0E4B                     u5545:	
  4979  0E4B  35CA               	lslf	??_conf_sensor^(0+256),f
  4980  0E4C  0B89               	decfsz	9,f
  4981  0E4D  2E4B               	goto	u5545
  4982  0E4E  301C               	movlw	28
  4983  0E4F  054A               	andwf	??_conf_sensor^(0+256),w
  4984  0E50  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  4985  0E51  0852               	movf	conf_sensor@temp^(0+256),w
  4986  0E52  39E3               	andlw	227
  4987  0E53  044B               	iorwf	(??_conf_sensor+1)^(0+256),w
  4988  0E54  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  4989  0E55  084C               	movf	(??_conf_sensor+2)^(0+256),w
  4990  0E56  00D2               	movwf	conf_sensor@temp^(0+256)
  4991                           
  4992                           ;bmp280.c: 684: temp[1] = ((temp[1] & ~(unsigned char) 0xE0) | ((conf->odr << (unsigned 
      +                          char) 5) & (unsigned char) 0xE0));
  4993  0E57  0848               	movf	conf_sensor@conf^(0+256),w
  4994  0E58  3E02               	addlw	2
  4995  0E59  0086               	movwf	6
  4996  0E5A  3001               	movlw	1	; select bank2/3
  4997  0E5B  0087               	movwf	7
  4998  0E5C  0801               	movf	1,w
  4999  0E5D  00CA               	movwf	??_conf_sensor^(0+256)
  5000  0E5E  3005               	movlw	5
  5001  0E5F                     u5555:	
  5002  0E5F  35CA               	lslf	??_conf_sensor^(0+256),f
  5003  0E60  0B89               	decfsz	9,f
  5004  0E61  2E5F               	goto	u5555
  5005  0E62  30E0               	movlw	224
  5006  0E63  054A               	andwf	??_conf_sensor^(0+256),w
  5007  0E64  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5008  0E65  0853               	movf	(conf_sensor@temp^(0+256)+1),w
  5009  0E66  391F               	andlw	31
  5010  0E67  044B               	iorwf	(??_conf_sensor+1)^(0+256),w
  5011  0E68  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  5012  0E69  084C               	movf	(??_conf_sensor+2)^(0+256),w
  5013  0E6A  00D3               	movwf	(conf_sensor@temp^(0+256)+1)
  5014                           
  5015                           ;bmp280.c: 685: temp[1] = ((temp[1] & ~(unsigned char) 0x1C) | ((conf->filter << (unsign
      +                          ed char) 2) & (unsigned char) 0x1C));
  5016  0E6B  0848               	movf	conf_sensor@conf^(0+256),w
  5017  0E6C  3E03               	addlw	3
  5018  0E6D  0086               	movwf	6
  5019  0E6E  3001               	movlw	1	; select bank2/3
  5020  0E6F  0087               	movwf	7
  5021  0E70  0801               	movf	1,w
  5022  0E71  00CA               	movwf	??_conf_sensor^(0+256)
  5023  0E72  3002               	movlw	2
  5024  0E73                     u5565:	
  5025  0E73  35CA               	lslf	??_conf_sensor^(0+256),f
  5026  0E74  0B89               	decfsz	9,f
  5027  0E75  2E73               	goto	u5565
  5028  0E76  301C               	movlw	28
  5029  0E77  054A               	andwf	??_conf_sensor^(0+256),w
  5030  0E78  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5031  0E79  0853               	movf	(conf_sensor@temp^(0+256)+1),w
  5032  0E7A  39E3               	andlw	227
  5033  0E7B  044B               	iorwf	(??_conf_sensor+1)^(0+256),w
  5034  0E7C  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  5035  0E7D  084C               	movf	(??_conf_sensor+2)^(0+256),w
  5036  0E7E  00D3               	movwf	(conf_sensor@temp^(0+256)+1)
  5037                           
  5038                           ;bmp280.c: 686: temp[1] = ((temp[1] & ~((unsigned char) 0x01)) | (conf->spi3w_en & (unsi
      +                          gned char) 0x01));
  5039  0E7F  0848               	movf	conf_sensor@conf^(0+256),w
  5040  0E80  3E04               	addlw	4
  5041  0E81  0086               	movwf	6
  5042  0E82  3001               	movlw	1	; select bank2/3
  5043  0E83  0087               	movwf	7
  5044  0E84  3001               	movlw	1
  5045  0E85  0501               	andwf	1,w
  5046  0E86  00CA               	movwf	??_conf_sensor^(0+256)
  5047  0E87  0853               	movf	(conf_sensor@temp^(0+256)+1),w
  5048  0E88  39FE               	andlw	254
  5049  0E89  044A               	iorwf	??_conf_sensor^(0+256),w
  5050  0E8A  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5051  0E8B  084B               	movf	(??_conf_sensor+1)^(0+256),w
  5052  0E8C  00D3               	movwf	(conf_sensor@temp^(0+256)+1)
  5053                           
  5054                           ;bmp280.c: 688: rslt = bmp280_set_regs(reg_addr, temp, 2, dev);
  5055  0E8D  3052               	movlw	(low (conf_sensor@temp| (0+256)))& (0+255)
  5056  0E8E  00CA               	movwf	??_conf_sensor^(0+256)
  5057  0E8F  084A               	movf	??_conf_sensor^(0+256),w
  5058  0E90  0141               	movlb	1	; select bank1
  5059  0E91  00BF               	movwf	bmp280_set_regs@reg_data^(0+128)
  5060  0E92  3002               	movlw	2
  5061  0E93  0142               	movlb	2	; select bank2
  5062  0E94  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5063  0E95  084B               	movf	(??_conf_sensor+1)^(0+256),w
  5064  0E96  0141               	movlb	1	; select bank1
  5065  0E97  00C0               	movwf	bmp280_set_regs@len^(0+128)
  5066  0E98  0142               	movlb	2	; select bank2
  5067  0E99  0849               	movf	conf_sensor@dev^(0+256),w
  5068  0E9A  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  5069  0E9B  084C               	movf	(??_conf_sensor+2)^(0+256),w
  5070  0E9C  0141               	movlb	1	; select bank1
  5071  0E9D  00C1               	movwf	bmp280_set_regs@dev^(0+128)
  5072  0E9E  304E               	movlw	(low (conf_sensor@reg_addr| (0+256)))& (0+255)
  5073  0E9F  318C  2413  318D   	fcall	_bmp280_set_regs
  5074  0EA2  0142               	movlb	2	; select bank2
  5075  0EA3  00CD               	movwf	(??_conf_sensor+3)^(0+256)
  5076  0EA4  084D               	movf	(??_conf_sensor+3)^(0+256),w
  5077  0EA5  00D1               	movwf	conf_sensor@rslt^(0+256)
  5078                           
  5079                           ;bmp280.c: 690: if (rslt == (0)) {
  5080  0EA6  0851               	movf	conf_sensor@rslt^(0+256),w
  5081  0EA7  1D03               	btfss	3,2
  5082  0EA8  2EDC               	goto	l4091
  5083                           
  5084                           ;bmp280.c: 691: dev->conf = *conf;
  5085  0EA9  0848               	movf	conf_sensor@conf^(0+256),w
  5086  0EAA  0086               	movwf	6
  5087  0EAB  3001               	movlw	1	; select bank2/3
  5088  0EAC  0087               	movwf	7
  5089  0EAD  0849               	movf	conf_sensor@dev^(0+256),w
  5090  0EAE  3E25               	addlw	37
  5091  0EAF  0084               	movwf	4
  5092  0EB0  3001               	movlw	1	; select bank2/3
  5093  0EB1  0085               	movwf	5
  5094  0EB2  3005               	movlw	5
  5095  0EB3  00CA               	movwf	??_conf_sensor^(0+256)
  5096  0EB4                     u5580:	
  5097  0EB4  0016               	moviw fsr1++
  5098  0EB5  001A               	movwi fsr0++
  5099  0EB6  0BCA               	decfsz	??_conf_sensor^(0+256),f
  5100  0EB7  2EB4               	goto	u5580
  5101                           
  5102                           ;bmp280.c: 692: if (mode != (unsigned char) 0x00) {
  5103  0EB8  0850               	movf	conf_sensor@mode^(0+256),w
  5104  0EB9  1903               	btfsc	3,2
  5105  0EBA  2EDC               	goto	l4091
  5106                           
  5107                           ;bmp280.c: 694: temp[0] = ((temp[0] & ~((unsigned char) 0x03)) | (mode & (unsigned char)
      +                           0x03));
  5108  0EBB  3003               	movlw	3
  5109  0EBC  0550               	andwf	conf_sensor@mode^(0+256),w
  5110  0EBD  00CA               	movwf	??_conf_sensor^(0+256)
  5111  0EBE  0852               	movf	conf_sensor@temp^(0+256),w
  5112  0EBF  39FC               	andlw	252
  5113  0EC0  044A               	iorwf	??_conf_sensor^(0+256),w
  5114  0EC1  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5115  0EC2  084B               	movf	(??_conf_sensor+1)^(0+256),w
  5116  0EC3  00D2               	movwf	conf_sensor@temp^(0+256)
  5117                           
  5118                           ;bmp280.c: 695: rslt = bmp280_set_regs(reg_addr, temp, 1, dev);
  5119  0EC4  3052               	movlw	(low (conf_sensor@temp| (0+256)))& (0+255)
  5120  0EC5  00CA               	movwf	??_conf_sensor^(0+256)
  5121  0EC6  084A               	movf	??_conf_sensor^(0+256),w
  5122  0EC7  0141               	movlb	1	; select bank1
  5123  0EC8  00BF               	movwf	bmp280_set_regs@reg_data^(0+128)
  5124  0EC9  01C0               	clrf	bmp280_set_regs@len^(0+128)
  5125  0ECA  0AC0               	incf	bmp280_set_regs@len^(0+128),f
  5126  0ECB  0142               	movlb	2	; select bank2
  5127  0ECC  0849               	movf	conf_sensor@dev^(0+256),w
  5128  0ECD  00CB               	movwf	(??_conf_sensor+1)^(0+256)
  5129  0ECE  084B               	movf	(??_conf_sensor+1)^(0+256),w
  5130  0ECF  0141               	movlb	1	; select bank1
  5131  0ED0  00C1               	movwf	bmp280_set_regs@dev^(0+128)
  5132  0ED1  304E               	movlw	(low (conf_sensor@reg_addr| (0+256)))& (0+255)
  5133  0ED2  318C  2413  318D   	fcall	_bmp280_set_regs
  5134  0ED5  0142               	movlb	2	; select bank2
  5135  0ED6  00CC               	movwf	(??_conf_sensor+2)^(0+256)
  5136  0ED7  084C               	movf	(??_conf_sensor+2)^(0+256),w
  5137  0ED8  00D1               	movwf	conf_sensor@rslt^(0+256)
  5138                           
  5139                           ;bmp280.c: 696: };bmp280.c: 697: };bmp280.c: 699: };bmp280.c: 700: };bmp280.c: 701: } el
      +                          se {
  5140  0ED9  2EDC               	goto	l4091
  5141  0EDA                     l446:	
  5142                           
  5143                           ;bmp280.c: 702: rslt = (-1);
  5144  0EDA  01D1               	clrf	conf_sensor@rslt^(0+256)
  5145  0EDB  03D1               	decf	conf_sensor@rslt^(0+256),f
  5146  0EDC                     l4091:	
  5147                           
  5148                           ;bmp280.c: 703: };bmp280.c: 705: return rslt;
  5149  0EDC  0851               	movf	conf_sensor@rslt^(0+256),w
  5150  0EDD  0008               	return
  5151  0EDE                     __end_of_conf_sensor:	
  5152                           
  5153                           	psect	text6
  5154  0B7C                     __ptext6:	
  5155 ;; *************** function _bmp280_init *****************
  5156 ;; Defined at:
  5157 ;;		line 211 in file "bmp280.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  dev             1    wreg     PTR struct bmp280_dev
  5160 ;;		 -> bmp(42), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  dev             1   70[BANK2 ] PTR struct bmp280_dev
  5163 ;;		 -> bmp(42), 
  5164 ;;  rslt            1   69[BANK2 ] char 
  5165 ;;  try_count       1   68[BANK2 ] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      char 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;Total ram usage:        5 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:   12
  5182 ;; This function calls:
  5183 ;;		_BMP280_delay_msek
  5184 ;;		_bmp280_get_regs
  5185 ;;		_bmp280_soft_reset
  5186 ;;		_get_calib_param
  5187 ;;		_null_ptr_check
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _bmp280_init
  5195  0B7C                     _bmp280_init:	
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _bmp280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5199                           ;bmp280_init@dev stored from wreg
  5200  0B7C  0142               	movlb	2	; select bank2
  5201  0B7D  00E6               	movwf	bmp280_init@dev^(0+256)
  5202                           
  5203                           ;bmp280.c: 213: int8_t rslt;;bmp280.c: 215: uint8_t try_count = 5;
  5204  0B7E  3005               	movlw	5
  5205  0B7F  00E2               	movwf	??_bmp280_init^(0+256)
  5206  0B80  0862               	movf	??_bmp280_init^(0+256),w
  5207  0B81  00E4               	movwf	bmp280_init@try_count^(0+256)
  5208                           
  5209                           ;bmp280.c: 217: rslt = null_ptr_check(dev);
  5210  0B82  0866               	movf	bmp280_init@dev^(0+256),w
  5211  0B83  3197  272D  318B   	fcall	_null_ptr_check
  5212  0B86  0142               	movlb	2	; select bank2
  5213  0B87  00E2               	movwf	??_bmp280_init^(0+256)
  5214  0B88  0862               	movf	??_bmp280_init^(0+256),w
  5215  0B89  00E5               	movwf	bmp280_init@rslt^(0+256)
  5216                           
  5217                           ;bmp280.c: 219: if (rslt == (0)) {
  5218  0B8A  0865               	movf	bmp280_init@rslt^(0+256),w
  5219  0B8B  1903               	btfsc	3,2
  5220  0B8C  2BE6               	goto	l4127
  5221  0B8D  2C11               	goto	l4137
  5222  0B8E                     l4107:	
  5223                           ;bmp280.c: 220: while (try_count) {
  5224                           
  5225                           
  5226                           ;bmp280.c: 221: rslt = bmp280_get_regs((unsigned char) 0xD0, &dev->chip_id, 1, dev);
  5227  0B8E  0866               	movf	bmp280_init@dev^(0+256),w
  5228  0B8F  00C4               	movwf	bmp280_get_regs@reg_data^(0+256)
  5229  0B90  3001               	movlw	1
  5230  0B91  00C5               	movwf	(bmp280_get_regs@reg_data+1)^(0+256)
  5231  0B92  01C6               	clrf	bmp280_get_regs@len^(0+256)
  5232  0B93  0AC6               	incf	bmp280_get_regs@len^(0+256),f
  5233  0B94  0866               	movf	bmp280_init@dev^(0+256),w
  5234  0B95  00E2               	movwf	??_bmp280_init^(0+256)
  5235  0B96  0862               	movf	??_bmp280_init^(0+256),w
  5236  0B97  00C7               	movwf	bmp280_get_regs@dev^(0+256)
  5237  0B98  30D0               	movlw	208
  5238  0B99  3189  2137  318B   	fcall	_bmp280_get_regs
  5239  0B9C  0142               	movlb	2	; select bank2
  5240  0B9D  00E3               	movwf	(??_bmp280_init+1)^(0+256)
  5241  0B9E  0863               	movf	(??_bmp280_init+1)^(0+256),w
  5242  0B9F  00E5               	movwf	bmp280_init@rslt^(0+256)
  5243                           
  5244                           ;bmp280.c: 224: if ((rslt == (0)) && (dev->chip_id == (unsigned char) 0x56;bmp280.c: 225
      +                          : || dev->chip_id == (unsigned char) 0x57;bmp280.c: 226: || dev->chip_id == (unsigned ch
      +                          ar) 0x58)) {
  5245  0BA0  0865               	movf	bmp280_init@rslt^(0+256),w
  5246  0BA1  1D03               	btfss	3,2
  5247  0BA2  2BCF               	goto	l4123
  5248  0BA3  0866               	movf	bmp280_init@dev^(0+256),w
  5249  0BA4  0086               	movwf	6
  5250  0BA5  3001               	movlw	1	; select bank2/3
  5251  0BA6  0087               	movwf	7
  5252  0BA7  3056               	movlw	86
  5253  0BA8  0601               	xorwf	1,w
  5254  0BA9  1903               	btfsc	3,2
  5255  0BAA  2BBB               	goto	l4117
  5256  0BAB  0866               	movf	bmp280_init@dev^(0+256),w
  5257  0BAC  0086               	movwf	6
  5258  0BAD  3001               	movlw	1	; select bank2/3
  5259  0BAE  0087               	movwf	7
  5260  0BAF  3057               	movlw	87
  5261  0BB0  0601               	xorwf	1,w
  5262  0BB1  1903               	btfsc	3,2
  5263  0BB2  2BBB               	goto	l4117
  5264  0BB3  0866               	movf	bmp280_init@dev^(0+256),w
  5265  0BB4  0086               	movwf	6
  5266  0BB5  3001               	movlw	1	; select bank2/3
  5267  0BB6  0087               	movwf	7
  5268  0BB7  3058               	movlw	88
  5269  0BB8  0601               	xorwf	1,w
  5270  0BB9  1D03               	btfss	3,2
  5271  0BBA  2BCF               	goto	l4123
  5272  0BBB                     l4117:	
  5273                           
  5274                           ;bmp280.c: 228: rslt = bmp280_soft_reset(dev);
  5275  0BBB  0866               	movf	bmp280_init@dev^(0+256),w
  5276  0BBC  3188  2053  318B   	fcall	_bmp280_soft_reset
  5277  0BBF  0142               	movlb	2	; select bank2
  5278  0BC0  00E2               	movwf	??_bmp280_init^(0+256)
  5279  0BC1  0862               	movf	??_bmp280_init^(0+256),w
  5280  0BC2  00E5               	movwf	bmp280_init@rslt^(0+256)
  5281                           
  5282                           ;bmp280.c: 230: if (rslt == (0))
  5283  0BC3  0865               	movf	bmp280_init@rslt^(0+256),w
  5284  0BC4  1D03               	btfss	3,2
  5285  0BC5  2BE9               	goto	l4129
  5286                           
  5287                           ;bmp280.c: 231: rslt = get_calib_param(dev);
  5288  0BC6  0866               	movf	bmp280_init@dev^(0+256),w
  5289  0BC7  318D  254F  318B   	fcall	_get_calib_param
  5290  0BCA  0142               	movlb	2	; select bank2
  5291  0BCB  00E2               	movwf	??_bmp280_init^(0+256)
  5292  0BCC  0862               	movf	??_bmp280_init^(0+256),w
  5293  0BCD  00E5               	movwf	bmp280_init@rslt^(0+256)
  5294                           
  5295                           ;bmp280.c: 232: break;
  5296  0BCE  2BE9               	goto	l4129
  5297  0BCF                     l4123:	
  5298                           
  5299                           ;bmp280.c: 233: };bmp280.c: 236: dev->delay_ms(10);
  5300  0BCF  3000               	movlw	0
  5301  0BD0  0141               	movlb	1	; select bank1
  5302  0BD1  00B5               	movwf	(BMP280_delay_msek@msek+3)^(0+128)
  5303  0BD2  3000               	movlw	0
  5304  0BD3  00B4               	movwf	(BMP280_delay_msek@msek+2)^(0+128)
  5305  0BD4  3000               	movlw	0
  5306  0BD5  00B3               	movwf	(BMP280_delay_msek@msek+1)^(0+128)
  5307  0BD6  300A               	movlw	10
  5308  0BD7  00B2               	movwf	BMP280_delay_msek@msek^(0+128)
  5309  0BD8  0142               	movlb	2	; select bank2
  5310  0BD9  0866               	movf	bmp280_init@dev^(0+256),w
  5311  0BDA  3E07               	addlw	7
  5312  0BDB  0086               	movwf	6
  5313  0BDC  3001               	movlw	1	; select bank2/3
  5314  0BDD  0087               	movwf	7
  5315  0BDE  3F41               	moviw [1]fsr1
  5316  0BDF  008A               	movwf	10
  5317  0BE0  3F40               	moviw [0]fsr1
  5318  0BE1  000A               	callw
  5319  0BE2  318B               	pagesel	$
  5320                           
  5321                           ;bmp280.c: 237: --try_count;
  5322  0BE3  3001               	movlw	1
  5323  0BE4  0142               	movlb	2	; select bank2
  5324  0BE5  02E4               	subwf	bmp280_init@try_count^(0+256),f
  5325  0BE6                     l4127:	
  5326  0BE6  0864               	movf	bmp280_init@try_count^(0+256),w
  5327  0BE7  1D03               	btfss	3,2
  5328  0BE8  2B8E               	goto	l4107
  5329  0BE9                     l4129:	
  5330                           
  5331                           ;bmp280.c: 238: };bmp280.c: 241: if (!try_count)
  5332  0BE9  0864               	movf	bmp280_init@try_count^(0+256),w
  5333  0BEA  1D03               	btfss	3,2
  5334  0BEB  2BF0               	goto	l4133
  5335                           
  5336                           ;bmp280.c: 242: rslt = (-2);
  5337  0BEC  30FE               	movlw	254
  5338  0BED  00E2               	movwf	??_bmp280_init^(0+256)
  5339  0BEE  0862               	movf	??_bmp280_init^(0+256),w
  5340  0BEF  00E5               	movwf	bmp280_init@rslt^(0+256)
  5341  0BF0                     l4133:	
  5342                           
  5343                           ;bmp280.c: 244: if (rslt == (0)) {
  5344  0BF0  0865               	movf	bmp280_init@rslt^(0+256),w
  5345  0BF1  1D03               	btfss	3,2
  5346  0BF2  2C11               	goto	l4137
  5347                           
  5348                           ;bmp280.c: 246: dev->conf.filter = (unsigned char) 0x00;
  5349  0BF3  0866               	movf	bmp280_init@dev^(0+256),w
  5350  0BF4  3E28               	addlw	40
  5351  0BF5  0086               	movwf	6
  5352  0BF6  3001               	movlw	1	; select bank2/3
  5353  0BF7  0087               	movwf	7
  5354  0BF8  0181               	clrf	1
  5355                           
  5356                           ;bmp280.c: 247: dev->conf.os_pres = (unsigned char) 0x00;
  5357  0BF9  0866               	movf	bmp280_init@dev^(0+256),w
  5358  0BFA  3E26               	addlw	38
  5359  0BFB  0086               	movwf	6
  5360  0BFC  3001               	movlw	1	; select bank2/3
  5361  0BFD  0087               	movwf	7
  5362  0BFE  0181               	clrf	1
  5363                           
  5364                           ;bmp280.c: 248: dev->conf.os_temp = (unsigned char) 0x00;
  5365  0BFF  0866               	movf	bmp280_init@dev^(0+256),w
  5366  0C00  3E25               	addlw	37
  5367  0C01  0086               	movwf	6
  5368  0C02  3001               	movlw	1	; select bank2/3
  5369  0C03  0087               	movwf	7
  5370  0C04  0181               	clrf	1
  5371                           
  5372                           ;bmp280.c: 249: dev->conf.odr = (unsigned char) 0x00;
  5373  0C05  0866               	movf	bmp280_init@dev^(0+256),w
  5374  0C06  3E27               	addlw	39
  5375  0C07  0086               	movwf	6
  5376  0C08  3001               	movlw	1	; select bank2/3
  5377  0C09  0087               	movwf	7
  5378  0C0A  0181               	clrf	1
  5379                           
  5380                           ;bmp280.c: 250: dev->conf.spi3w_en = (unsigned char) 0;
  5381  0C0B  0866               	movf	bmp280_init@dev^(0+256),w
  5382  0C0C  3E29               	addlw	41
  5383  0C0D  0086               	movwf	6
  5384  0C0E  3001               	movlw	1	; select bank2/3
  5385  0C0F  0087               	movwf	7
  5386  0C10  0181               	clrf	1
  5387  0C11                     l4137:	
  5388                           
  5389                           ;bmp280.c: 251: };bmp280.c: 252: };bmp280.c: 254: return rslt;
  5390  0C11  0865               	movf	bmp280_init@rslt^(0+256),w
  5391  0C12  0008               	return
  5392  0C13                     __end_of_bmp280_init:	
  5393                           
  5394                           	psect	text7
  5395  0D4F                     __ptext7:	
  5396 ;; *************** function _get_calib_param *****************
  5397 ;; Defined at:
  5398 ;;		line 619 in file "bmp280.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  dev             1    wreg     PTR struct bmp280_dev
  5401 ;;		 -> bmp(42), 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  dev             1   65[BANK2 ] PTR struct bmp280_dev
  5404 ;;		 -> bmp(42), 
  5405 ;;  temp           24   40[BANK2 ] unsigned char [24]
  5406 ;;  rslt            1   64[BANK2 ] char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      char 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Locals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Totals:         0       0       3      26       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;Total ram usage:       29 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:   11
  5423 ;; This function calls:
  5424 ;;		_bmp280_get_regs
  5425 ;;		_null_ptr_check
  5426 ;; This function is called by:
  5427 ;;		_bmp280_init
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           
  5432                           ;psect for function _get_calib_param
  5433  0D4F                     _get_calib_param:	
  5434                           
  5435                           ;incstack = 0
  5436                           ; Regs used in _get_calib_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5437                           ;get_calib_param@dev stored from wreg
  5438  0D4F  0142               	movlb	2	; select bank2
  5439  0D50  00E1               	movwf	get_calib_param@dev^(0+256)
  5440                           
  5441                           ;bmp280.c: 621: int8_t rslt;;bmp280.c: 622: uint8_t temp[(unsigned char) 24] = {0};
  5442  0D51  30A0               	movlw	low get_calib_param@F6534
  5443  0D52  0086               	movwf	6
  5444  0D53  3001               	movlw	high get_calib_param@F6534
  5445  0D54  0087               	movwf	7
  5446  0D55  3048               	movlw	low get_calib_param@temp
  5447  0D56  0084               	movwf	4
  5448  0D57  3001               	movlw	high get_calib_param@temp
  5449  0D58  0085               	movwf	5
  5450  0D59  3018               	movlw	24
  5451  0D5A  0141               	movlb	1	; select bank1
  5452  0D5B  00C2               	movwf	??_get_calib_param^(0+128)
  5453  0D5C                     u5460:	
  5454  0D5C  0016               	moviw fsr1++
  5455  0D5D  001A               	movwi fsr0++
  5456  0D5E  0BC2               	decfsz	??_get_calib_param^(0+128),f
  5457  0D5F  2D5C               	goto	u5460
  5458                           
  5459                           ;bmp280.c: 624: rslt = null_ptr_check(dev);
  5460  0D60  0142               	movlb	2	; select bank2
  5461  0D61  0861               	movf	get_calib_param@dev^(0+256),w
  5462  0D62  3197  272D  318D   	fcall	_null_ptr_check
  5463  0D65  0141               	movlb	1	; select bank1
  5464  0D66  00C2               	movwf	??_get_calib_param^(0+128)
  5465  0D67  0842               	movf	??_get_calib_param^(0+128),w
  5466  0D68  0142               	movlb	2	; select bank2
  5467  0D69  00E0               	movwf	get_calib_param@rslt^(0+256)
  5468                           
  5469                           ;bmp280.c: 626: if (rslt == (0)) {
  5470  0D6A  0860               	movf	get_calib_param@rslt^(0+256),w
  5471  0D6B  1D03               	btfss	3,2
  5472  0D6C  2DF5               	goto	l4057
  5473                           
  5474                           ;bmp280.c: 627: rslt = bmp280_get_regs((unsigned char) 0x88, temp, (unsigned char) 24, d
      +                          ev);
  5475  0D6D  3048               	movlw	low get_calib_param@temp
  5476  0D6E  00C4               	movwf	bmp280_get_regs@reg_data^(0+256)
  5477  0D6F  3001               	movlw	high get_calib_param@temp
  5478  0D70  00C5               	movwf	(bmp280_get_regs@reg_data+1)^(0+256)
  5479  0D71  3018               	movlw	24
  5480  0D72  0141               	movlb	1	; select bank1
  5481  0D73  00C2               	movwf	??_get_calib_param^(0+128)
  5482  0D74  0842               	movf	??_get_calib_param^(0+128),w
  5483  0D75  0142               	movlb	2	; select bank2
  5484  0D76  00C6               	movwf	bmp280_get_regs@len^(0+256)
  5485  0D77  0861               	movf	get_calib_param@dev^(0+256),w
  5486  0D78  0141               	movlb	1	; select bank1
  5487  0D79  00C3               	movwf	(??_get_calib_param+1)^(0+128)
  5488  0D7A  0843               	movf	(??_get_calib_param+1)^(0+128),w
  5489  0D7B  0142               	movlb	2	; select bank2
  5490  0D7C  00C7               	movwf	bmp280_get_regs@dev^(0+256)
  5491  0D7D  3088               	movlw	136
  5492  0D7E  3189  2137  318D   	fcall	_bmp280_get_regs
  5493  0D81  0141               	movlb	1	; select bank1
  5494  0D82  00C4               	movwf	(??_get_calib_param+2)^(0+128)
  5495  0D83  0844               	movf	(??_get_calib_param+2)^(0+128),w
  5496  0D84  0142               	movlb	2	; select bank2
  5497  0D85  00E0               	movwf	get_calib_param@rslt^(0+256)
  5498                           
  5499                           ;bmp280.c: 629: if (rslt == (0)) {
  5500  0D86  0860               	movf	get_calib_param@rslt^(0+256),w
  5501  0D87  1D03               	btfss	3,2
  5502  0D88  2DF5               	goto	l4057
  5503                           
  5504                           ;bmp280.c: 630: dev->calib_param.dig_t1 = (uint16_t) (((uint16_t) temp[(unsigned char) 1
      +                          ] << 8);bmp280.c: 631: | ((uint16_t) temp[(unsigned char) 0]));
  5505  0D89  0861               	movf	get_calib_param@dev^(0+256),w
  5506  0D8A  3E09               	addlw	9
  5507  0D8B  0086               	movwf	6
  5508  0D8C  3001               	movlw	1	; select bank2/3
  5509  0D8D  0087               	movwf	7
  5510  0D8E  0848               	movf	get_calib_param@temp^(0+256),w
  5511  0D8F  3FC0               	movwi [0]fsr1
  5512  0D90  0849               	movf	(get_calib_param@temp^(0+256)+1),w
  5513  0D91  3FC1               	movwi [1]fsr1
  5514                           
  5515                           ;bmp280.c: 632: dev->calib_param.dig_t2 = (int16_t) (((int16_t) temp[(unsigned char) 3] 
      +                          << 8);bmp280.c: 633: | ((int16_t) temp[(unsigned char) 2]));
  5516  0D92  0861               	movf	get_calib_param@dev^(0+256),w
  5517  0D93  3E0B               	addlw	11
  5518  0D94  0086               	movwf	6
  5519  0D95  3001               	movlw	1	; select bank2/3
  5520  0D96  0087               	movwf	7
  5521  0D97  084A               	movf	(get_calib_param@temp^(0+256)+2),w
  5522  0D98  3FC0               	movwi [0]fsr1
  5523  0D99  084B               	movf	(get_calib_param@temp^(0+256)+3),w
  5524  0D9A  3FC1               	movwi [1]fsr1
  5525                           
  5526                           ;bmp280.c: 634: dev->calib_param.dig_t3 = (int16_t) (((int16_t) temp[(unsigned char) 5] 
      +                          << 8);bmp280.c: 635: | ((int16_t) temp[(unsigned char) 4]));
  5527  0D9B  0861               	movf	get_calib_param@dev^(0+256),w
  5528  0D9C  3E0D               	addlw	13
  5529  0D9D  0086               	movwf	6
  5530  0D9E  3001               	movlw	1	; select bank2/3
  5531  0D9F  0087               	movwf	7
  5532  0DA0  084C               	movf	(get_calib_param@temp^(0+256)+4),w
  5533  0DA1  3FC0               	movwi [0]fsr1
  5534  0DA2  084D               	movf	(get_calib_param@temp^(0+256)+5),w
  5535  0DA3  3FC1               	movwi [1]fsr1
  5536                           
  5537                           ;bmp280.c: 636: dev->calib_param.dig_p1 = (uint16_t) (((uint16_t) temp[(unsigned char) 7
      +                          ] << 8);bmp280.c: 637: | ((uint16_t) temp[(unsigned char) 6]));
  5538  0DA4  0861               	movf	get_calib_param@dev^(0+256),w
  5539  0DA5  3E0F               	addlw	15
  5540  0DA6  0086               	movwf	6
  5541  0DA7  3001               	movlw	1	; select bank2/3
  5542  0DA8  0087               	movwf	7
  5543  0DA9  084E               	movf	(get_calib_param@temp^(0+256)+6),w
  5544  0DAA  3FC0               	movwi [0]fsr1
  5545  0DAB  084F               	movf	(get_calib_param@temp^(0+256)+7),w
  5546  0DAC  3FC1               	movwi [1]fsr1
  5547                           
  5548                           ;bmp280.c: 638: dev->calib_param.dig_p2 = (int16_t) (((int16_t) temp[(unsigned char) 9] 
      +                          << 8);bmp280.c: 639: | ((int16_t) temp[(unsigned char) 8]));
  5549  0DAD  0861               	movf	get_calib_param@dev^(0+256),w
  5550  0DAE  3E11               	addlw	17
  5551  0DAF  0086               	movwf	6
  5552  0DB0  3001               	movlw	1	; select bank2/3
  5553  0DB1  0087               	movwf	7
  5554  0DB2  0850               	movf	(get_calib_param@temp^(0+256)+8),w
  5555  0DB3  3FC0               	movwi [0]fsr1
  5556  0DB4  0851               	movf	(get_calib_param@temp^(0+256)+9),w
  5557  0DB5  3FC1               	movwi [1]fsr1
  5558                           
  5559                           ;bmp280.c: 640: dev->calib_param.dig_p3 = (int16_t) (((int16_t) temp[(unsigned char) 11]
      +                           << 8);bmp280.c: 641: | ((int16_t) temp[(unsigned char) 10]));
  5560  0DB6  0861               	movf	get_calib_param@dev^(0+256),w
  5561  0DB7  3E13               	addlw	19
  5562  0DB8  0086               	movwf	6
  5563  0DB9  3001               	movlw	1	; select bank2/3
  5564  0DBA  0087               	movwf	7
  5565  0DBB  0852               	movf	(get_calib_param@temp^(0+256)+10),w
  5566  0DBC  3FC0               	movwi [0]fsr1
  5567  0DBD  0853               	movf	(get_calib_param@temp^(0+256)+11),w
  5568  0DBE  3FC1               	movwi [1]fsr1
  5569                           
  5570                           ;bmp280.c: 642: dev->calib_param.dig_p4 = (int16_t) (((int16_t) temp[(unsigned char) 13]
      +                           << 8);bmp280.c: 643: | ((int16_t) temp[(unsigned char) 12]));
  5571  0DBF  0861               	movf	get_calib_param@dev^(0+256),w
  5572  0DC0  3E15               	addlw	21
  5573  0DC1  0086               	movwf	6
  5574  0DC2  3001               	movlw	1	; select bank2/3
  5575  0DC3  0087               	movwf	7
  5576  0DC4  0854               	movf	(get_calib_param@temp^(0+256)+12),w
  5577  0DC5  3FC0               	movwi [0]fsr1
  5578  0DC6  0855               	movf	(get_calib_param@temp^(0+256)+13),w
  5579  0DC7  3FC1               	movwi [1]fsr1
  5580                           
  5581                           ;bmp280.c: 644: dev->calib_param.dig_p5 = (int16_t) (((int16_t) temp[(unsigned char) 15]
      +                           << 8);bmp280.c: 645: | ((int16_t) temp[(unsigned char) 14]));
  5582  0DC8  0861               	movf	get_calib_param@dev^(0+256),w
  5583  0DC9  3E17               	addlw	23
  5584  0DCA  0086               	movwf	6
  5585  0DCB  3001               	movlw	1	; select bank2/3
  5586  0DCC  0087               	movwf	7
  5587  0DCD  0856               	movf	(get_calib_param@temp^(0+256)+14),w
  5588  0DCE  3FC0               	movwi [0]fsr1
  5589  0DCF  0857               	movf	(get_calib_param@temp^(0+256)+15),w
  5590  0DD0  3FC1               	movwi [1]fsr1
  5591                           
  5592                           ;bmp280.c: 646: dev->calib_param.dig_p6 = (int16_t) (((int16_t) temp[(unsigned char) 17]
      +                           << 8);bmp280.c: 647: | ((int16_t) temp[(unsigned char) 16]));
  5593  0DD1  0861               	movf	get_calib_param@dev^(0+256),w
  5594  0DD2  3E19               	addlw	25
  5595  0DD3  0086               	movwf	6
  5596  0DD4  3001               	movlw	1	; select bank2/3
  5597  0DD5  0087               	movwf	7
  5598  0DD6  0858               	movf	(get_calib_param@temp^(0+256)+16),w
  5599  0DD7  3FC0               	movwi [0]fsr1
  5600  0DD8  0859               	movf	(get_calib_param@temp^(0+256)+17),w
  5601  0DD9  3FC1               	movwi [1]fsr1
  5602                           
  5603                           ;bmp280.c: 648: dev->calib_param.dig_p7 = (int16_t) (((int16_t) temp[(unsigned char) 19]
      +                           << 8);bmp280.c: 649: | ((int16_t) temp[(unsigned char) 18]));
  5604  0DDA  0861               	movf	get_calib_param@dev^(0+256),w
  5605  0DDB  3E1B               	addlw	27
  5606  0DDC  0086               	movwf	6
  5607  0DDD  3001               	movlw	1	; select bank2/3
  5608  0DDE  0087               	movwf	7
  5609  0DDF  085A               	movf	(get_calib_param@temp^(0+256)+18),w
  5610  0DE0  3FC0               	movwi [0]fsr1
  5611  0DE1  085B               	movf	(get_calib_param@temp^(0+256)+19),w
  5612  0DE2  3FC1               	movwi [1]fsr1
  5613                           
  5614                           ;bmp280.c: 650: dev->calib_param.dig_p8 = (int16_t) (((int16_t) temp[(unsigned char) 21]
      +                           << 8);bmp280.c: 651: | ((int16_t) temp[(unsigned char) 20]));
  5615  0DE3  0861               	movf	get_calib_param@dev^(0+256),w
  5616  0DE4  3E1D               	addlw	29
  5617  0DE5  0086               	movwf	6
  5618  0DE6  3001               	movlw	1	; select bank2/3
  5619  0DE7  0087               	movwf	7
  5620  0DE8  085C               	movf	(get_calib_param@temp^(0+256)+20),w
  5621  0DE9  3FC0               	movwi [0]fsr1
  5622  0DEA  085D               	movf	(get_calib_param@temp^(0+256)+21),w
  5623  0DEB  3FC1               	movwi [1]fsr1
  5624                           
  5625                           ;bmp280.c: 652: dev->calib_param.dig_p9 = (int16_t) (((int16_t) temp[(unsigned char) 23]
      +                           << 8);bmp280.c: 653: | ((int16_t) temp[(unsigned char) 22]));
  5626  0DEC  0861               	movf	get_calib_param@dev^(0+256),w
  5627  0DED  3E1F               	addlw	31
  5628  0DEE  0086               	movwf	6
  5629  0DEF  3001               	movlw	1	; select bank2/3
  5630  0DF0  0087               	movwf	7
  5631  0DF1  085E               	movf	(get_calib_param@temp^(0+256)+22),w
  5632  0DF2  3FC0               	movwi [0]fsr1
  5633  0DF3  085F               	movf	(get_calib_param@temp^(0+256)+23),w
  5634  0DF4  3FC1               	movwi [1]fsr1
  5635  0DF5                     l4057:	
  5636                           
  5637                           ;bmp280.c: 654: };bmp280.c: 655: };bmp280.c: 657: return rslt;
  5638  0DF5  0860               	movf	get_calib_param@rslt^(0+256),w
  5639  0DF6  0008               	return
  5640  0DF7                     __end_of_get_calib_param:	
  5641                           
  5642                           	psect	text8
  5643  0853                     __ptext8:	
  5644 ;; *************** function _bmp280_soft_reset *****************
  5645 ;; Defined at:
  5646 ;;		line 189 in file "bmp280.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  dev             1    wreg     PTR const struct bmp280_
  5649 ;;		 -> bmp(42), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  dev             1    3[BANK2 ] PTR const struct bmp280_
  5652 ;;		 -> bmp(42), 
  5653 ;;  reg_addr        1    2[BANK2 ] unsigned char 
  5654 ;;  rslt            1    1[BANK2 ] char 
  5655 ;;  soft_rst_cmd    1    0[BANK2 ] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      char 
  5658 ;; Registers used:
  5659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Totals:         0       0       3       4       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;Total ram usage:        7 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:   11
  5672 ;; This function calls:
  5673 ;;		_BMP280_delay_msek
  5674 ;;		_bmp280_set_regs
  5675 ;;		_null_ptr_check
  5676 ;; This function is called by:
  5677 ;;		_bmp280_init
  5678 ;;		_conf_sensor
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _bmp280_soft_reset
  5684  0853                     _bmp280_soft_reset:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _bmp280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5688                           ;bmp280_soft_reset@dev stored from wreg
  5689  0853  0142               	movlb	2	; select bank2
  5690  0854  00A3               	movwf	bmp280_soft_reset@dev^(0+256)
  5691                           
  5692                           ;bmp280.c: 191: int8_t rslt;;bmp280.c: 192: uint8_t reg_addr = (unsigned char) 0xE0;
  5693  0855  30E0               	movlw	224
  5694  0856  0141               	movlb	1	; select bank1
  5695  0857  00D2               	movwf	??_bmp280_soft_reset^(0+128)
  5696  0858  0852               	movf	??_bmp280_soft_reset^(0+128),w
  5697  0859  0142               	movlb	2	; select bank2
  5698  085A  00A2               	movwf	bmp280_soft_reset@reg_addr^(0+256)
  5699                           
  5700                           ;bmp280.c: 193: uint8_t soft_rst_cmd = (unsigned char) 0xB6;
  5701  085B  30B6               	movlw	182
  5702  085C  0141               	movlb	1	; select bank1
  5703  085D  00D2               	movwf	??_bmp280_soft_reset^(0+128)
  5704  085E  0852               	movf	??_bmp280_soft_reset^(0+128),w
  5705  085F  0142               	movlb	2	; select bank2
  5706  0860  00A0               	movwf	bmp280_soft_reset@soft_rst_cmd^(0+256)
  5707                           
  5708                           ;bmp280.c: 195: rslt = null_ptr_check(dev);
  5709  0861  0823               	movf	bmp280_soft_reset@dev^(0+256),w
  5710  0862  3197  272D  3188   	fcall	_null_ptr_check
  5711  0865  0141               	movlb	1	; select bank1
  5712  0866  00D2               	movwf	??_bmp280_soft_reset^(0+128)
  5713  0867  0852               	movf	??_bmp280_soft_reset^(0+128),w
  5714  0868  0142               	movlb	2	; select bank2
  5715  0869  00A1               	movwf	bmp280_soft_reset@rslt^(0+256)
  5716                           
  5717                           ;bmp280.c: 197: if (rslt == (0)) {
  5718  086A  0821               	movf	bmp280_soft_reset@rslt^(0+256),w
  5719  086B  1D03               	btfss	3,2
  5720  086C  2897               	goto	l4041
  5721                           
  5722                           ;bmp280.c: 198: rslt = bmp280_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
  5723  086D  3020               	movlw	(low (bmp280_soft_reset@soft_rst_cmd| (0+256)))& (0+255)
  5724  086E  0141               	movlb	1	; select bank1
  5725  086F  00D2               	movwf	??_bmp280_soft_reset^(0+128)
  5726  0870  0852               	movf	??_bmp280_soft_reset^(0+128),w
  5727  0871  00BF               	movwf	bmp280_set_regs@reg_data^(0+128)
  5728  0872  01C0               	clrf	bmp280_set_regs@len^(0+128)
  5729  0873  0AC0               	incf	bmp280_set_regs@len^(0+128),f
  5730  0874  0142               	movlb	2	; select bank2
  5731  0875  0823               	movf	bmp280_soft_reset@dev^(0+256),w
  5732  0876  0141               	movlb	1	; select bank1
  5733  0877  00D3               	movwf	(??_bmp280_soft_reset+1)^(0+128)
  5734  0878  0853               	movf	(??_bmp280_soft_reset+1)^(0+128),w
  5735  0879  00C1               	movwf	bmp280_set_regs@dev^(0+128)
  5736  087A  3022               	movlw	(low (bmp280_soft_reset@reg_addr| (0+256)))& (0+255)
  5737  087B  318C  2413  3188   	fcall	_bmp280_set_regs
  5738  087E  0141               	movlb	1	; select bank1
  5739  087F  00D4               	movwf	(??_bmp280_soft_reset+2)^(0+128)
  5740  0880  0854               	movf	(??_bmp280_soft_reset+2)^(0+128),w
  5741  0881  0142               	movlb	2	; select bank2
  5742  0882  00A1               	movwf	bmp280_soft_reset@rslt^(0+256)
  5743                           
  5744                           ;bmp280.c: 201: dev->delay_ms(2);
  5745  0883  3000               	movlw	0
  5746  0884  0141               	movlb	1	; select bank1
  5747  0885  00B5               	movwf	(BMP280_delay_msek@msek+3)^(0+128)
  5748  0886  3000               	movlw	0
  5749  0887  00B4               	movwf	(BMP280_delay_msek@msek+2)^(0+128)
  5750  0888  3000               	movlw	0
  5751  0889  00B3               	movwf	(BMP280_delay_msek@msek+1)^(0+128)
  5752  088A  3002               	movlw	2
  5753  088B  00B2               	movwf	BMP280_delay_msek@msek^(0+128)
  5754  088C  0142               	movlb	2	; select bank2
  5755  088D  0823               	movf	bmp280_soft_reset@dev^(0+256),w
  5756  088E  3E07               	addlw	7
  5757  088F  0086               	movwf	6
  5758  0890  3001               	movlw	1	; select bank2/3
  5759  0891  0087               	movwf	7
  5760  0892  3F41               	moviw [1]fsr1
  5761  0893  008A               	movwf	10
  5762  0894  3F40               	moviw [0]fsr1
  5763  0895  000A               	callw
  5764  0896  3188               	pagesel	$
  5765  0897                     l4041:	
  5766                           
  5767                           ;bmp280.c: 202: };bmp280.c: 204: return rslt;
  5768  0897  0142               	movlb	2	; select bank2
  5769  0898  0821               	movf	bmp280_soft_reset@rslt^(0+256),w
  5770  0899  0008               	return
  5771  089A                     __end_of_bmp280_soft_reset:	
  5772                           
  5773                           	psect	text9
  5774  0C13                     __ptext9:	
  5775 ;; *************** function _bmp280_set_regs *****************
  5776 ;; Defined at:
  5777 ;;		line 140 in file "bmp280.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  reg_addr        1    wreg     PTR unsigned char 
  5780 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5781 ;;  reg_data        1   31[BANK1 ] PTR const unsigned char 
  5782 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  5783 ;;  len             1   32[BANK1 ] unsigned char 
  5784 ;;  dev             1   33[BANK1 ] PTR const struct bmp280_
  5785 ;;		 -> bmp(42), 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  reg_addr        1   49[BANK1 ] PTR unsigned char 
  5788 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5789 ;;  temp_buff       8   37[BANK1 ] unsigned char [8]
  5790 ;;  temp_len        2   45[BANK1 ] unsigned int 
  5791 ;;  rslt            1   48[BANK1 ] char 
  5792 ;;  reg_addr_cnt    1   47[BANK1 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      char 
  5795 ;; Registers used:
  5796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:       19 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:   10
  5809 ;; This function calls:
  5810 ;;		_BMP280_SPI_bus_write
  5811 ;;		_interleave_data
  5812 ;;		_null_ptr_check
  5813 ;; This function is called by:
  5814 ;;		_bmp280_soft_reset
  5815 ;;		_conf_sensor
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           
  5820                           ;psect for function _bmp280_set_regs
  5821  0C13                     _bmp280_set_regs:	
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in _bmp280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5825                           ;bmp280_set_regs@reg_addr stored from wreg
  5826  0C13  0141               	movlb	1	; select bank1
  5827  0C14  00D1               	movwf	bmp280_set_regs@reg_addr^(0+128)
  5828                           
  5829                           ;bmp280.c: 142: int8_t rslt;;bmp280.c: 143: uint8_t temp_buff[8];;bmp280.c: 144: uint16_
      +                          t temp_len;;bmp280.c: 145: uint8_t reg_addr_cnt;;bmp280.c: 147: if (len > 4)
  5830  0C15  3005               	movlw	5
  5831  0C16  0240               	subwf	bmp280_set_regs@len^(0+128),w
  5832  0C17  1C03               	skipc
  5833  0C18  2C1D               	goto	l3929
  5834                           
  5835                           ;bmp280.c: 148: len = 4;
  5836  0C19  3004               	movlw	4
  5837  0C1A  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5838  0C1B  0842               	movf	??_bmp280_set_regs^(0+128),w
  5839  0C1C  00C0               	movwf	bmp280_set_regs@len^(0+128)
  5840  0C1D                     l3929:	
  5841                           
  5842                           ;bmp280.c: 150: rslt = null_ptr_check(dev);
  5843  0C1D  0841               	movf	bmp280_set_regs@dev^(0+128),w
  5844  0C1E  3197  272D  318C   	fcall	_null_ptr_check
  5845  0C21  0141               	movlb	1	; select bank1
  5846  0C22  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5847  0C23  0842               	movf	??_bmp280_set_regs^(0+128),w
  5848  0C24  00D0               	movwf	bmp280_set_regs@rslt^(0+128)
  5849                           
  5850                           ;bmp280.c: 152: if ((rslt == (0)) && (reg_addr != (0)) && (reg_data != (0))) {
  5851  0C25  0850               	movf	bmp280_set_regs@rslt^(0+128),w
  5852  0C26  1D03               	btfss	3,2
  5853  0C27  2CA7               	goto	l335
  5854  0C28  0851               	movf	bmp280_set_regs@reg_addr^(0+128),w
  5855  0C29  1903               	btfsc	3,2
  5856  0C2A  2CA7               	goto	l335
  5857  0C2B  083F               	movf	bmp280_set_regs@reg_data^(0+128),w
  5858  0C2C  1903               	btfsc	3,2
  5859  0C2D  2CA7               	goto	l335
  5860                           
  5861                           ;bmp280.c: 153: if (len != 0) {
  5862  0C2E  0840               	movf	bmp280_set_regs@len^(0+128),w
  5863  0C2F  1903               	btfsc	3,2
  5864  0C30  2CA2               	goto	l3965
  5865                           
  5866                           ;bmp280.c: 154: temp_buff[0] = reg_data[0];
  5867  0C31  083F               	movf	bmp280_set_regs@reg_data^(0+128),w
  5868  0C32  0086               	movwf	6
  5869  0C33  3001               	movlw	1	; select bank2/3
  5870  0C34  0087               	movwf	7
  5871  0C35  0801               	movf	1,w
  5872  0C36  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5873  0C37  0842               	movf	??_bmp280_set_regs^(0+128),w
  5874  0C38  00C5               	movwf	bmp280_set_regs@temp_buff^(0+128)
  5875                           
  5876                           ;bmp280.c: 156: if (dev->intf == (unsigned char) 0) {
  5877  0C39  0841               	movf	bmp280_set_regs@dev^(0+128),w
  5878  0C3A  3E02               	addlw	2
  5879  0C3B  0086               	movwf	6
  5880  0C3C  3001               	movlw	1	; select bank2/3
  5881  0C3D  0087               	movwf	7
  5882  0C3E  0801               	movf	1,w
  5883  0C3F  1D03               	btfss	3,2
  5884  0C40  2C5E               	goto	l3951
  5885                           
  5886                           ;bmp280.c: 159: for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
  5887  0C41  01CF               	clrf	bmp280_set_regs@reg_addr_cnt^(0+128)
  5888  0C42                     l3949:	
  5889  0C42  0840               	movf	bmp280_set_regs@len^(0+128),w
  5890  0C43  024F               	subwf	bmp280_set_regs@reg_addr_cnt^(0+128),w
  5891  0C44  1803               	btfsc	3,0
  5892  0C45  2C5E               	goto	l3951
  5893                           
  5894                           ;bmp280.c: 160: reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
  5895  0C46  084F               	movf	bmp280_set_regs@reg_addr_cnt^(0+128),w
  5896  0C47  0751               	addwf	bmp280_set_regs@reg_addr^(0+128),w
  5897  0C48  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5898  0C49  0842               	movf	??_bmp280_set_regs^(0+128),w
  5899  0C4A  0086               	movwf	6
  5900  0C4B  3001               	movlw	1	; select bank2/3
  5901  0C4C  0087               	movwf	7
  5902  0C4D  0801               	movf	1,w
  5903  0C4E  397F               	andlw	127
  5904  0C4F  00C3               	movwf	(??_bmp280_set_regs+1)^(0+128)
  5905  0C50  084F               	movf	bmp280_set_regs@reg_addr_cnt^(0+128),w
  5906  0C51  0751               	addwf	bmp280_set_regs@reg_addr^(0+128),w
  5907  0C52  00C4               	movwf	(??_bmp280_set_regs+2)^(0+128)
  5908  0C53  0844               	movf	(??_bmp280_set_regs+2)^(0+128),w
  5909  0C54  0086               	movwf	6
  5910  0C55  3001               	movlw	1	; select bank2/3
  5911  0C56  0087               	movwf	7
  5912  0C57  0843               	movf	(??_bmp280_set_regs+1)^(0+128),w
  5913  0C58  0081               	movwf	1
  5914  0C59  3001               	movlw	1
  5915  0C5A  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5916  0C5B  0842               	movf	??_bmp280_set_regs^(0+128),w
  5917  0C5C  07CF               	addwf	bmp280_set_regs@reg_addr_cnt^(0+128),f
  5918  0C5D  2C42               	goto	l3949
  5919  0C5E                     l3951:	
  5920                           
  5921                           ;bmp280.c: 161: };bmp280.c: 164: if (len > 1) {
  5922  0C5E  3002               	movlw	2
  5923  0C5F  0240               	subwf	bmp280_set_regs@len^(0+128),w
  5924  0C60  1C03               	skipc
  5925  0C61  2C7E               	goto	l3957
  5926                           
  5927                           ;bmp280.c: 166: interleave_data(reg_addr, temp_buff, reg_data, len);
  5928  0C62  30C5               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  5929  0C63  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5930  0C64  0842               	movf	??_bmp280_set_regs^(0+128),w
  5931  0C65  00B2               	movwf	interleave_data@temp_buff^(0+128)
  5932  0C66  083F               	movf	bmp280_set_regs@reg_data^(0+128),w
  5933  0C67  00C3               	movwf	(??_bmp280_set_regs+1)^(0+128)
  5934  0C68  0843               	movf	(??_bmp280_set_regs+1)^(0+128),w
  5935  0C69  00B3               	movwf	interleave_data@reg_data^(0+128)
  5936  0C6A  0840               	movf	bmp280_set_regs@len^(0+128),w
  5937  0C6B  00C4               	movwf	(??_bmp280_set_regs+2)^(0+128)
  5938  0C6C  0844               	movf	(??_bmp280_set_regs+2)^(0+128),w
  5939  0C6D  00B4               	movwf	interleave_data@len^(0+128)
  5940  0C6E  0851               	movf	bmp280_set_regs@reg_addr^(0+128),w
  5941  0C6F  3197  27D0  318C   	fcall	_interleave_data
  5942                           
  5943                           ;bmp280.c: 167: temp_len = ((len * 2) - 1);
  5944  0C72  0141               	movlb	1	; select bank1
  5945  0C73  0840               	movf	bmp280_set_regs@len^(0+128),w
  5946  0C74  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5947  0C75  01C3               	clrf	(??_bmp280_set_regs^(0+128)+1)
  5948  0C76  35C2               	lslf	??_bmp280_set_regs^(0+128),f
  5949  0C77  0DC3               	rlf	(??_bmp280_set_regs^(0+128)+1),f
  5950  0C78  0842               	movf	??_bmp280_set_regs^(0+128),w
  5951  0C79  3EFF               	addlw	255
  5952  0C7A  00CD               	movwf	bmp280_set_regs@temp_len^(0+128)
  5953  0C7B  30FF               	movlw	255
  5954  0C7C  3D43               	addwfc	(??_bmp280_set_regs+1)^(0+128),w
  5955  0C7D  2C84               	goto	L1
  5956  0C7E                     l3957:	
  5957                           ;bmp280.c: 168: } else {
  5958                           
  5959                           
  5960                           ;bmp280.c: 169: temp_len = len;
  5961  0C7E  0840               	movf	bmp280_set_regs@len^(0+128),w
  5962  0C7F  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5963  0C80  01C3               	clrf	(??_bmp280_set_regs^(0+128)+1)
  5964  0C81  0842               	movf	??_bmp280_set_regs^(0+128),w
  5965  0C82  00CD               	movwf	bmp280_set_regs@temp_len^(0+128)
  5966  0C83  0843               	movf	(??_bmp280_set_regs+1)^(0+128),w
  5967  0C84                     L1:	
  5968  0C84  00CE               	movwf	(bmp280_set_regs@temp_len+1)^(0+128)
  5969                           
  5970                           ;bmp280.c: 170: };bmp280.c: 172: rslt = BMP280_SPI_bus_write(0, reg_addr[0], temp_buff, 
      +                          temp_len);
  5971  0C85  01B3               	clrf	BMP280_SPI_bus_write@dev_addr^(0+128)
  5972  0C86  0851               	movf	bmp280_set_regs@reg_addr^(0+128),w
  5973  0C87  0086               	movwf	6
  5974  0C88  3001               	movlw	1	; select bank2/3
  5975  0C89  0087               	movwf	7
  5976  0C8A  0801               	movf	1,w
  5977  0C8B  00C2               	movwf	??_bmp280_set_regs^(0+128)
  5978  0C8C  0842               	movf	??_bmp280_set_regs^(0+128),w
  5979  0C8D  00B4               	movwf	BMP280_SPI_bus_write@reg_addr^(0+128)
  5980  0C8E  30C5               	movlw	low bmp280_set_regs@temp_buff
  5981  0C8F  00B5               	movwf	BMP280_SPI_bus_write@reg_data^(0+128)
  5982  0C90  3000               	movlw	high bmp280_set_regs@temp_buff
  5983  0C91  00B6               	movwf	(BMP280_SPI_bus_write@reg_data+1)^(0+128)
  5984  0C92  084D               	movf	bmp280_set_regs@temp_len^(0+128),w
  5985  0C93  00C3               	movwf	(??_bmp280_set_regs+1)^(0+128)
  5986  0C94  0843               	movf	(??_bmp280_set_regs+1)^(0+128),w
  5987  0C95  00B7               	movwf	BMP280_SPI_bus_write@cnt^(0+128)
  5988  0C96  3188  201C  318C   	fcall	_BMP280_SPI_bus_write
  5989  0C99  0141               	movlb	1	; select bank1
  5990  0C9A  00C4               	movwf	(??_bmp280_set_regs+2)^(0+128)
  5991  0C9B  0844               	movf	(??_bmp280_set_regs+2)^(0+128),w
  5992  0C9C  00D0               	movwf	bmp280_set_regs@rslt^(0+128)
  5993                           
  5994                           ;bmp280.c: 174: if (rslt != (0))
  5995  0C9D  0850               	movf	bmp280_set_regs@rslt^(0+128),w
  5996  0C9E  1903               	btfsc	3,2
  5997  0C9F  2CA9               	goto	l3967
  5998                           
  5999                           ;bmp280.c: 175: rslt = (-4);
  6000  0CA0  30FC               	movlw	252
  6001  0CA1  2CA3               	goto	L2
  6002  0CA2                     l3965:	
  6003                           ;bmp280.c: 176: } else {
  6004                           
  6005                           
  6006                           ;bmp280.c: 177: rslt = (-3);
  6007  0CA2  30FD               	movlw	253
  6008  0CA3                     L2:	
  6009  0CA3  00C2               	movwf	??_bmp280_set_regs^(0+128)
  6010  0CA4  0842               	movf	??_bmp280_set_regs^(0+128),w
  6011  0CA5  00D0               	movwf	bmp280_set_regs@rslt^(0+128)
  6012                           
  6013                           ;bmp280.c: 178: };bmp280.c: 179: } else {
  6014  0CA6  2CA9               	goto	l3967
  6015  0CA7                     l335:	
  6016                           
  6017                           ;bmp280.c: 180: rslt = (-1);
  6018  0CA7  01D0               	clrf	bmp280_set_regs@rslt^(0+128)
  6019  0CA8  03D0               	decf	bmp280_set_regs@rslt^(0+128),f
  6020  0CA9                     l3967:	
  6021                           
  6022                           ;bmp280.c: 181: };bmp280.c: 183: return rslt;
  6023  0CA9  0850               	movf	bmp280_set_regs@rslt^(0+128),w
  6024  0CAA  0008               	return
  6025  0CAB                     __end_of_bmp280_set_regs:	
  6026                           
  6027                           	psect	text10
  6028  17D0                     __ptext10:	
  6029 ;; *************** function _interleave_data *****************
  6030 ;; Defined at:
  6031 ;;		line 605 in file "bmp280.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  reg_addr        1    wreg     PTR const unsigned char 
  6034 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  6035 ;;  temp_buff       1   18[BANK1 ] PTR unsigned char 
  6036 ;;		 -> bmp280_set_regs@temp_buff(8), 
  6037 ;;  reg_data        1   19[BANK1 ] PTR const unsigned char 
  6038 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  6039 ;;  len             1   20[BANK1 ] unsigned char 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  reg_addr        1   24[BANK1 ] PTR const unsigned char 
  6042 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  6043 ;;  index           1   25[BANK1 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        8 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    8
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_bmp280_set_regs
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _interleave_data
  6069  17D0                     _interleave_data:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in _interleave_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  6073                           ;interleave_data@reg_addr stored from wreg
  6074  17D0  0141               	movlb	1	; select bank1
  6075  17D1  00B8               	movwf	interleave_data@reg_addr^(0+128)
  6076                           
  6077                           ;bmp280.c: 607: uint8_t index;;bmp280.c: 609: for (index = 1; index < len; index++) {
  6078  17D2  01B9               	clrf	interleave_data@index^(0+128)
  6079  17D3  0AB9               	incf	interleave_data@index^(0+128),f
  6080  17D4                     l3849:	
  6081  17D4  0834               	movf	interleave_data@len^(0+128),w
  6082  17D5  0239               	subwf	interleave_data@index^(0+128),w
  6083  17D6  1803               	btfsc	3,0
  6084  17D7  0008               	return
  6085                           
  6086                           ;bmp280.c: 610: temp_buff[(index * 2) - 1] = reg_addr[index];
  6087  17D8  0839               	movf	interleave_data@index^(0+128),w
  6088  17D9  0738               	addwf	interleave_data@reg_addr^(0+128),w
  6089  17DA  00B5               	movwf	??_interleave_data^(0+128)
  6090  17DB  0835               	movf	??_interleave_data^(0+128),w
  6091  17DC  0086               	movwf	6
  6092  17DD  3001               	movlw	1	; select bank2/3
  6093  17DE  0087               	movwf	7
  6094  17DF  0801               	movf	1,w
  6095  17E0  00B6               	movwf	(??_interleave_data+1)^(0+128)
  6096  17E1  3539               	lslf	interleave_data@index^(0+128),w
  6097  17E2  3EFF               	addlw	-1
  6098  17E3  0732               	addwf	interleave_data@temp_buff^(0+128),w
  6099  17E4  00B7               	movwf	(??_interleave_data+2)^(0+128)
  6100  17E5  0837               	movf	(??_interleave_data+2)^(0+128),w
  6101  17E6  0086               	movwf	6
  6102  17E7  0187               	clrf	7
  6103  17E8  0836               	movf	(??_interleave_data+1)^(0+128),w
  6104  17E9  0081               	movwf	1
  6105                           
  6106                           ;bmp280.c: 611: temp_buff[index * 2] = reg_data[index];
  6107  17EA  0839               	movf	interleave_data@index^(0+128),w
  6108  17EB  0733               	addwf	interleave_data@reg_data^(0+128),w
  6109  17EC  00B5               	movwf	??_interleave_data^(0+128)
  6110  17ED  0835               	movf	??_interleave_data^(0+128),w
  6111  17EE  0086               	movwf	6
  6112  17EF  3001               	movlw	1	; select bank2/3
  6113  17F0  0087               	movwf	7
  6114  17F1  0801               	movf	1,w
  6115  17F2  00B6               	movwf	(??_interleave_data+1)^(0+128)
  6116  17F3  3539               	lslf	interleave_data@index^(0+128),w
  6117  17F4  0732               	addwf	interleave_data@temp_buff^(0+128),w
  6118  17F5  00B7               	movwf	(??_interleave_data+2)^(0+128)
  6119  17F6  0837               	movf	(??_interleave_data+2)^(0+128),w
  6120  17F7  0086               	movwf	6
  6121  17F8  0187               	clrf	7
  6122  17F9  0836               	movf	(??_interleave_data+1)^(0+128),w
  6123  17FA  0081               	movwf	1
  6124  17FB  3001               	movlw	1
  6125  17FC  00B5               	movwf	??_interleave_data^(0+128)
  6126  17FD  0835               	movf	??_interleave_data^(0+128),w
  6127  17FE  07B9               	addwf	interleave_data@index^(0+128),f
  6128  17FF  2FD4               	goto	l3849
  6129  1800                     __end_of_interleave_data:	
  6130                           
  6131                           	psect	text11
  6132  081C                     __ptext11:	
  6133 ;; *************** function _BMP280_SPI_bus_write *****************
  6134 ;; Defined at:
  6135 ;;		line 62 in file "main.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  dev_addr        1   19[BANK1 ] unsigned char 
  6138 ;;  reg_addr        1   20[BANK1 ] unsigned char 
  6139 ;;  reg_data        2   21[BANK1 ] PTR unsigned char 
  6140 ;;		 -> bmp280_set_regs@temp_buff(8), main@tx(2), 
  6141 ;;  cnt             1   23[BANK1 ] unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  iError          4   26[BANK1 ] long 
  6144 ;;  i               1   30[BANK1 ] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      char 
  6147 ;; Registers used:
  6148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6154 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;Total ram usage:       12 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    9
  6161 ;; This function calls:
  6162 ;;		_spi1_exchangeByte
  6163 ;; This function is called by:
  6164 ;;		_main
  6165 ;;		_bmp280_set_regs
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function _BMP280_SPI_bus_write
  6171  081C                     _BMP280_SPI_bus_write:	
  6172                           
  6173                           ;main.c: 64: int32_t iError=(0);
  6174                           
  6175                           ;incstack = 0
  6176                           ; Regs used in _BMP280_SPI_bus_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6177  081C  3000               	movlw	0
  6178  081D  0141               	movlb	1	; select bank1
  6179  081E  00BD               	movwf	(BMP280_SPI_bus_write@iError+3)^(0+128)
  6180  081F  3000               	movlw	0
  6181  0820  00BC               	movwf	(BMP280_SPI_bus_write@iError+2)^(0+128)
  6182  0821  3000               	movlw	0
  6183  0822  00BB               	movwf	(BMP280_SPI_bus_write@iError+1)^(0+128)
  6184  0823  3000               	movlw	0
  6185  0824  00BA               	movwf	BMP280_SPI_bus_write@iError^(0+128)
  6186                           
  6187                           ;main.c: 66: uint8_t i;;main.c: 68: do { LATAbits.LATA2 = 0; } while(0);
  6188  0825  0140               	movlb	0	; select bank0
  6189  0826  1118               	bcf	24,2	;volatile
  6190                           
  6191                           ;main.c: 69: spi1_exchangeByte(reg_addr);
  6192  0827  0141               	movlb	1	; select bank1
  6193  0828  0834               	movf	BMP280_SPI_bus_write@reg_addr^(0+128),w
  6194  0829  3196  2682  3188   	fcall	_spi1_exchangeByte
  6195                           
  6196                           ;main.c: 70: for (i=0; i<cnt; i++){
  6197  082C  0141               	movlb	1	; select bank1
  6198  082D  01BE               	clrf	BMP280_SPI_bus_write@i^(0+128)
  6199  082E                     l3821:	
  6200  082E  0837               	movf	BMP280_SPI_bus_write@cnt^(0+128),w
  6201  082F  023E               	subwf	BMP280_SPI_bus_write@i^(0+128),w
  6202  0830  1803               	btfsc	3,0
  6203  0831  2845               	goto	l3823
  6204                           
  6205                           ;main.c: 71: spi1_exchangeByte(*(reg_data + i));
  6206  0832  083E               	movf	BMP280_SPI_bus_write@i^(0+128),w
  6207  0833  00B8               	movwf	??_BMP280_SPI_bus_write^(0+128)
  6208  0834  01B9               	clrf	(??_BMP280_SPI_bus_write^(0+128)+1)
  6209  0835  0838               	movf	??_BMP280_SPI_bus_write^(0+128),w
  6210  0836  0735               	addwf	BMP280_SPI_bus_write@reg_data^(0+128),w
  6211  0837  0086               	movwf	6
  6212  0838  0839               	movf	(??_BMP280_SPI_bus_write+1)^(0+128),w
  6213  0839  3D36               	addwfc	(BMP280_SPI_bus_write@reg_data+1)^(0+128),w
  6214  083A  0087               	movwf	7
  6215  083B  0801               	movf	1,w
  6216  083C  3196  2682  3188   	fcall	_spi1_exchangeByte
  6217  083F  3001               	movlw	1
  6218  0840  0141               	movlb	1	; select bank1
  6219  0841  00B8               	movwf	??_BMP280_SPI_bus_write^(0+128)
  6220  0842  0838               	movf	??_BMP280_SPI_bus_write^(0+128),w
  6221  0843  07BE               	addwf	BMP280_SPI_bus_write@i^(0+128),f
  6222  0844  282E               	goto	l3821
  6223  0845                     l3823:	
  6224                           
  6225                           ;main.c: 72: };main.c: 74: _delay((unsigned long)((10)*(4000000/4000.0)));
  6226  0845  300D               	movlw	13
  6227  0846  0141               	movlb	1	; select bank1
  6228  0847  00B8               	movwf	??_BMP280_SPI_bus_write^(0+128)
  6229  0848  30FB               	movlw	251
  6230  0849                     u5907:	
  6231  0849  0B89               	decfsz	9,f
  6232  084A  2849               	goto	u5907
  6233  084B  0BB8               	decfsz	??_BMP280_SPI_bus_write^(0+128),f
  6234  084C  2849               	goto	u5907
  6235  084D  3200               	nop2
  6236                           
  6237                           ;main.c: 75: do { LATAbits.LATA2 = 1; } while(0);
  6238  084E  0140               	movlb	0	; select bank0
  6239  084F  1518               	bsf	24,2	;volatile
  6240                           
  6241                           ;main.c: 76: return (int8_t)iError;
  6242  0850  0141               	movlb	1	; select bank1
  6243  0851  083A               	movf	BMP280_SPI_bus_write@iError^(0+128),w
  6244  0852  0008               	return
  6245  0853                     __end_of_BMP280_SPI_bus_write:	
  6246                           
  6247                           	psect	text12
  6248  177A                     __ptext12:	
  6249 ;; *************** function _BMP280_delay_msek *****************
  6250 ;; Defined at:
  6251 ;;		line 30 in file "main.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  msek            4   18[BANK1 ] unsigned long 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  i               4   22[BANK1 ] unsigned long 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6265 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;Total ram usage:        8 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    8
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_main
  6276 ;;		_bmp280_soft_reset
  6277 ;;		_bmp280_init
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _BMP280_delay_msek
  6283  177A                     _BMP280_delay_msek:	
  6284                           
  6285                           ;main.c: 32: uint32_t i;;main.c: 34: for (i=0; i<msek; i++){
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in _BMP280_delay_msek: [wreg]
  6289  177A  3000               	movlw	0
  6290  177B  0141               	movlb	1	; select bank1
  6291  177C  00B9               	movwf	(BMP280_delay_msek@i+3)^(0+128)
  6292  177D  3000               	movlw	0
  6293  177E  00B8               	movwf	(BMP280_delay_msek@i+2)^(0+128)
  6294  177F  3000               	movlw	0
  6295  1780  00B7               	movwf	(BMP280_delay_msek@i+1)^(0+128)
  6296  1781  3000               	movlw	0
  6297  1782  00B6               	movwf	BMP280_delay_msek@i^(0+128)
  6298  1783                     l271:	
  6299  1783  0835               	movf	(BMP280_delay_msek@msek+3)^(0+128),w
  6300  1784  0239               	subwf	(BMP280_delay_msek@i+3)^(0+128),w
  6301  1785  1D03               	skipz
  6302  1786  2F91               	goto	u5135
  6303  1787  0834               	movf	(BMP280_delay_msek@msek+2)^(0+128),w
  6304  1788  0238               	subwf	(BMP280_delay_msek@i+2)^(0+128),w
  6305  1789  1D03               	skipz
  6306  178A  2F91               	goto	u5135
  6307  178B  0833               	movf	(BMP280_delay_msek@msek+1)^(0+128),w
  6308  178C  0237               	subwf	(BMP280_delay_msek@i+1)^(0+128),w
  6309  178D  1D03               	skipz
  6310  178E  2F91               	goto	u5135
  6311  178F  0832               	movf	BMP280_delay_msek@msek^(0+128),w
  6312  1790  0236               	subwf	BMP280_delay_msek@i^(0+128),w
  6313  1791                     u5135:	
  6314  1791  1803               	btfsc	3,0
  6315  1792  0008               	return
  6316                           
  6317                           ;main.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  6318  1793  30C8               	movlw	200
  6319  1794                     u5917:	
  6320  1794  3200               	nop2
  6321  1795  0B89               	decfsz	9,f
  6322  1796  2F94               	goto	u5917
  6323  1797  3001               	movlw	1
  6324  1798  0141               	movlb	1	; select bank1
  6325  1799  07B6               	addwf	BMP280_delay_msek@i^(0+128),f
  6326  179A  3000               	movlw	0
  6327  179B  3DB7               	addwfc	(BMP280_delay_msek@i+1)^(0+128),f
  6328  179C  3000               	movlw	0
  6329  179D  3DB8               	addwfc	(BMP280_delay_msek@i+2)^(0+128),f
  6330  179E  3000               	movlw	0
  6331  179F  3DB9               	addwfc	(BMP280_delay_msek@i+3)^(0+128),f
  6332  17A0  2F83               	goto	l271
  6333  17A1                     __end_of_BMP280_delay_msek:	
  6334                           
  6335                           	psect	text13
  6336  0AF0                     __ptext13:	
  6337 ;; *************** function _bmp280_get_config *****************
  6338 ;; Defined at:
  6339 ;;		line 263 in file "bmp280.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  conf            1    wreg     PTR struct bmp280_config
  6342 ;;		 -> main@conf(5), 
  6343 ;;  dev             1   34[BANK1 ] PTR struct bmp280_dev
  6344 ;;		 -> bmp(42), 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  conf            1   41[BANK1 ] PTR struct bmp280_config
  6347 ;;		 -> main@conf(5), 
  6348 ;;  temp            2   39[BANK1 ] unsigned char [2]
  6349 ;;  rslt            1   38[BANK1 ] char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      char 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6359 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;Total ram usage:        8 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:   11
  6366 ;; This function calls:
  6367 ;;		_bmp280_get_regs
  6368 ;;		_null_ptr_check
  6369 ;; This function is called by:
  6370 ;;		_main
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function _bmp280_get_config
  6376  0AF0                     _bmp280_get_config:	
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in _bmp280_get_config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6380                           ;bmp280_get_config@conf stored from wreg
  6381  0AF0  0141               	movlb	1	; select bank1
  6382  0AF1  00C9               	movwf	bmp280_get_config@conf^(0+128)
  6383                           
  6384                           ;bmp280.c: 265: int8_t rslt;;bmp280.c: 266: uint8_t temp[2] = {0, 0};
  6385  0AF2  085D               	movf	(bmp280_get_config@F6430+1)^(0+128),w
  6386  0AF3  00C8               	movwf	(bmp280_get_config@temp+1)^(0+128)
  6387  0AF4  085C               	movf	bmp280_get_config@F6430^(0+128),w
  6388  0AF5  00C7               	movwf	bmp280_get_config@temp^(0+128)
  6389                           
  6390                           ;bmp280.c: 268: rslt = null_ptr_check(dev);
  6391  0AF6  0842               	movf	bmp280_get_config@dev^(0+128),w
  6392  0AF7  3197  272D  318A   	fcall	_null_ptr_check
  6393  0AFA  0141               	movlb	1	; select bank1
  6394  0AFB  00C3               	movwf	??_bmp280_get_config^(0+128)
  6395  0AFC  0843               	movf	??_bmp280_get_config^(0+128),w
  6396  0AFD  00C6               	movwf	bmp280_get_config@rslt^(0+128)
  6397                           
  6398                           ;bmp280.c: 270: if ((rslt == (0)) && (conf != (0))) {
  6399  0AFE  0846               	movf	bmp280_get_config@rslt^(0+128),w
  6400  0AFF  1D03               	btfss	3,2
  6401  0B00  2B78               	goto	l368
  6402  0B01  0849               	movf	bmp280_get_config@conf^(0+128),w
  6403  0B02  1903               	btfsc	3,2
  6404  0B03  2B78               	goto	l368
  6405                           
  6406                           ;bmp280.c: 271: rslt = bmp280_get_regs((unsigned char) 0xF4, temp, 2, dev);
  6407  0B04  30C7               	movlw	low bmp280_get_config@temp
  6408  0B05  0142               	movlb	2	; select bank2
  6409  0B06  00C4               	movwf	bmp280_get_regs@reg_data^(0+256)
  6410  0B07  3000               	movlw	high bmp280_get_config@temp
  6411  0B08  00C5               	movwf	(bmp280_get_regs@reg_data+1)^(0+256)
  6412  0B09  3002               	movlw	2
  6413  0B0A  0141               	movlb	1	; select bank1
  6414  0B0B  00C3               	movwf	??_bmp280_get_config^(0+128)
  6415  0B0C  0843               	movf	??_bmp280_get_config^(0+128),w
  6416  0B0D  0142               	movlb	2	; select bank2
  6417  0B0E  00C6               	movwf	bmp280_get_regs@len^(0+256)
  6418  0B0F  0141               	movlb	1	; select bank1
  6419  0B10  0842               	movf	bmp280_get_config@dev^(0+128),w
  6420  0B11  00C4               	movwf	(??_bmp280_get_config+1)^(0+128)
  6421  0B12  0844               	movf	(??_bmp280_get_config+1)^(0+128),w
  6422  0B13  0142               	movlb	2	; select bank2
  6423  0B14  00C7               	movwf	bmp280_get_regs@dev^(0+256)
  6424  0B15  30F4               	movlw	244
  6425  0B16  3189  2137  318A   	fcall	_bmp280_get_regs
  6426  0B19  0141               	movlb	1	; select bank1
  6427  0B1A  00C5               	movwf	(??_bmp280_get_config+2)^(0+128)
  6428  0B1B  0845               	movf	(??_bmp280_get_config+2)^(0+128),w
  6429  0B1C  00C6               	movwf	bmp280_get_config@rslt^(0+128)
  6430                           
  6431                           ;bmp280.c: 273: if (rslt == (0)) {
  6432  0B1D  0846               	movf	bmp280_get_config@rslt^(0+128),w
  6433  0B1E  1D03               	btfss	3,2
  6434  0B1F  2B7A               	goto	l4157
  6435                           
  6436                           ;bmp280.c: 274: conf->os_temp = ((temp[0] & (unsigned char) 0xE0) >> (unsigned char) 5);
  6437  0B20  0847               	movf	bmp280_get_config@temp^(0+128),w
  6438  0B21  00C3               	movwf	??_bmp280_get_config^(0+128)
  6439  0B22  3005               	movlw	5
  6440  0B23                     u5735:	
  6441  0B23  36C3               	lsrf	??_bmp280_get_config^(0+128),f
  6442  0B24  0B89               	decfsz	9,f
  6443  0B25  2B23               	goto	u5735
  6444  0B26  0843               	movf	??_bmp280_get_config^(0+128),w
  6445  0B27  3907               	andlw	7
  6446  0B28  00C4               	movwf	(??_bmp280_get_config+1)^(0+128)
  6447  0B29  0849               	movf	bmp280_get_config@conf^(0+128),w
  6448  0B2A  0086               	movwf	6
  6449  0B2B  3001               	movlw	1	; select bank2/3
  6450  0B2C  0087               	movwf	7
  6451  0B2D  0844               	movf	(??_bmp280_get_config+1)^(0+128),w
  6452  0B2E  0081               	movwf	1
  6453                           
  6454                           ;bmp280.c: 275: conf->os_pres = ((temp[0] & (unsigned char) 0x1C) >> (unsigned char) 2);
  6455  0B2F  0847               	movf	bmp280_get_config@temp^(0+128),w
  6456  0B30  00C3               	movwf	??_bmp280_get_config^(0+128)
  6457  0B31  3002               	movlw	2
  6458  0B32                     u5745:	
  6459  0B32  36C3               	lsrf	??_bmp280_get_config^(0+128),f
  6460  0B33  0B89               	decfsz	9,f
  6461  0B34  2B32               	goto	u5745
  6462  0B35  0843               	movf	??_bmp280_get_config^(0+128),w
  6463  0B36  3907               	andlw	7
  6464  0B37  00C4               	movwf	(??_bmp280_get_config+1)^(0+128)
  6465  0B38  0A49               	incf	bmp280_get_config@conf^(0+128),w
  6466  0B39  0086               	movwf	6
  6467  0B3A  3001               	movlw	1	; select bank2/3
  6468  0B3B  0087               	movwf	7
  6469  0B3C  0844               	movf	(??_bmp280_get_config+1)^(0+128),w
  6470  0B3D  0081               	movwf	1
  6471                           
  6472                           ;bmp280.c: 276: conf->odr = ((temp[1] & (unsigned char) 0xE0) >> (unsigned char) 5);
  6473  0B3E  0848               	movf	(bmp280_get_config@temp^(0+128)+1),w
  6474  0B3F  00C3               	movwf	??_bmp280_get_config^(0+128)
  6475  0B40  3005               	movlw	5
  6476  0B41                     u5755:	
  6477  0B41  36C3               	lsrf	??_bmp280_get_config^(0+128),f
  6478  0B42  0B89               	decfsz	9,f
  6479  0B43  2B41               	goto	u5755
  6480  0B44  0843               	movf	??_bmp280_get_config^(0+128),w
  6481  0B45  3907               	andlw	7
  6482  0B46  00C4               	movwf	(??_bmp280_get_config+1)^(0+128)
  6483  0B47  0849               	movf	bmp280_get_config@conf^(0+128),w
  6484  0B48  3E02               	addlw	2
  6485  0B49  0086               	movwf	6
  6486  0B4A  3001               	movlw	1	; select bank2/3
  6487  0B4B  0087               	movwf	7
  6488  0B4C  0844               	movf	(??_bmp280_get_config+1)^(0+128),w
  6489  0B4D  0081               	movwf	1
  6490                           
  6491                           ;bmp280.c: 277: conf->filter = ((temp[1] & (unsigned char) 0x1C) >> (unsigned char) 2);
  6492  0B4E  0848               	movf	(bmp280_get_config@temp^(0+128)+1),w
  6493  0B4F  00C3               	movwf	??_bmp280_get_config^(0+128)
  6494  0B50  3002               	movlw	2
  6495  0B51                     u5765:	
  6496  0B51  36C3               	lsrf	??_bmp280_get_config^(0+128),f
  6497  0B52  0B89               	decfsz	9,f
  6498  0B53  2B51               	goto	u5765
  6499  0B54  0843               	movf	??_bmp280_get_config^(0+128),w
  6500  0B55  3907               	andlw	7
  6501  0B56  00C4               	movwf	(??_bmp280_get_config+1)^(0+128)
  6502  0B57  0849               	movf	bmp280_get_config@conf^(0+128),w
  6503  0B58  3E03               	addlw	3
  6504  0B59  0086               	movwf	6
  6505  0B5A  3001               	movlw	1	; select bank2/3
  6506  0B5B  0087               	movwf	7
  6507  0B5C  0844               	movf	(??_bmp280_get_config+1)^(0+128),w
  6508  0B5D  0081               	movwf	1
  6509                           
  6510                           ;bmp280.c: 278: conf->spi3w_en = (temp[1] & ((unsigned char) 0x01));
  6511  0B5E  0848               	movf	(bmp280_get_config@temp^(0+128)+1),w
  6512  0B5F  3901               	andlw	1
  6513  0B60  00C3               	movwf	??_bmp280_get_config^(0+128)
  6514  0B61  0849               	movf	bmp280_get_config@conf^(0+128),w
  6515  0B62  3E04               	addlw	4
  6516  0B63  0086               	movwf	6
  6517  0B64  3001               	movlw	1	; select bank2/3
  6518  0B65  0087               	movwf	7
  6519  0B66  0843               	movf	??_bmp280_get_config^(0+128),w
  6520  0B67  0081               	movwf	1
  6521                           
  6522                           ;bmp280.c: 280: dev->conf = *conf;
  6523  0B68  0849               	movf	bmp280_get_config@conf^(0+128),w
  6524  0B69  0086               	movwf	6
  6525  0B6A  3001               	movlw	1	; select bank2/3
  6526  0B6B  0087               	movwf	7
  6527  0B6C  0842               	movf	bmp280_get_config@dev^(0+128),w
  6528  0B6D  3E25               	addlw	37
  6529  0B6E  0084               	movwf	4
  6530  0B6F  3001               	movlw	1	; select bank2/3
  6531  0B70  0085               	movwf	5
  6532  0B71  3005               	movlw	5
  6533  0B72  00C3               	movwf	??_bmp280_get_config^(0+128)
  6534  0B73                     u5770:	
  6535  0B73  0016               	moviw fsr1++
  6536  0B74  001A               	movwi fsr0++
  6537  0B75  0BC3               	decfsz	??_bmp280_get_config^(0+128),f
  6538  0B76  2B73               	goto	u5770
  6539                           
  6540                           ;bmp280.c: 281: };bmp280.c: 282: } else {
  6541  0B77  2B7A               	goto	l4157
  6542  0B78                     l368:	
  6543                           
  6544                           ;bmp280.c: 283: rslt = (-1);
  6545  0B78  01C6               	clrf	bmp280_get_config@rslt^(0+128)
  6546  0B79  03C6               	decf	bmp280_get_config@rslt^(0+128),f
  6547  0B7A                     l4157:	
  6548                           
  6549                           ;bmp280.c: 284: };bmp280.c: 286: return rslt;
  6550  0B7A  0846               	movf	bmp280_get_config@rslt^(0+128),w
  6551  0B7B  0008               	return
  6552  0B7C                     __end_of_bmp280_get_config:	
  6553                           
  6554                           	psect	text14
  6555  0937                     __ptext14:	
  6556 ;; *************** function _bmp280_get_regs *****************
  6557 ;; Defined at:
  6558 ;;		line 114 in file "bmp280.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  reg_addr        1    wreg     unsigned char 
  6561 ;;  reg_data        2   36[BANK2 ] PTR unsigned char 
  6562 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  6563 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  6564 ;;  len             1   38[BANK2 ] unsigned char 
  6565 ;;  dev             1   39[BANK2 ] PTR const struct bmp280_
  6566 ;;		 -> bmp(42), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  reg_addr        1   32[BANK1 ] unsigned char 
  6569 ;;  rslt            1   33[BANK1 ] char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      char 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        9 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:   10
  6586 ;; This function calls:
  6587 ;;		_BMP280_SPI_bus_read
  6588 ;;		_null_ptr_check
  6589 ;; This function is called by:
  6590 ;;		_bmp280_init
  6591 ;;		_bmp280_get_config
  6592 ;;		_get_calib_param
  6593 ;;		_conf_sensor
  6594 ;;		_bmp280_get_status
  6595 ;;		_bmp280_get_power_mode
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _bmp280_get_regs
  6601  0937                     _bmp280_get_regs:	
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _bmp280_get_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6605                           ;bmp280_get_regs@reg_addr stored from wreg
  6606  0937  0141               	movlb	1	; select bank1
  6607  0938  00C0               	movwf	bmp280_get_regs@reg_addr^(0+128)
  6608                           
  6609                           ;bmp280.c: 116: int8_t rslt;;bmp280.c: 118: rslt = null_ptr_check(dev);
  6610  0939  0142               	movlb	2	; select bank2
  6611  093A  0847               	movf	bmp280_get_regs@dev^(0+256),w
  6612  093B  3197  272D  3189   	fcall	_null_ptr_check
  6613  093E  0141               	movlb	1	; select bank1
  6614  093F  00BD               	movwf	??_bmp280_get_regs^(0+128)
  6615  0940  083D               	movf	??_bmp280_get_regs^(0+128),w
  6616  0941  00C1               	movwf	bmp280_get_regs@rslt^(0+128)
  6617                           
  6618                           ;bmp280.c: 120: if ((rslt == (0)) && (reg_data != (0))) {
  6619  0942  0841               	movf	bmp280_get_regs@rslt^(0+128),w
  6620  0943  1D03               	btfss	3,2
  6621  0944  298A               	goto	l327
  6622  0945  0142               	movlb	2	; select bank2
  6623  0946  0844               	movf	bmp280_get_regs@reg_data^(0+256),w
  6624  0947  0445               	iorwf	(bmp280_get_regs@reg_data+1)^(0+256),w
  6625  0948  1903               	btfsc	3,2
  6626  0949  298A               	goto	l327
  6627                           
  6628                           ;bmp280.c: 122: if (dev->intf == (unsigned char) 0)
  6629  094A  0847               	movf	bmp280_get_regs@dev^(0+256),w
  6630  094B  3E02               	addlw	2
  6631  094C  0086               	movwf	6
  6632  094D  3001               	movlw	1	; select bank2/3
  6633  094E  0087               	movwf	7
  6634  094F  0801               	movf	1,w
  6635  0950  1D03               	btfss	3,2
  6636  0951  2958               	goto	l4023
  6637                           
  6638                           ;bmp280.c: 123: reg_addr = reg_addr | 0x80;
  6639  0952  0141               	movlb	1	; select bank1
  6640  0953  0840               	movf	bmp280_get_regs@reg_addr^(0+128),w
  6641  0954  3880               	iorlw	128
  6642  0955  00BD               	movwf	??_bmp280_get_regs^(0+128)
  6643  0956  083D               	movf	??_bmp280_get_regs^(0+128),w
  6644  0957  00C0               	movwf	bmp280_get_regs@reg_addr^(0+128)
  6645  0958                     l4023:	
  6646                           
  6647                           ;bmp280.c: 125: rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
  6648  0958  0142               	movlb	2	; select bank2
  6649  0959  0847               	movf	bmp280_get_regs@dev^(0+256),w
  6650  095A  0086               	movwf	6
  6651  095B  3001               	movlw	1	; select bank2/3
  6652  095C  0087               	movwf	7
  6653  095D  3001               	movlw	1	; select bank2/3
  6654  095E  3F41               	moviw [1]fsr1
  6655  095F  0141               	movlb	1	; select bank1
  6656  0960  00B3               	movwf	BMP280_SPI_bus_read@dev_addr^(0+128)
  6657  0961  0840               	movf	bmp280_get_regs@reg_addr^(0+128),w
  6658  0962  00BD               	movwf	??_bmp280_get_regs^(0+128)
  6659  0963  083D               	movf	??_bmp280_get_regs^(0+128),w
  6660  0964  00B4               	movwf	BMP280_SPI_bus_read@reg_addr^(0+128)
  6661  0965  0142               	movlb	2	; select bank2
  6662  0966  0845               	movf	(bmp280_get_regs@reg_data+1)^(0+256),w
  6663  0967  0141               	movlb	1	; select bank1
  6664  0968  00B6               	movwf	(BMP280_SPI_bus_read@reg_data+1)^(0+128)
  6665  0969  0142               	movlb	2	; select bank2
  6666  096A  0844               	movf	bmp280_get_regs@reg_data^(0+256),w
  6667  096B  0141               	movlb	1	; select bank1
  6668  096C  00B5               	movwf	BMP280_SPI_bus_read@reg_data^(0+128)
  6669  096D  0142               	movlb	2	; select bank2
  6670  096E  0846               	movf	bmp280_get_regs@len^(0+256),w
  6671  096F  0141               	movlb	1	; select bank1
  6672  0970  00BE               	movwf	(??_bmp280_get_regs+1)^(0+128)
  6673  0971  083E               	movf	(??_bmp280_get_regs+1)^(0+128),w
  6674  0972  00B7               	movwf	BMP280_SPI_bus_read@cnt^(0+128)
  6675  0973  0142               	movlb	2	; select bank2
  6676  0974  0847               	movf	bmp280_get_regs@dev^(0+256),w
  6677  0975  3E03               	addlw	3
  6678  0976  0086               	movwf	6
  6679  0977  3001               	movlw	1	; select bank2/3
  6680  0978  0087               	movwf	7
  6681  0979  3F41               	moviw [1]fsr1
  6682  097A  008A               	movwf	10
  6683  097B  3F40               	moviw [0]fsr1
  6684  097C  000A               	callw
  6685  097D  3189               	pagesel	$
  6686  097E  0141               	movlb	1	; select bank1
  6687  097F  00BF               	movwf	(??_bmp280_get_regs+2)^(0+128)
  6688  0980  083F               	movf	(??_bmp280_get_regs+2)^(0+128),w
  6689  0981  00C1               	movwf	bmp280_get_regs@rslt^(0+128)
  6690                           
  6691                           ;bmp280.c: 127: if (rslt != (0))
  6692  0982  0841               	movf	bmp280_get_regs@rslt^(0+128),w
  6693  0983  1903               	btfsc	3,2
  6694  0984  298D               	goto	l4029
  6695                           
  6696                           ;bmp280.c: 128: rslt = (-4);
  6697  0985  30FC               	movlw	252
  6698  0986  00BD               	movwf	??_bmp280_get_regs^(0+128)
  6699  0987  083D               	movf	??_bmp280_get_regs^(0+128),w
  6700  0988  00C1               	movwf	bmp280_get_regs@rslt^(0+128)
  6701                           
  6702                           ;bmp280.c: 129: } else {
  6703  0989  298D               	goto	l4029
  6704  098A                     l327:	
  6705                           
  6706                           ;bmp280.c: 130: rslt = (-1);
  6707  098A  0141               	movlb	1	; select bank1
  6708  098B  01C1               	clrf	bmp280_get_regs@rslt^(0+128)
  6709  098C  03C1               	decf	bmp280_get_regs@rslt^(0+128),f
  6710  098D                     l4029:	
  6711                           
  6712                           ;bmp280.c: 131: };bmp280.c: 133: return rslt;
  6713  098D  0841               	movf	bmp280_get_regs@rslt^(0+128),w
  6714  098E  0008               	return
  6715  098F                     __end_of_bmp280_get_regs:	
  6716                           
  6717                           	psect	text15
  6718  172D                     __ptext15:	
  6719 ;; *************** function _null_ptr_check *****************
  6720 ;; Defined at:
  6721 ;;		line 587 in file "bmp280.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  dev             1    wreg     PTR const struct bmp280_
  6724 ;;		 -> bmp(42), 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  dev             1   21[BANK1 ] PTR const struct bmp280_
  6727 ;;		 -> bmp(42), 
  6728 ;;  rslt            1   20[BANK1 ] char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      char 
  6731 ;; Registers used:
  6732 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;Total ram usage:        4 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    8
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_bmp280_get_regs
  6749 ;;		_bmp280_set_regs
  6750 ;;		_bmp280_soft_reset
  6751 ;;		_bmp280_init
  6752 ;;		_bmp280_get_config
  6753 ;;		_bmp280_set_power_mode
  6754 ;;		_get_calib_param
  6755 ;;		_conf_sensor
  6756 ;;		_bmp280_get_status
  6757 ;;		_bmp280_get_power_mode
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function _null_ptr_check
  6763  172D                     _null_ptr_check:	
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
  6767                           ;null_ptr_check@dev stored from wreg
  6768  172D  0141               	movlb	1	; select bank1
  6769  172E  00B5               	movwf	null_ptr_check@dev^(0+128)
  6770                           
  6771                           ;bmp280.c: 589: int8_t rslt;;bmp280.c: 591: if ((dev == (0)) || (dev->read == (0)) || (d
      +                          ev->write == (0)) || (dev->delay_ms == (0))) {
  6772  172F  0835               	movf	null_ptr_check@dev^(0+128),w
  6773  1730  1903               	btfsc	3,2
  6774  1731  2F4D               	goto	l424
  6775  1732  0835               	movf	null_ptr_check@dev^(0+128),w
  6776  1733  3E03               	addlw	3
  6777  1734  0086               	movwf	6
  6778  1735  3001               	movlw	1	; select bank2/3
  6779  1736  0087               	movwf	7
  6780  1737  0016               	moviw fsr1++
  6781  1738  0401               	iorwf	1,w
  6782  1739  1903               	btfsc	3,2
  6783  173A  2F4D               	goto	l424
  6784  173B  0835               	movf	null_ptr_check@dev^(0+128),w
  6785  173C  3E05               	addlw	5
  6786  173D  0086               	movwf	6
  6787  173E  3001               	movlw	1	; select bank2/3
  6788  173F  0087               	movwf	7
  6789  1740  0016               	moviw fsr1++
  6790  1741  0401               	iorwf	1,w
  6791  1742  1903               	btfsc	3,2
  6792  1743  2F4D               	goto	l424
  6793  1744  0835               	movf	null_ptr_check@dev^(0+128),w
  6794  1745  3E07               	addlw	7
  6795  1746  0086               	movwf	6
  6796  1747  3001               	movlw	1	; select bank2/3
  6797  1748  0087               	movwf	7
  6798  1749  0016               	moviw fsr1++
  6799  174A  0401               	iorwf	1,w
  6800  174B  1D03               	btfss	3,2
  6801  174C  2F50               	goto	l3837
  6802  174D                     l424:	
  6803                           
  6804                           ;bmp280.c: 593: rslt = (-1);
  6805  174D  01B4               	clrf	null_ptr_check@rslt^(0+128)
  6806  174E  03B4               	decf	null_ptr_check@rslt^(0+128),f
  6807                           
  6808                           ;bmp280.c: 594: } else {
  6809  174F  2F51               	goto	l3839
  6810  1750                     l3837:	
  6811                           
  6812                           ;bmp280.c: 595: rslt = (0);
  6813  1750  01B4               	clrf	null_ptr_check@rslt^(0+128)
  6814  1751                     l3839:	
  6815                           
  6816                           ;bmp280.c: 596: };bmp280.c: 598: return rslt;
  6817  1751  0834               	movf	null_ptr_check@rslt^(0+128),w
  6818  1752  0008               	return
  6819  1753                     __end_of_null_ptr_check:	
  6820                           
  6821                           	psect	text16
  6822  0A64                     __ptext16:	
  6823 ;; *************** function _BMP280_SPI_bus_read *****************
  6824 ;; Defined at:
  6825 ;;		line 39 in file "main.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  dev_addr        1   19[BANK1 ] unsigned char 
  6828 ;;  reg_addr        1   20[BANK1 ] unsigned char 
  6829 ;;  reg_data        2   21[BANK1 ] PTR unsigned char 
  6830 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  6831 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  6832 ;;  cnt             1   23[BANK1 ] unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  array          30    0[BANK2 ] char [30]
  6835 ;;  iError          4   30[BANK2 ] long 
  6836 ;;  i               1   35[BANK2 ] unsigned char 
  6837 ;;  stringpos       1   34[BANK2 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      char 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6847 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;      Locals:         0       0       0      36       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;      Totals:         0       0      10      36       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;Total ram usage:       46 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    9
  6854 ;; This function calls:
  6855 ;;		_spi1_exchangeByte
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;;		i1_bmp280_get_regs
  6859 ;;		_bmp280_get_regs
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           
  6864                           ;psect for function _BMP280_SPI_bus_read
  6865  0A64                     _BMP280_SPI_bus_read:	
  6866                           
  6867                           ;Skip over the trampoline to the duplicate function for level 1
  6868  0A64  1C7E               	btfss	126,0
  6869  0A65  2A68               	goto	l3875
  6870  0A66  3189  29F1         	ljmp	i1l2581
  6871  0A68                     _BMP280_SPI_bus_read$intlevel0:	
  6872  0A68                     l3875:	
  6873                           ;incstack = 0
  6874                           ; Regs used in _BMP280_SPI_bus_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6875                           
  6876                           
  6877                           ;main.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  6878  0A68  30C8               	movlw	200
  6879  0A69                     u5927:	
  6880  0A69  3200               	nop2
  6881  0A6A  0B89               	decfsz	9,f
  6882  0A6B  2A69               	goto	u5927
  6883                           
  6884                           ;main.c: 42: int32_t iError=(0);
  6885  0A6C  3000               	movlw	0
  6886  0A6D  0142               	movlb	2	; select bank2
  6887  0A6E  00C1               	movwf	(BMP280_SPI_bus_read@iError+3)^(0+256)
  6888  0A6F  3000               	movlw	0
  6889  0A70  00C0               	movwf	(BMP280_SPI_bus_read@iError+2)^(0+256)
  6890  0A71  3000               	movlw	0
  6891  0A72  00BF               	movwf	(BMP280_SPI_bus_read@iError+1)^(0+256)
  6892  0A73  3000               	movlw	0
  6893  0A74  00BE               	movwf	BMP280_SPI_bus_read@iError^(0+256)
  6894                           
  6895                           ;main.c: 43: int8_t array[30]={0xFF};
  6896  0A75  3020               	movlw	low BMP280_SPI_bus_read@F6549
  6897  0A76  0086               	movwf	6
  6898  0A77  3002               	movlw	high BMP280_SPI_bus_read@F6549
  6899  0A78  0087               	movwf	7
  6900  0A79  3020               	movlw	low BMP280_SPI_bus_read@array
  6901  0A7A  0084               	movwf	4
  6902  0A7B  3001               	movlw	high BMP280_SPI_bus_read@array
  6903  0A7C  0085               	movwf	5
  6904  0A7D  301E               	movlw	30
  6905  0A7E  0141               	movlb	1	; select bank1
  6906  0A7F  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6907  0A80                     u5140:	
  6908  0A80  0016               	moviw fsr1++
  6909  0A81  001A               	movwi fsr0++
  6910  0A82  0BB8               	decfsz	??_BMP280_SPI_bus_read^(0+128),f
  6911  0A83  2A80               	goto	u5140
  6912                           
  6913                           ;main.c: 44: uint8_t stringpos;;main.c: 45: array[0] = reg_addr|0x80;
  6914  0A84  0834               	movf	BMP280_SPI_bus_read@reg_addr^(0+128),w
  6915  0A85  3880               	iorlw	-128
  6916  0A86  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6917  0A87  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  6918  0A88  0142               	movlb	2	; select bank2
  6919  0A89  00A0               	movwf	BMP280_SPI_bus_read@array^(0+256)
  6920                           
  6921                           ;main.c: 47: uint8_t i;;main.c: 48: do { LATAbits.LATA2 = 0; } while(0);
  6922  0A8A  0140               	movlb	0	; select bank0
  6923  0A8B  1118               	bcf	24,2	;volatile
  6924                           
  6925                           ;main.c: 49: for (i=0; i<cnt+1; i++){
  6926  0A8C  0142               	movlb	2	; select bank2
  6927  0A8D  01C3               	clrf	BMP280_SPI_bus_read@i^(0+256)
  6928  0A8E                     l3889:	
  6929  0A8E  0141               	movlb	1	; select bank1
  6930  0A8F  0837               	movf	BMP280_SPI_bus_read@cnt^(0+128),w
  6931  0A90  3E01               	addlw	1
  6932  0A91  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6933  0A92  3000               	movlw	0
  6934  0A93  1803               	skipnc
  6935  0A94  3001               	movlw	1
  6936  0A95  00B9               	movwf	(??_BMP280_SPI_bus_read^(0+128)+1)
  6937  0A96  0839               	movf	(??_BMP280_SPI_bus_read+1)^(0+128),w
  6938  0A97  3A80               	xorlw	128
  6939  0A98  3C80               	sublw	128
  6940  0A99  1D03               	skipz
  6941  0A9A  2A9E               	goto	u5155
  6942  0A9B  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  6943  0A9C  0142               	movlb	2	; select bank2
  6944  0A9D  0243               	subwf	BMP280_SPI_bus_read@i^(0+256),w
  6945  0A9E                     u5155:	
  6946  0A9E  1803               	btfsc	3,0
  6947  0A9F  2ABB               	goto	l3891
  6948                           
  6949                           ;main.c: 50: array[i] = spi1_exchangeByte(array[i]);
  6950  0AA0  0142               	movlb	2	; select bank2
  6951  0AA1  0843               	movf	BMP280_SPI_bus_read@i^(0+256),w
  6952  0AA2  3E20               	addlw	(low (BMP280_SPI_bus_read@array| (0+256)))& (0+255)
  6953  0AA3  0086               	movwf	6
  6954  0AA4  3001               	movlw	1	; select bank2/3
  6955  0AA5  0087               	movwf	7
  6956  0AA6  0801               	movf	1,w
  6957  0AA7  3196  2682  318A   	fcall	_spi1_exchangeByte
  6958  0AAA  0141               	movlb	1	; select bank1
  6959  0AAB  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6960  0AAC  0142               	movlb	2	; select bank2
  6961  0AAD  0843               	movf	BMP280_SPI_bus_read@i^(0+256),w
  6962  0AAE  3E20               	addlw	(low (BMP280_SPI_bus_read@array| (0+256)))& (0+255)
  6963  0AAF  0086               	movwf	6
  6964  0AB0  3001               	movlw	1	; select bank2/3
  6965  0AB1  0087               	movwf	7
  6966  0AB2  0141               	movlb	1	; select bank1
  6967  0AB3  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  6968  0AB4  0081               	movwf	1
  6969  0AB5  3001               	movlw	1
  6970  0AB6  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6971  0AB7  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  6972  0AB8  0142               	movlb	2	; select bank2
  6973  0AB9  07C3               	addwf	BMP280_SPI_bus_read@i^(0+256),f
  6974  0ABA  2A8E               	goto	l3889
  6975  0ABB                     l3891:	
  6976                           
  6977                           ;main.c: 51: };main.c: 53: _delay((unsigned long)((10)*(4000000/4000.0)));
  6978  0ABB  300D               	movlw	13
  6979  0ABC  0141               	movlb	1	; select bank1
  6980  0ABD  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  6981  0ABE  30FB               	movlw	251
  6982  0ABF                     u5937:	
  6983  0ABF  0B89               	decfsz	9,f
  6984  0AC0  2ABF               	goto	u5937
  6985  0AC1  0BB8               	decfsz	??_BMP280_SPI_bus_read^(0+128),f
  6986  0AC2  2ABF               	goto	u5937
  6987  0AC3  3200               	nop2
  6988                           
  6989                           ;main.c: 54: do { LATAbits.LATA2 = 1; } while(0);
  6990  0AC4  0140               	movlb	0	; select bank0
  6991  0AC5  1518               	bsf	24,2	;volatile
  6992                           
  6993                           ;main.c: 56: for (stringpos = 0; stringpos < cnt; stringpos++) {
  6994  0AC6  0142               	movlb	2	; select bank2
  6995  0AC7  01C2               	clrf	BMP280_SPI_bus_read@stringpos^(0+256)
  6996  0AC8                     l3901:	
  6997  0AC8  0141               	movlb	1	; select bank1
  6998  0AC9  0837               	movf	BMP280_SPI_bus_read@cnt^(0+128),w
  6999  0ACA  0142               	movlb	2	; select bank2
  7000  0ACB  0242               	subwf	BMP280_SPI_bus_read@stringpos^(0+256),w
  7001  0ACC  1803               	btfsc	3,0
  7002  0ACD  2AEE               	goto	l3903
  7003                           
  7004                           ;main.c: 57: *(reg_data + stringpos) = array[stringpos+1];
  7005  0ACE  0842               	movf	BMP280_SPI_bus_read@stringpos^(0+256),w
  7006  0ACF  3E01               	addlw	1
  7007  0AD0  3E20               	addlw	(low (BMP280_SPI_bus_read@array| (0+256)))& (0+255)
  7008  0AD1  0086               	movwf	6
  7009  0AD2  3001               	movlw	1	; select bank2/3
  7010  0AD3  0087               	movwf	7
  7011  0AD4  0801               	movf	1,w
  7012  0AD5  0141               	movlb	1	; select bank1
  7013  0AD6  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  7014  0AD7  0142               	movlb	2	; select bank2
  7015  0AD8  0842               	movf	BMP280_SPI_bus_read@stringpos^(0+256),w
  7016  0AD9  0141               	movlb	1	; select bank1
  7017  0ADA  00B9               	movwf	(??_BMP280_SPI_bus_read+1)^(0+128)
  7018  0ADB  01BA               	clrf	((??_BMP280_SPI_bus_read+1)^(0+128)+1)
  7019  0ADC  0839               	movf	(??_BMP280_SPI_bus_read+1)^(0+128),w
  7020  0ADD  0735               	addwf	BMP280_SPI_bus_read@reg_data^(0+128),w
  7021  0ADE  00BB               	movwf	(??_BMP280_SPI_bus_read+3)^(0+128)
  7022  0ADF  083A               	movf	(??_BMP280_SPI_bus_read+2)^(0+128),w
  7023  0AE0  3D36               	addwfc	(BMP280_SPI_bus_read@reg_data+1)^(0+128),w
  7024  0AE1  00BC               	movwf	(??_BMP280_SPI_bus_read+4)^(0+128)
  7025  0AE2  083B               	movf	(??_BMP280_SPI_bus_read+3)^(0+128),w
  7026  0AE3  0086               	movwf	6
  7027  0AE4  083C               	movf	(??_BMP280_SPI_bus_read+4)^(0+128),w
  7028  0AE5  0087               	movwf	7
  7029  0AE6  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  7030  0AE7  0081               	movwf	1
  7031  0AE8  3001               	movlw	1
  7032  0AE9  00B8               	movwf	??_BMP280_SPI_bus_read^(0+128)
  7033  0AEA  0838               	movf	??_BMP280_SPI_bus_read^(0+128),w
  7034  0AEB  0142               	movlb	2	; select bank2
  7035  0AEC  07C2               	addwf	BMP280_SPI_bus_read@stringpos^(0+256),f
  7036  0AED  2AC8               	goto	l3901
  7037  0AEE                     l3903:	
  7038                           
  7039                           ;main.c: 58: };main.c: 59: return (int8_t)iError;
  7040  0AEE  083E               	movf	BMP280_SPI_bus_read@iError^(0+256),w
  7041  0AEF  0008               	return
  7042  0AF0                     __end_of_BMP280_SPI_bus_read:	
  7043                           
  7044                           	psect	text17
  7045  1682                     __ptext17:	
  7046 ;; *************** function _spi1_exchangeByte *****************
  7047 ;; Defined at:
  7048 ;;		line 77 in file "mcc_generated_files/spi1_driver.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  b               1    wreg     unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  b               1   18[BANK1 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      unsigned char 
  7055 ;; Registers used:
  7056 ;;		wreg
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;Total ram usage:        1 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    8
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_BMP280_SPI_bus_read
  7073 ;;		_BMP280_SPI_bus_write
  7074 ;;		_spi1_exchangeBlock
  7075 ;;		_spi1_writeBlock
  7076 ;;		_spi1_readBlock
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function _spi1_exchangeByte
  7082  1682                     _spi1_exchangeByte:	
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _spi1_exchangeByte: [wreg]
  7086                           ;spi1_exchangeByte@b stored from wreg
  7087  1682  0141               	movlb	1	; select bank1
  7088  1683  00B2               	movwf	spi1_exchangeByte@b^(0+128)
  7089                           
  7090                           ;spi1_driver.c: 79: SSP1BUF = b;
  7091  1684  0832               	movf	spi1_exchangeByte@b^(0+128),w
  7092  1685  0143               	movlb	3	; select bank3
  7093  1686  008C               	movwf	12	;volatile
  7094  1687                     l46:	
  7095                           ;spi1_driver.c: 80: while(!PIR3bits.SSP1IF);
  7096                           
  7097  1687  014E               	movlb	14	; select bank14
  7098  1688  1C0F               	btfss	15,0	;volatile
  7099  1689  2E87               	goto	l46
  7100                           
  7101                           ;spi1_driver.c: 81: PIR3bits.SSP1IF = 0;
  7102  168A  100F               	bcf	15,0	;volatile
  7103                           
  7104                           ;spi1_driver.c: 82: return SSP1BUF;
  7105  168B  0143               	movlb	3	; select bank3
  7106  168C  080C               	movf	12,w	;volatile
  7107  168D  0008               	return
  7108  168E                     __end_of_spi1_exchangeByte:	
  7109                           
  7110                           	psect	text18
  7111  1626                     __ptext18:	
  7112 ;; *************** function _TMR0_StartTimer *****************
  7113 ;; Defined at:
  7114 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		None
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    8
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           
  7143                           ;psect for function _TMR0_StartTimer
  7144  1626                     _TMR0_StartTimer:	
  7145                           
  7146                           ;tmr0.c: 98: T0CON0bits.T0EN = 1;
  7147                           
  7148                           ;incstack = 0
  7149                           ; Regs used in _TMR0_StartTimer: []
  7150  1626  014B               	movlb	11	; select bank11
  7151  1627  179E               	bsf	30,7	;volatile
  7152  1628  0008               	return
  7153  1629                     __end_of_TMR0_StartTimer:	
  7154                           
  7155                           	psect	text19
  7156  169D                     __ptext19:	
  7157 ;; *************** function _SYSTEM_Initialize *****************
  7158 ;; Defined at:
  7159 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0, pclath, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:   10
  7180 ;; This function calls:
  7181 ;;		_ADC_Initialize
  7182 ;;		_EUSART1_Initialize
  7183 ;;		_OSCILLATOR_Initialize
  7184 ;;		_PIN_MANAGER_Initialize
  7185 ;;		_PMD_Initialize
  7186 ;;		_TMR0_Initialize
  7187 ;; This function is called by:
  7188 ;;		_main
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function _SYSTEM_Initialize
  7194  169D                     _SYSTEM_Initialize:	
  7195                           
  7196                           ;mcc.c: 52: PMD_Initialize();
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7200  169D  3196  2646  3196   	fcall	_PMD_Initialize
  7201                           
  7202                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  7203  16A0  3197  2753  3196   	fcall	_PIN_MANAGER_Initialize
  7204                           
  7205                           ;mcc.c: 54: OSCILLATOR_Initialize();
  7206  16A3  3196  2657  3196   	fcall	_OSCILLATOR_Initialize
  7207                           
  7208                           ;mcc.c: 55: ADC_Initialize();
  7209  16A6  3196  264E  3196   	fcall	_ADC_Initialize
  7210                           
  7211                           ;mcc.c: 56: TMR0_Initialize();
  7212  16A9  3188  2000  3196   	fcall	_TMR0_Initialize
  7213                           
  7214                           ;mcc.c: 57: EUSART1_Initialize();
  7215  16AC  3196  2677         	fcall	_EUSART1_Initialize
  7216  16AE  0008               	return
  7217  16AF                     __end_of_SYSTEM_Initialize:	
  7218                           
  7219                           	psect	text20
  7220  0800                     __ptext20:	
  7221 ;; *************** function _TMR0_Initialize *****************
  7222 ;; Defined at:
  7223 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, pclath, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    9
  7244 ;; This function calls:
  7245 ;;		_TMR0_SetInterruptHandler
  7246 ;; This function is called by:
  7247 ;;		_SYSTEM_Initialize
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           
  7252                           ;psect for function _TMR0_Initialize
  7253  0800                     _TMR0_Initialize:	
  7254                           
  7255                           ;tmr0.c: 71: T0CON1 = 0x51;
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7259  0800  3051               	movlw	81
  7260  0801  014B               	movlb	11	; select bank11
  7261  0802  009F               	movwf	31	;volatile
  7262                           
  7263                           ;tmr0.c: 74: TMR0H = 0x3C;
  7264  0803  303C               	movlw	60
  7265  0804  009D               	movwf	29	;volatile
  7266                           
  7267                           ;tmr0.c: 77: TMR0L = 0xB0;
  7268  0805  30B0               	movlw	176
  7269  0806  009C               	movwf	28	;volatile
  7270                           
  7271                           ;tmr0.c: 80: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  7272  0807  081D               	movf	29,w	;volatile
  7273  0808  0141               	movlb	1	; select bank1
  7274  0809  00D9               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  7275  080A  014B               	movlb	11	; select bank11
  7276  080B  081C               	movf	28,w	;volatile
  7277  080C  0141               	movlb	1	; select bank1
  7278  080D  00D8               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  7279                           
  7280                           ;tmr0.c: 83: PIR0bits.TMR0IF = 0;
  7281  080E  014E               	movlb	14	; select bank14
  7282  080F  128C               	bcf	12,5	;volatile
  7283                           
  7284                           ;tmr0.c: 86: PIE0bits.TMR0IE = 1;
  7285  0810  1696               	bsf	22,5	;volatile
  7286                           
  7287                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  7288  0811  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  7289  0812  0141               	movlb	1	; select bank1
  7290  0813  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  7291  0814  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7292  0815  00B3               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7293  0816  3196  262D         	fcall	_TMR0_SetInterruptHandler
  7294                           
  7295                           ;tmr0.c: 92: T0CON0 = 0x90;
  7296  0818  3090               	movlw	144
  7297  0819  014B               	movlb	11	; select bank11
  7298  081A  009E               	movwf	30	;volatile
  7299  081B  0008               	return
  7300  081C                     __end_of_TMR0_Initialize:	
  7301                           
  7302                           	psect	text21
  7303  162D                     __ptext21:	
  7304 ;; *************** function _TMR0_SetInterruptHandler *****************
  7305 ;; Defined at:
  7306 ;;		line 167 in file "mcc_generated_files/tmr0.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  InterruptHan    2   18[BANK1 ] PTR FTN()void 
  7309 ;;		 -> TMR0_DefaultInterruptHandler(1), tmr_fire(1), 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7321 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;Total ram usage:        2 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    8
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;;		_TMR0_Initialize
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function _TMR0_SetInterruptHandler
  7338  162D                     _TMR0_SetInterruptHandler:	
  7339                           
  7340                           ;tmr0.c: 168: TMR0_InterruptHandler = InterruptHandler;
  7341                           
  7342                           ;incstack = 0
  7343                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7344  162D  0141               	movlb	1	; select bank1
  7345  162E  0833               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7346  162F  00D7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7347  1630  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  7348  1631  00D6               	movwf	_TMR0_InterruptHandler^(0+128)
  7349  1632  0008               	return
  7350  1633                     __end_of_TMR0_SetInterruptHandler:	
  7351                           
  7352                           	psect	text22
  7353  1646                     __ptext22:	
  7354 ;; *************** function _PMD_Initialize *****************
  7355 ;; Defined at:
  7356 ;;		line 76 in file "mcc_generated_files/mcc.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		status,2
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    8
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_SYSTEM_Initialize
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function _PMD_Initialize
  7386  1646                     _PMD_Initialize:	
  7387                           
  7388                           ;mcc.c: 79: PMD0 = 0x00;
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in _PMD_Initialize: [status,2]
  7392  1646  014F               	movlb	15	; select bank15
  7393  1647  0196               	clrf	22	;volatile
  7394                           
  7395                           ;mcc.c: 81: PMD1 = 0x00;
  7396  1648  0197               	clrf	23	;volatile
  7397                           
  7398                           ;mcc.c: 83: PMD2 = 0x00;
  7399  1649  0198               	clrf	24	;volatile
  7400                           
  7401                           ;mcc.c: 85: PMD3 = 0x00;
  7402  164A  0199               	clrf	25	;volatile
  7403                           
  7404                           ;mcc.c: 87: PMD4 = 0x00;
  7405  164B  019A               	clrf	26	;volatile
  7406                           
  7407                           ;mcc.c: 89: PMD5 = 0x00;
  7408  164C  019B               	clrf	27	;volatile
  7409  164D  0008               	return
  7410  164E                     __end_of_PMD_Initialize:	
  7411                           
  7412                           	psect	text23
  7413  1753                     __ptext23:	
  7414 ;; *************** function _PIN_MANAGER_Initialize *****************
  7415 ;; Defined at:
  7416 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;Total ram usage:        0 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    8
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_SYSTEM_Initialize
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           
  7445                           ;psect for function _PIN_MANAGER_Initialize
  7446  1753                     _PIN_MANAGER_Initialize:	
  7447                           
  7448                           ;pin_manager.c: 62: LATA = 0x04;
  7449                           
  7450                           ;incstack = 0
  7451                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  7452  1753  3004               	movlw	4
  7453  1754  0140               	movlb	0	; select bank0
  7454  1755  0098               	movwf	24	;volatile
  7455                           
  7456                           ;pin_manager.c: 63: LATC = 0x00;
  7457  1756  019A               	clrf	26	;volatile
  7458                           
  7459                           ;pin_manager.c: 68: TRISA = 0x33;
  7460  1757  3033               	movlw	51
  7461  1758  0092               	movwf	18	;volatile
  7462                           
  7463                           ;pin_manager.c: 69: TRISC = 0x0A;
  7464  1759  300A               	movlw	10
  7465  175A  0094               	movwf	20	;volatile
  7466                           
  7467                           ;pin_manager.c: 74: ANSELC = 0x04;
  7468  175B  3004               	movlw	4
  7469  175C  017E               	movlb	62	; select bank62
  7470  175D  00CE               	movwf	78	;volatile
  7471                           
  7472                           ;pin_manager.c: 75: ANSELA = 0x1B;
  7473  175E  301B               	movlw	27
  7474  175F  00B8               	movwf	56	;volatile
  7475                           
  7476                           ;pin_manager.c: 80: WPUA = 0x00;
  7477  1760  01B9               	clrf	57	;volatile
  7478                           
  7479                           ;pin_manager.c: 81: WPUC = 0x00;
  7480  1761  01CF               	clrf	79	;volatile
  7481                           
  7482                           ;pin_manager.c: 86: ODCONA = 0x00;
  7483  1762  01BA               	clrf	58	;volatile
  7484                           
  7485                           ;pin_manager.c: 87: ODCONC = 0x00;
  7486  1763  01D0               	clrf	80	;volatile
  7487                           
  7488                           ;pin_manager.c: 96: RC0PPS = 0x15;
  7489  1764  3015               	movlw	21
  7490  1765  00A0               	movwf	32	;volatile
  7491                           
  7492                           ;pin_manager.c: 97: SSP1CLKPPSbits.SSP1CLKPPS = 0x10;
  7493  1766  017D               	movlb	61	; select bank61
  7494  1767  0845               	movf	69,w	;volatile
  7495  1768  39C0               	andlw	-64
  7496  1769  3810               	iorlw	16
  7497  176A  00C5               	movwf	69	;volatile
  7498                           
  7499                           ;pin_manager.c: 98: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  7500  176B  0846               	movf	70,w	;volatile
  7501  176C  39C0               	andlw	-64
  7502  176D  3811               	iorlw	17
  7503  176E  00C6               	movwf	70	;volatile
  7504                           
  7505                           ;pin_manager.c: 99: RC4PPS = 0x0F;
  7506  176F  300F               	movlw	15
  7507  1770  017E               	movlb	62	; select bank62
  7508  1771  00A4               	movwf	36	;volatile
  7509                           
  7510                           ;pin_manager.c: 100: RC2PPS = 0x16;
  7511  1772  3016               	movlw	22
  7512  1773  00A2               	movwf	34	;volatile
  7513                           
  7514                           ;pin_manager.c: 101: RX1DTPPSbits.RX1DTPPS = 0x13;
  7515  1774  017D               	movlb	61	; select bank61
  7516  1775  084B               	movf	75,w	;volatile
  7517  1776  39C0               	andlw	-64
  7518  1777  3813               	iorlw	19
  7519  1778  00CB               	movwf	75	;volatile
  7520  1779  0008               	return
  7521  177A                     __end_of_PIN_MANAGER_Initialize:	
  7522                           
  7523                           	psect	text24
  7524  1657                     __ptext24:	
  7525 ;; *************** function _OSCILLATOR_Initialize *****************
  7526 ;; Defined at:
  7527 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;		None
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;Total ram usage:        0 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    8
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_SYSTEM_Initialize
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _OSCILLATOR_Initialize
  7557  1657                     _OSCILLATOR_Initialize:	
  7558                           
  7559                           ;mcc.c: 63: OSCCON1 = 0x60;
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7563  1657  3060               	movlw	96
  7564  1658  0151               	movlb	17	; select bank17
  7565  1659  008D               	movwf	13	;volatile
  7566                           
  7567                           ;mcc.c: 65: OSCCON3 = 0x00;
  7568  165A  018F               	clrf	15	;volatile
  7569                           
  7570                           ;mcc.c: 67: OSCEN = 0x00;
  7571  165B  0191               	clrf	17	;volatile
  7572                           
  7573                           ;mcc.c: 69: OSCFRQ = 0x02;
  7574  165C  3002               	movlw	2
  7575  165D  0093               	movwf	19	;volatile
  7576                           
  7577                           ;mcc.c: 71: OSCSTAT = 0x00;
  7578  165E  0190               	clrf	16	;volatile
  7579                           
  7580                           ;mcc.c: 73: OSCTUNE = 0x00;
  7581  165F  0192               	clrf	18	;volatile
  7582  1660  0008               	return
  7583  1661                     __end_of_OSCILLATOR_Initialize:	
  7584                           
  7585                           	psect	text25
  7586  1677                     __ptext25:	
  7587 ;; *************** function _EUSART1_Initialize *****************
  7588 ;; Defined at:
  7589 ;;		line 56 in file "mcc_generated_files/eusart1.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    8
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_SYSTEM_Initialize
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _EUSART1_Initialize
  7619  1677                     _EUSART1_Initialize:	
  7620                           
  7621                           ;eusart1.c: 61: BAUD1CON = 0x08;
  7622                           
  7623                           ;incstack = 0
  7624                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  7625  1677  3008               	movlw	8
  7626  1678  0142               	movlb	2	; select bank2
  7627  1679  009F               	movwf	31	;volatile
  7628                           
  7629                           ;eusart1.c: 64: RC1STA = 0x90;
  7630  167A  3090               	movlw	144
  7631  167B  009D               	movwf	29	;volatile
  7632                           
  7633                           ;eusart1.c: 67: TX1STA = 0x24;
  7634  167C  3024               	movlw	36
  7635  167D  009E               	movwf	30	;volatile
  7636                           
  7637                           ;eusart1.c: 70: SP1BRGL = 0x08;
  7638  167E  3008               	movlw	8
  7639  167F  009B               	movwf	27	;volatile
  7640                           
  7641                           ;eusart1.c: 73: SP1BRGH = 0x00;
  7642  1680  019C               	clrf	28	;volatile
  7643  1681  0008               	return
  7644  1682                     __end_of_EUSART1_Initialize:	
  7645                           
  7646                           	psect	text26
  7647  164E                     __ptext26:	
  7648 ;; *************** function _ADC_Initialize *****************
  7649 ;; Defined at:
  7650 ;;		line 64 in file "mcc_generated_files/adc.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    8
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_SYSTEM_Initialize
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function _ADC_Initialize
  7680  164E                     _ADC_Initialize:	
  7681                           
  7682                           ;adc.c: 69: ADCON0 = 0x01;
  7683                           
  7684                           ;incstack = 0
  7685                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7686  164E  3001               	movlw	1
  7687  164F  0141               	movlb	1	; select bank1
  7688  1650  009D               	movwf	29	;volatile
  7689                           
  7690                           ;adc.c: 72: ADCON1 = 0xE0;
  7691  1651  30E0               	movlw	224
  7692  1652  009E               	movwf	30	;volatile
  7693                           
  7694                           ;adc.c: 75: ADACT = 0x00;
  7695  1653  019F               	clrf	31	;volatile
  7696                           
  7697                           ;adc.c: 78: ADRESL = 0x00;
  7698  1654  019B               	clrf	27	;volatile
  7699                           
  7700                           ;adc.c: 81: ADRESH = 0x00;
  7701  1655  019C               	clrf	28	;volatile
  7702  1656  0008               	return
  7703  1657                     __end_of_ADC_Initialize:	
  7704                           
  7705                           	psect	intentry
  7706  0004                     __pintentry:	
  7707 ;; *************** function _INTERRUPT_InterruptManager *****************
  7708 ;; Defined at:
  7709 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;Total ram usage:        0 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    7
  7730 ;; This function calls:
  7731 ;;		_TMR0_ISR
  7732 ;; This function is called by:
  7733 ;;		Interrupt level 1
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737  0004                     _INTERRUPT_InterruptManager:	
  7738                           
  7739                           ;incstack = 0
  7740  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7741                           
  7742                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7743  0005  3180               	pagesel	$
  7744                           
  7745                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  7746  0006  014E               	movlb	14	; select bank14
  7747  0007  1A96               	btfsc	22,5	;volatile
  7748  0008  1E8C               	btfss	12,5	;volatile
  7749  0009  280C               	goto	i1l523
  7750                           
  7751                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  7752  000A  3196  26AF         	fcall	_TMR0_ISR
  7753  000C                     i1l523:	
  7754                           ;interrupt_manager.c: 59: else;interrupt_manager.c: 60: {
  7755                           
  7756                           ;interrupt_manager.c: 58: }
  7757                           
  7758  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7759  000D  0009               	retfie
  7760  000E                     __end_of_INTERRUPT_InterruptManager:	
  7761                           
  7762                           	psect	text28
  7763  16AF                     __ptext28:	
  7764 ;; *************** function _TMR0_ISR *****************
  7765 ;; Defined at:
  7766 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;		None
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      void 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;Total ram usage:        0 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    6
  7787 ;; This function calls:
  7788 ;;		_TMR0_CallBack
  7789 ;; This function is called by:
  7790 ;;		_INTERRUPT_InterruptManager
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           
  7795                           ;psect for function _TMR0_ISR
  7796  16AF                     _TMR0_ISR:	
  7797                           
  7798                           ;tmr0.c: 136: static volatile uint16_t CountCallBack = 0;;tmr0.c: 139: PIR0bits.TMR0IF =
      +                           0;
  7799                           
  7800                           ;incstack = 0
  7801                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7802  16AF  014E               	movlb	14	; select bank14
  7803  16B0  128C               	bcf	12,5	;volatile
  7804                           
  7805                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
  7806  16B1  0141               	movlb	1	; select bank1
  7807  16B2  0859               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  7808  16B3  014B               	movlb	11	; select bank11
  7809  16B4  009D               	movwf	29	;volatile
  7810                           
  7811                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
  7812  16B5  0141               	movlb	1	; select bank1
  7813  16B6  0858               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  7814  16B7  014B               	movlb	11	; select bank11
  7815  16B8  009C               	movwf	28	;volatile
  7816                           
  7817                           ;tmr0.c: 145: if (++CountCallBack >= 10)
  7818  16B9  3001               	movlw	1
  7819  16BA  0141               	movlb	1	; select bank1
  7820  16BB  07DA               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
  7821  16BC  3000               	movlw	0
  7822  16BD  3DDB               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
  7823  16BE  3000               	movlw	0
  7824  16BF  025B               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
  7825  16C0  300A               	movlw	10
  7826  16C1  1903               	skipnz
  7827  16C2  025A               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
  7828  16C3  1C03               	skipc
  7829  16C4  0008               	return
  7830                           
  7831                           ;tmr0.c: 146: {;tmr0.c: 148: TMR0_CallBack();
  7832  16C5  3196  266C         	fcall	_TMR0_CallBack
  7833                           
  7834                           ;tmr0.c: 151: CountCallBack = 0;
  7835  16C7  0141               	movlb	1	; select bank1
  7836  16C8  01DA               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
  7837  16C9  01DB               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
  7838  16CA  0008               	return
  7839  16CB                     __end_of_TMR0_ISR:	
  7840                           
  7841                           	psect	text29
  7842  166C                     __ptext29:	
  7843 ;; *************** function _TMR0_CallBack *****************
  7844 ;; Defined at:
  7845 ;;		line 157 in file "mcc_generated_files/tmr0.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    5
  7866 ;; This function calls:
  7867 ;;		Absolute function
  7868 ;;		_TMR0_DefaultInterruptHandler
  7869 ;;		_tmr_fire
  7870 ;; This function is called by:
  7871 ;;		_TMR0_ISR
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function _TMR0_CallBack
  7877  166C                     _TMR0_CallBack:	
  7878                           
  7879                           ;tmr0.c: 161: if(TMR0_InterruptHandler)
  7880                           
  7881                           ;incstack = 0
  7882                           ; Regs used in _TMR0_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7883  166C  0141               	movlb	1	; select bank1
  7884  166D  0856               	movf	_TMR0_InterruptHandler^(0+128),w
  7885  166E  0457               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  7886  166F  1903               	btfsc	3,2
  7887  1670  0008               	return
  7888                           
  7889                           ;tmr0.c: 162: {;tmr0.c: 163: TMR0_InterruptHandler();
  7890  1671  0857               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  7891  1672  008A               	movwf	10
  7892  1673  0856               	movf	_TMR0_InterruptHandler^(0+128),w
  7893  1674  000A               	callw
  7894  1675  3196               	pagesel	$
  7895  1676  0008               	return
  7896  1677                     __end_of_TMR0_CallBack:	
  7897                           
  7898                           	psect	text30
  7899  07FF                     __ptext30:	
  7900 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7901 ;; Defined at:
  7902 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;		None
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;		None
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		None
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;Total ram usage:        0 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_TMR0_Initialize
  7926 ;;		_TMR0_CallBack
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           
  7931                           ;psect for function _TMR0_DefaultInterruptHandler
  7932  07FF                     _TMR0_DefaultInterruptHandler:	
  7933                           
  7934                           ;incstack = 0
  7935                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7936  07FF  0008               	return
  7937  0800                     __end_of_TMR0_DefaultInterruptHandler:	
  7938                           
  7939                           	psect	text31
  7940  05AD                     __ptext31:	
  7941 ;; *************** function _tmr_fire *****************
  7942 ;; Defined at:
  7943 ;;		line 79 in file "main.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  ucomp_data      8   10[BANK1 ] struct bmp280_uncomp_dat
  7948 ;;  pres32          4    6[BANK1 ] unsigned long 
  7949 ;;  temp32          4    2[BANK1 ] long 
  7950 ;;  alt             4    0        unsigned long 
  7951 ;;  altf            3    0        float 
  7952 ;;  meas_dur        1    1[BANK1 ] unsigned char 
  7953 ;;  rslt            1    0[BANK1 ] char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Totals:         0       6      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;Total ram usage:       24 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    4
  7970 ;; This function calls:
  7971 ;;		_EUSART1_Write
  7972 ;;		_bmp280_comp_pres_32bit
  7973 ;;		_bmp280_comp_temp_32bit
  7974 ;;		_bmp280_compute_meas_time
  7975 ;;		_bmp280_get_uncomp_data
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;;		_TMR0_CallBack
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function _tmr_fire
  7984  05AD                     _tmr_fire:	
  7985                           
  7986                           ;main.c: 87: int8_t rslt;;main.c: 88: uint32_t alt;;main.c: 89: float altf;;main.c: 91: 
      +                          struct bmp280_uncomp_data ucomp_data;;main.c: 92: uint8_t meas_dur = bmp280_compute_meas
      +                          _time(&bmp);
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _tmr_fire: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7990  05AD  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  7991  05AE  318E  26DE  3185   	fcall	_bmp280_compute_meas_time
  7992  05B1  0140               	movlb	0	; select bank0
  7993  05B2  00E0               	movwf	??_tmr_fire
  7994  05B3  0860               	movf	??_tmr_fire,w
  7995  05B4  0141               	movlb	1	; select bank1
  7996  05B5  00A1               	movwf	tmr_fire@meas_dur^(0+128)
  7997                           
  7998                           ;main.c: 95: rslt = bmp280_get_uncomp_data(&ucomp_data, &bmp);
  7999  05B6  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  8000  05B7  0140               	movlb	0	; select bank0
  8001  05B8  00E0               	movwf	??_tmr_fire
  8002  05B9  0860               	movf	??_tmr_fire,w
  8003  05BA  00CA               	movwf	bmp280_get_uncomp_data@dev
  8004  05BB  30AA               	movlw	(low (tmr_fire@ucomp_data| 0))& (0+255)
  8005  05BC  3187  272F  3185   	fcall	_bmp280_get_uncomp_data
  8006  05BF  0140               	movlb	0	; select bank0
  8007  05C0  00E1               	movwf	??_tmr_fire+1
  8008  05C1  0861               	movf	??_tmr_fire+1,w
  8009  05C2  0141               	movlb	1	; select bank1
  8010  05C3  00A0               	movwf	tmr_fire@rslt^(0+128)
  8011                           
  8012                           ;main.c: 96: int32_t temp32 = bmp280_comp_temp_32bit(ucomp_data.uncomp_temp, &bmp);
  8013  05C4  082D               	movf	(tmr_fire@ucomp_data+3)^(0+128),w
  8014  05C5  0140               	movlb	0	; select bank0
  8015  05C6  00A3               	movwf	bmp280_comp_temp_32bit@uncomp_temp+3
  8016  05C7  0141               	movlb	1	; select bank1
  8017  05C8  082C               	movf	(tmr_fire@ucomp_data+2)^(0+128),w
  8018  05C9  0140               	movlb	0	; select bank0
  8019  05CA  00A2               	movwf	bmp280_comp_temp_32bit@uncomp_temp+2
  8020  05CB  0141               	movlb	1	; select bank1
  8021  05CC  082B               	movf	(tmr_fire@ucomp_data+1)^(0+128),w
  8022  05CD  0140               	movlb	0	; select bank0
  8023  05CE  00A1               	movwf	bmp280_comp_temp_32bit@uncomp_temp+1
  8024  05CF  0141               	movlb	1	; select bank1
  8025  05D0  082A               	movf	tmr_fire@ucomp_data^(0+128),w
  8026  05D1  0140               	movlb	0	; select bank0
  8027  05D2  00A0               	movwf	bmp280_comp_temp_32bit@uncomp_temp
  8028  05D3  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  8029  05D4  00E0               	movwf	??_tmr_fire
  8030  05D5  0860               	movf	??_tmr_fire,w
  8031  05D6  00A4               	movwf	bmp280_comp_temp_32bit@dev
  8032  05D7  3184  240F  3185   	fcall	_bmp280_comp_temp_32bit
  8033  05DA  0140               	movlb	0	; select bank0
  8034  05DB  0823               	movf	?_bmp280_comp_temp_32bit+3,w
  8035  05DC  0141               	movlb	1	; select bank1
  8036  05DD  00A5               	movwf	(tmr_fire@temp32+3)^(0+128)
  8037  05DE  0140               	movlb	0	; select bank0
  8038  05DF  0822               	movf	?_bmp280_comp_temp_32bit+2,w
  8039  05E0  0141               	movlb	1	; select bank1
  8040  05E1  00A4               	movwf	(tmr_fire@temp32+2)^(0+128)
  8041  05E2  0140               	movlb	0	; select bank0
  8042  05E3  0821               	movf	?_bmp280_comp_temp_32bit+1,w
  8043  05E4  0141               	movlb	1	; select bank1
  8044  05E5  00A3               	movwf	(tmr_fire@temp32+1)^(0+128)
  8045  05E6  0140               	movlb	0	; select bank0
  8046  05E7  0820               	movf	?_bmp280_comp_temp_32bit,w
  8047  05E8  0141               	movlb	1	; select bank1
  8048  05E9  00A2               	movwf	tmr_fire@temp32^(0+128)
  8049                           
  8050                           ;main.c: 97: uint32_t pres32 = bmp280_comp_pres_32bit(ucomp_data.uncomp_press, &bmp);
  8051  05EA  3004               	movlw	4
  8052  05EB  3EAA               	addlw	(low (tmr_fire@ucomp_data| 0))& (0+255)
  8053  05EC  0086               	movwf	6
  8054  05ED  0187               	clrf	7
  8055  05EE  3F40               	moviw [0]fsr1
  8056  05EF  0140               	movlb	0	; select bank0
  8057  05F0  00A0               	movwf	bmp280_comp_pres_32bit@uncomp_pres
  8058  05F1  3F41               	moviw [1]fsr1
  8059  05F2  00A1               	movwf	bmp280_comp_pres_32bit@uncomp_pres+1
  8060  05F3  3F42               	moviw [2]fsr1
  8061  05F4  00A2               	movwf	bmp280_comp_pres_32bit@uncomp_pres+2
  8062  05F5  3F43               	moviw [3]fsr1
  8063  05F6  00A3               	movwf	bmp280_comp_pres_32bit@uncomp_pres+3
  8064  05F7  30B8               	movlw	(low (_bmp| (0+256)))& (0+255)
  8065  05F8  00E0               	movwf	??_tmr_fire
  8066  05F9  0860               	movf	??_tmr_fire,w
  8067  05FA  00A4               	movwf	bmp280_comp_pres_32bit@dev
  8068  05FB  3180  2041  3185   	fcall	_bmp280_comp_pres_32bit
  8069  05FE  0140               	movlb	0	; select bank0
  8070  05FF  0823               	movf	?_bmp280_comp_pres_32bit+3,w
  8071  0600  0141               	movlb	1	; select bank1
  8072  0601  00A9               	movwf	(tmr_fire@pres32+3)^(0+128)
  8073  0602  0140               	movlb	0	; select bank0
  8074  0603  0822               	movf	?_bmp280_comp_pres_32bit+2,w
  8075  0604  0141               	movlb	1	; select bank1
  8076  0605  00A8               	movwf	(tmr_fire@pres32+2)^(0+128)
  8077  0606  0140               	movlb	0	; select bank0
  8078  0607  0821               	movf	?_bmp280_comp_pres_32bit+1,w
  8079  0608  0141               	movlb	1	; select bank1
  8080  0609  00A7               	movwf	(tmr_fire@pres32+1)^(0+128)
  8081  060A  0140               	movlb	0	; select bank0
  8082  060B  0820               	movf	?_bmp280_comp_pres_32bit,w
  8083  060C  0141               	movlb	1	; select bank1
  8084  060D  00A6               	movwf	tmr_fire@pres32^(0+128)
  8085                           
  8086                           ;main.c: 99: EUSART1_Write(0x42);
  8087  060E  3042               	movlw	66
  8088  060F  0140               	movlb	0	; select bank0
  8089  0610  00E0               	movwf	??_tmr_fire
  8090  0611  0860               	movf	??_tmr_fire,w
  8091  0612  00F0               	movwf	EUSART1_Write@txData
  8092  0613  3196  263F  3185   	fcall	_EUSART1_Write
  8093                           
  8094                           ;main.c: 100: _delay((unsigned long)((10)*(4000000/4000.0)));
  8095  0616  300D               	movlw	13
  8096  0617  0140               	movlb	0	; select bank0
  8097  0618  00E0               	movwf	??_tmr_fire
  8098  0619  30FB               	movlw	251
  8099  061A                     u594_27:	
  8100  061A  0B89               	decfsz	9,f
  8101  061B  2E1A               	goto	u594_27
  8102  061C  0BE0               	decfsz	??_tmr_fire,f
  8103  061D  2E1A               	goto	u594_27
  8104  061E  3200               	nop2
  8105                           
  8106                           ;main.c: 101: EUSART1_Write(0x43);
  8107  061F  3043               	movlw	67
  8108  0620  0140               	movlb	0	; select bank0
  8109  0621  00E0               	movwf	??_tmr_fire
  8110  0622  0860               	movf	??_tmr_fire,w
  8111  0623  00F0               	movwf	EUSART1_Write@txData
  8112  0624  3196  263F  3185   	fcall	_EUSART1_Write
  8113                           
  8114                           ;main.c: 102: _delay((unsigned long)((10)*(4000000/4000.0)));
  8115  0627  300D               	movlw	13
  8116  0628  0140               	movlb	0	; select bank0
  8117  0629  00E0               	movwf	??_tmr_fire
  8118  062A  30FB               	movlw	251
  8119  062B                     u595_27:	
  8120  062B  0B89               	decfsz	9,f
  8121  062C  2E2B               	goto	u595_27
  8122  062D  0BE0               	decfsz	??_tmr_fire,f
  8123  062E  2E2B               	goto	u595_27
  8124  062F  3200               	nop2
  8125                           
  8126                           ;main.c: 104: EUSART1_Write((temp32 >> (0 * 8)) & 0xFF);
  8127  0630  0141               	movlb	1	; select bank1
  8128  0631  0822               	movf	tmr_fire@temp32^(0+128),w
  8129  0632  0140               	movlb	0	; select bank0
  8130  0633  00E0               	movwf	??_tmr_fire
  8131  0634  0860               	movf	??_tmr_fire,w
  8132  0635  00F0               	movwf	EUSART1_Write@txData
  8133  0636  3196  263F  3185   	fcall	_EUSART1_Write
  8134                           
  8135                           ;main.c: 105: _delay((unsigned long)((10)*(4000000/4000.0)));
  8136  0639  300D               	movlw	13
  8137  063A  0140               	movlb	0	; select bank0
  8138  063B  00E0               	movwf	??_tmr_fire
  8139  063C  30FB               	movlw	251
  8140  063D                     u596_27:	
  8141  063D  0B89               	decfsz	9,f
  8142  063E  2E3D               	goto	u596_27
  8143  063F  0BE0               	decfsz	??_tmr_fire,f
  8144  0640  2E3D               	goto	u596_27
  8145  0641  3200               	nop2
  8146                           
  8147                           ;main.c: 106: EUSART1_Write((temp32 >> (1 * 8)) & 0xFF);
  8148  0642  0141               	movlb	1	; select bank1
  8149  0643  0822               	movf	tmr_fire@temp32^(0+128),w
  8150  0644  0140               	movlb	0	; select bank0
  8151  0645  00E0               	movwf	??_tmr_fire
  8152  0646  0141               	movlb	1	; select bank1
  8153  0647  0823               	movf	(tmr_fire@temp32+1)^(0+128),w
  8154  0648  0140               	movlb	0	; select bank0
  8155  0649  00E1               	movwf	??_tmr_fire+1
  8156  064A  0141               	movlb	1	; select bank1
  8157  064B  0824               	movf	(tmr_fire@temp32+2)^(0+128),w
  8158  064C  0140               	movlb	0	; select bank0
  8159  064D  00E2               	movwf	??_tmr_fire+2
  8160  064E  0141               	movlb	1	; select bank1
  8161  064F  0825               	movf	(tmr_fire@temp32+3)^(0+128),w
  8162  0650  0140               	movlb	0	; select bank0
  8163  0651  00E3               	movwf	??_tmr_fire+3
  8164  0652  3008               	movlw	8
  8165  0653  00E4               	movwf	??_tmr_fire+4
  8166  0654                     u535_25:	
  8167  0654  37E3               	asrf	??_tmr_fire+3,f
  8168  0655  0CE2               	rrf	??_tmr_fire+2,f
  8169  0656  0CE1               	rrf	??_tmr_fire+1,f
  8170  0657  0CE0               	rrf	??_tmr_fire,f
  8171  0658  0BE4               	decfsz	??_tmr_fire+4,f
  8172  0659  2E54               	goto	u535_25
  8173  065A  0860               	movf	??_tmr_fire,w
  8174  065B  00E5               	movwf	??_tmr_fire+5
  8175  065C  0865               	movf	??_tmr_fire+5,w
  8176  065D  00F0               	movwf	EUSART1_Write@txData
  8177  065E  3196  263F  3185   	fcall	_EUSART1_Write
  8178                           
  8179                           ;main.c: 107: _delay((unsigned long)((10)*(4000000/4000.0)));
  8180  0661  300D               	movlw	13
  8181  0662  0140               	movlb	0	; select bank0
  8182  0663  00E0               	movwf	??_tmr_fire
  8183  0664  30FB               	movlw	251
  8184  0665                     u597_27:	
  8185  0665  0B89               	decfsz	9,f
  8186  0666  2E65               	goto	u597_27
  8187  0667  0BE0               	decfsz	??_tmr_fire,f
  8188  0668  2E65               	goto	u597_27
  8189  0669  3200               	nop2
  8190                           
  8191                           ;main.c: 108: EUSART1_Write((temp32 >> (2 * 8)) & 0xFF);
  8192  066A  0141               	movlb	1	; select bank1
  8193  066B  0822               	movf	tmr_fire@temp32^(0+128),w
  8194  066C  0140               	movlb	0	; select bank0
  8195  066D  00E0               	movwf	??_tmr_fire
  8196  066E  0141               	movlb	1	; select bank1
  8197  066F  0823               	movf	(tmr_fire@temp32+1)^(0+128),w
  8198  0670  0140               	movlb	0	; select bank0
  8199  0671  00E1               	movwf	??_tmr_fire+1
  8200  0672  0141               	movlb	1	; select bank1
  8201  0673  0824               	movf	(tmr_fire@temp32+2)^(0+128),w
  8202  0674  0140               	movlb	0	; select bank0
  8203  0675  00E2               	movwf	??_tmr_fire+2
  8204  0676  0141               	movlb	1	; select bank1
  8205  0677  0825               	movf	(tmr_fire@temp32+3)^(0+128),w
  8206  0678  0140               	movlb	0	; select bank0
  8207  0679  00E3               	movwf	??_tmr_fire+3
  8208  067A  3010               	movlw	16
  8209  067B  00E4               	movwf	??_tmr_fire+4
  8210  067C                     u536_25:	
  8211  067C  37E3               	asrf	??_tmr_fire+3,f
  8212  067D  0CE2               	rrf	??_tmr_fire+2,f
  8213  067E  0CE1               	rrf	??_tmr_fire+1,f
  8214  067F  0CE0               	rrf	??_tmr_fire,f
  8215  0680  0BE4               	decfsz	??_tmr_fire+4,f
  8216  0681  2E7C               	goto	u536_25
  8217  0682  0860               	movf	??_tmr_fire,w
  8218  0683  00E5               	movwf	??_tmr_fire+5
  8219  0684  0865               	movf	??_tmr_fire+5,w
  8220  0685  00F0               	movwf	EUSART1_Write@txData
  8221  0686  3196  263F  3185   	fcall	_EUSART1_Write
  8222                           
  8223                           ;main.c: 109: _delay((unsigned long)((10)*(4000000/4000.0)));
  8224  0689  300D               	movlw	13
  8225  068A  0140               	movlb	0	; select bank0
  8226  068B  00E0               	movwf	??_tmr_fire
  8227  068C  30FB               	movlw	251
  8228  068D                     u598_27:	
  8229  068D  0B89               	decfsz	9,f
  8230  068E  2E8D               	goto	u598_27
  8231  068F  0BE0               	decfsz	??_tmr_fire,f
  8232  0690  2E8D               	goto	u598_27
  8233  0691  3200               	nop2
  8234                           
  8235                           ;main.c: 110: EUSART1_Write((temp32 >> (3 * 8)) & 0xFF);
  8236  0692  0141               	movlb	1	; select bank1
  8237  0693  0822               	movf	tmr_fire@temp32^(0+128),w
  8238  0694  0140               	movlb	0	; select bank0
  8239  0695  00E0               	movwf	??_tmr_fire
  8240  0696  0141               	movlb	1	; select bank1
  8241  0697  0823               	movf	(tmr_fire@temp32+1)^(0+128),w
  8242  0698  0140               	movlb	0	; select bank0
  8243  0699  00E1               	movwf	??_tmr_fire+1
  8244  069A  0141               	movlb	1	; select bank1
  8245  069B  0824               	movf	(tmr_fire@temp32+2)^(0+128),w
  8246  069C  0140               	movlb	0	; select bank0
  8247  069D  00E2               	movwf	??_tmr_fire+2
  8248  069E  0141               	movlb	1	; select bank1
  8249  069F  0825               	movf	(tmr_fire@temp32+3)^(0+128),w
  8250  06A0  0140               	movlb	0	; select bank0
  8251  06A1  00E3               	movwf	??_tmr_fire+3
  8252  06A2  3018               	movlw	24
  8253  06A3  00E4               	movwf	??_tmr_fire+4
  8254  06A4                     u537_25:	
  8255  06A4  37E3               	asrf	??_tmr_fire+3,f
  8256  06A5  0CE2               	rrf	??_tmr_fire+2,f
  8257  06A6  0CE1               	rrf	??_tmr_fire+1,f
  8258  06A7  0CE0               	rrf	??_tmr_fire,f
  8259  06A8  0BE4               	decfsz	??_tmr_fire+4,f
  8260  06A9  2EA4               	goto	u537_25
  8261  06AA  0860               	movf	??_tmr_fire,w
  8262  06AB  00E5               	movwf	??_tmr_fire+5
  8263  06AC  0865               	movf	??_tmr_fire+5,w
  8264  06AD  00F0               	movwf	EUSART1_Write@txData
  8265  06AE  3196  263F  3185   	fcall	_EUSART1_Write
  8266                           
  8267                           ;main.c: 112: EUSART1_Write((pres32 >> (0 * 8)) & 0xFF);
  8268  06B1  0141               	movlb	1	; select bank1
  8269  06B2  0826               	movf	tmr_fire@pres32^(0+128),w
  8270  06B3  0140               	movlb	0	; select bank0
  8271  06B4  00E0               	movwf	??_tmr_fire
  8272  06B5  0860               	movf	??_tmr_fire,w
  8273  06B6  00F0               	movwf	EUSART1_Write@txData
  8274  06B7  3196  263F  3185   	fcall	_EUSART1_Write
  8275                           
  8276                           ;main.c: 113: _delay((unsigned long)((10)*(4000000/4000.0)));
  8277  06BA  300D               	movlw	13
  8278  06BB  0140               	movlb	0	; select bank0
  8279  06BC  00E0               	movwf	??_tmr_fire
  8280  06BD  30FB               	movlw	251
  8281  06BE                     u599_27:	
  8282  06BE  0B89               	decfsz	9,f
  8283  06BF  2EBE               	goto	u599_27
  8284  06C0  0BE0               	decfsz	??_tmr_fire,f
  8285  06C1  2EBE               	goto	u599_27
  8286  06C2  3200               	nop2
  8287                           
  8288                           ;main.c: 114: EUSART1_Write((pres32 >> (1 * 8)) & 0xFF);
  8289  06C3  0141               	movlb	1	; select bank1
  8290  06C4  0826               	movf	tmr_fire@pres32^(0+128),w
  8291  06C5  0140               	movlb	0	; select bank0
  8292  06C6  00E0               	movwf	??_tmr_fire
  8293  06C7  0141               	movlb	1	; select bank1
  8294  06C8  0827               	movf	(tmr_fire@pres32+1)^(0+128),w
  8295  06C9  0140               	movlb	0	; select bank0
  8296  06CA  00E1               	movwf	??_tmr_fire+1
  8297  06CB  0141               	movlb	1	; select bank1
  8298  06CC  0828               	movf	(tmr_fire@pres32+2)^(0+128),w
  8299  06CD  0140               	movlb	0	; select bank0
  8300  06CE  00E2               	movwf	??_tmr_fire+2
  8301  06CF  0141               	movlb	1	; select bank1
  8302  06D0  0829               	movf	(tmr_fire@pres32+3)^(0+128),w
  8303  06D1  0140               	movlb	0	; select bank0
  8304  06D2  00E3               	movwf	??_tmr_fire+3
  8305  06D3  3008               	movlw	8
  8306  06D4                     u538_25:	
  8307  06D4  36E3               	lsrf	??_tmr_fire+3,f
  8308  06D5  0CE2               	rrf	??_tmr_fire+2,f
  8309  06D6  0CE1               	rrf	??_tmr_fire+1,f
  8310  06D7  0CE0               	rrf	??_tmr_fire,f
  8311  06D8  0B89               	decfsz	9,f
  8312  06D9  2ED4               	goto	u538_25
  8313  06DA  0860               	movf	??_tmr_fire,w
  8314  06DB  00E4               	movwf	??_tmr_fire+4
  8315  06DC  0864               	movf	??_tmr_fire+4,w
  8316  06DD  00F0               	movwf	EUSART1_Write@txData
  8317  06DE  3196  263F  3185   	fcall	_EUSART1_Write
  8318                           
  8319                           ;main.c: 115: _delay((unsigned long)((10)*(4000000/4000.0)));
  8320  06E1  300D               	movlw	13
  8321  06E2  0140               	movlb	0	; select bank0
  8322  06E3  00E0               	movwf	??_tmr_fire
  8323  06E4  30FB               	movlw	251
  8324  06E5                     u600_27:	
  8325  06E5  0B89               	decfsz	9,f
  8326  06E6  2EE5               	goto	u600_27
  8327  06E7  0BE0               	decfsz	??_tmr_fire,f
  8328  06E8  2EE5               	goto	u600_27
  8329  06E9  3200               	nop2
  8330                           
  8331                           ;main.c: 116: EUSART1_Write((pres32 >> (2 * 8)) & 0xFF);
  8332  06EA  0141               	movlb	1	; select bank1
  8333  06EB  0826               	movf	tmr_fire@pres32^(0+128),w
  8334  06EC  0140               	movlb	0	; select bank0
  8335  06ED  00E0               	movwf	??_tmr_fire
  8336  06EE  0141               	movlb	1	; select bank1
  8337  06EF  0827               	movf	(tmr_fire@pres32+1)^(0+128),w
  8338  06F0  0140               	movlb	0	; select bank0
  8339  06F1  00E1               	movwf	??_tmr_fire+1
  8340  06F2  0141               	movlb	1	; select bank1
  8341  06F3  0828               	movf	(tmr_fire@pres32+2)^(0+128),w
  8342  06F4  0140               	movlb	0	; select bank0
  8343  06F5  00E2               	movwf	??_tmr_fire+2
  8344  06F6  0141               	movlb	1	; select bank1
  8345  06F7  0829               	movf	(tmr_fire@pres32+3)^(0+128),w
  8346  06F8  0140               	movlb	0	; select bank0
  8347  06F9  00E3               	movwf	??_tmr_fire+3
  8348  06FA  3010               	movlw	16
  8349  06FB                     u539_25:	
  8350  06FB  36E3               	lsrf	??_tmr_fire+3,f
  8351  06FC  0CE2               	rrf	??_tmr_fire+2,f
  8352  06FD  0CE1               	rrf	??_tmr_fire+1,f
  8353  06FE  0CE0               	rrf	??_tmr_fire,f
  8354  06FF  0B89               	decfsz	9,f
  8355  0700  2EFB               	goto	u539_25
  8356  0701  0860               	movf	??_tmr_fire,w
  8357  0702  00E4               	movwf	??_tmr_fire+4
  8358  0703  0864               	movf	??_tmr_fire+4,w
  8359  0704  00F0               	movwf	EUSART1_Write@txData
  8360  0705  3196  263F  3185   	fcall	_EUSART1_Write
  8361                           
  8362                           ;main.c: 117: _delay((unsigned long)((10)*(4000000/4000.0)));
  8363  0708  300D               	movlw	13
  8364  0709  0140               	movlb	0	; select bank0
  8365  070A  00E0               	movwf	??_tmr_fire
  8366  070B  30FB               	movlw	251
  8367  070C                     u601_27:	
  8368  070C  0B89               	decfsz	9,f
  8369  070D  2F0C               	goto	u601_27
  8370  070E  0BE0               	decfsz	??_tmr_fire,f
  8371  070F  2F0C               	goto	u601_27
  8372  0710  3200               	nop2
  8373                           
  8374                           ;main.c: 118: EUSART1_Write((pres32 >> (3 * 8)) & 0xFF);
  8375  0711  0141               	movlb	1	; select bank1
  8376  0712  0826               	movf	tmr_fire@pres32^(0+128),w
  8377  0713  0140               	movlb	0	; select bank0
  8378  0714  00E0               	movwf	??_tmr_fire
  8379  0715  0141               	movlb	1	; select bank1
  8380  0716  0827               	movf	(tmr_fire@pres32+1)^(0+128),w
  8381  0717  0140               	movlb	0	; select bank0
  8382  0718  00E1               	movwf	??_tmr_fire+1
  8383  0719  0141               	movlb	1	; select bank1
  8384  071A  0828               	movf	(tmr_fire@pres32+2)^(0+128),w
  8385  071B  0140               	movlb	0	; select bank0
  8386  071C  00E2               	movwf	??_tmr_fire+2
  8387  071D  0141               	movlb	1	; select bank1
  8388  071E  0829               	movf	(tmr_fire@pres32+3)^(0+128),w
  8389  071F  0140               	movlb	0	; select bank0
  8390  0720  00E3               	movwf	??_tmr_fire+3
  8391  0721  3018               	movlw	24
  8392  0722                     u540_25:	
  8393  0722  36E3               	lsrf	??_tmr_fire+3,f
  8394  0723  0CE2               	rrf	??_tmr_fire+2,f
  8395  0724  0CE1               	rrf	??_tmr_fire+1,f
  8396  0725  0CE0               	rrf	??_tmr_fire,f
  8397  0726  0B89               	decfsz	9,f
  8398  0727  2F22               	goto	u540_25
  8399  0728  0860               	movf	??_tmr_fire,w
  8400  0729  00E4               	movwf	??_tmr_fire+4
  8401  072A  0864               	movf	??_tmr_fire+4,w
  8402  072B  00F0               	movwf	EUSART1_Write@txData
  8403  072C  3196  263F         	fcall	_EUSART1_Write
  8404  072E  0008               	return
  8405  072F                     __end_of_tmr_fire:	
  8406                           
  8407                           	psect	text32
  8408  072F                     __ptext32:	
  8409 ;; *************** function _bmp280_get_uncomp_data *****************
  8410 ;; Defined at:
  8411 ;;		line 360 in file "bmp280.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  uncomp_data     1    wreg     PTR struct bmp280_uncomp
  8414 ;;		 -> tmr_fire@ucomp_data(8), 
  8415 ;;  dev             1   42[BANK0 ] PTR const struct bmp280_
  8416 ;;		 -> bmp(42), 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  uncomp_data     1   63[BANK0 ] PTR struct bmp280_uncomp
  8419 ;;		 -> tmr_fire@ucomp_data(8), 
  8420 ;;  temp            6   56[BANK0 ] unsigned char [6]
  8421 ;;  rslt            1   62[BANK0 ] char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      char 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8431 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;Total ram usage:       22 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    3
  8438 ;; This function calls:
  8439 ;;		i1_bmp280_get_regs
  8440 ;;		i1_null_ptr_check
  8441 ;; This function is called by:
  8442 ;;		_tmr_fire
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _bmp280_get_uncomp_data
  8448  072F                     _bmp280_get_uncomp_data:	
  8449                           
  8450                           ;incstack = 0
  8451                           ; Regs used in _bmp280_get_uncomp_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8452                           ;bmp280_get_uncomp_data@uncomp_data stored from wreg
  8453  072F  0140               	movlb	0	; select bank0
  8454  0730  00DF               	movwf	bmp280_get_uncomp_data@uncomp_data
  8455                           
  8456                           ;bmp280.c: 362: int8_t rslt;;bmp280.c: 363: uint8_t temp[6] = {0};
  8457  0731  3066               	movlw	low bmp280_get_uncomp_data@F6465
  8458  0732  0086               	movwf	6
  8459  0733  3000               	movlw	high bmp280_get_uncomp_data@F6465
  8460  0734  0087               	movwf	7
  8461  0735  3058               	movlw	low bmp280_get_uncomp_data@temp
  8462  0736  0084               	movwf	4
  8463  0737  3000               	movlw	high bmp280_get_uncomp_data@temp
  8464  0738  0085               	movwf	5
  8465  0739  3006               	movlw	6
  8466  073A  00CB               	movwf	??_bmp280_get_uncomp_data
  8467  073B                     u517_20:	
  8468  073B  0016               	moviw fsr1++
  8469  073C  001A               	movwi fsr0++
  8470  073D  0BCB               	decfsz	??_bmp280_get_uncomp_data,f
  8471  073E  2F3B               	goto	u517_20
  8472                           
  8473                           ;bmp280.c: 365: rslt = null_ptr_check(dev);
  8474  073F  084A               	movf	bmp280_get_uncomp_data@dev,w
  8475  0740  3197  2708  3187   	fcall	i1_null_ptr_check
  8476  0743  0140               	movlb	0	; select bank0
  8477  0744  00CB               	movwf	??_bmp280_get_uncomp_data
  8478  0745  084B               	movf	??_bmp280_get_uncomp_data,w
  8479  0746  00DE               	movwf	bmp280_get_uncomp_data@rslt
  8480                           
  8481                           ;bmp280.c: 367: if ((rslt == (0)) && (uncomp_data != (0))) {
  8482  0747  085E               	movf	bmp280_get_uncomp_data@rslt,w
  8483  0748  1D03               	btfss	3,2
  8484  0749  2FDF               	goto	i1l393
  8485  074A  085F               	movf	bmp280_get_uncomp_data@uncomp_data,w
  8486  074B  1903               	btfsc	3,2
  8487  074C  2FDF               	goto	i1l393
  8488                           
  8489                           ;bmp280.c: 368: rslt = bmp280_get_regs((unsigned char) 0xF7, temp, 6, dev);
  8490  074D  3058               	movlw	low bmp280_get_uncomp_data@temp
  8491  074E  00C4               	movwf	i1bmp280_get_regs@reg_data
  8492  074F  3000               	movlw	high bmp280_get_uncomp_data@temp
  8493  0750  00C5               	movwf	i1bmp280_get_regs@reg_data+1
  8494  0751  3006               	movlw	6
  8495  0752  00CB               	movwf	??_bmp280_get_uncomp_data
  8496  0753  084B               	movf	??_bmp280_get_uncomp_data,w
  8497  0754  00C6               	movwf	i1bmp280_get_regs@len
  8498  0755  084A               	movf	bmp280_get_uncomp_data@dev,w
  8499  0756  00CC               	movwf	??_bmp280_get_uncomp_data+1
  8500  0757  084C               	movf	??_bmp280_get_uncomp_data+1,w
  8501  0758  00C7               	movwf	i1bmp280_get_regs@dev
  8502  0759  30F7               	movlw	247
  8503  075A  3188  209A  3187   	fcall	i1_bmp280_get_regs
  8504  075D  0140               	movlb	0	; select bank0
  8505  075E  00CD               	movwf	??_bmp280_get_uncomp_data+2
  8506  075F  084D               	movf	??_bmp280_get_uncomp_data+2,w
  8507  0760  00DE               	movwf	bmp280_get_uncomp_data@rslt
  8508                           
  8509                           ;bmp280.c: 369: uncomp_data->uncomp_press = (int32_t) ((((uint32_t) (temp[0])) << 12) | 
      +                          (((uint32_t) (temp[1])) << 4);bmp280.c: 370: | ((uint32_t) temp[2] >> 4));
  8510  0761  085A               	movf	bmp280_get_uncomp_data@temp+2,w
  8511  0762  00CB               	movwf	??_bmp280_get_uncomp_data
  8512  0763  3004               	movlw	4
  8513  0764                     u520_25:	
  8514  0764  36CB               	lsrf	??_bmp280_get_uncomp_data,f
  8515  0765  0B89               	decfsz	9,f
  8516  0766  2F64               	goto	u520_25
  8517  0767  084B               	movf	??_bmp280_get_uncomp_data,w
  8518  0768  00CC               	movwf	??_bmp280_get_uncomp_data+1
  8519  0769  01CD               	clrf	??_bmp280_get_uncomp_data+2
  8520  076A  01CE               	clrf	??_bmp280_get_uncomp_data+3
  8521  076B  01CF               	clrf	??_bmp280_get_uncomp_data+4
  8522  076C  0859               	movf	bmp280_get_uncomp_data@temp+1,w
  8523  076D  00D0               	movwf	??_bmp280_get_uncomp_data+5
  8524  076E  01D1               	clrf	??_bmp280_get_uncomp_data+6
  8525  076F  01D2               	clrf	??_bmp280_get_uncomp_data+7
  8526  0770  01D3               	clrf	??_bmp280_get_uncomp_data+8
  8527  0771  3004               	movlw	4
  8528  0772                     u521_25:	
  8529  0772  35D0               	lslf	??_bmp280_get_uncomp_data+5,f
  8530  0773  0DD1               	rlf	??_bmp280_get_uncomp_data+6,f
  8531  0774  0DD2               	rlf	??_bmp280_get_uncomp_data+7,f
  8532  0775  0DD3               	rlf	??_bmp280_get_uncomp_data+8,f
  8533  0776  0B89               	decfsz	9,f
  8534  0777  2F72               	goto	u521_25
  8535  0778  0858               	movf	bmp280_get_uncomp_data@temp,w
  8536  0779  00D4               	movwf	??_bmp280_get_uncomp_data+9
  8537  077A  01D5               	clrf	??_bmp280_get_uncomp_data+10
  8538  077B  01D6               	clrf	??_bmp280_get_uncomp_data+11
  8539  077C  01D7               	clrf	??_bmp280_get_uncomp_data+12
  8540  077D  300C               	movlw	12
  8541  077E                     u522_25:	
  8542  077E  35D4               	lslf	??_bmp280_get_uncomp_data+9,f
  8543  077F  0DD5               	rlf	??_bmp280_get_uncomp_data+10,f
  8544  0780  0DD6               	rlf	??_bmp280_get_uncomp_data+11,f
  8545  0781  0DD7               	rlf	??_bmp280_get_uncomp_data+12,f
  8546  0782  0B89               	decfsz	9,f
  8547  0783  2F7E               	goto	u522_25
  8548  0784  0854               	movf	??_bmp280_get_uncomp_data+9,w
  8549  0785  04D0               	iorwf	??_bmp280_get_uncomp_data+5,f
  8550  0786  0855               	movf	??_bmp280_get_uncomp_data+10,w
  8551  0787  04D1               	iorwf	??_bmp280_get_uncomp_data+6,f
  8552  0788  0856               	movf	??_bmp280_get_uncomp_data+11,w
  8553  0789  04D2               	iorwf	??_bmp280_get_uncomp_data+7,f
  8554  078A  0857               	movf	??_bmp280_get_uncomp_data+12,w
  8555  078B  04D3               	iorwf	??_bmp280_get_uncomp_data+8,f
  8556  078C  0850               	movf	??_bmp280_get_uncomp_data+5,w
  8557  078D  04CC               	iorwf	??_bmp280_get_uncomp_data+1,f
  8558  078E  0851               	movf	??_bmp280_get_uncomp_data+6,w
  8559  078F  04CD               	iorwf	??_bmp280_get_uncomp_data+2,f
  8560  0790  0852               	movf	??_bmp280_get_uncomp_data+7,w
  8561  0791  04CE               	iorwf	??_bmp280_get_uncomp_data+3,f
  8562  0792  0853               	movf	??_bmp280_get_uncomp_data+8,w
  8563  0793  04CF               	iorwf	??_bmp280_get_uncomp_data+4,f
  8564  0794  085F               	movf	bmp280_get_uncomp_data@uncomp_data,w
  8565  0795  3E04               	addlw	4
  8566  0796  0086               	movwf	6
  8567  0797  0187               	clrf	7
  8568  0798  084C               	movf	??_bmp280_get_uncomp_data+1,w
  8569  0799  3FC0               	movwi [0]fsr1
  8570  079A  084D               	movf	??_bmp280_get_uncomp_data+2,w
  8571  079B  3FC1               	movwi [1]fsr1
  8572  079C  084E               	movf	??_bmp280_get_uncomp_data+3,w
  8573  079D  3FC2               	movwi [2]fsr1
  8574  079E  084F               	movf	??_bmp280_get_uncomp_data+4,w
  8575  079F  3FC3               	movwi [3]fsr1
  8576                           
  8577                           ;bmp280.c: 372: uncomp_data->uncomp_temp = (int32_t) ((((int32_t) (temp[3])) << 12) | ((
      +                          (int32_t) (temp[4])) << 4);bmp280.c: 373: | (((int32_t) (temp[5])) >> 4));
  8578  07A0  085D               	movf	bmp280_get_uncomp_data@temp+5,w
  8579  07A1  00CB               	movwf	??_bmp280_get_uncomp_data
  8580  07A2  3004               	movlw	4
  8581  07A3                     u523_25:	
  8582  07A3  36CB               	lsrf	??_bmp280_get_uncomp_data,f
  8583  07A4  0B89               	decfsz	9,f
  8584  07A5  2FA3               	goto	u523_25
  8585  07A6  084B               	movf	??_bmp280_get_uncomp_data,w
  8586  07A7  00CC               	movwf	??_bmp280_get_uncomp_data+1
  8587  07A8  01CD               	clrf	??_bmp280_get_uncomp_data+2
  8588  07A9  01CE               	clrf	??_bmp280_get_uncomp_data+3
  8589  07AA  01CF               	clrf	??_bmp280_get_uncomp_data+4
  8590  07AB  085C               	movf	bmp280_get_uncomp_data@temp+4,w
  8591  07AC  00D0               	movwf	??_bmp280_get_uncomp_data+5
  8592  07AD  01D1               	clrf	??_bmp280_get_uncomp_data+6
  8593  07AE  01D2               	clrf	??_bmp280_get_uncomp_data+7
  8594  07AF  01D3               	clrf	??_bmp280_get_uncomp_data+8
  8595  07B0  3004               	movlw	4
  8596  07B1                     u524_25:	
  8597  07B1  35D0               	lslf	??_bmp280_get_uncomp_data+5,f
  8598  07B2  0DD1               	rlf	??_bmp280_get_uncomp_data+6,f
  8599  07B3  0DD2               	rlf	??_bmp280_get_uncomp_data+7,f
  8600  07B4  0DD3               	rlf	??_bmp280_get_uncomp_data+8,f
  8601  07B5  0B89               	decfsz	9,f
  8602  07B6  2FB1               	goto	u524_25
  8603  07B7  085B               	movf	bmp280_get_uncomp_data@temp+3,w
  8604  07B8  00D4               	movwf	??_bmp280_get_uncomp_data+9
  8605  07B9  01D5               	clrf	??_bmp280_get_uncomp_data+10
  8606  07BA  01D6               	clrf	??_bmp280_get_uncomp_data+11
  8607  07BB  01D7               	clrf	??_bmp280_get_uncomp_data+12
  8608  07BC  300C               	movlw	12
  8609  07BD                     u525_25:	
  8610  07BD  35D4               	lslf	??_bmp280_get_uncomp_data+9,f
  8611  07BE  0DD5               	rlf	??_bmp280_get_uncomp_data+10,f
  8612  07BF  0DD6               	rlf	??_bmp280_get_uncomp_data+11,f
  8613  07C0  0DD7               	rlf	??_bmp280_get_uncomp_data+12,f
  8614  07C1  0B89               	decfsz	9,f
  8615  07C2  2FBD               	goto	u525_25
  8616  07C3  0854               	movf	??_bmp280_get_uncomp_data+9,w
  8617  07C4  04D0               	iorwf	??_bmp280_get_uncomp_data+5,f
  8618  07C5  0855               	movf	??_bmp280_get_uncomp_data+10,w
  8619  07C6  04D1               	iorwf	??_bmp280_get_uncomp_data+6,f
  8620  07C7  0856               	movf	??_bmp280_get_uncomp_data+11,w
  8621  07C8  04D2               	iorwf	??_bmp280_get_uncomp_data+7,f
  8622  07C9  0857               	movf	??_bmp280_get_uncomp_data+12,w
  8623  07CA  04D3               	iorwf	??_bmp280_get_uncomp_data+8,f
  8624  07CB  0850               	movf	??_bmp280_get_uncomp_data+5,w
  8625  07CC  04CC               	iorwf	??_bmp280_get_uncomp_data+1,f
  8626  07CD  0851               	movf	??_bmp280_get_uncomp_data+6,w
  8627  07CE  04CD               	iorwf	??_bmp280_get_uncomp_data+2,f
  8628  07CF  0852               	movf	??_bmp280_get_uncomp_data+7,w
  8629  07D0  04CE               	iorwf	??_bmp280_get_uncomp_data+3,f
  8630  07D1  0853               	movf	??_bmp280_get_uncomp_data+8,w
  8631  07D2  04CF               	iorwf	??_bmp280_get_uncomp_data+4,f
  8632  07D3  085F               	movf	bmp280_get_uncomp_data@uncomp_data,w
  8633  07D4  0086               	movwf	6
  8634  07D5  0187               	clrf	7
  8635  07D6  084C               	movf	??_bmp280_get_uncomp_data+1,w
  8636  07D7  3FC0               	movwi [0]fsr1
  8637  07D8  084D               	movf	??_bmp280_get_uncomp_data+2,w
  8638  07D9  3FC1               	movwi [1]fsr1
  8639  07DA  084E               	movf	??_bmp280_get_uncomp_data+3,w
  8640  07DB  3FC2               	movwi [2]fsr1
  8641  07DC  084F               	movf	??_bmp280_get_uncomp_data+4,w
  8642  07DD  3FC3               	movwi [3]fsr1
  8643                           
  8644                           ;bmp280.c: 374: } else {
  8645  07DE  2FE1               	goto	i1l3921
  8646  07DF                     i1l393:	
  8647                           
  8648                           ;bmp280.c: 375: rslt = (-1);
  8649  07DF  01DE               	clrf	bmp280_get_uncomp_data@rslt
  8650  07E0  03DE               	decf	bmp280_get_uncomp_data@rslt,f
  8651  07E1                     i1l3921:	
  8652                           
  8653                           ;bmp280.c: 376: };bmp280.c: 378: return rslt;
  8654  07E1  085E               	movf	bmp280_get_uncomp_data@rslt,w
  8655  07E2  0008               	return
  8656  07E3                     __end_of_bmp280_get_uncomp_data:	
  8657                           
  8658                           	psect	text33
  8659  089A                     __ptext33:	
  8660 ;; *************** function i1_bmp280_get_regs *****************
  8661 ;; Defined at:
  8662 ;;		line 114 in file "bmp280.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  reg_addr        1    wreg     unsigned char 
  8665 ;;  reg_data        2   36[BANK0 ] PTR unsigned char 
  8666 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  8667 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  8668 ;;  len             1   38[BANK0 ] unsigned char 
  8669 ;;  dev             1   39[BANK0 ] PTR const struct bmp280_
  8670 ;;		 -> bmp(42), 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  reg_addr        1   40[BANK0 ] unsigned char 
  8673 ;;  bmp280_get_r    1   41[BANK0 ] char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      char 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;Total ram usage:        9 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    2
  8690 ;; This function calls:
  8691 ;;		i1_BMP280_SPI_bus_read
  8692 ;;		i1_null_ptr_check
  8693 ;; This function is called by:
  8694 ;;		_bmp280_get_uncomp_data
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           
  8699                           ;psect for function i1_bmp280_get_regs
  8700  089A                     i1_bmp280_get_regs:	
  8701                           
  8702                           ;incstack = 0
  8703                           ; Regs used in i1_bmp280_get_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8704                           ;i1bmp280_get_regs@reg_addr stored from wreg
  8705  089A  0140               	movlb	0	; select bank0
  8706  089B  00C8               	movwf	i1bmp280_get_regs@reg_addr
  8707                           
  8708                           ;bmp280.c: 116: int8_t rslt;;bmp280.c: 118: rslt = null_ptr_check(dev);
  8709  089C  0847               	movf	i1bmp280_get_regs@dev,w
  8710  089D  3197  2708  3188   	fcall	i1_null_ptr_check
  8711  08A0  00FB               	movwf	??i1_bmp280_get_regs
  8712  08A1  087B               	movf	??i1_bmp280_get_regs,w
  8713  08A2  0140               	movlb	0	; select bank0
  8714  08A3  00C9               	movwf	i1bmp280_get_regs@rslt
  8715                           
  8716                           ;bmp280.c: 120: if ((rslt == (0)) && (reg_data != (0))) {
  8717  08A4  0849               	movf	i1bmp280_get_regs@rslt,w
  8718  08A5  1D03               	btfss	3,2
  8719  08A6  28E1               	goto	i1l327
  8720  08A7  0844               	movf	i1bmp280_get_regs@reg_data,w
  8721  08A8  0445               	iorwf	i1bmp280_get_regs@reg_data+1,w
  8722  08A9  1903               	btfsc	3,2
  8723  08AA  28E1               	goto	i1l327
  8724                           
  8725                           ;bmp280.c: 122: if (dev->intf == (unsigned char) 0)
  8726  08AB  0847               	movf	i1bmp280_get_regs@dev,w
  8727  08AC  3E02               	addlw	2
  8728  08AD  0086               	movwf	6
  8729  08AE  3001               	movlw	1	; select bank2/3
  8730  08AF  0087               	movwf	7
  8731  08B0  0801               	movf	1,w
  8732  08B1  1D03               	btfss	3,2
  8733  08B2  28B8               	goto	i1l3861
  8734                           
  8735                           ;bmp280.c: 123: reg_addr = reg_addr | 0x80;
  8736  08B3  0848               	movf	i1bmp280_get_regs@reg_addr,w
  8737  08B4  3880               	iorlw	128
  8738  08B5  00FB               	movwf	??i1_bmp280_get_regs
  8739  08B6  087B               	movf	??i1_bmp280_get_regs,w
  8740  08B7  00C8               	movwf	i1bmp280_get_regs@reg_addr
  8741  08B8                     i1l3861:	
  8742                           
  8743                           ;bmp280.c: 125: rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
  8744  08B8  0847               	movf	i1bmp280_get_regs@dev,w
  8745  08B9  0086               	movwf	6
  8746  08BA  3001               	movlw	1	; select bank2/3
  8747  08BB  0087               	movwf	7
  8748  08BC  3001               	movlw	1	; select bank2/3
  8749  08BD  3F41               	moviw [1]fsr1
  8750  08BE  00F1               	movwf	i1BMP280_SPI_bus_read@dev_addr
  8751  08BF  0848               	movf	i1bmp280_get_regs@reg_addr,w
  8752  08C0  00FB               	movwf	??i1_bmp280_get_regs
  8753  08C1  087B               	movf	??i1_bmp280_get_regs,w
  8754  08C2  00F2               	movwf	i1BMP280_SPI_bus_read@reg_addr
  8755  08C3  0845               	movf	i1bmp280_get_regs@reg_data+1,w
  8756  08C4  00F4               	movwf	i1BMP280_SPI_bus_read@reg_data+1
  8757  08C5  0844               	movf	i1bmp280_get_regs@reg_data,w
  8758  08C6  00F3               	movwf	i1BMP280_SPI_bus_read@reg_data
  8759  08C7  0846               	movf	i1bmp280_get_regs@len,w
  8760  08C8  00FC               	movwf	??i1_bmp280_get_regs+1
  8761  08C9  087C               	movf	??i1_bmp280_get_regs+1,w
  8762  08CA  00F5               	movwf	i1BMP280_SPI_bus_read@cnt
  8763  08CB  0847               	movf	i1bmp280_get_regs@dev,w
  8764  08CC  3E03               	addlw	3
  8765  08CD  0086               	movwf	6
  8766  08CE  3001               	movlw	1	; select bank2/3
  8767  08CF  0087               	movwf	7
  8768  08D0  3F41               	moviw [1]fsr1
  8769  08D1  008A               	movwf	10
  8770  08D2  3F40               	moviw [0]fsr1
  8771  08D3  000A               	callw
  8772  08D4  3188               	pagesel	$
  8773  08D5  00FD               	movwf	??i1_bmp280_get_regs+2
  8774  08D6  087D               	movf	??i1_bmp280_get_regs+2,w
  8775  08D7  0140               	movlb	0	; select bank0
  8776  08D8  00C9               	movwf	i1bmp280_get_regs@rslt
  8777                           
  8778                           ;bmp280.c: 127: if (rslt != (0))
  8779  08D9  0849               	movf	i1bmp280_get_regs@rslt,w
  8780  08DA  1903               	btfsc	3,2
  8781  08DB  28E3               	goto	i1l3867
  8782                           
  8783                           ;bmp280.c: 128: rslt = (-4);
  8784  08DC  30FC               	movlw	252
  8785  08DD  00FB               	movwf	??i1_bmp280_get_regs
  8786  08DE  087B               	movf	??i1_bmp280_get_regs,w
  8787  08DF  00C9               	movwf	i1bmp280_get_regs@rslt
  8788                           
  8789                           ;bmp280.c: 129: } else {
  8790  08E0  28E3               	goto	i1l3867
  8791  08E1                     i1l327:	
  8792                           
  8793                           ;bmp280.c: 130: rslt = (-1);
  8794  08E1  01C9               	clrf	i1bmp280_get_regs@rslt
  8795  08E2  03C9               	decf	i1bmp280_get_regs@rslt,f
  8796  08E3                     i1l3867:	
  8797                           
  8798                           ;bmp280.c: 131: };bmp280.c: 133: return rslt;
  8799  08E3  0849               	movf	i1bmp280_get_regs@rslt,w
  8800  08E4  0008               	return
  8801  08E5                     __end_ofi1_bmp280_get_regs:	
  8802                           
  8803                           	psect	text34
  8804  09F1                     __ptext34:	
  8805 ;; *************** function i1_BMP280_SPI_bus_read *****************
  8806 ;; Defined at:
  8807 ;;		line 39 in file "main.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  dev_addr        1    1[COMMON] unsigned char 
  8810 ;;  reg_addr        1    2[COMMON] unsigned char 
  8811 ;;  reg_data        2    3[COMMON] PTR unsigned char 
  8812 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  8813 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  8814 ;;  cnt             1    5[COMMON] unsigned char 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  BMP280_SPI_b   30    0[BANK0 ] char [30]
  8817 ;;  BMP280_SPI_b    4   30[BANK0 ] long 
  8818 ;;  BMP280_SPI_b    1   35[BANK0 ] unsigned char 
  8819 ;;  BMP280_SPI_b    1   34[BANK0 ] unsigned char 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      char 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8829 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Totals:        10      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;Total ram usage:       46 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    1
  8836 ;; This function calls:
  8837 ;;		i1_spi1_exchangeByte
  8838 ;; This function is called by:
  8839 ;;		i1_bmp280_get_regs
  8840 ;;		_bmp280_get_regs
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           
  8845                           ;psect for function i1_BMP280_SPI_bus_read
  8846  09F1                     i1_BMP280_SPI_bus_read:	
  8847  09F1                     i1l2581:	
  8848                           ;incstack = 0
  8849                           ; Regs used in i1_BMP280_SPI_bus_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8850                           
  8851                           
  8852                           ;main.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  8853  09F1  30C8               	movlw	200
  8854  09F2                     u602_27:	
  8855  09F2  3200               	nop2
  8856  09F3  0B89               	decfsz	9,f
  8857  09F4  29F2               	goto	u602_27
  8858                           
  8859                           ;main.c: 42: int32_t iError=(0);
  8860  09F5  3000               	movlw	0
  8861  09F6  0140               	movlb	0	; select bank0
  8862  09F7  00C1               	movwf	i1BMP280_SPI_bus_read@iError+3
  8863  09F8  3000               	movlw	0
  8864  09F9  00C0               	movwf	i1BMP280_SPI_bus_read@iError+2
  8865  09FA  3000               	movlw	0
  8866  09FB  00BF               	movwf	i1BMP280_SPI_bus_read@iError+1
  8867  09FC  3000               	movlw	0
  8868  09FD  00BE               	movwf	i1BMP280_SPI_bus_read@iError
  8869                           
  8870                           ;main.c: 43: int8_t array[30]={0xFF};
  8871  09FE  3020               	movlw	low BMP280_SPI_bus_read@F6549
  8872  09FF  0086               	movwf	6
  8873  0A00  3002               	movlw	high BMP280_SPI_bus_read@F6549
  8874  0A01  0087               	movwf	7
  8875  0A02  3020               	movlw	low i1BMP280_SPI_bus_read@array
  8876  0A03  0084               	movwf	4
  8877  0A04  3000               	movlw	high i1BMP280_SPI_bus_read@array
  8878  0A05  0085               	movwf	5
  8879  0A06  301E               	movlw	30
  8880  0A07  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8881  0A08                     u314_20:	
  8882  0A08  0016               	moviw fsr1++
  8883  0A09  001A               	movwi fsr0++
  8884  0A0A  0BF6               	decfsz	??i1_BMP280_SPI_bus_read,f
  8885  0A0B  2A08               	goto	u314_20
  8886                           
  8887                           ;main.c: 44: uint8_t stringpos;;main.c: 45: array[0] = reg_addr|0x80;
  8888  0A0C  0872               	movf	i1BMP280_SPI_bus_read@reg_addr,w
  8889  0A0D  3880               	iorlw	-128
  8890  0A0E  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8891  0A0F  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8892  0A10  00A0               	movwf	i1BMP280_SPI_bus_read@array
  8893                           
  8894                           ;main.c: 47: uint8_t i;;main.c: 48: do { LATAbits.LATA2 = 0; } while(0);
  8895  0A11  1118               	bcf	24,2	;volatile
  8896                           
  8897                           ;main.c: 49: for (i=0; i<cnt+1; i++){
  8898  0A12  01C3               	clrf	i1BMP280_SPI_bus_read@i
  8899  0A13                     i1l2595:	
  8900  0A13  0875               	movf	i1BMP280_SPI_bus_read@cnt,w
  8901  0A14  3E01               	addlw	1
  8902  0A15  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8903  0A16  3000               	movlw	0
  8904  0A17  1803               	skipnc
  8905  0A18  3001               	movlw	1
  8906  0A19  00F7               	movwf	??i1_BMP280_SPI_bus_read+1
  8907  0A1A  0877               	movf	??i1_BMP280_SPI_bus_read+1,w
  8908  0A1B  3A80               	xorlw	128
  8909  0A1C  3C80               	sublw	128
  8910  0A1D  1D03               	skipz
  8911  0A1E  2A21               	goto	u315_25
  8912  0A1F  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8913  0A20  0243               	subwf	i1BMP280_SPI_bus_read@i,w
  8914  0A21                     u315_25:	
  8915  0A21  1803               	btfsc	3,0
  8916  0A22  2A39               	goto	i1l2597
  8917                           
  8918                           ;main.c: 50: array[i] = spi1_exchangeByte(array[i]);
  8919  0A23  0140               	movlb	0	; select bank0
  8920  0A24  0843               	movf	i1BMP280_SPI_bus_read@i,w
  8921  0A25  3E20               	addlw	(low (i1BMP280_SPI_bus_read@array| 0))& (0+255)
  8922  0A26  0086               	movwf	6
  8923  0A27  0187               	clrf	7
  8924  0A28  0801               	movf	1,w
  8925  0A29  3196  2661  3189   	fcall	i1_spi1_exchangeByte
  8926  0A2C  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8927  0A2D  0140               	movlb	0	; select bank0
  8928  0A2E  0843               	movf	i1BMP280_SPI_bus_read@i,w
  8929  0A2F  3E20               	addlw	(low (i1BMP280_SPI_bus_read@array| 0))& (0+255)
  8930  0A30  0086               	movwf	6
  8931  0A31  0187               	clrf	7
  8932  0A32  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8933  0A33  0081               	movwf	1
  8934  0A34  3001               	movlw	1
  8935  0A35  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8936  0A36  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8937  0A37  07C3               	addwf	i1BMP280_SPI_bus_read@i,f
  8938  0A38  2A13               	goto	i1l2595
  8939  0A39                     i1l2597:	
  8940                           
  8941                           ;main.c: 51: };main.c: 53: _delay((unsigned long)((10)*(4000000/4000.0)));
  8942  0A39  300D               	movlw	13
  8943  0A3A  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8944  0A3B  30FC               	movlw	252
  8945  0A3C                     u603_27:	
  8946  0A3C  0B89               	decfsz	9,f
  8947  0A3D  2A3C               	goto	u603_27
  8948  0A3E  0BF6               	decfsz	??i1_BMP280_SPI_bus_read,f
  8949  0A3F  2A3C               	goto	u603_27
  8950                           
  8951                           ;main.c: 54: do { LATAbits.LATA2 = 1; } while(0);
  8952  0A40  0140               	movlb	0	; select bank0
  8953  0A41  1518               	bsf	24,2	;volatile
  8954                           
  8955                           ;main.c: 56: for (stringpos = 0; stringpos < cnt; stringpos++) {
  8956  0A42  01C2               	clrf	i1BMP280_SPI_bus_read@stringpos
  8957  0A43                     i1l2607:	
  8958  0A43  0875               	movf	i1BMP280_SPI_bus_read@cnt,w
  8959  0A44  0242               	subwf	i1BMP280_SPI_bus_read@stringpos,w
  8960  0A45  1803               	btfsc	3,0
  8961  0A46  2A62               	goto	i1l2609
  8962                           
  8963                           ;main.c: 57: *(reg_data + stringpos) = array[stringpos+1];
  8964  0A47  0842               	movf	i1BMP280_SPI_bus_read@stringpos,w
  8965  0A48  3E01               	addlw	1
  8966  0A49  3E20               	addlw	(low (i1BMP280_SPI_bus_read@array| 0))& (0+255)
  8967  0A4A  0086               	movwf	6
  8968  0A4B  0187               	clrf	7
  8969  0A4C  0801               	movf	1,w
  8970  0A4D  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8971  0A4E  0842               	movf	i1BMP280_SPI_bus_read@stringpos,w
  8972  0A4F  00F7               	movwf	??i1_BMP280_SPI_bus_read+1
  8973  0A50  01F8               	clrf	??i1_BMP280_SPI_bus_read+2
  8974  0A51  0877               	movf	??i1_BMP280_SPI_bus_read+1,w
  8975  0A52  0773               	addwf	i1BMP280_SPI_bus_read@reg_data,w
  8976  0A53  00F9               	movwf	??i1_BMP280_SPI_bus_read+3
  8977  0A54  0878               	movf	??i1_BMP280_SPI_bus_read+2,w
  8978  0A55  3D74               	addwfc	i1BMP280_SPI_bus_read@reg_data+1,w
  8979  0A56  00FA               	movwf	??i1_BMP280_SPI_bus_read+4
  8980  0A57  0879               	movf	??i1_BMP280_SPI_bus_read+3,w
  8981  0A58  0086               	movwf	6
  8982  0A59  087A               	movf	??i1_BMP280_SPI_bus_read+4,w
  8983  0A5A  0087               	movwf	7
  8984  0A5B  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8985  0A5C  0081               	movwf	1
  8986  0A5D  3001               	movlw	1
  8987  0A5E  00F6               	movwf	??i1_BMP280_SPI_bus_read
  8988  0A5F  0876               	movf	??i1_BMP280_SPI_bus_read,w
  8989  0A60  07C2               	addwf	i1BMP280_SPI_bus_read@stringpos,f
  8990  0A61  2A43               	goto	i1l2607
  8991  0A62                     i1l2609:	
  8992                           
  8993                           ;main.c: 58: };main.c: 59: return (int8_t)iError;
  8994  0A62  083E               	movf	i1BMP280_SPI_bus_read@iError,w
  8995  0A63  0008               	return
  8996  0A64                     __end_ofi1_BMP280_SPI_bus_read:	
  8997                           
  8998                           	psect	text35
  8999  1661                     __ptext35:	
  9000 ;; *************** function i1_spi1_exchangeByte *****************
  9001 ;; Defined at:
  9002 ;;		line 77 in file "mcc_generated_files/spi1_driver.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  b               1    wreg     unsigned char 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  b               1    0[COMMON] unsigned char 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      unsigned char 
  9009 ;; Registers used:
  9010 ;;		wreg
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;Total ram usage:        1 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		i1_BMP280_SPI_bus_read
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           
  9030                           ;psect for function i1_spi1_exchangeByte
  9031  1661                     i1_spi1_exchangeByte:	
  9032                           
  9033                           ;incstack = 0
  9034                           ; Regs used in i1_spi1_exchangeByte: [wreg]
  9035                           ;i1spi1_exchangeByte@b stored from wreg
  9036  1661  00F0               	movwf	i1spi1_exchangeByte@b
  9037                           
  9038                           ;spi1_driver.c: 79: SSP1BUF = b;
  9039  1662  0870               	movf	i1spi1_exchangeByte@b,w
  9040  1663  0143               	movlb	3	; select bank3
  9041  1664  008C               	movwf	12	;volatile
  9042  1665                     i1l46:	
  9043                           ;spi1_driver.c: 80: while(!PIR3bits.SSP1IF);
  9044                           
  9045  1665  014E               	movlb	14	; select bank14
  9046  1666  1C0F               	btfss	15,0	;volatile
  9047  1667  2E65               	goto	i1l46
  9048                           
  9049                           ;spi1_driver.c: 81: PIR3bits.SSP1IF = 0;
  9050  1668  100F               	bcf	15,0	;volatile
  9051                           
  9052                           ;spi1_driver.c: 82: return SSP1BUF;
  9053  1669  0143               	movlb	3	; select bank3
  9054  166A  080C               	movf	12,w	;volatile
  9055  166B  0008               	return
  9056  166C                     __end_ofi1_spi1_exchangeByte:	
  9057                           
  9058                           	psect	text36
  9059  0EDE                     __ptext36:	
  9060 ;; *************** function _bmp280_compute_meas_time *****************
  9061 ;; Defined at:
  9062 ;;		line 559 in file "bmp280.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  dev             1    wreg     PTR const struct bmp280_
  9065 ;;		 -> bmp(42), 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  dev             1   35[BANK0 ] PTR const struct bmp280_
  9068 ;;		 -> bmp(42), 
  9069 ;;  period          4   31[BANK0 ] unsigned long 
  9070 ;;  p_startup       4   24[BANK0 ] unsigned long 
  9071 ;;  p_dur           4   20[BANK0 ] unsigned long 
  9072 ;;  t_dur           4   16[BANK0 ] unsigned long 
  9073 ;;  rslt            1   30[BANK0 ] char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      unsigned char 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;Total ram usage:       36 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    1
  9090 ;; This function calls:
  9091 ;;		___lldiv
  9092 ;;		___lmul
  9093 ;;		i1_null_ptr_check
  9094 ;; This function is called by:
  9095 ;;		_tmr_fire
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _bmp280_compute_meas_time
  9101  0EDE                     _bmp280_compute_meas_time:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in _bmp280_compute_meas_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9105                           ;bmp280_compute_meas_time@dev stored from wreg
  9106  0EDE  0140               	movlb	0	; select bank0
  9107  0EDF  00C3               	movwf	bmp280_compute_meas_time@dev
  9108                           
  9109                           ;bmp280.c: 561: uint32_t period = 0;
  9110  0EE0  3000               	movlw	0
  9111  0EE1  00C2               	movwf	bmp280_compute_meas_time@period+3
  9112  0EE2  3000               	movlw	0
  9113  0EE3  00C1               	movwf	bmp280_compute_meas_time@period+2
  9114  0EE4  3000               	movlw	0
  9115  0EE5  00C0               	movwf	bmp280_compute_meas_time@period+1
  9116  0EE6  3000               	movlw	0
  9117  0EE7  00BF               	movwf	bmp280_compute_meas_time@period
  9118                           
  9119                           ;bmp280.c: 562: uint32_t t_dur = 0, p_dur = 0, p_startup = 0;
  9120  0EE8  3000               	movlw	0
  9121  0EE9  00B3               	movwf	bmp280_compute_meas_time@t_dur+3
  9122  0EEA  3000               	movlw	0
  9123  0EEB  00B2               	movwf	bmp280_compute_meas_time@t_dur+2
  9124  0EEC  3000               	movlw	0
  9125  0EED  00B1               	movwf	bmp280_compute_meas_time@t_dur+1
  9126  0EEE  3000               	movlw	0
  9127  0EEF  00B0               	movwf	bmp280_compute_meas_time@t_dur
  9128  0EF0  3000               	movlw	0
  9129  0EF1  00B7               	movwf	bmp280_compute_meas_time@p_dur+3
  9130  0EF2  3000               	movlw	0
  9131  0EF3  00B6               	movwf	bmp280_compute_meas_time@p_dur+2
  9132  0EF4  3000               	movlw	0
  9133  0EF5  00B5               	movwf	bmp280_compute_meas_time@p_dur+1
  9134  0EF6  3000               	movlw	0
  9135  0EF7  00B4               	movwf	bmp280_compute_meas_time@p_dur
  9136  0EF8  3000               	movlw	0
  9137  0EF9  00BB               	movwf	bmp280_compute_meas_time@p_startup+3
  9138  0EFA  3000               	movlw	0
  9139  0EFB  00BA               	movwf	bmp280_compute_meas_time@p_startup+2
  9140  0EFC  3000               	movlw	0
  9141  0EFD  00B9               	movwf	bmp280_compute_meas_time@p_startup+1
  9142  0EFE  3000               	movlw	0
  9143  0EFF  00B8               	movwf	bmp280_compute_meas_time@p_startup
  9144                           
  9145                           ;bmp280.c: 563: const uint32_t startup = 1000, period_per_osrs = 2000;;bmp280.c: 564: in
      +                          t8_t rslt;;bmp280.c: 566: rslt = null_ptr_check(dev);
  9146  0F00  0843               	movf	bmp280_compute_meas_time@dev,w
  9147  0F01  3197  2708  318E   	fcall	i1_null_ptr_check
  9148  0F04  0140               	movlb	0	; select bank0
  9149  0F05  00A0               	movwf	??_bmp280_compute_meas_time
  9150  0F06  0820               	movf	??_bmp280_compute_meas_time,w
  9151  0F07  00BE               	movwf	bmp280_compute_meas_time@rslt
  9152                           
  9153                           ;bmp280.c: 568: if (rslt == (0)) {
  9154  0F08  083E               	movf	bmp280_compute_meas_time@rslt,w
  9155  0F09  1D03               	btfss	3,2
  9156  0F0A  2FFE               	goto	i1l2013
  9157                           
  9158                           ;bmp280.c: 569: t_dur = period_per_osrs * (((unsigned long) 1 << dev->conf.os_temp) >> 1
      +                          );
  9159  0F0B  3001               	movlw	1
  9160  0F0C  00A0               	movwf	??_bmp280_compute_meas_time
  9161  0F0D  3000               	movlw	0
  9162  0F0E  00A1               	movwf	??_bmp280_compute_meas_time+1
  9163  0F0F  3000               	movlw	0
  9164  0F10  00A2               	movwf	??_bmp280_compute_meas_time+2
  9165  0F11  3000               	movlw	0
  9166  0F12  00A3               	movwf	??_bmp280_compute_meas_time+3
  9167  0F13  0843               	movf	bmp280_compute_meas_time@dev,w
  9168  0F14  3E25               	addlw	37
  9169  0F15  0086               	movwf	6
  9170  0F16  3001               	movlw	1	; select bank2/3
  9171  0F17  0087               	movwf	7
  9172  0F18  0A01               	incf	1,w
  9173  0F19  2F1E               	goto	u195_20
  9174  0F1A                     u195_25:	
  9175  0F1A  35A0               	lslf	??_bmp280_compute_meas_time,f
  9176  0F1B  0DA1               	rlf	??_bmp280_compute_meas_time+1,f
  9177  0F1C  0DA2               	rlf	??_bmp280_compute_meas_time+2,f
  9178  0F1D  0DA3               	rlf	??_bmp280_compute_meas_time+3,f
  9179  0F1E                     u195_20:	
  9180  0F1E  0B89               	decfsz	9,f
  9181  0F1F  2F1A               	goto	u195_25
  9182  0F20  3001               	movlw	1
  9183  0F21                     u196_25:	
  9184  0F21  36A3               	lsrf	??_bmp280_compute_meas_time+3,f
  9185  0F22  0CA2               	rrf	??_bmp280_compute_meas_time+2,f
  9186  0F23  0CA1               	rrf	??_bmp280_compute_meas_time+1,f
  9187  0F24  0CA0               	rrf	??_bmp280_compute_meas_time,f
  9188  0F25  0B89               	decfsz	9,f
  9189  0F26  2F21               	goto	u196_25
  9190  0F27  0823               	movf	??_bmp280_compute_meas_time+3,w
  9191  0F28  00F3               	movwf	___lmul@multiplier+3
  9192  0F29  0822               	movf	??_bmp280_compute_meas_time+2,w
  9193  0F2A  00F2               	movwf	___lmul@multiplier+2
  9194  0F2B  0821               	movf	??_bmp280_compute_meas_time+1,w
  9195  0F2C  00F1               	movwf	___lmul@multiplier+1
  9196  0F2D  0820               	movf	??_bmp280_compute_meas_time,w
  9197  0F2E  00F0               	movwf	___lmul@multiplier
  9198  0F2F  3012               	movlw	low (bmp280_compute_meas_time@period_per_osrs| (0+32768))
  9199  0F30  0084               	movwf	4
  9200  0F31  3098               	movlw	high (bmp280_compute_meas_time@period_per_osrs| (0+32768))
  9201  0F32  0085               	movwf	5
  9202  0F33  3F00               	moviw [0]fsr0
  9203  0F34  00F4               	movwf	___lmul@multiplicand
  9204  0F35  3F01               	moviw [1]fsr0
  9205  0F36  00F5               	movwf	___lmul@multiplicand+1
  9206  0F37  3F02               	moviw [2]fsr0
  9207  0F38  00F6               	movwf	___lmul@multiplicand+2
  9208  0F39  3F03               	moviw [3]fsr0
  9209  0F3A  00F7               	movwf	___lmul@multiplicand+3
  9210  0F3B  3197  27A1  318E   	fcall	___lmul
  9211  0F3E  0873               	movf	?___lmul+3,w
  9212  0F3F  0140               	movlb	0	; select bank0
  9213  0F40  00B3               	movwf	bmp280_compute_meas_time@t_dur+3
  9214  0F41  0872               	movf	?___lmul+2,w
  9215  0F42  00B2               	movwf	bmp280_compute_meas_time@t_dur+2
  9216  0F43  0871               	movf	?___lmul+1,w
  9217  0F44  00B1               	movwf	bmp280_compute_meas_time@t_dur+1
  9218  0F45  0870               	movf	?___lmul,w
  9219  0F46  00B0               	movwf	bmp280_compute_meas_time@t_dur
  9220                           
  9221                           ;bmp280.c: 570: p_dur = period_per_osrs * (((unsigned long) 1 << dev->conf.os_pres) >> 1
      +                          );
  9222  0F47  3001               	movlw	1
  9223  0F48  00A0               	movwf	??_bmp280_compute_meas_time
  9224  0F49  3000               	movlw	0
  9225  0F4A  00A1               	movwf	??_bmp280_compute_meas_time+1
  9226  0F4B  3000               	movlw	0
  9227  0F4C  00A2               	movwf	??_bmp280_compute_meas_time+2
  9228  0F4D  3000               	movlw	0
  9229  0F4E  00A3               	movwf	??_bmp280_compute_meas_time+3
  9230  0F4F  0843               	movf	bmp280_compute_meas_time@dev,w
  9231  0F50  3E26               	addlw	38
  9232  0F51  0086               	movwf	6
  9233  0F52  3001               	movlw	1	; select bank2/3
  9234  0F53  0087               	movwf	7
  9235  0F54  0A01               	incf	1,w
  9236  0F55  2F5A               	goto	u197_20
  9237  0F56                     u197_25:	
  9238  0F56  35A0               	lslf	??_bmp280_compute_meas_time,f
  9239  0F57  0DA1               	rlf	??_bmp280_compute_meas_time+1,f
  9240  0F58  0DA2               	rlf	??_bmp280_compute_meas_time+2,f
  9241  0F59  0DA3               	rlf	??_bmp280_compute_meas_time+3,f
  9242  0F5A                     u197_20:	
  9243  0F5A  0B89               	decfsz	9,f
  9244  0F5B  2F56               	goto	u197_25
  9245  0F5C  3001               	movlw	1
  9246  0F5D                     u198_25:	
  9247  0F5D  36A3               	lsrf	??_bmp280_compute_meas_time+3,f
  9248  0F5E  0CA2               	rrf	??_bmp280_compute_meas_time+2,f
  9249  0F5F  0CA1               	rrf	??_bmp280_compute_meas_time+1,f
  9250  0F60  0CA0               	rrf	??_bmp280_compute_meas_time,f
  9251  0F61  0B89               	decfsz	9,f
  9252  0F62  2F5D               	goto	u198_25
  9253  0F63  0823               	movf	??_bmp280_compute_meas_time+3,w
  9254  0F64  00F3               	movwf	___lmul@multiplier+3
  9255  0F65  0822               	movf	??_bmp280_compute_meas_time+2,w
  9256  0F66  00F2               	movwf	___lmul@multiplier+2
  9257  0F67  0821               	movf	??_bmp280_compute_meas_time+1,w
  9258  0F68  00F1               	movwf	___lmul@multiplier+1
  9259  0F69  0820               	movf	??_bmp280_compute_meas_time,w
  9260  0F6A  00F0               	movwf	___lmul@multiplier
  9261  0F6B  3012               	movlw	low (bmp280_compute_meas_time@period_per_osrs| (0+32768))
  9262  0F6C  0084               	movwf	4
  9263  0F6D  3098               	movlw	high (bmp280_compute_meas_time@period_per_osrs| (0+32768))
  9264  0F6E  0085               	movwf	5
  9265  0F6F  3F00               	moviw [0]fsr0
  9266  0F70  00F4               	movwf	___lmul@multiplicand
  9267  0F71  3F01               	moviw [1]fsr0
  9268  0F72  00F5               	movwf	___lmul@multiplicand+1
  9269  0F73  3F02               	moviw [2]fsr0
  9270  0F74  00F6               	movwf	___lmul@multiplicand+2
  9271  0F75  3F03               	moviw [3]fsr0
  9272  0F76  00F7               	movwf	___lmul@multiplicand+3
  9273  0F77  3197  27A1  318E   	fcall	___lmul
  9274  0F7A  0873               	movf	?___lmul+3,w
  9275  0F7B  0140               	movlb	0	; select bank0
  9276  0F7C  00B7               	movwf	bmp280_compute_meas_time@p_dur+3
  9277  0F7D  0872               	movf	?___lmul+2,w
  9278  0F7E  00B6               	movwf	bmp280_compute_meas_time@p_dur+2
  9279  0F7F  0871               	movf	?___lmul+1,w
  9280  0F80  00B5               	movwf	bmp280_compute_meas_time@p_dur+1
  9281  0F81  0870               	movf	?___lmul,w
  9282  0F82  00B4               	movwf	bmp280_compute_meas_time@p_dur
  9283                           
  9284                           ;bmp280.c: 571: p_startup = (dev->conf.os_pres) ? 500 : 0;
  9285  0F83  0843               	movf	bmp280_compute_meas_time@dev,w
  9286  0F84  3E26               	addlw	38
  9287  0F85  0086               	movwf	6
  9288  0F86  3001               	movlw	1	; select bank2/3
  9289  0F87  0087               	movwf	7
  9290  0F88  0801               	movf	1,w
  9291  0F89  1D03               	btfss	3,2
  9292  0F8A  2F8E               	goto	i1l2007
  9293  0F8B  01BC               	clrf	_bmp280_compute_meas_time$1111
  9294  0F8C  01BD               	clrf	_bmp280_compute_meas_time$1111+1
  9295  0F8D  2F92               	goto	i1l418
  9296  0F8E                     i1l2007:	
  9297  0F8E  30F4               	movlw	244
  9298  0F8F  00BC               	movwf	_bmp280_compute_meas_time$1111
  9299  0F90  3001               	movlw	1
  9300  0F91  00BD               	movwf	_bmp280_compute_meas_time$1111+1
  9301  0F92                     i1l418:	
  9302  0F92  083C               	movf	_bmp280_compute_meas_time$1111,w
  9303  0F93  00B8               	movwf	bmp280_compute_meas_time@p_startup
  9304  0F94  083D               	movf	_bmp280_compute_meas_time$1111+1,w
  9305  0F95  00B9               	movwf	bmp280_compute_meas_time@p_startup+1
  9306  0F96  0D89               	rlf	9,f
  9307  0F97  3B89               	subwfb	9,f
  9308  0F98  0989               	comf	9,f
  9309  0F99  00BA               	movwf	bmp280_compute_meas_time@p_startup+2
  9310  0F9A  00BB               	movwf	bmp280_compute_meas_time@p_startup+3
  9311                           
  9312                           ;bmp280.c: 574: period = startup + t_dur + p_startup + p_dur + 500;
  9313  0F9B  0834               	movf	bmp280_compute_meas_time@p_dur,w
  9314  0F9C  00A0               	movwf	??_bmp280_compute_meas_time
  9315  0F9D  0835               	movf	bmp280_compute_meas_time@p_dur+1,w
  9316  0F9E  00A1               	movwf	??_bmp280_compute_meas_time+1
  9317  0F9F  0836               	movf	bmp280_compute_meas_time@p_dur+2,w
  9318  0FA0  00A2               	movwf	??_bmp280_compute_meas_time+2
  9319  0FA1  0837               	movf	bmp280_compute_meas_time@p_dur+3,w
  9320  0FA2  00A3               	movwf	??_bmp280_compute_meas_time+3
  9321  0FA3  0838               	movf	bmp280_compute_meas_time@p_startup,w
  9322  0FA4  00A4               	movwf	??_bmp280_compute_meas_time+4
  9323  0FA5  0839               	movf	bmp280_compute_meas_time@p_startup+1,w
  9324  0FA6  00A5               	movwf	??_bmp280_compute_meas_time+5
  9325  0FA7  083A               	movf	bmp280_compute_meas_time@p_startup+2,w
  9326  0FA8  00A6               	movwf	??_bmp280_compute_meas_time+6
  9327  0FA9  083B               	movf	bmp280_compute_meas_time@p_startup+3,w
  9328  0FAA  00A7               	movwf	??_bmp280_compute_meas_time+7
  9329  0FAB  0830               	movf	bmp280_compute_meas_time@t_dur,w
  9330  0FAC  00A8               	movwf	??_bmp280_compute_meas_time+8
  9331  0FAD  0831               	movf	bmp280_compute_meas_time@t_dur+1,w
  9332  0FAE  00A9               	movwf	??_bmp280_compute_meas_time+9
  9333  0FAF  0832               	movf	bmp280_compute_meas_time@t_dur+2,w
  9334  0FB0  00AA               	movwf	??_bmp280_compute_meas_time+10
  9335  0FB1  0833               	movf	bmp280_compute_meas_time@t_dur+3,w
  9336  0FB2  00AB               	movwf	??_bmp280_compute_meas_time+11
  9337  0FB3  3016               	movlw	low (bmp280_compute_meas_time@startup| (0+32768))
  9338  0FB4  0084               	movwf	4
  9339  0FB5  3098               	movlw	high (bmp280_compute_meas_time@startup| (0+32768))
  9340  0FB6  0085               	movwf	5
  9341  0FB7  3F00               	moviw [0]fsr0
  9342  0FB8  00AC               	movwf	??_bmp280_compute_meas_time+12
  9343  0FB9  3F01               	moviw [1]fsr0
  9344  0FBA  00AD               	movwf	??_bmp280_compute_meas_time+13
  9345  0FBB  3F02               	moviw [2]fsr0
  9346  0FBC  00AE               	movwf	??_bmp280_compute_meas_time+14
  9347  0FBD  3F03               	moviw [3]fsr0
  9348  0FBE  00AF               	movwf	??_bmp280_compute_meas_time+15
  9349  0FBF  082C               	movf	??_bmp280_compute_meas_time+12,w
  9350  0FC0  07A8               	addwf	??_bmp280_compute_meas_time+8,f
  9351  0FC1  082D               	movf	??_bmp280_compute_meas_time+13,w
  9352  0FC2  3DA9               	addwfc	??_bmp280_compute_meas_time+9,f
  9353  0FC3  082E               	movf	??_bmp280_compute_meas_time+14,w
  9354  0FC4  3DAA               	addwfc	??_bmp280_compute_meas_time+10,f
  9355  0FC5  082F               	movf	??_bmp280_compute_meas_time+15,w
  9356  0FC6  3DAB               	addwfc	??_bmp280_compute_meas_time+11,f
  9357  0FC7  0828               	movf	??_bmp280_compute_meas_time+8,w
  9358  0FC8  07A4               	addwf	??_bmp280_compute_meas_time+4,f
  9359  0FC9  0829               	movf	??_bmp280_compute_meas_time+9,w
  9360  0FCA  3DA5               	addwfc	??_bmp280_compute_meas_time+5,f
  9361  0FCB  082A               	movf	??_bmp280_compute_meas_time+10,w
  9362  0FCC  3DA6               	addwfc	??_bmp280_compute_meas_time+6,f
  9363  0FCD  082B               	movf	??_bmp280_compute_meas_time+11,w
  9364  0FCE  3DA7               	addwfc	??_bmp280_compute_meas_time+7,f
  9365  0FCF  0824               	movf	??_bmp280_compute_meas_time+4,w
  9366  0FD0  07A0               	addwf	??_bmp280_compute_meas_time,f
  9367  0FD1  0825               	movf	??_bmp280_compute_meas_time+5,w
  9368  0FD2  3DA1               	addwfc	??_bmp280_compute_meas_time+1,f
  9369  0FD3  0826               	movf	??_bmp280_compute_meas_time+6,w
  9370  0FD4  3DA2               	addwfc	??_bmp280_compute_meas_time+2,f
  9371  0FD5  0827               	movf	??_bmp280_compute_meas_time+7,w
  9372  0FD6  3DA3               	addwfc	??_bmp280_compute_meas_time+3,f
  9373  0FD7  30F4               	movlw	244
  9374  0FD8  0720               	addwf	??_bmp280_compute_meas_time,w
  9375  0FD9  00BF               	movwf	bmp280_compute_meas_time@period
  9376  0FDA  3001               	movlw	1
  9377  0FDB  3D21               	addwfc	??_bmp280_compute_meas_time+1,w
  9378  0FDC  00C0               	movwf	bmp280_compute_meas_time@period+1
  9379  0FDD  3000               	movlw	0
  9380  0FDE  3D22               	addwfc	??_bmp280_compute_meas_time+2,w
  9381  0FDF  00C1               	movwf	bmp280_compute_meas_time@period+2
  9382  0FE0  3000               	movlw	0
  9383  0FE1  3D23               	addwfc	??_bmp280_compute_meas_time+3,w
  9384  0FE2  00C2               	movwf	bmp280_compute_meas_time@period+3
  9385                           
  9386                           ;bmp280.c: 575: period /= 1000;
  9387  0FE3  3000               	movlw	0
  9388  0FE4  00F3               	movwf	___lldiv@divisor+3
  9389  0FE5  3000               	movlw	0
  9390  0FE6  00F2               	movwf	___lldiv@divisor+2
  9391  0FE7  3003               	movlw	3
  9392  0FE8  00F1               	movwf	___lldiv@divisor+1
  9393  0FE9  30E8               	movlw	232
  9394  0FEA  00F0               	movwf	___lldiv@divisor
  9395  0FEB  0842               	movf	bmp280_compute_meas_time@period+3,w
  9396  0FEC  00F7               	movwf	___lldiv@dividend+3
  9397  0FED  0841               	movf	bmp280_compute_meas_time@period+2,w
  9398  0FEE  00F6               	movwf	___lldiv@dividend+2
  9399  0FEF  0840               	movf	bmp280_compute_meas_time@period+1,w
  9400  0FF0  00F5               	movwf	___lldiv@dividend+1
  9401  0FF1  083F               	movf	bmp280_compute_meas_time@period,w
  9402  0FF2  00F4               	movwf	___lldiv@dividend
  9403  0FF3  3188  20E5         	fcall	___lldiv
  9404  0FF5  0873               	movf	?___lldiv+3,w
  9405  0FF6  0140               	movlb	0	; select bank0
  9406  0FF7  00C2               	movwf	bmp280_compute_meas_time@period+3
  9407  0FF8  0872               	movf	?___lldiv+2,w
  9408  0FF9  00C1               	movwf	bmp280_compute_meas_time@period+2
  9409  0FFA  0871               	movf	?___lldiv+1,w
  9410  0FFB  00C0               	movwf	bmp280_compute_meas_time@period+1
  9411  0FFC  0870               	movf	?___lldiv,w
  9412  0FFD  00BF               	movwf	bmp280_compute_meas_time@period
  9413  0FFE                     i1l2013:	
  9414                           
  9415                           ;bmp280.c: 576: };bmp280.c: 578: return (uint8_t)period;
  9416  0FFE  083F               	movf	bmp280_compute_meas_time@period,w
  9417  0FFF  0008               	return
  9418  1000                     __end_of_bmp280_compute_meas_time:	
  9419                           
  9420                           	psect	text37
  9421  040F                     __ptext37:	
  9422 ;; *************** function _bmp280_comp_temp_32bit *****************
  9423 ;; Defined at:
  9424 ;;		line 385 in file "bmp280.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  uncomp_temp     4    0[BANK0 ] unsigned long 
  9427 ;;  dev             1    4[BANK0 ] PTR struct bmp280_dev
  9428 ;;		 -> bmp(42), 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;  temperature     4   41[BANK0 ] long 
  9431 ;;  var2            4   33[BANK0 ] long 
  9432 ;;  var1            4   29[BANK0 ] long 
  9433 ;;  rslt            1   45[BANK0 ] char 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  4    0[BANK0 ] long 
  9436 ;; Registers used:
  9437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9443 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;Total ram usage:       46 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    1
  9450 ;; This function calls:
  9451 ;;		___lmul
  9452 ;;		i1_null_ptr_check
  9453 ;; This function is called by:
  9454 ;;		_tmr_fire
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _bmp280_comp_temp_32bit
  9460  040F                     _bmp280_comp_temp_32bit:	
  9461                           
  9462                           ;bmp280.c: 387: int32_t var1;;bmp280.c: 388: int32_t var2;;bmp280.c: 389: int32_t temper
      +                          ature = 0;
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in _bmp280_comp_temp_32bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9466  040F  3000               	movlw	0
  9467  0410  0140               	movlb	0	; select bank0
  9468  0411  00CC               	movwf	bmp280_comp_temp_32bit@temperature+3
  9469  0412  3000               	movlw	0
  9470  0413  00CB               	movwf	bmp280_comp_temp_32bit@temperature+2
  9471  0414  3000               	movlw	0
  9472  0415  00CA               	movwf	bmp280_comp_temp_32bit@temperature+1
  9473  0416  3000               	movlw	0
  9474  0417  00C9               	movwf	bmp280_comp_temp_32bit@temperature
  9475                           
  9476                           ;bmp280.c: 390: int8_t rslt;;bmp280.c: 392: rslt = null_ptr_check(dev);
  9477  0418  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9478  0419  3197  2708  3184   	fcall	i1_null_ptr_check
  9479  041C  0140               	movlb	0	; select bank0
  9480  041D  00A5               	movwf	??_bmp280_comp_temp_32bit
  9481  041E  0825               	movf	??_bmp280_comp_temp_32bit,w
  9482  041F  00CD               	movwf	bmp280_comp_temp_32bit@rslt
  9483                           
  9484                           ;bmp280.c: 394: if (rslt == (0)) {
  9485  0420  084D               	movf	bmp280_comp_temp_32bit@rslt,w
  9486  0421  1D03               	btfss	3,2
  9487  0422  2DA4               	goto	i1l2047
  9488                           
  9489                           ;bmp280.c: 395: var1 = ((((uncomp_temp >> 3) - ((int32_t) dev->calib_param.dig_t1 << 1))
      +                          );bmp280.c: 396: * ((int32_t) dev->calib_param.dig_t2)) >> 11;
  9490  0423  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9491  0424  3E09               	addlw	9
  9492  0425  0086               	movwf	6
  9493  0426  3001               	movlw	1	; select bank2/3
  9494  0427  0087               	movwf	7
  9495  0428  3F40               	moviw [0]fsr1
  9496  0429  00A5               	movwf	??_bmp280_comp_temp_32bit
  9497  042A  3F41               	moviw [1]fsr1
  9498  042B  00A6               	movwf	??_bmp280_comp_temp_32bit+1
  9499  042C  0825               	movf	??_bmp280_comp_temp_32bit,w
  9500  042D  00A7               	movwf	??_bmp280_comp_temp_32bit+2
  9501  042E  0826               	movf	??_bmp280_comp_temp_32bit+1,w
  9502  042F  00A8               	movwf	??_bmp280_comp_temp_32bit+3
  9503  0430  01A9               	clrf	??_bmp280_comp_temp_32bit+4
  9504  0431  01AA               	clrf	??_bmp280_comp_temp_32bit+5
  9505  0432  3001               	movlw	1
  9506  0433                     u210_25:	
  9507  0433  35A7               	lslf	??_bmp280_comp_temp_32bit+2,f
  9508  0434  0DA8               	rlf	??_bmp280_comp_temp_32bit+3,f
  9509  0435  0DA9               	rlf	??_bmp280_comp_temp_32bit+4,f
  9510  0436  0DAA               	rlf	??_bmp280_comp_temp_32bit+5,f
  9511  0437  0B89               	decfsz	9,f
  9512  0438  2C33               	goto	u210_25
  9513  0439  09A7               	comf	??_bmp280_comp_temp_32bit+2,f
  9514  043A  09A8               	comf	??_bmp280_comp_temp_32bit+3,f
  9515  043B  09A9               	comf	??_bmp280_comp_temp_32bit+4,f
  9516  043C  09AA               	comf	??_bmp280_comp_temp_32bit+5,f
  9517  043D  0AA7               	incf	??_bmp280_comp_temp_32bit+2,f
  9518  043E  1903               	skipnz
  9519  043F  0AA8               	incf	??_bmp280_comp_temp_32bit+3,f
  9520  0440  1903               	skipnz
  9521  0441  0AA9               	incf	??_bmp280_comp_temp_32bit+4,f
  9522  0442  1903               	skipnz
  9523  0443  0AAA               	incf	??_bmp280_comp_temp_32bit+5,f
  9524  0444  0820               	movf	bmp280_comp_temp_32bit@uncomp_temp,w
  9525  0445  00AB               	movwf	??_bmp280_comp_temp_32bit+6
  9526  0446  0821               	movf	bmp280_comp_temp_32bit@uncomp_temp+1,w
  9527  0447  00AC               	movwf	??_bmp280_comp_temp_32bit+7
  9528  0448  0822               	movf	bmp280_comp_temp_32bit@uncomp_temp+2,w
  9529  0449  00AD               	movwf	??_bmp280_comp_temp_32bit+8
  9530  044A  0823               	movf	bmp280_comp_temp_32bit@uncomp_temp+3,w
  9531  044B  00AE               	movwf	??_bmp280_comp_temp_32bit+9
  9532  044C  3003               	movlw	3
  9533  044D                     u211_25:	
  9534  044D  36AE               	lsrf	??_bmp280_comp_temp_32bit+9,f
  9535  044E  0CAD               	rrf	??_bmp280_comp_temp_32bit+8,f
  9536  044F  0CAC               	rrf	??_bmp280_comp_temp_32bit+7,f
  9537  0450  0CAB               	rrf	??_bmp280_comp_temp_32bit+6,f
  9538  0451  0B89               	decfsz	9,f
  9539  0452  2C4D               	goto	u211_25
  9540  0453  082B               	movf	??_bmp280_comp_temp_32bit+6,w
  9541  0454  07A7               	addwf	??_bmp280_comp_temp_32bit+2,f
  9542  0455  082C               	movf	??_bmp280_comp_temp_32bit+7,w
  9543  0456  3DA8               	addwfc	??_bmp280_comp_temp_32bit+3,f
  9544  0457  082D               	movf	??_bmp280_comp_temp_32bit+8,w
  9545  0458  3DA9               	addwfc	??_bmp280_comp_temp_32bit+4,f
  9546  0459  082E               	movf	??_bmp280_comp_temp_32bit+9,w
  9547  045A  3DAA               	addwfc	??_bmp280_comp_temp_32bit+5,f
  9548  045B  082A               	movf	??_bmp280_comp_temp_32bit+5,w
  9549  045C  00F3               	movwf	___lmul@multiplier+3
  9550  045D  0829               	movf	??_bmp280_comp_temp_32bit+4,w
  9551  045E  00F2               	movwf	___lmul@multiplier+2
  9552  045F  0828               	movf	??_bmp280_comp_temp_32bit+3,w
  9553  0460  00F1               	movwf	___lmul@multiplier+1
  9554  0461  0827               	movf	??_bmp280_comp_temp_32bit+2,w
  9555  0462  00F0               	movwf	___lmul@multiplier
  9556  0463  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9557  0464  3E0B               	addlw	11
  9558  0465  0086               	movwf	6
  9559  0466  3001               	movlw	1	; select bank2/3
  9560  0467  0087               	movwf	7
  9561  0468  3F40               	moviw [0]fsr1
  9562  0469  00AF               	movwf	??_bmp280_comp_temp_32bit+10
  9563  046A  3F41               	moviw [1]fsr1
  9564  046B  00B0               	movwf	??_bmp280_comp_temp_32bit+11
  9565  046C  082F               	movf	??_bmp280_comp_temp_32bit+10,w
  9566  046D  00F4               	movwf	___lmul@multiplicand
  9567  046E  0830               	movf	??_bmp280_comp_temp_32bit+11,w
  9568  046F  00F5               	movwf	___lmul@multiplicand+1
  9569  0470  0D89               	rlf	9,f
  9570  0471  3B89               	subwfb	9,f
  9571  0472  0989               	comf	9,f
  9572  0473  00F6               	movwf	___lmul@multiplicand+2
  9573  0474  00F7               	movwf	___lmul@multiplicand+3
  9574  0475  3197  27A1  3184   	fcall	___lmul
  9575  0478  0870               	movf	?___lmul,w
  9576  0479  0140               	movlb	0	; select bank0
  9577  047A  00B1               	movwf	??_bmp280_comp_temp_32bit+12
  9578  047B  0871               	movf	?___lmul+1,w
  9579  047C  00B2               	movwf	??_bmp280_comp_temp_32bit+13
  9580  047D  0872               	movf	?___lmul+2,w
  9581  047E  00B3               	movwf	??_bmp280_comp_temp_32bit+14
  9582  047F  0873               	movf	?___lmul+3,w
  9583  0480  00B4               	movwf	??_bmp280_comp_temp_32bit+15
  9584  0481  300B               	movlw	11
  9585  0482                     u212_25:	
  9586  0482  36B4               	lsrf	??_bmp280_comp_temp_32bit+15,f
  9587  0483  0CB3               	rrf	??_bmp280_comp_temp_32bit+14,f
  9588  0484  0CB2               	rrf	??_bmp280_comp_temp_32bit+13,f
  9589  0485  0CB1               	rrf	??_bmp280_comp_temp_32bit+12,f
  9590  0486  0B89               	decfsz	9,f
  9591  0487  2C82               	goto	u212_25
  9592  0488  0834               	movf	??_bmp280_comp_temp_32bit+15,w
  9593  0489  00C0               	movwf	bmp280_comp_temp_32bit@var1+3
  9594  048A  0833               	movf	??_bmp280_comp_temp_32bit+14,w
  9595  048B  00BF               	movwf	bmp280_comp_temp_32bit@var1+2
  9596  048C  0832               	movf	??_bmp280_comp_temp_32bit+13,w
  9597  048D  00BE               	movwf	bmp280_comp_temp_32bit@var1+1
  9598  048E  0831               	movf	??_bmp280_comp_temp_32bit+12,w
  9599  048F  00BD               	movwf	bmp280_comp_temp_32bit@var1
  9600                           
  9601                           ;bmp280.c: 397: var2 = (((((uncomp_temp >> 4) - ((int32_t) dev->calib_param.dig_t1));bmp
      +                          280.c: 398: * ((uncomp_temp >> 4) - ((int32_t) dev->calib_param.dig_t1))) >> 12);bmp280.
      +                          c: 399: * ((int32_t) dev->calib_param.dig_t3)) >> 14;
  9602  0490  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9603  0491  3E09               	addlw	9
  9604  0492  0086               	movwf	6
  9605  0493  3001               	movlw	1	; select bank2/3
  9606  0494  0087               	movwf	7
  9607  0495  3F40               	moviw [0]fsr1
  9608  0496  00A5               	movwf	??_bmp280_comp_temp_32bit
  9609  0497  3F41               	moviw [1]fsr1
  9610  0498  00A6               	movwf	??_bmp280_comp_temp_32bit+1
  9611  0499  0825               	movf	??_bmp280_comp_temp_32bit,w
  9612  049A  00A7               	movwf	??_bmp280_comp_temp_32bit+2
  9613  049B  0826               	movf	??_bmp280_comp_temp_32bit+1,w
  9614  049C  00A8               	movwf	??_bmp280_comp_temp_32bit+3
  9615  049D  01A9               	clrf	??_bmp280_comp_temp_32bit+4
  9616  049E  01AA               	clrf	??_bmp280_comp_temp_32bit+5
  9617  049F  09A7               	comf	??_bmp280_comp_temp_32bit+2,f
  9618  04A0  09A8               	comf	??_bmp280_comp_temp_32bit+3,f
  9619  04A1  09A9               	comf	??_bmp280_comp_temp_32bit+4,f
  9620  04A2  09AA               	comf	??_bmp280_comp_temp_32bit+5,f
  9621  04A3  0AA7               	incf	??_bmp280_comp_temp_32bit+2,f
  9622  04A4  1903               	skipnz
  9623  04A5  0AA8               	incf	??_bmp280_comp_temp_32bit+3,f
  9624  04A6  1903               	skipnz
  9625  04A7  0AA9               	incf	??_bmp280_comp_temp_32bit+4,f
  9626  04A8  1903               	skipnz
  9627  04A9  0AAA               	incf	??_bmp280_comp_temp_32bit+5,f
  9628  04AA  0820               	movf	bmp280_comp_temp_32bit@uncomp_temp,w
  9629  04AB  00AB               	movwf	??_bmp280_comp_temp_32bit+6
  9630  04AC  0821               	movf	bmp280_comp_temp_32bit@uncomp_temp+1,w
  9631  04AD  00AC               	movwf	??_bmp280_comp_temp_32bit+7
  9632  04AE  0822               	movf	bmp280_comp_temp_32bit@uncomp_temp+2,w
  9633  04AF  00AD               	movwf	??_bmp280_comp_temp_32bit+8
  9634  04B0  0823               	movf	bmp280_comp_temp_32bit@uncomp_temp+3,w
  9635  04B1  00AE               	movwf	??_bmp280_comp_temp_32bit+9
  9636  04B2  3004               	movlw	4
  9637  04B3                     u213_25:	
  9638  04B3  36AE               	lsrf	??_bmp280_comp_temp_32bit+9,f
  9639  04B4  0CAD               	rrf	??_bmp280_comp_temp_32bit+8,f
  9640  04B5  0CAC               	rrf	??_bmp280_comp_temp_32bit+7,f
  9641  04B6  0CAB               	rrf	??_bmp280_comp_temp_32bit+6,f
  9642  04B7  0B89               	decfsz	9,f
  9643  04B8  2CB3               	goto	u213_25
  9644  04B9  082B               	movf	??_bmp280_comp_temp_32bit+6,w
  9645  04BA  07A7               	addwf	??_bmp280_comp_temp_32bit+2,f
  9646  04BB  082C               	movf	??_bmp280_comp_temp_32bit+7,w
  9647  04BC  3DA8               	addwfc	??_bmp280_comp_temp_32bit+3,f
  9648  04BD  082D               	movf	??_bmp280_comp_temp_32bit+8,w
  9649  04BE  3DA9               	addwfc	??_bmp280_comp_temp_32bit+4,f
  9650  04BF  082E               	movf	??_bmp280_comp_temp_32bit+9,w
  9651  04C0  3DAA               	addwfc	??_bmp280_comp_temp_32bit+5,f
  9652  04C1  082A               	movf	??_bmp280_comp_temp_32bit+5,w
  9653  04C2  00F7               	movwf	___lmul@multiplicand+3
  9654  04C3  0829               	movf	??_bmp280_comp_temp_32bit+4,w
  9655  04C4  00F6               	movwf	___lmul@multiplicand+2
  9656  04C5  0828               	movf	??_bmp280_comp_temp_32bit+3,w
  9657  04C6  00F5               	movwf	___lmul@multiplicand+1
  9658  04C7  0827               	movf	??_bmp280_comp_temp_32bit+2,w
  9659  04C8  00F4               	movwf	___lmul@multiplicand
  9660  04C9  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9661  04CA  3E09               	addlw	9
  9662  04CB  0086               	movwf	6
  9663  04CC  3001               	movlw	1	; select bank2/3
  9664  04CD  0087               	movwf	7
  9665  04CE  3F40               	moviw [0]fsr1
  9666  04CF  00AF               	movwf	??_bmp280_comp_temp_32bit+10
  9667  04D0  3F41               	moviw [1]fsr1
  9668  04D1  00B0               	movwf	??_bmp280_comp_temp_32bit+11
  9669  04D2  082F               	movf	??_bmp280_comp_temp_32bit+10,w
  9670  04D3  00B1               	movwf	??_bmp280_comp_temp_32bit+12
  9671  04D4  0830               	movf	??_bmp280_comp_temp_32bit+11,w
  9672  04D5  00B2               	movwf	??_bmp280_comp_temp_32bit+13
  9673  04D6  01B3               	clrf	??_bmp280_comp_temp_32bit+14
  9674  04D7  01B4               	clrf	??_bmp280_comp_temp_32bit+15
  9675  04D8  09B1               	comf	??_bmp280_comp_temp_32bit+12,f
  9676  04D9  09B2               	comf	??_bmp280_comp_temp_32bit+13,f
  9677  04DA  09B3               	comf	??_bmp280_comp_temp_32bit+14,f
  9678  04DB  09B4               	comf	??_bmp280_comp_temp_32bit+15,f
  9679  04DC  0AB1               	incf	??_bmp280_comp_temp_32bit+12,f
  9680  04DD  1903               	skipnz
  9681  04DE  0AB2               	incf	??_bmp280_comp_temp_32bit+13,f
  9682  04DF  1903               	skipnz
  9683  04E0  0AB3               	incf	??_bmp280_comp_temp_32bit+14,f
  9684  04E1  1903               	skipnz
  9685  04E2  0AB4               	incf	??_bmp280_comp_temp_32bit+15,f
  9686  04E3  0820               	movf	bmp280_comp_temp_32bit@uncomp_temp,w
  9687  04E4  00B5               	movwf	??_bmp280_comp_temp_32bit+16
  9688  04E5  0821               	movf	bmp280_comp_temp_32bit@uncomp_temp+1,w
  9689  04E6  00B6               	movwf	??_bmp280_comp_temp_32bit+17
  9690  04E7  0822               	movf	bmp280_comp_temp_32bit@uncomp_temp+2,w
  9691  04E8  00B7               	movwf	??_bmp280_comp_temp_32bit+18
  9692  04E9  0823               	movf	bmp280_comp_temp_32bit@uncomp_temp+3,w
  9693  04EA  00B8               	movwf	??_bmp280_comp_temp_32bit+19
  9694  04EB  3004               	movlw	4
  9695  04EC                     u214_25:	
  9696  04EC  36B8               	lsrf	??_bmp280_comp_temp_32bit+19,f
  9697  04ED  0CB7               	rrf	??_bmp280_comp_temp_32bit+18,f
  9698  04EE  0CB6               	rrf	??_bmp280_comp_temp_32bit+17,f
  9699  04EF  0CB5               	rrf	??_bmp280_comp_temp_32bit+16,f
  9700  04F0  0B89               	decfsz	9,f
  9701  04F1  2CEC               	goto	u214_25
  9702  04F2  0835               	movf	??_bmp280_comp_temp_32bit+16,w
  9703  04F3  07B1               	addwf	??_bmp280_comp_temp_32bit+12,f
  9704  04F4  0836               	movf	??_bmp280_comp_temp_32bit+17,w
  9705  04F5  3DB2               	addwfc	??_bmp280_comp_temp_32bit+13,f
  9706  04F6  0837               	movf	??_bmp280_comp_temp_32bit+18,w
  9707  04F7  3DB3               	addwfc	??_bmp280_comp_temp_32bit+14,f
  9708  04F8  0838               	movf	??_bmp280_comp_temp_32bit+19,w
  9709  04F9  3DB4               	addwfc	??_bmp280_comp_temp_32bit+15,f
  9710  04FA  0834               	movf	??_bmp280_comp_temp_32bit+15,w
  9711  04FB  00F3               	movwf	___lmul@multiplier+3
  9712  04FC  0833               	movf	??_bmp280_comp_temp_32bit+14,w
  9713  04FD  00F2               	movwf	___lmul@multiplier+2
  9714  04FE  0832               	movf	??_bmp280_comp_temp_32bit+13,w
  9715  04FF  00F1               	movwf	___lmul@multiplier+1
  9716  0500  0831               	movf	??_bmp280_comp_temp_32bit+12,w
  9717  0501  00F0               	movwf	___lmul@multiplier
  9718  0502  3197  27A1  3184   	fcall	___lmul
  9719  0505  0870               	movf	?___lmul,w
  9720  0506  0140               	movlb	0	; select bank0
  9721  0507  00B9               	movwf	??_bmp280_comp_temp_32bit+20
  9722  0508  0871               	movf	?___lmul+1,w
  9723  0509  00BA               	movwf	??_bmp280_comp_temp_32bit+21
  9724  050A  0872               	movf	?___lmul+2,w
  9725  050B  00BB               	movwf	??_bmp280_comp_temp_32bit+22
  9726  050C  0873               	movf	?___lmul+3,w
  9727  050D  00BC               	movwf	??_bmp280_comp_temp_32bit+23
  9728  050E  300C               	movlw	12
  9729  050F                     u215_25:	
  9730  050F  36BC               	lsrf	??_bmp280_comp_temp_32bit+23,f
  9731  0510  0CBB               	rrf	??_bmp280_comp_temp_32bit+22,f
  9732  0511  0CBA               	rrf	??_bmp280_comp_temp_32bit+21,f
  9733  0512  0CB9               	rrf	??_bmp280_comp_temp_32bit+20,f
  9734  0513  0B89               	decfsz	9,f
  9735  0514  2D0F               	goto	u215_25
  9736  0515  083C               	movf	??_bmp280_comp_temp_32bit+23,w
  9737  0516  00C8               	movwf	_bmp280_comp_temp_32bit$1772+3
  9738  0517  083B               	movf	??_bmp280_comp_temp_32bit+22,w
  9739  0518  00C7               	movwf	_bmp280_comp_temp_32bit$1772+2
  9740  0519  083A               	movf	??_bmp280_comp_temp_32bit+21,w
  9741  051A  00C6               	movwf	_bmp280_comp_temp_32bit$1772+1
  9742  051B  0839               	movf	??_bmp280_comp_temp_32bit+20,w
  9743  051C  00C5               	movwf	_bmp280_comp_temp_32bit$1772
  9744                           
  9745                           ;bmp280.c: 397: var2 = (((((uncomp_temp >> 4) - ((int32_t) dev->calib_param.dig_t1));bmp
      +                          280.c: 398: * ((uncomp_temp >> 4) - ((int32_t) dev->calib_param.dig_t1))) >> 12);bmp280.
      +                          c: 399: * ((int32_t) dev->calib_param.dig_t3)) >> 14;
  9746  051D  0848               	movf	_bmp280_comp_temp_32bit$1772+3,w
  9747  051E  00F3               	movwf	___lmul@multiplier+3
  9748  051F  0847               	movf	_bmp280_comp_temp_32bit$1772+2,w
  9749  0520  00F2               	movwf	___lmul@multiplier+2
  9750  0521  0846               	movf	_bmp280_comp_temp_32bit$1772+1,w
  9751  0522  00F1               	movwf	___lmul@multiplier+1
  9752  0523  0845               	movf	_bmp280_comp_temp_32bit$1772,w
  9753  0524  00F0               	movwf	___lmul@multiplier
  9754  0525  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9755  0526  3E0D               	addlw	13
  9756  0527  0086               	movwf	6
  9757  0528  3001               	movlw	1	; select bank2/3
  9758  0529  0087               	movwf	7
  9759  052A  3F40               	moviw [0]fsr1
  9760  052B  00A5               	movwf	??_bmp280_comp_temp_32bit
  9761  052C  3F41               	moviw [1]fsr1
  9762  052D  00A6               	movwf	??_bmp280_comp_temp_32bit+1
  9763  052E  0825               	movf	??_bmp280_comp_temp_32bit,w
  9764  052F  00F4               	movwf	___lmul@multiplicand
  9765  0530  0826               	movf	??_bmp280_comp_temp_32bit+1,w
  9766  0531  00F5               	movwf	___lmul@multiplicand+1
  9767  0532  0D89               	rlf	9,f
  9768  0533  3B89               	subwfb	9,f
  9769  0534  0989               	comf	9,f
  9770  0535  00F6               	movwf	___lmul@multiplicand+2
  9771  0536  00F7               	movwf	___lmul@multiplicand+3
  9772  0537  3197  27A1  3184   	fcall	___lmul
  9773  053A  0870               	movf	?___lmul,w
  9774  053B  0140               	movlb	0	; select bank0
  9775  053C  00A7               	movwf	??_bmp280_comp_temp_32bit+2
  9776  053D  0871               	movf	?___lmul+1,w
  9777  053E  00A8               	movwf	??_bmp280_comp_temp_32bit+3
  9778  053F  0872               	movf	?___lmul+2,w
  9779  0540  00A9               	movwf	??_bmp280_comp_temp_32bit+4
  9780  0541  0873               	movf	?___lmul+3,w
  9781  0542  00AA               	movwf	??_bmp280_comp_temp_32bit+5
  9782  0543  300E               	movlw	14
  9783  0544                     u216_25:	
  9784  0544  36AA               	lsrf	??_bmp280_comp_temp_32bit+5,f
  9785  0545  0CA9               	rrf	??_bmp280_comp_temp_32bit+4,f
  9786  0546  0CA8               	rrf	??_bmp280_comp_temp_32bit+3,f
  9787  0547  0CA7               	rrf	??_bmp280_comp_temp_32bit+2,f
  9788  0548  0B89               	decfsz	9,f
  9789  0549  2D44               	goto	u216_25
  9790  054A  082A               	movf	??_bmp280_comp_temp_32bit+5,w
  9791  054B  00C4               	movwf	bmp280_comp_temp_32bit@var2+3
  9792  054C  0829               	movf	??_bmp280_comp_temp_32bit+4,w
  9793  054D  00C3               	movwf	bmp280_comp_temp_32bit@var2+2
  9794  054E  0828               	movf	??_bmp280_comp_temp_32bit+3,w
  9795  054F  00C2               	movwf	bmp280_comp_temp_32bit@var2+1
  9796  0550  0827               	movf	??_bmp280_comp_temp_32bit+2,w
  9797  0551  00C1               	movwf	bmp280_comp_temp_32bit@var2
  9798                           
  9799                           ;bmp280.c: 401: dev->calib_param.t_fine = var1 + var2;
  9800  0552  083D               	movf	bmp280_comp_temp_32bit@var1,w
  9801  0553  0741               	addwf	bmp280_comp_temp_32bit@var2,w
  9802  0554  00A5               	movwf	??_bmp280_comp_temp_32bit
  9803  0555  083E               	movf	bmp280_comp_temp_32bit@var1+1,w
  9804  0556  3D42               	addwfc	bmp280_comp_temp_32bit@var2+1,w
  9805  0557  00A6               	movwf	??_bmp280_comp_temp_32bit+1
  9806  0558  083F               	movf	bmp280_comp_temp_32bit@var1+2,w
  9807  0559  3D43               	addwfc	bmp280_comp_temp_32bit@var2+2,w
  9808  055A  00A7               	movwf	??_bmp280_comp_temp_32bit+2
  9809  055B  0840               	movf	bmp280_comp_temp_32bit@var1+3,w
  9810  055C  3D44               	addwfc	bmp280_comp_temp_32bit@var2+3,w
  9811  055D  00A8               	movwf	??_bmp280_comp_temp_32bit+3
  9812  055E  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9813  055F  3E21               	addlw	33
  9814  0560  0086               	movwf	6
  9815  0561  3001               	movlw	1	; select bank2/3
  9816  0562  0087               	movwf	7
  9817  0563  0825               	movf	??_bmp280_comp_temp_32bit,w
  9818  0564  3FC0               	movwi [0]fsr1
  9819  0565  0826               	movf	??_bmp280_comp_temp_32bit+1,w
  9820  0566  3FC1               	movwi [1]fsr1
  9821  0567  0827               	movf	??_bmp280_comp_temp_32bit+2,w
  9822  0568  3FC2               	movwi [2]fsr1
  9823  0569  0828               	movf	??_bmp280_comp_temp_32bit+3,w
  9824  056A  3FC3               	movwi [3]fsr1
  9825                           
  9826                           ;bmp280.c: 402: temperature = (dev->calib_param.t_fine * 5 + 128) >> 8;
  9827  056B  3080               	movlw	128
  9828  056C  00A5               	movwf	??_bmp280_comp_temp_32bit
  9829  056D  3000               	movlw	0
  9830  056E  00A6               	movwf	??_bmp280_comp_temp_32bit+1
  9831  056F  3000               	movlw	0
  9832  0570  00A7               	movwf	??_bmp280_comp_temp_32bit+2
  9833  0571  3000               	movlw	0
  9834  0572  00A8               	movwf	??_bmp280_comp_temp_32bit+3
  9835  0573  0824               	movf	bmp280_comp_temp_32bit@dev,w
  9836  0574  3E21               	addlw	33
  9837  0575  0086               	movwf	6
  9838  0576  3001               	movlw	1	; select bank2/3
  9839  0577  0087               	movwf	7
  9840  0578  3F40               	moviw [0]fsr1
  9841  0579  00F0               	movwf	___lmul@multiplier
  9842  057A  3F41               	moviw [1]fsr1
  9843  057B  00F1               	movwf	___lmul@multiplier+1
  9844  057C  3F42               	moviw [2]fsr1
  9845  057D  00F2               	movwf	___lmul@multiplier+2
  9846  057E  3F43               	moviw [3]fsr1
  9847  057F  00F3               	movwf	___lmul@multiplier+3
  9848  0580  3000               	movlw	0
  9849  0581  00F7               	movwf	___lmul@multiplicand+3
  9850  0582  3000               	movlw	0
  9851  0583  00F6               	movwf	___lmul@multiplicand+2
  9852  0584  3000               	movlw	0
  9853  0585  00F5               	movwf	___lmul@multiplicand+1
  9854  0586  3005               	movlw	5
  9855  0587  00F4               	movwf	___lmul@multiplicand
  9856  0588  3197  27A1  3184   	fcall	___lmul
  9857  058B  0870               	movf	?___lmul,w
  9858  058C  0140               	movlb	0	; select bank0
  9859  058D  07A5               	addwf	??_bmp280_comp_temp_32bit,f
  9860  058E  0871               	movf	?___lmul+1,w
  9861  058F  3DA6               	addwfc	??_bmp280_comp_temp_32bit+1,f
  9862  0590  0872               	movf	?___lmul+2,w
  9863  0591  3DA7               	addwfc	??_bmp280_comp_temp_32bit+2,f
  9864  0592  0873               	movf	?___lmul+3,w
  9865  0593  3DA8               	addwfc	??_bmp280_comp_temp_32bit+3,f
  9866  0594  3008               	movlw	8
  9867  0595  00A9               	movwf	??_bmp280_comp_temp_32bit+4
  9868  0596                     u217_25:	
  9869  0596  37A8               	asrf	??_bmp280_comp_temp_32bit+3,f
  9870  0597  0CA7               	rrf	??_bmp280_comp_temp_32bit+2,f
  9871  0598  0CA6               	rrf	??_bmp280_comp_temp_32bit+1,f
  9872  0599  0CA5               	rrf	??_bmp280_comp_temp_32bit,f
  9873  059A  0BA9               	decfsz	??_bmp280_comp_temp_32bit+4,f
  9874  059B  2D96               	goto	u217_25
  9875  059C  0828               	movf	??_bmp280_comp_temp_32bit+3,w
  9876  059D  00CC               	movwf	bmp280_comp_temp_32bit@temperature+3
  9877  059E  0827               	movf	??_bmp280_comp_temp_32bit+2,w
  9878  059F  00CB               	movwf	bmp280_comp_temp_32bit@temperature+2
  9879  05A0  0826               	movf	??_bmp280_comp_temp_32bit+1,w
  9880  05A1  00CA               	movwf	bmp280_comp_temp_32bit@temperature+1
  9881  05A2  0825               	movf	??_bmp280_comp_temp_32bit,w
  9882  05A3  00C9               	movwf	bmp280_comp_temp_32bit@temperature
  9883  05A4                     i1l2047:	
  9884                           
  9885                           ;bmp280.c: 403: };bmp280.c: 405: return temperature;
  9886  05A4  084C               	movf	bmp280_comp_temp_32bit@temperature+3,w
  9887  05A5  00A3               	movwf	?_bmp280_comp_temp_32bit+3
  9888  05A6  084B               	movf	bmp280_comp_temp_32bit@temperature+2,w
  9889  05A7  00A2               	movwf	?_bmp280_comp_temp_32bit+2
  9890  05A8  084A               	movf	bmp280_comp_temp_32bit@temperature+1,w
  9891  05A9  00A1               	movwf	?_bmp280_comp_temp_32bit+1
  9892  05AA  0849               	movf	bmp280_comp_temp_32bit@temperature,w
  9893  05AB  00A0               	movwf	?_bmp280_comp_temp_32bit
  9894  05AC  0008               	return
  9895  05AD                     __end_of_bmp280_comp_temp_32bit:	
  9896                           
  9897                           	psect	text38
  9898  0041                     __ptext38:	
  9899 ;; *************** function _bmp280_comp_pres_32bit *****************
  9900 ;; Defined at:
  9901 ;;		line 412 in file "bmp280.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  uncomp_pres     4    0[BANK0 ] unsigned long 
  9904 ;;  dev             1    4[BANK0 ] PTR const struct bmp280_
  9905 ;;		 -> bmp(42), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  var1            4   37[BANK0 ] long 
  9908 ;;  pressure        4   33[BANK0 ] unsigned long 
  9909 ;;  var2            4   29[BANK0 ] long 
  9910 ;;  rslt            1   24[BANK0 ] char 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  4    0[BANK0 ] unsigned long 
  9913 ;; Registers used:
  9914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:       41 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    1
  9927 ;; This function calls:
  9928 ;;		___lldiv
  9929 ;;		___lmul
  9930 ;;		i1_null_ptr_check
  9931 ;; This function is called by:
  9932 ;;		_tmr_fire
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           
  9937                           ;psect for function _bmp280_comp_pres_32bit
  9938  0041                     _bmp280_comp_pres_32bit:	
  9939                           
  9940                           ;bmp280.c: 414: int32_t var1;;bmp280.c: 415: int32_t var2;;bmp280.c: 416: uint32_t press
      +                          ure = 0;
  9941                           
  9942                           ;incstack = 0
  9943                           ; Regs used in _bmp280_comp_pres_32bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9944  0041  3000               	movlw	0
  9945  0042  0140               	movlb	0	; select bank0
  9946  0043  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
  9947  0044  3000               	movlw	0
  9948  0045  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
  9949  0046  3000               	movlw	0
  9950  0047  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
  9951  0048  3000               	movlw	0
  9952  0049  00C1               	movwf	bmp280_comp_pres_32bit@pressure
  9953                           
  9954                           ;bmp280.c: 417: int8_t rslt;;bmp280.c: 419: rslt = null_ptr_check(dev);
  9955  004A  0824               	movf	bmp280_comp_pres_32bit@dev,w
  9956  004B  3197  2708  3180   	fcall	i1_null_ptr_check
  9957  004E  0140               	movlb	0	; select bank0
  9958  004F  00A5               	movwf	??_bmp280_comp_pres_32bit
  9959  0050  0825               	movf	??_bmp280_comp_pres_32bit,w
  9960  0051  00B8               	movwf	bmp280_comp_pres_32bit@rslt
  9961                           
  9962                           ;bmp280.c: 421: if (rslt == (0)) {
  9963  0052  0838               	movf	bmp280_comp_pres_32bit@rslt,w
  9964  0053  1D03               	btfss	3,2
  9965  0054  2C06               	goto	i1l402
  9966                           
  9967                           ;bmp280.c: 422: var1 = (((int32_t) dev->calib_param.t_fine) >> 1) - (int32_t) 64000;
  9968  0055  0824               	movf	bmp280_comp_pres_32bit@dev,w
  9969  0056  3E21               	addlw	33
  9970  0057  0086               	movwf	6
  9971  0058  3001               	movlw	1	; select bank2/3
  9972  0059  0087               	movwf	7
  9973  005A  3F40               	moviw [0]fsr1
  9974  005B  00A5               	movwf	??_bmp280_comp_pres_32bit
  9975  005C  3F41               	moviw [1]fsr1
  9976  005D  00A6               	movwf	??_bmp280_comp_pres_32bit+1
  9977  005E  3F42               	moviw [2]fsr1
  9978  005F  00A7               	movwf	??_bmp280_comp_pres_32bit+2
  9979  0060  3F43               	moviw [3]fsr1
  9980  0061  00A8               	movwf	??_bmp280_comp_pres_32bit+3
  9981  0062  3001               	movlw	1
  9982  0063  00A9               	movwf	??_bmp280_comp_pres_32bit+4
  9983  0064                     u219_25:	
  9984  0064  37A8               	asrf	??_bmp280_comp_pres_32bit+3,f
  9985  0065  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
  9986  0066  0CA6               	rrf	??_bmp280_comp_pres_32bit+1,f
  9987  0067  0CA5               	rrf	??_bmp280_comp_pres_32bit,f
  9988  0068  0BA9               	decfsz	??_bmp280_comp_pres_32bit+4,f
  9989  0069  2864               	goto	u219_25
  9990  006A  3000               	movlw	0
  9991  006B  0725               	addwf	??_bmp280_comp_pres_32bit,w
  9992  006C  00C5               	movwf	bmp280_comp_pres_32bit@var1
  9993  006D  3006               	movlw	6
  9994  006E  3D26               	addwfc	??_bmp280_comp_pres_32bit+1,w
  9995  006F  00C6               	movwf	bmp280_comp_pres_32bit@var1+1
  9996  0070  30FF               	movlw	255
  9997  0071  3D27               	addwfc	??_bmp280_comp_pres_32bit+2,w
  9998  0072  00C7               	movwf	bmp280_comp_pres_32bit@var1+2
  9999  0073  30FF               	movlw	255
 10000  0074  3D28               	addwfc	??_bmp280_comp_pres_32bit+3,w
 10001  0075  00C8               	movwf	bmp280_comp_pres_32bit@var1+3
 10002                           
 10003                           ;bmp280.c: 423: var2 = (((var1 >> 2) * (var1 >> 2)) >> 11) * ((int32_t) dev->calib_param
      +                          .dig_p6);
 10004  0076  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10005  0077  00A5               	movwf	??_bmp280_comp_pres_32bit
 10006  0078  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10007  0079  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10008  007A  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10009  007B  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10010  007C  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10011  007D  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10012  007E  3002               	movlw	2
 10013  007F  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10014  0080                     u220_25:	
 10015  0080  37A8               	asrf	??_bmp280_comp_pres_32bit+3,f
 10016  0081  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10017  0082  0CA6               	rrf	??_bmp280_comp_pres_32bit+1,f
 10018  0083  0CA5               	rrf	??_bmp280_comp_pres_32bit,f
 10019  0084  0BA9               	decfsz	??_bmp280_comp_pres_32bit+4,f
 10020  0085  2880               	goto	u220_25
 10021  0086  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10022  0087  00F7               	movwf	___lmul@multiplicand+3
 10023  0088  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10024  0089  00F6               	movwf	___lmul@multiplicand+2
 10025  008A  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10026  008B  00F5               	movwf	___lmul@multiplicand+1
 10027  008C  0825               	movf	??_bmp280_comp_pres_32bit,w
 10028  008D  00F4               	movwf	___lmul@multiplicand
 10029  008E  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10030  008F  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10031  0090  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10032  0091  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10033  0092  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10034  0093  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10035  0094  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10036  0095  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10037  0096  3002               	movlw	2
 10038  0097  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10039  0098                     u221_25:	
 10040  0098  37AD               	asrf	??_bmp280_comp_pres_32bit+8,f
 10041  0099  0CAC               	rrf	??_bmp280_comp_pres_32bit+7,f
 10042  009A  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10043  009B  0CAA               	rrf	??_bmp280_comp_pres_32bit+5,f
 10044  009C  0BAE               	decfsz	??_bmp280_comp_pres_32bit+9,f
 10045  009D  2898               	goto	u221_25
 10046  009E  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10047  009F  00F3               	movwf	___lmul@multiplier+3
 10048  00A0  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10049  00A1  00F2               	movwf	___lmul@multiplier+2
 10050  00A2  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10051  00A3  00F1               	movwf	___lmul@multiplier+1
 10052  00A4  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10053  00A5  00F0               	movwf	___lmul@multiplier
 10054  00A6  3197  27A1  3180   	fcall	___lmul
 10055  00A9  0870               	movf	?___lmul,w
 10056  00AA  0140               	movlb	0	; select bank0
 10057  00AB  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10058  00AC  0871               	movf	?___lmul+1,w
 10059  00AD  00B0               	movwf	??_bmp280_comp_pres_32bit+11
 10060  00AE  0872               	movf	?___lmul+2,w
 10061  00AF  00B1               	movwf	??_bmp280_comp_pres_32bit+12
 10062  00B0  0873               	movf	?___lmul+3,w
 10063  00B1  00B2               	movwf	??_bmp280_comp_pres_32bit+13
 10064  00B2  300B               	movlw	11
 10065  00B3  00B3               	movwf	??_bmp280_comp_pres_32bit+14
 10066  00B4                     u222_25:	
 10067  00B4  37B2               	asrf	??_bmp280_comp_pres_32bit+13,f
 10068  00B5  0CB1               	rrf	??_bmp280_comp_pres_32bit+12,f
 10069  00B6  0CB0               	rrf	??_bmp280_comp_pres_32bit+11,f
 10070  00B7  0CAF               	rrf	??_bmp280_comp_pres_32bit+10,f
 10071  00B8  0BB3               	decfsz	??_bmp280_comp_pres_32bit+14,f
 10072  00B9  28B4               	goto	u222_25
 10073  00BA  0832               	movf	??_bmp280_comp_pres_32bit+13,w
 10074  00BB  00BC               	movwf	_bmp280_comp_pres_32bit$1773+3
 10075  00BC  0831               	movf	??_bmp280_comp_pres_32bit+12,w
 10076  00BD  00BB               	movwf	_bmp280_comp_pres_32bit$1773+2
 10077  00BE  0830               	movf	??_bmp280_comp_pres_32bit+11,w
 10078  00BF  00BA               	movwf	_bmp280_comp_pres_32bit$1773+1
 10079  00C0  082F               	movf	??_bmp280_comp_pres_32bit+10,w
 10080  00C1  00B9               	movwf	_bmp280_comp_pres_32bit$1773
 10081                           
 10082                           ;bmp280.c: 423: var2 = (((var1 >> 2) * (var1 >> 2)) >> 11) * ((int32_t) dev->calib_param
      +                          .dig_p6);
 10083  00C2  083C               	movf	_bmp280_comp_pres_32bit$1773+3,w
 10084  00C3  00F3               	movwf	___lmul@multiplier+3
 10085  00C4  083B               	movf	_bmp280_comp_pres_32bit$1773+2,w
 10086  00C5  00F2               	movwf	___lmul@multiplier+2
 10087  00C6  083A               	movf	_bmp280_comp_pres_32bit$1773+1,w
 10088  00C7  00F1               	movwf	___lmul@multiplier+1
 10089  00C8  0839               	movf	_bmp280_comp_pres_32bit$1773,w
 10090  00C9  00F0               	movwf	___lmul@multiplier
 10091  00CA  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10092  00CB  3E19               	addlw	25
 10093  00CC  0086               	movwf	6
 10094  00CD  3001               	movlw	1	; select bank2/3
 10095  00CE  0087               	movwf	7
 10096  00CF  3F40               	moviw [0]fsr1
 10097  00D0  00A5               	movwf	??_bmp280_comp_pres_32bit
 10098  00D1  3F41               	moviw [1]fsr1
 10099  00D2  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10100  00D3  0825               	movf	??_bmp280_comp_pres_32bit,w
 10101  00D4  00F4               	movwf	___lmul@multiplicand
 10102  00D5  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10103  00D6  00F5               	movwf	___lmul@multiplicand+1
 10104  00D7  0D89               	rlf	9,f
 10105  00D8  3B89               	subwfb	9,f
 10106  00D9  0989               	comf	9,f
 10107  00DA  00F6               	movwf	___lmul@multiplicand+2
 10108  00DB  00F7               	movwf	___lmul@multiplicand+3
 10109  00DC  3197  27A1  3180   	fcall	___lmul
 10110  00DF  0873               	movf	?___lmul+3,w
 10111  00E0  0140               	movlb	0	; select bank0
 10112  00E1  00C0               	movwf	bmp280_comp_pres_32bit@var2+3
 10113  00E2  0872               	movf	?___lmul+2,w
 10114  00E3  00BF               	movwf	bmp280_comp_pres_32bit@var2+2
 10115  00E4  0871               	movf	?___lmul+1,w
 10116  00E5  00BE               	movwf	bmp280_comp_pres_32bit@var2+1
 10117  00E6  0870               	movf	?___lmul,w
 10118  00E7  00BD               	movwf	bmp280_comp_pres_32bit@var2
 10119                           
 10120                           ;bmp280.c: 424: var2 = var2 + ((var1 * ((int32_t) dev->calib_param.dig_p5)) << 1);
 10121  00E8  083D               	movf	bmp280_comp_pres_32bit@var2,w
 10122  00E9  00A5               	movwf	??_bmp280_comp_pres_32bit
 10123  00EA  083E               	movf	bmp280_comp_pres_32bit@var2+1,w
 10124  00EB  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10125  00EC  083F               	movf	bmp280_comp_pres_32bit@var2+2,w
 10126  00ED  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10127  00EE  0840               	movf	bmp280_comp_pres_32bit@var2+3,w
 10128  00EF  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10129  00F0  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10130  00F1  3E17               	addlw	23
 10131  00F2  0086               	movwf	6
 10132  00F3  3001               	movlw	1	; select bank2/3
 10133  00F4  0087               	movwf	7
 10134  00F5  3F40               	moviw [0]fsr1
 10135  00F6  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10136  00F7  3F41               	moviw [1]fsr1
 10137  00F8  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10138  00F9  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10139  00FA  00F0               	movwf	___lmul@multiplier
 10140  00FB  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10141  00FC  00F1               	movwf	___lmul@multiplier+1
 10142  00FD  0D89               	rlf	9,f
 10143  00FE  3B89               	subwfb	9,f
 10144  00FF  0989               	comf	9,f
 10145  0100  00F2               	movwf	___lmul@multiplier+2
 10146  0101  00F3               	movwf	___lmul@multiplier+3
 10147  0102  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10148  0103  00F7               	movwf	___lmul@multiplicand+3
 10149  0104  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10150  0105  00F6               	movwf	___lmul@multiplicand+2
 10151  0106  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10152  0107  00F5               	movwf	___lmul@multiplicand+1
 10153  0108  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10154  0109  00F4               	movwf	___lmul@multiplicand
 10155  010A  3197  27A1  3180   	fcall	___lmul
 10156  010D  0870               	movf	?___lmul,w
 10157  010E  0140               	movlb	0	; select bank0
 10158  010F  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10159  0110  0871               	movf	?___lmul+1,w
 10160  0111  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10161  0112  0872               	movf	?___lmul+2,w
 10162  0113  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10163  0114  0873               	movf	?___lmul+3,w
 10164  0115  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10165  0116  3001               	movlw	1
 10166  0117                     u223_25:	
 10167  0117  35AB               	lslf	??_bmp280_comp_pres_32bit+6,f
 10168  0118  0DAC               	rlf	??_bmp280_comp_pres_32bit+7,f
 10169  0119  0DAD               	rlf	??_bmp280_comp_pres_32bit+8,f
 10170  011A  0DAE               	rlf	??_bmp280_comp_pres_32bit+9,f
 10171  011B  0B89               	decfsz	9,f
 10172  011C  2917               	goto	u223_25
 10173  011D  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10174  011E  07A5               	addwf	??_bmp280_comp_pres_32bit,f
 10175  011F  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10176  0120  3DA6               	addwfc	??_bmp280_comp_pres_32bit+1,f
 10177  0121  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10178  0122  3DA7               	addwfc	??_bmp280_comp_pres_32bit+2,f
 10179  0123  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10180  0124  3DA8               	addwfc	??_bmp280_comp_pres_32bit+3,f
 10181  0125  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10182  0126  00C0               	movwf	bmp280_comp_pres_32bit@var2+3
 10183  0127  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10184  0128  00BF               	movwf	bmp280_comp_pres_32bit@var2+2
 10185  0129  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10186  012A  00BE               	movwf	bmp280_comp_pres_32bit@var2+1
 10187  012B  0825               	movf	??_bmp280_comp_pres_32bit,w
 10188  012C  00BD               	movwf	bmp280_comp_pres_32bit@var2
 10189                           
 10190                           ;bmp280.c: 425: var2 = (var2 >> 2) + (((int32_t) dev->calib_param.dig_p4) << 16);
 10191  012D  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10192  012E  3E15               	addlw	21
 10193  012F  0086               	movwf	6
 10194  0130  3001               	movlw	1	; select bank2/3
 10195  0131  0087               	movwf	7
 10196  0132  3F40               	moviw [0]fsr1
 10197  0133  00A5               	movwf	??_bmp280_comp_pres_32bit
 10198  0134  3F41               	moviw [1]fsr1
 10199  0135  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10200  0136  0825               	movf	??_bmp280_comp_pres_32bit,w
 10201  0137  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10202  0138  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10203  0139  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10204  013A  01A9               	clrf	??_bmp280_comp_pres_32bit+4
 10205  013B  01AA               	clrf	??_bmp280_comp_pres_32bit+5
 10206  013C  3010               	movlw	16
 10207  013D                     u224_25:	
 10208  013D  35A7               	lslf	??_bmp280_comp_pres_32bit+2,f
 10209  013E  0DA8               	rlf	??_bmp280_comp_pres_32bit+3,f
 10210  013F  0DA9               	rlf	??_bmp280_comp_pres_32bit+4,f
 10211  0140  0DAA               	rlf	??_bmp280_comp_pres_32bit+5,f
 10212  0141  0B89               	decfsz	9,f
 10213  0142  293D               	goto	u224_25
 10214  0143  083D               	movf	bmp280_comp_pres_32bit@var2,w
 10215  0144  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10216  0145  083E               	movf	bmp280_comp_pres_32bit@var2+1,w
 10217  0146  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10218  0147  083F               	movf	bmp280_comp_pres_32bit@var2+2,w
 10219  0148  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10220  0149  0840               	movf	bmp280_comp_pres_32bit@var2+3,w
 10221  014A  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10222  014B  3002               	movlw	2
 10223  014C  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10224  014D                     u225_25:	
 10225  014D  37AE               	asrf	??_bmp280_comp_pres_32bit+9,f
 10226  014E  0CAD               	rrf	??_bmp280_comp_pres_32bit+8,f
 10227  014F  0CAC               	rrf	??_bmp280_comp_pres_32bit+7,f
 10228  0150  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10229  0151  0BAF               	decfsz	??_bmp280_comp_pres_32bit+10,f
 10230  0152  294D               	goto	u225_25
 10231  0153  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10232  0154  07A7               	addwf	??_bmp280_comp_pres_32bit+2,f
 10233  0155  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10234  0156  3DA8               	addwfc	??_bmp280_comp_pres_32bit+3,f
 10235  0157  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10236  0158  3DA9               	addwfc	??_bmp280_comp_pres_32bit+4,f
 10237  0159  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10238  015A  3DAA               	addwfc	??_bmp280_comp_pres_32bit+5,f
 10239  015B  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10240  015C  00C0               	movwf	bmp280_comp_pres_32bit@var2+3
 10241  015D  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10242  015E  00BF               	movwf	bmp280_comp_pres_32bit@var2+2
 10243  015F  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10244  0160  00BE               	movwf	bmp280_comp_pres_32bit@var2+1
 10245  0161  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10246  0162  00BD               	movwf	bmp280_comp_pres_32bit@var2
 10247                           
 10248                           ;bmp280.c: 426: var1 = (((dev->calib_param.dig_p3 * (((var1 >> 2) * (var1 >> 2)) >> 13))
      +                           >> 3);bmp280.c: 427: + ((((int32_t) dev->calib_param.dig_p2) * var1) >> 1)) >> 18;
 10249  0163  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10250  0164  00A5               	movwf	??_bmp280_comp_pres_32bit
 10251  0165  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10252  0166  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10253  0167  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10254  0168  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10255  0169  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10256  016A  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10257  016B  3002               	movlw	2
 10258  016C  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10259  016D                     u226_25:	
 10260  016D  37A8               	asrf	??_bmp280_comp_pres_32bit+3,f
 10261  016E  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10262  016F  0CA6               	rrf	??_bmp280_comp_pres_32bit+1,f
 10263  0170  0CA5               	rrf	??_bmp280_comp_pres_32bit,f
 10264  0171  0BA9               	decfsz	??_bmp280_comp_pres_32bit+4,f
 10265  0172  296D               	goto	u226_25
 10266  0173  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10267  0174  00F7               	movwf	___lmul@multiplicand+3
 10268  0175  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10269  0176  00F6               	movwf	___lmul@multiplicand+2
 10270  0177  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10271  0178  00F5               	movwf	___lmul@multiplicand+1
 10272  0179  0825               	movf	??_bmp280_comp_pres_32bit,w
 10273  017A  00F4               	movwf	___lmul@multiplicand
 10274  017B  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10275  017C  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10276  017D  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10277  017E  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10278  017F  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10279  0180  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10280  0181  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10281  0182  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10282  0183  3002               	movlw	2
 10283  0184  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10284  0185                     u227_25:	
 10285  0185  37AD               	asrf	??_bmp280_comp_pres_32bit+8,f
 10286  0186  0CAC               	rrf	??_bmp280_comp_pres_32bit+7,f
 10287  0187  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10288  0188  0CAA               	rrf	??_bmp280_comp_pres_32bit+5,f
 10289  0189  0BAE               	decfsz	??_bmp280_comp_pres_32bit+9,f
 10290  018A  2985               	goto	u227_25
 10291  018B  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10292  018C  00F3               	movwf	___lmul@multiplier+3
 10293  018D  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10294  018E  00F2               	movwf	___lmul@multiplier+2
 10295  018F  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10296  0190  00F1               	movwf	___lmul@multiplier+1
 10297  0191  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10298  0192  00F0               	movwf	___lmul@multiplier
 10299  0193  3197  27A1  3180   	fcall	___lmul
 10300  0196  0870               	movf	?___lmul,w
 10301  0197  0140               	movlb	0	; select bank0
 10302  0198  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10303  0199  0871               	movf	?___lmul+1,w
 10304  019A  00B0               	movwf	??_bmp280_comp_pres_32bit+11
 10305  019B  0872               	movf	?___lmul+2,w
 10306  019C  00B1               	movwf	??_bmp280_comp_pres_32bit+12
 10307  019D  0873               	movf	?___lmul+3,w
 10308  019E  00B2               	movwf	??_bmp280_comp_pres_32bit+13
 10309  019F  300D               	movlw	13
 10310  01A0  00B3               	movwf	??_bmp280_comp_pres_32bit+14
 10311  01A1                     u228_25:	
 10312  01A1  37B2               	asrf	??_bmp280_comp_pres_32bit+13,f
 10313  01A2  0CB1               	rrf	??_bmp280_comp_pres_32bit+12,f
 10314  01A3  0CB0               	rrf	??_bmp280_comp_pres_32bit+11,f
 10315  01A4  0CAF               	rrf	??_bmp280_comp_pres_32bit+10,f
 10316  01A5  0BB3               	decfsz	??_bmp280_comp_pres_32bit+14,f
 10317  01A6  29A1               	goto	u228_25
 10318  01A7  0832               	movf	??_bmp280_comp_pres_32bit+13,w
 10319  01A8  00BC               	movwf	_bmp280_comp_pres_32bit$1773+3
 10320  01A9  0831               	movf	??_bmp280_comp_pres_32bit+12,w
 10321  01AA  00BB               	movwf	_bmp280_comp_pres_32bit$1773+2
 10322  01AB  0830               	movf	??_bmp280_comp_pres_32bit+11,w
 10323  01AC  00BA               	movwf	_bmp280_comp_pres_32bit$1773+1
 10324  01AD  082F               	movf	??_bmp280_comp_pres_32bit+10,w
 10325  01AE  00B9               	movwf	_bmp280_comp_pres_32bit$1773
 10326                           
 10327                           ;bmp280.c: 426: var1 = (((dev->calib_param.dig_p3 * (((var1 >> 2) * (var1 >> 2)) >> 13))
      +                           >> 3);bmp280.c: 427: + ((((int32_t) dev->calib_param.dig_p2) * var1) >> 1)) >> 18;
 10328  01AF  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10329  01B0  3E11               	addlw	17
 10330  01B1  0086               	movwf	6
 10331  01B2  3001               	movlw	1	; select bank2/3
 10332  01B3  0087               	movwf	7
 10333  01B4  3F40               	moviw [0]fsr1
 10334  01B5  00A5               	movwf	??_bmp280_comp_pres_32bit
 10335  01B6  3F41               	moviw [1]fsr1
 10336  01B7  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10337  01B8  0825               	movf	??_bmp280_comp_pres_32bit,w
 10338  01B9  00F0               	movwf	___lmul@multiplier
 10339  01BA  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10340  01BB  00F1               	movwf	___lmul@multiplier+1
 10341  01BC  0D89               	rlf	9,f
 10342  01BD  3B89               	subwfb	9,f
 10343  01BE  0989               	comf	9,f
 10344  01BF  00F2               	movwf	___lmul@multiplier+2
 10345  01C0  00F3               	movwf	___lmul@multiplier+3
 10346  01C1  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10347  01C2  00F7               	movwf	___lmul@multiplicand+3
 10348  01C3  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10349  01C4  00F6               	movwf	___lmul@multiplicand+2
 10350  01C5  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10351  01C6  00F5               	movwf	___lmul@multiplicand+1
 10352  01C7  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10353  01C8  00F4               	movwf	___lmul@multiplicand
 10354  01C9  3197  27A1  3180   	fcall	___lmul
 10355  01CC  0870               	movf	?___lmul,w
 10356  01CD  0140               	movlb	0	; select bank0
 10357  01CE  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10358  01CF  0871               	movf	?___lmul+1,w
 10359  01D0  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10360  01D1  0872               	movf	?___lmul+2,w
 10361  01D2  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10362  01D3  0873               	movf	?___lmul+3,w
 10363  01D4  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10364  01D5  3001               	movlw	1
 10365  01D6  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10366  01D7                     u229_25:	
 10367  01D7  37AA               	asrf	??_bmp280_comp_pres_32bit+5,f
 10368  01D8  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10369  01D9  0CA8               	rrf	??_bmp280_comp_pres_32bit+3,f
 10370  01DA  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10371  01DB  0BAB               	decfsz	??_bmp280_comp_pres_32bit+6,f
 10372  01DC  29D7               	goto	u229_25
 10373  01DD  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10374  01DE  3E13               	addlw	19
 10375  01DF  0086               	movwf	6
 10376  01E0  3001               	movlw	1	; select bank2/3
 10377  01E1  0087               	movwf	7
 10378  01E2  3F40               	moviw [0]fsr1
 10379  01E3  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10380  01E4  3F41               	moviw [1]fsr1
 10381  01E5  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10382  01E6  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10383  01E7  00F0               	movwf	___lmul@multiplier
 10384  01E8  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10385  01E9  00F1               	movwf	___lmul@multiplier+1
 10386  01EA  0D89               	rlf	9,f
 10387  01EB  3B89               	subwfb	9,f
 10388  01EC  0989               	comf	9,f
 10389  01ED  00F2               	movwf	___lmul@multiplier+2
 10390  01EE  00F3               	movwf	___lmul@multiplier+3
 10391  01EF  083C               	movf	_bmp280_comp_pres_32bit$1773+3,w
 10392  01F0  00F7               	movwf	___lmul@multiplicand+3
 10393  01F1  083B               	movf	_bmp280_comp_pres_32bit$1773+2,w
 10394  01F2  00F6               	movwf	___lmul@multiplicand+2
 10395  01F3  083A               	movf	_bmp280_comp_pres_32bit$1773+1,w
 10396  01F4  00F5               	movwf	___lmul@multiplicand+1
 10397  01F5  0839               	movf	_bmp280_comp_pres_32bit$1773,w
 10398  01F6  00F4               	movwf	___lmul@multiplicand
 10399  01F7  3197  27A1  3180   	fcall	___lmul
 10400  01FA  0870               	movf	?___lmul,w
 10401  01FB  0140               	movlb	0	; select bank0
 10402  01FC  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10403  01FD  0871               	movf	?___lmul+1,w
 10404  01FE  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10405  01FF  0872               	movf	?___lmul+2,w
 10406  0200  00B0               	movwf	??_bmp280_comp_pres_32bit+11
 10407  0201  0873               	movf	?___lmul+3,w
 10408  0202  00B1               	movwf	??_bmp280_comp_pres_32bit+12
 10409  0203  3003               	movlw	3
 10410  0204  00B2               	movwf	??_bmp280_comp_pres_32bit+13
 10411  0205                     u230_25:	
 10412  0205  37B1               	asrf	??_bmp280_comp_pres_32bit+12,f
 10413  0206  0CB0               	rrf	??_bmp280_comp_pres_32bit+11,f
 10414  0207  0CAF               	rrf	??_bmp280_comp_pres_32bit+10,f
 10415  0208  0CAE               	rrf	??_bmp280_comp_pres_32bit+9,f
 10416  0209  0BB2               	decfsz	??_bmp280_comp_pres_32bit+13,f
 10417  020A  2A05               	goto	u230_25
 10418  020B  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10419  020C  07A7               	addwf	??_bmp280_comp_pres_32bit+2,f
 10420  020D  082F               	movf	??_bmp280_comp_pres_32bit+10,w
 10421  020E  3DA8               	addwfc	??_bmp280_comp_pres_32bit+3,f
 10422  020F  0830               	movf	??_bmp280_comp_pres_32bit+11,w
 10423  0210  3DA9               	addwfc	??_bmp280_comp_pres_32bit+4,f
 10424  0211  0831               	movf	??_bmp280_comp_pres_32bit+12,w
 10425  0212  3DAA               	addwfc	??_bmp280_comp_pres_32bit+5,f
 10426  0213  3012               	movlw	18
 10427  0214  00B3               	movwf	??_bmp280_comp_pres_32bit+14
 10428  0215                     u231_25:	
 10429  0215  37AA               	asrf	??_bmp280_comp_pres_32bit+5,f
 10430  0216  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10431  0217  0CA8               	rrf	??_bmp280_comp_pres_32bit+3,f
 10432  0218  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10433  0219  0BB3               	decfsz	??_bmp280_comp_pres_32bit+14,f
 10434  021A  2A15               	goto	u231_25
 10435  021B  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10436  021C  00C8               	movwf	bmp280_comp_pres_32bit@var1+3
 10437  021D  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10438  021E  00C7               	movwf	bmp280_comp_pres_32bit@var1+2
 10439  021F  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10440  0220  00C6               	movwf	bmp280_comp_pres_32bit@var1+1
 10441  0221  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10442  0222  00C5               	movwf	bmp280_comp_pres_32bit@var1
 10443                           
 10444                           ;bmp280.c: 428: var1 = ((((32768 + var1)) * ((int32_t) dev->calib_param.dig_p1)) >> 15);
 10445  0223  3000               	movlw	0
 10446  0224  0745               	addwf	bmp280_comp_pres_32bit@var1,w
 10447  0225  00F0               	movwf	___lmul@multiplier
 10448  0226  3080               	movlw	128
 10449  0227  3D46               	addwfc	bmp280_comp_pres_32bit@var1+1,w
 10450  0228  00F1               	movwf	___lmul@multiplier+1
 10451  0229  3000               	movlw	0
 10452  022A  3D47               	addwfc	bmp280_comp_pres_32bit@var1+2,w
 10453  022B  00F2               	movwf	___lmul@multiplier+2
 10454  022C  3000               	movlw	0
 10455  022D  3D48               	addwfc	bmp280_comp_pres_32bit@var1+3,w
 10456  022E  00F3               	movwf	___lmul@multiplier+3
 10457  022F  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10458  0230  3E0F               	addlw	15
 10459  0231  0086               	movwf	6
 10460  0232  3001               	movlw	1	; select bank2/3
 10461  0233  0087               	movwf	7
 10462  0234  3F40               	moviw [0]fsr1
 10463  0235  00A5               	movwf	??_bmp280_comp_pres_32bit
 10464  0236  3F41               	moviw [1]fsr1
 10465  0237  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10466  0238  0825               	movf	??_bmp280_comp_pres_32bit,w
 10467  0239  00F4               	movwf	___lmul@multiplicand
 10468  023A  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10469  023B  00F5               	movwf	___lmul@multiplicand+1
 10470  023C  01F6               	clrf	___lmul@multiplicand+2
 10471  023D  01F7               	clrf	___lmul@multiplicand+3
 10472  023E  3197  27A1  3180   	fcall	___lmul
 10473  0241  0870               	movf	?___lmul,w
 10474  0242  0140               	movlb	0	; select bank0
 10475  0243  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10476  0244  0871               	movf	?___lmul+1,w
 10477  0245  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10478  0246  0872               	movf	?___lmul+2,w
 10479  0247  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10480  0248  0873               	movf	?___lmul+3,w
 10481  0249  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10482  024A  300F               	movlw	15
 10483  024B  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10484  024C                     u232_25:	
 10485  024C  37AA               	asrf	??_bmp280_comp_pres_32bit+5,f
 10486  024D  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10487  024E  0CA8               	rrf	??_bmp280_comp_pres_32bit+3,f
 10488  024F  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10489  0250  0BAB               	decfsz	??_bmp280_comp_pres_32bit+6,f
 10490  0251  2A4C               	goto	u232_25
 10491  0252  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10492  0253  00C8               	movwf	bmp280_comp_pres_32bit@var1+3
 10493  0254  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10494  0255  00C7               	movwf	bmp280_comp_pres_32bit@var1+2
 10495  0256  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10496  0257  00C6               	movwf	bmp280_comp_pres_32bit@var1+1
 10497  0258  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10498  0259  00C5               	movwf	bmp280_comp_pres_32bit@var1
 10499                           
 10500                           ;bmp280.c: 429: pressure = (((uint32_t) (((int32_t) 1048576) - uncomp_pres) - (var2 >> 1
      +                          2))) * 3125;
 10501  025A  0820               	movf	bmp280_comp_pres_32bit@uncomp_pres,w
 10502  025B  00A5               	movwf	??_bmp280_comp_pres_32bit
 10503  025C  0821               	movf	bmp280_comp_pres_32bit@uncomp_pres+1,w
 10504  025D  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10505  025E  0822               	movf	bmp280_comp_pres_32bit@uncomp_pres+2,w
 10506  025F  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10507  0260  0823               	movf	bmp280_comp_pres_32bit@uncomp_pres+3,w
 10508  0261  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10509  0262  083D               	movf	bmp280_comp_pres_32bit@var2,w
 10510  0263  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10511  0264  083E               	movf	bmp280_comp_pres_32bit@var2+1,w
 10512  0265  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10513  0266  083F               	movf	bmp280_comp_pres_32bit@var2+2,w
 10514  0267  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10515  0268  0840               	movf	bmp280_comp_pres_32bit@var2+3,w
 10516  0269  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10517  026A  300C               	movlw	12
 10518  026B  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10519  026C                     u233_25:	
 10520  026C  37AC               	asrf	??_bmp280_comp_pres_32bit+7,f
 10521  026D  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10522  026E  0CAA               	rrf	??_bmp280_comp_pres_32bit+5,f
 10523  026F  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10524  0270  0BAD               	decfsz	??_bmp280_comp_pres_32bit+8,f
 10525  0271  2A6C               	goto	u233_25
 10526  0272  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10527  0273  07A5               	addwf	??_bmp280_comp_pres_32bit,f
 10528  0274  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10529  0275  3DA6               	addwfc	??_bmp280_comp_pres_32bit+1,f
 10530  0276  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10531  0277  3DA7               	addwfc	??_bmp280_comp_pres_32bit+2,f
 10532  0278  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10533  0279  3DA8               	addwfc	??_bmp280_comp_pres_32bit+3,f
 10534  027A  09A5               	comf	??_bmp280_comp_pres_32bit,f
 10535  027B  09A6               	comf	??_bmp280_comp_pres_32bit+1,f
 10536  027C  09A7               	comf	??_bmp280_comp_pres_32bit+2,f
 10537  027D  09A8               	comf	??_bmp280_comp_pres_32bit+3,f
 10538  027E  0AA5               	incf	??_bmp280_comp_pres_32bit,f
 10539  027F  1903               	skipnz
 10540  0280  0AA6               	incf	??_bmp280_comp_pres_32bit+1,f
 10541  0281  1903               	skipnz
 10542  0282  0AA7               	incf	??_bmp280_comp_pres_32bit+2,f
 10543  0283  1903               	skipnz
 10544  0284  0AA8               	incf	??_bmp280_comp_pres_32bit+3,f
 10545  0285  3000               	movlw	0
 10546  0286  0725               	addwf	??_bmp280_comp_pres_32bit,w
 10547  0287  00F0               	movwf	___lmul@multiplier
 10548  0288  3000               	movlw	0
 10549  0289  3D26               	addwfc	??_bmp280_comp_pres_32bit+1,w
 10550  028A  00F1               	movwf	___lmul@multiplier+1
 10551  028B  3010               	movlw	16
 10552  028C  3D27               	addwfc	??_bmp280_comp_pres_32bit+2,w
 10553  028D  00F2               	movwf	___lmul@multiplier+2
 10554  028E  3000               	movlw	0
 10555  028F  3D28               	addwfc	??_bmp280_comp_pres_32bit+3,w
 10556  0290  00F3               	movwf	___lmul@multiplier+3
 10557  0291  3000               	movlw	0
 10558  0292  00F7               	movwf	___lmul@multiplicand+3
 10559  0293  3000               	movlw	0
 10560  0294  00F6               	movwf	___lmul@multiplicand+2
 10561  0295  300C               	movlw	12
 10562  0296  00F5               	movwf	___lmul@multiplicand+1
 10563  0297  3035               	movlw	53
 10564  0298  00F4               	movwf	___lmul@multiplicand
 10565  0299  3197  27A1  3180   	fcall	___lmul
 10566  029C  0873               	movf	?___lmul+3,w
 10567  029D  0140               	movlb	0	; select bank0
 10568  029E  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
 10569  029F  0872               	movf	?___lmul+2,w
 10570  02A0  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
 10571  02A1  0871               	movf	?___lmul+1,w
 10572  02A2  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
 10573  02A3  0870               	movf	?___lmul,w
 10574  02A4  00C1               	movwf	bmp280_comp_pres_32bit@pressure
 10575                           
 10576                           ;bmp280.c: 432: if (var1 != 0) {
 10577  02A5  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10578  02A6  0447               	iorwf	bmp280_comp_pres_32bit@var1+2,w
 10579  02A7  0446               	iorwf	bmp280_comp_pres_32bit@var1+1,w
 10580  02A8  0445               	iorwf	bmp280_comp_pres_32bit@var1,w
 10581  02A9  1903               	skipnz
 10582  02AA  2BFE               	goto	i1l2085
 10583                           
 10584                           ;bmp280.c: 434: if (pressure < 0x80000000)
 10585  02AB  3080               	movlw	128
 10586  02AC  0244               	subwf	bmp280_comp_pres_32bit@pressure+3,w
 10587  02AD  1803               	btfsc	3,0
 10588  02AE  2ACC               	goto	i1l2077
 10589                           
 10590                           ;bmp280.c: 435: pressure = (pressure << 1) / ((uint32_t) var1);
 10591  02AF  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10592  02B0  00F3               	movwf	___lldiv@divisor+3
 10593  02B1  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10594  02B2  00F2               	movwf	___lldiv@divisor+2
 10595  02B3  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10596  02B4  00F1               	movwf	___lldiv@divisor+1
 10597  02B5  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10598  02B6  00F0               	movwf	___lldiv@divisor
 10599  02B7  3541               	lslf	bmp280_comp_pres_32bit@pressure,w
 10600  02B8  00F4               	movwf	___lldiv@dividend
 10601  02B9  0D42               	rlf	bmp280_comp_pres_32bit@pressure+1,w
 10602  02BA  00F5               	movwf	___lldiv@dividend+1
 10603  02BB  0D43               	rlf	bmp280_comp_pres_32bit@pressure+2,w
 10604  02BC  00F6               	movwf	___lldiv@dividend+2
 10605  02BD  0D44               	rlf	bmp280_comp_pres_32bit@pressure+3,w
 10606  02BE  00F7               	movwf	___lldiv@dividend+3
 10607  02BF  3188  20E5  3180   	fcall	___lldiv
 10608  02C2  0873               	movf	?___lldiv+3,w
 10609  02C3  0140               	movlb	0	; select bank0
 10610  02C4  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
 10611  02C5  0872               	movf	?___lldiv+2,w
 10612  02C6  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
 10613  02C7  0871               	movf	?___lldiv+1,w
 10614  02C8  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
 10615  02C9  0870               	movf	?___lldiv,w
 10616  02CA  00C1               	movwf	bmp280_comp_pres_32bit@pressure
 10617  02CB  2AE8               	goto	i1l405
 10618  02CC                     i1l2077:	
 10619                           
 10620                           ;bmp280.c: 436: else;bmp280.c: 437: pressure = (pressure / (uint32_t) var1) * 2;
 10621  02CC  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10622  02CD  00F3               	movwf	___lldiv@divisor+3
 10623  02CE  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10624  02CF  00F2               	movwf	___lldiv@divisor+2
 10625  02D0  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10626  02D1  00F1               	movwf	___lldiv@divisor+1
 10627  02D2  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10628  02D3  00F0               	movwf	___lldiv@divisor
 10629  02D4  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10630  02D5  00F7               	movwf	___lldiv@dividend+3
 10631  02D6  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10632  02D7  00F6               	movwf	___lldiv@dividend+2
 10633  02D8  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10634  02D9  00F5               	movwf	___lldiv@dividend+1
 10635  02DA  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10636  02DB  00F4               	movwf	___lldiv@dividend
 10637  02DC  3188  20E5  3180   	fcall	___lldiv
 10638  02DF  3570               	lslf	?___lldiv,w
 10639  02E0  0140               	movlb	0	; select bank0
 10640  02E1  00C1               	movwf	bmp280_comp_pres_32bit@pressure
 10641  02E2  0D71               	rlf	?___lldiv+1,w
 10642  02E3  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
 10643  02E4  0D72               	rlf	?___lldiv+2,w
 10644  02E5  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
 10645  02E6  0D73               	rlf	?___lldiv+3,w
 10646  02E7  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
 10647  02E8                     i1l405:	
 10648                           
 10649                           ;bmp280.c: 439: var1 = (((int32_t) dev->calib_param.dig_p9);bmp280.c: 440: * ((int32_t) 
      +                          (((pressure >> 3) * (pressure >> 3)) >> 13))) >> 12;
 10650  02E8  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10651  02E9  00A5               	movwf	??_bmp280_comp_pres_32bit
 10652  02EA  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10653  02EB  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10654  02EC  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10655  02ED  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10656  02EE  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10657  02EF  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10658  02F0  3003               	movlw	3
 10659  02F1                     u236_25:	
 10660  02F1  36A8               	lsrf	??_bmp280_comp_pres_32bit+3,f
 10661  02F2  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10662  02F3  0CA6               	rrf	??_bmp280_comp_pres_32bit+1,f
 10663  02F4  0CA5               	rrf	??_bmp280_comp_pres_32bit,f
 10664  02F5  0B89               	decfsz	9,f
 10665  02F6  2AF1               	goto	u236_25
 10666  02F7  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10667  02F8  00F7               	movwf	___lmul@multiplicand+3
 10668  02F9  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10669  02FA  00F6               	movwf	___lmul@multiplicand+2
 10670  02FB  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10671  02FC  00F5               	movwf	___lmul@multiplicand+1
 10672  02FD  0825               	movf	??_bmp280_comp_pres_32bit,w
 10673  02FE  00F4               	movwf	___lmul@multiplicand
 10674  02FF  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10675  0300  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10676  0301  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10677  0302  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10678  0303  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10679  0304  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10680  0305  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10681  0306  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10682  0307  3003               	movlw	3
 10683  0308                     u237_25:	
 10684  0308  36AC               	lsrf	??_bmp280_comp_pres_32bit+7,f
 10685  0309  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10686  030A  0CAA               	rrf	??_bmp280_comp_pres_32bit+5,f
 10687  030B  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10688  030C  0B89               	decfsz	9,f
 10689  030D  2B08               	goto	u237_25
 10690  030E  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10691  030F  00F3               	movwf	___lmul@multiplier+3
 10692  0310  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10693  0311  00F2               	movwf	___lmul@multiplier+2
 10694  0312  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10695  0313  00F1               	movwf	___lmul@multiplier+1
 10696  0314  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10697  0315  00F0               	movwf	___lmul@multiplier
 10698  0316  3197  27A1  3180   	fcall	___lmul
 10699  0319  0870               	movf	?___lmul,w
 10700  031A  0140               	movlb	0	; select bank0
 10701  031B  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10702  031C  0871               	movf	?___lmul+1,w
 10703  031D  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10704  031E  0872               	movf	?___lmul+2,w
 10705  031F  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10706  0320  0873               	movf	?___lmul+3,w
 10707  0321  00B0               	movwf	??_bmp280_comp_pres_32bit+11
 10708  0322  300D               	movlw	13
 10709  0323                     u238_25:	
 10710  0323  36B0               	lsrf	??_bmp280_comp_pres_32bit+11,f
 10711  0324  0CAF               	rrf	??_bmp280_comp_pres_32bit+10,f
 10712  0325  0CAE               	rrf	??_bmp280_comp_pres_32bit+9,f
 10713  0326  0CAD               	rrf	??_bmp280_comp_pres_32bit+8,f
 10714  0327  0B89               	decfsz	9,f
 10715  0328  2B23               	goto	u238_25
 10716  0329  0830               	movf	??_bmp280_comp_pres_32bit+11,w
 10717  032A  00BC               	movwf	_bmp280_comp_pres_32bit$1773+3
 10718  032B  082F               	movf	??_bmp280_comp_pres_32bit+10,w
 10719  032C  00BB               	movwf	_bmp280_comp_pres_32bit$1773+2
 10720  032D  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10721  032E  00BA               	movwf	_bmp280_comp_pres_32bit$1773+1
 10722  032F  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10723  0330  00B9               	movwf	_bmp280_comp_pres_32bit$1773
 10724                           
 10725                           ;bmp280.c: 439: var1 = (((int32_t) dev->calib_param.dig_p9);bmp280.c: 440: * ((int32_t) 
      +                          (((pressure >> 3) * (pressure >> 3)) >> 13))) >> 12;
 10726  0331  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10727  0332  3E1F               	addlw	31
 10728  0333  0086               	movwf	6
 10729  0334  3001               	movlw	1	; select bank2/3
 10730  0335  0087               	movwf	7
 10731  0336  3F40               	moviw [0]fsr1
 10732  0337  00A5               	movwf	??_bmp280_comp_pres_32bit
 10733  0338  3F41               	moviw [1]fsr1
 10734  0339  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10735  033A  0825               	movf	??_bmp280_comp_pres_32bit,w
 10736  033B  00F0               	movwf	___lmul@multiplier
 10737  033C  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10738  033D  00F1               	movwf	___lmul@multiplier+1
 10739  033E  0D89               	rlf	9,f
 10740  033F  3B89               	subwfb	9,f
 10741  0340  0989               	comf	9,f
 10742  0341  00F2               	movwf	___lmul@multiplier+2
 10743  0342  00F3               	movwf	___lmul@multiplier+3
 10744  0343  083C               	movf	_bmp280_comp_pres_32bit$1773+3,w
 10745  0344  00F7               	movwf	___lmul@multiplicand+3
 10746  0345  083B               	movf	_bmp280_comp_pres_32bit$1773+2,w
 10747  0346  00F6               	movwf	___lmul@multiplicand+2
 10748  0347  083A               	movf	_bmp280_comp_pres_32bit$1773+1,w
 10749  0348  00F5               	movwf	___lmul@multiplicand+1
 10750  0349  0839               	movf	_bmp280_comp_pres_32bit$1773,w
 10751  034A  00F4               	movwf	___lmul@multiplicand
 10752  034B  3197  27A1  3180   	fcall	___lmul
 10753  034E  0870               	movf	?___lmul,w
 10754  034F  0140               	movlb	0	; select bank0
 10755  0350  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10756  0351  0871               	movf	?___lmul+1,w
 10757  0352  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10758  0353  0872               	movf	?___lmul+2,w
 10759  0354  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10760  0355  0873               	movf	?___lmul+3,w
 10761  0356  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10762  0357  300C               	movlw	12
 10763  0358  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10764  0359                     u239_25:	
 10765  0359  37AA               	asrf	??_bmp280_comp_pres_32bit+5,f
 10766  035A  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10767  035B  0CA8               	rrf	??_bmp280_comp_pres_32bit+3,f
 10768  035C  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10769  035D  0BAB               	decfsz	??_bmp280_comp_pres_32bit+6,f
 10770  035E  2B59               	goto	u239_25
 10771  035F  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10772  0360  00C8               	movwf	bmp280_comp_pres_32bit@var1+3
 10773  0361  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10774  0362  00C7               	movwf	bmp280_comp_pres_32bit@var1+2
 10775  0363  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10776  0364  00C6               	movwf	bmp280_comp_pres_32bit@var1+1
 10777  0365  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10778  0366  00C5               	movwf	bmp280_comp_pres_32bit@var1
 10779                           
 10780                           ;bmp280.c: 441: var2 = (((int32_t) (pressure >> 2)) * ((int32_t) dev->calib_param.dig_p8
      +                          )) >> 13;
 10781  0367  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10782  0368  00A5               	movwf	??_bmp280_comp_pres_32bit
 10783  0369  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10784  036A  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10785  036B  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10786  036C  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10787  036D  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10788  036E  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10789  036F  3002               	movlw	2
 10790  0370                     u240_25:	
 10791  0370  36A8               	lsrf	??_bmp280_comp_pres_32bit+3,f
 10792  0371  0CA7               	rrf	??_bmp280_comp_pres_32bit+2,f
 10793  0372  0CA6               	rrf	??_bmp280_comp_pres_32bit+1,f
 10794  0373  0CA5               	rrf	??_bmp280_comp_pres_32bit,f
 10795  0374  0B89               	decfsz	9,f
 10796  0375  2B70               	goto	u240_25
 10797  0376  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10798  0377  00F3               	movwf	___lmul@multiplier+3
 10799  0378  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10800  0379  00F2               	movwf	___lmul@multiplier+2
 10801  037A  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10802  037B  00F1               	movwf	___lmul@multiplier+1
 10803  037C  0825               	movf	??_bmp280_comp_pres_32bit,w
 10804  037D  00F0               	movwf	___lmul@multiplier
 10805  037E  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10806  037F  3E1D               	addlw	29
 10807  0380  0086               	movwf	6
 10808  0381  3001               	movlw	1	; select bank2/3
 10809  0382  0087               	movwf	7
 10810  0383  3F40               	moviw [0]fsr1
 10811  0384  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10812  0385  3F41               	moviw [1]fsr1
 10813  0386  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10814  0387  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10815  0388  00F4               	movwf	___lmul@multiplicand
 10816  0389  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10817  038A  00F5               	movwf	___lmul@multiplicand+1
 10818  038B  0D89               	rlf	9,f
 10819  038C  3B89               	subwfb	9,f
 10820  038D  0989               	comf	9,f
 10821  038E  00F6               	movwf	___lmul@multiplicand+2
 10822  038F  00F7               	movwf	___lmul@multiplicand+3
 10823  0390  3197  27A1  3180   	fcall	___lmul
 10824  0393  0870               	movf	?___lmul,w
 10825  0394  0140               	movlb	0	; select bank0
 10826  0395  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10827  0396  0871               	movf	?___lmul+1,w
 10828  0397  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10829  0398  0872               	movf	?___lmul+2,w
 10830  0399  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10831  039A  0873               	movf	?___lmul+3,w
 10832  039B  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10833  039C  300D               	movlw	13
 10834  039D  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10835  039E                     u241_25:	
 10836  039E  37AE               	asrf	??_bmp280_comp_pres_32bit+9,f
 10837  039F  0CAD               	rrf	??_bmp280_comp_pres_32bit+8,f
 10838  03A0  0CAC               	rrf	??_bmp280_comp_pres_32bit+7,f
 10839  03A1  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10840  03A2  0BAF               	decfsz	??_bmp280_comp_pres_32bit+10,f
 10841  03A3  2B9E               	goto	u241_25
 10842  03A4  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10843  03A5  00C0               	movwf	bmp280_comp_pres_32bit@var2+3
 10844  03A6  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10845  03A7  00BF               	movwf	bmp280_comp_pres_32bit@var2+2
 10846  03A8  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10847  03A9  00BE               	movwf	bmp280_comp_pres_32bit@var2+1
 10848  03AA  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10849  03AB  00BD               	movwf	bmp280_comp_pres_32bit@var2
 10850                           
 10851                           ;bmp280.c: 442: pressure = (uint32_t) ((int32_t) pressure + ((var1 + var2 + dev->calib_p
      +                          aram.dig_p7) >> 4));
 10852  03AC  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10853  03AD  00A5               	movwf	??_bmp280_comp_pres_32bit
 10854  03AE  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10855  03AF  00A6               	movwf	??_bmp280_comp_pres_32bit+1
 10856  03B0  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10857  03B1  00A7               	movwf	??_bmp280_comp_pres_32bit+2
 10858  03B2  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10859  03B3  00A8               	movwf	??_bmp280_comp_pres_32bit+3
 10860  03B4  083D               	movf	bmp280_comp_pres_32bit@var2,w
 10861  03B5  00A9               	movwf	??_bmp280_comp_pres_32bit+4
 10862  03B6  083E               	movf	bmp280_comp_pres_32bit@var2+1,w
 10863  03B7  00AA               	movwf	??_bmp280_comp_pres_32bit+5
 10864  03B8  083F               	movf	bmp280_comp_pres_32bit@var2+2,w
 10865  03B9  00AB               	movwf	??_bmp280_comp_pres_32bit+6
 10866  03BA  0840               	movf	bmp280_comp_pres_32bit@var2+3,w
 10867  03BB  00AC               	movwf	??_bmp280_comp_pres_32bit+7
 10868  03BC  0845               	movf	bmp280_comp_pres_32bit@var1,w
 10869  03BD  00AD               	movwf	??_bmp280_comp_pres_32bit+8
 10870  03BE  0846               	movf	bmp280_comp_pres_32bit@var1+1,w
 10871  03BF  00AE               	movwf	??_bmp280_comp_pres_32bit+9
 10872  03C0  0847               	movf	bmp280_comp_pres_32bit@var1+2,w
 10873  03C1  00AF               	movwf	??_bmp280_comp_pres_32bit+10
 10874  03C2  0848               	movf	bmp280_comp_pres_32bit@var1+3,w
 10875  03C3  00B0               	movwf	??_bmp280_comp_pres_32bit+11
 10876  03C4  0824               	movf	bmp280_comp_pres_32bit@dev,w
 10877  03C5  3E1B               	addlw	27
 10878  03C6  0086               	movwf	6
 10879  03C7  3001               	movlw	1	; select bank2/3
 10880  03C8  0087               	movwf	7
 10881  03C9  3F40               	moviw [0]fsr1
 10882  03CA  00B1               	movwf	??_bmp280_comp_pres_32bit+12
 10883  03CB  3F41               	moviw [1]fsr1
 10884  03CC  00B2               	movwf	??_bmp280_comp_pres_32bit+13
 10885  03CD  0831               	movf	??_bmp280_comp_pres_32bit+12,w
 10886  03CE  00B3               	movwf	??_bmp280_comp_pres_32bit+14
 10887  03CF  0832               	movf	??_bmp280_comp_pres_32bit+13,w
 10888  03D0  00B4               	movwf	??_bmp280_comp_pres_32bit+15
 10889  03D1  3000               	movlw	0
 10890  03D2  1BB4               	btfsc	??_bmp280_comp_pres_32bit+15,7
 10891  03D3  30FF               	movlw	255
 10892  03D4  00B5               	movwf	??_bmp280_comp_pres_32bit+16
 10893  03D5  00B6               	movwf	??_bmp280_comp_pres_32bit+17
 10894  03D6  0833               	movf	??_bmp280_comp_pres_32bit+14,w
 10895  03D7  07AD               	addwf	??_bmp280_comp_pres_32bit+8,f
 10896  03D8  0834               	movf	??_bmp280_comp_pres_32bit+15,w
 10897  03D9  3DAE               	addwfc	??_bmp280_comp_pres_32bit+9,f
 10898  03DA  0835               	movf	??_bmp280_comp_pres_32bit+16,w
 10899  03DB  3DAF               	addwfc	??_bmp280_comp_pres_32bit+10,f
 10900  03DC  0836               	movf	??_bmp280_comp_pres_32bit+17,w
 10901  03DD  3DB0               	addwfc	??_bmp280_comp_pres_32bit+11,f
 10902  03DE  082D               	movf	??_bmp280_comp_pres_32bit+8,w
 10903  03DF  07A9               	addwf	??_bmp280_comp_pres_32bit+4,f
 10904  03E0  082E               	movf	??_bmp280_comp_pres_32bit+9,w
 10905  03E1  3DAA               	addwfc	??_bmp280_comp_pres_32bit+5,f
 10906  03E2  082F               	movf	??_bmp280_comp_pres_32bit+10,w
 10907  03E3  3DAB               	addwfc	??_bmp280_comp_pres_32bit+6,f
 10908  03E4  0830               	movf	??_bmp280_comp_pres_32bit+11,w
 10909  03E5  3DAC               	addwfc	??_bmp280_comp_pres_32bit+7,f
 10910  03E6  3004               	movlw	4
 10911  03E7  00B7               	movwf	??_bmp280_comp_pres_32bit+18
 10912  03E8                     u242_25:	
 10913  03E8  37AC               	asrf	??_bmp280_comp_pres_32bit+7,f
 10914  03E9  0CAB               	rrf	??_bmp280_comp_pres_32bit+6,f
 10915  03EA  0CAA               	rrf	??_bmp280_comp_pres_32bit+5,f
 10916  03EB  0CA9               	rrf	??_bmp280_comp_pres_32bit+4,f
 10917  03EC  0BB7               	decfsz	??_bmp280_comp_pres_32bit+18,f
 10918  03ED  2BE8               	goto	u242_25
 10919  03EE  0829               	movf	??_bmp280_comp_pres_32bit+4,w
 10920  03EF  07A5               	addwf	??_bmp280_comp_pres_32bit,f
 10921  03F0  082A               	movf	??_bmp280_comp_pres_32bit+5,w
 10922  03F1  3DA6               	addwfc	??_bmp280_comp_pres_32bit+1,f
 10923  03F2  082B               	movf	??_bmp280_comp_pres_32bit+6,w
 10924  03F3  3DA7               	addwfc	??_bmp280_comp_pres_32bit+2,f
 10925  03F4  082C               	movf	??_bmp280_comp_pres_32bit+7,w
 10926  03F5  3DA8               	addwfc	??_bmp280_comp_pres_32bit+3,f
 10927  03F6  0828               	movf	??_bmp280_comp_pres_32bit+3,w
 10928  03F7  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
 10929  03F8  0827               	movf	??_bmp280_comp_pres_32bit+2,w
 10930  03F9  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
 10931  03FA  0826               	movf	??_bmp280_comp_pres_32bit+1,w
 10932  03FB  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
 10933  03FC  0825               	movf	??_bmp280_comp_pres_32bit,w
 10934  03FD  2C05               	goto	L3
 10935  03FE                     i1l2085:	
 10936                           ;bmp280.c: 443: } else {
 10937                           
 10938                           
 10939                           ;bmp280.c: 444: pressure = 0;
 10940  03FE  3000               	movlw	0
 10941  03FF  00C4               	movwf	bmp280_comp_pres_32bit@pressure+3
 10942  0400  3000               	movlw	0
 10943  0401  00C3               	movwf	bmp280_comp_pres_32bit@pressure+2
 10944  0402  3000               	movlw	0
 10945  0403  00C2               	movwf	bmp280_comp_pres_32bit@pressure+1
 10946  0404  3000               	movlw	0
 10947  0405                     L3:	
 10948  0405  00C1               	movwf	bmp280_comp_pres_32bit@pressure
 10949  0406                     i1l402:	
 10950                           
 10951                           ;bmp280.c: 445: };bmp280.c: 446: };bmp280.c: 448: return pressure;
 10952  0406  0844               	movf	bmp280_comp_pres_32bit@pressure+3,w
 10953  0407  00A3               	movwf	?_bmp280_comp_pres_32bit+3
 10954  0408  0843               	movf	bmp280_comp_pres_32bit@pressure+2,w
 10955  0409  00A2               	movwf	?_bmp280_comp_pres_32bit+2
 10956  040A  0842               	movf	bmp280_comp_pres_32bit@pressure+1,w
 10957  040B  00A1               	movwf	?_bmp280_comp_pres_32bit+1
 10958  040C  0841               	movf	bmp280_comp_pres_32bit@pressure,w
 10959  040D  00A0               	movwf	?_bmp280_comp_pres_32bit
 10960  040E  0008               	return
 10961  040F                     __end_of_bmp280_comp_pres_32bit:	
 10962                           
 10963                           	psect	text39
 10964  1708                     __ptext39:	
 10965 ;; *************** function i1_null_ptr_check *****************
 10966 ;; Defined at:
 10967 ;;		line 587 in file "bmp280.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  dev             1    wreg     PTR const struct bmp280_
 10970 ;;		 -> bmp(42), 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  dev             1    3[COMMON] PTR const struct bmp280_
 10973 ;;		 -> bmp(42), 
 10974 ;;  null_ptr_che    1    2[COMMON] char 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      char 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;Total ram usage:        4 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_bmp280_get_uncomp_data
 10994 ;;		_bmp280_comp_temp_32bit
 10995 ;;		_bmp280_comp_pres_32bit
 10996 ;;		_bmp280_compute_meas_time
 10997 ;;		i1_bmp280_get_regs
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           
 11002                           ;psect for function i1_null_ptr_check
 11003  1708                     i1_null_ptr_check:	
 11004                           
 11005                           ;incstack = 0
 11006                           ; Regs used in i1_null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 11007                           ;i1null_ptr_check@dev stored from wreg
 11008  1708  00F3               	movwf	i1null_ptr_check@dev
 11009                           
 11010                           ;bmp280.c: 589: int8_t rslt;;bmp280.c: 591: if ((dev == (0)) || (dev->read == (0)) || (d
      +                          ev->write == (0)) || (dev->delay_ms == (0))) {
 11011  1709  0873               	movf	i1null_ptr_check@dev,w
 11012  170A  1903               	btfsc	3,2
 11013  170B  2F27               	goto	i1l424
 11014  170C  0873               	movf	i1null_ptr_check@dev,w
 11015  170D  3E03               	addlw	3
 11016  170E  0086               	movwf	6
 11017  170F  3001               	movlw	1	; select bank2/3
 11018  1710  0087               	movwf	7
 11019  1711  0016               	moviw fsr1++
 11020  1712  0401               	iorwf	1,w
 11021  1713  1903               	btfsc	3,2
 11022  1714  2F27               	goto	i1l424
 11023  1715  0873               	movf	i1null_ptr_check@dev,w
 11024  1716  3E05               	addlw	5
 11025  1717  0086               	movwf	6
 11026  1718  3001               	movlw	1	; select bank2/3
 11027  1719  0087               	movwf	7
 11028  171A  0016               	moviw fsr1++
 11029  171B  0401               	iorwf	1,w
 11030  171C  1903               	btfsc	3,2
 11031  171D  2F27               	goto	i1l424
 11032  171E  0873               	movf	i1null_ptr_check@dev,w
 11033  171F  3E07               	addlw	7
 11034  1720  0086               	movwf	6
 11035  1721  3001               	movlw	1	; select bank2/3
 11036  1722  0087               	movwf	7
 11037  1723  0016               	moviw fsr1++
 11038  1724  0401               	iorwf	1,w
 11039  1725  1D03               	btfss	3,2
 11040  1726  2F2A               	goto	i1l1849
 11041  1727                     i1l424:	
 11042                           
 11043                           ;bmp280.c: 593: rslt = (-1);
 11044  1727  01F2               	clrf	i1null_ptr_check@rslt
 11045  1728  03F2               	decf	i1null_ptr_check@rslt,f
 11046                           
 11047                           ;bmp280.c: 594: } else {
 11048  1729  2F2B               	goto	i1l1851
 11049  172A                     i1l1849:	
 11050                           
 11051                           ;bmp280.c: 595: rslt = (0);
 11052  172A  01F2               	clrf	i1null_ptr_check@rslt
 11053  172B                     i1l1851:	
 11054                           
 11055                           ;bmp280.c: 596: };bmp280.c: 598: return rslt;
 11056  172B  0872               	movf	i1null_ptr_check@rslt,w
 11057  172C  0008               	return
 11058  172D                     __end_ofi1_null_ptr_check:	
 11059                           
 11060                           	psect	text40
 11061  17A1                     __ptext40:	
 11062 ;; *************** function ___lmul *****************
 11063 ;; Defined at:
 11064 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  multiplier      4    0[COMMON] unsigned long 
 11067 ;;  multiplicand    4    4[COMMON] unsigned long 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  product         4    8[COMMON] unsigned long 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  4    0[COMMON] unsigned long 
 11072 ;; Registers used:
 11073 ;;		wreg, status,2, status,0
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11079 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;Total ram usage:       12 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_bmp280_comp_temp_32bit
 11089 ;;		_bmp280_comp_pres_32bit
 11090 ;;		_bmp280_compute_meas_time
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           
 11095                           ;psect for function ___lmul
 11096  17A1                     ___lmul:	
 11097                           
 11098                           ;incstack = 0
 11099                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11100  17A1  3000               	movlw	0
 11101  17A2  00FB               	movwf	___lmul@product+3
 11102  17A3  3000               	movlw	0
 11103  17A4  00FA               	movwf	___lmul@product+2
 11104  17A5  3000               	movlw	0
 11105  17A6  00F9               	movwf	___lmul@product+1
 11106  17A7  3000               	movlw	0
 11107  17A8  00F8               	movwf	___lmul@product
 11108  17A9                     i1l1899:	
 11109  17A9  1C70               	btfss	___lmul@multiplier,0
 11110  17AA  2FB3               	goto	i1l1903
 11111  17AB  0874               	movf	___lmul@multiplicand,w
 11112  17AC  07F8               	addwf	___lmul@product,f
 11113  17AD  0875               	movf	___lmul@multiplicand+1,w
 11114  17AE  3DF9               	addwfc	___lmul@product+1,f
 11115  17AF  0876               	movf	___lmul@multiplicand+2,w
 11116  17B0  3DFA               	addwfc	___lmul@product+2,f
 11117  17B1  0877               	movf	___lmul@multiplicand+3,w
 11118  17B2  3DFB               	addwfc	___lmul@product+3,f
 11119  17B3                     i1l1903:	
 11120  17B3  3001               	movlw	1
 11121  17B4                     u175_25:	
 11122  17B4  35F4               	lslf	___lmul@multiplicand,f
 11123  17B5  0DF5               	rlf	___lmul@multiplicand+1,f
 11124  17B6  0DF6               	rlf	___lmul@multiplicand+2,f
 11125  17B7  0DF7               	rlf	___lmul@multiplicand+3,f
 11126  17B8  0B89               	decfsz	9,f
 11127  17B9  2FB4               	goto	u175_25
 11128  17BA  3001               	movlw	1
 11129  17BB                     u176_25:	
 11130  17BB  36F3               	lsrf	___lmul@multiplier+3,f
 11131  17BC  0CF2               	rrf	___lmul@multiplier+2,f
 11132  17BD  0CF1               	rrf	___lmul@multiplier+1,f
 11133  17BE  0CF0               	rrf	___lmul@multiplier,f
 11134  17BF  0B89               	decfsz	9,f
 11135  17C0  2FBB               	goto	u176_25
 11136  17C1  0873               	movf	___lmul@multiplier+3,w
 11137  17C2  0472               	iorwf	___lmul@multiplier+2,w
 11138  17C3  0471               	iorwf	___lmul@multiplier+1,w
 11139  17C4  0470               	iorwf	___lmul@multiplier,w
 11140  17C5  1D03               	skipz
 11141  17C6  2FA9               	goto	i1l1899
 11142  17C7  087B               	movf	___lmul@product+3,w
 11143  17C8  00F3               	movwf	?___lmul+3
 11144  17C9  087A               	movf	___lmul@product+2,w
 11145  17CA  00F2               	movwf	?___lmul+2
 11146  17CB  0879               	movf	___lmul@product+1,w
 11147  17CC  00F1               	movwf	?___lmul+1
 11148  17CD  0878               	movf	___lmul@product,w
 11149  17CE  00F0               	movwf	?___lmul
 11150  17CF  0008               	return
 11151  17D0                     __end_of___lmul:	
 11152                           
 11153                           	psect	text41
 11154  08E5                     __ptext41:	
 11155 ;; *************** function ___lldiv *****************
 11156 ;; Defined at:
 11157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  divisor         4    0[COMMON] unsigned long 
 11160 ;;  dividend        4    4[COMMON] unsigned long 
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  quotient        4    9[COMMON] unsigned long 
 11163 ;;  counter         1   13[COMMON] unsigned char 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  4    0[COMMON] unsigned long 
 11166 ;; Registers used:
 11167 ;;		wreg, status,2, status,0
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11173 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;Total ram usage:       14 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_bmp280_comp_pres_32bit
 11183 ;;		_bmp280_compute_meas_time
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           
 11188                           ;psect for function ___lldiv
 11189  08E5                     ___lldiv:	
 11190                           
 11191                           ;incstack = 0
 11192                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11193  08E5  3000               	movlw	0
 11194  08E6  00FC               	movwf	___lldiv@quotient+3
 11195  08E7  3000               	movlw	0
 11196  08E8  00FB               	movwf	___lldiv@quotient+2
 11197  08E9  3000               	movlw	0
 11198  08EA  00FA               	movwf	___lldiv@quotient+1
 11199  08EB  3000               	movlw	0
 11200  08EC  00F9               	movwf	___lldiv@quotient
 11201  08ED  0873               	movf	___lldiv@divisor+3,w
 11202  08EE  0472               	iorwf	___lldiv@divisor+2,w
 11203  08EF  0471               	iorwf	___lldiv@divisor+1,w
 11204  08F0  0470               	iorwf	___lldiv@divisor,w
 11205  08F1  1903               	skipnz
 11206  08F2  292E               	goto	i1l1931
 11207  08F3  01FD               	clrf	___lldiv@counter
 11208  08F4  0AFD               	incf	___lldiv@counter,f
 11209  08F5                     i1l1917:	
 11210  08F5  1BF3               	btfsc	___lldiv@divisor+3,7
 11211  08F6  2903               	goto	i1l1919
 11212  08F7  3001               	movlw	1
 11213  08F8                     u179_25:	
 11214  08F8  35F0               	lslf	___lldiv@divisor,f
 11215  08F9  0DF1               	rlf	___lldiv@divisor+1,f
 11216  08FA  0DF2               	rlf	___lldiv@divisor+2,f
 11217  08FB  0DF3               	rlf	___lldiv@divisor+3,f
 11218  08FC  0B89               	decfsz	9,f
 11219  08FD  28F8               	goto	u179_25
 11220  08FE  3001               	movlw	1
 11221  08FF  00F8               	movwf	??___lldiv
 11222  0900  0878               	movf	??___lldiv,w
 11223  0901  07FD               	addwf	___lldiv@counter,f
 11224  0902  28F5               	goto	i1l1917
 11225  0903                     i1l1919:	
 11226  0903  3001               	movlw	1
 11227  0904                     u181_25:	
 11228  0904  35F9               	lslf	___lldiv@quotient,f
 11229  0905  0DFA               	rlf	___lldiv@quotient+1,f
 11230  0906  0DFB               	rlf	___lldiv@quotient+2,f
 11231  0907  0DFC               	rlf	___lldiv@quotient+3,f
 11232  0908  0B89               	decfsz	9,f
 11233  0909  2904               	goto	u181_25
 11234  090A  0873               	movf	___lldiv@divisor+3,w
 11235  090B  0277               	subwf	___lldiv@dividend+3,w
 11236  090C  1D03               	skipz
 11237  090D  2918               	goto	u182_25
 11238  090E  0872               	movf	___lldiv@divisor+2,w
 11239  090F  0276               	subwf	___lldiv@dividend+2,w
 11240  0910  1D03               	skipz
 11241  0911  2918               	goto	u182_25
 11242  0912  0871               	movf	___lldiv@divisor+1,w
 11243  0913  0275               	subwf	___lldiv@dividend+1,w
 11244  0914  1D03               	skipz
 11245  0915  2918               	goto	u182_25
 11246  0916  0870               	movf	___lldiv@divisor,w
 11247  0917  0274               	subwf	___lldiv@dividend,w
 11248  0918                     u182_25:	
 11249  0918  1C03               	skipc
 11250  0919  2923               	goto	i1l1927
 11251  091A  0870               	movf	___lldiv@divisor,w
 11252  091B  02F4               	subwf	___lldiv@dividend,f
 11253  091C  0871               	movf	___lldiv@divisor+1,w
 11254  091D  3BF5               	subwfb	___lldiv@dividend+1,f
 11255  091E  0872               	movf	___lldiv@divisor+2,w
 11256  091F  3BF6               	subwfb	___lldiv@dividend+2,f
 11257  0920  0873               	movf	___lldiv@divisor+3,w
 11258  0921  3BF7               	subwfb	___lldiv@dividend+3,f
 11259  0922  1479               	bsf	___lldiv@quotient,0
 11260  0923                     i1l1927:	
 11261  0923  3001               	movlw	1
 11262  0924                     u183_25:	
 11263  0924  36F3               	lsrf	___lldiv@divisor+3,f
 11264  0925  0CF2               	rrf	___lldiv@divisor+2,f
 11265  0926  0CF1               	rrf	___lldiv@divisor+1,f
 11266  0927  0CF0               	rrf	___lldiv@divisor,f
 11267  0928  0B89               	decfsz	9,f
 11268  0929  2924               	goto	u183_25
 11269  092A  3001               	movlw	1
 11270  092B  02FD               	subwf	___lldiv@counter,f
 11271  092C  1D03               	btfss	3,2
 11272  092D  2903               	goto	i1l1919
 11273  092E                     i1l1931:	
 11274  092E  087C               	movf	___lldiv@quotient+3,w
 11275  092F  00F3               	movwf	?___lldiv+3
 11276  0930  087B               	movf	___lldiv@quotient+2,w
 11277  0931  00F2               	movwf	?___lldiv+2
 11278  0932  087A               	movf	___lldiv@quotient+1,w
 11279  0933  00F1               	movwf	?___lldiv+1
 11280  0934  0879               	movf	___lldiv@quotient,w
 11281  0935  00F0               	movwf	?___lldiv
 11282  0936  0008               	return
 11283  0937                     __end_of___lldiv:	
 11284                           
 11285                           	psect	text42
 11286  163F                     __ptext42:	
 11287 ;; *************** function _EUSART1_Write *****************
 11288 ;; Defined at:
 11289 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 11290 ;; Parameters:    Size  Location     Type
 11291 ;;  txData          1    0[COMMON] unsigned char 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;		None
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      void 
 11296 ;; Registers used:
 11297 ;;		wreg
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11307 ;;Total ram usage:        1 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_tmr_fire
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           
 11317                           ;psect for function _EUSART1_Write
 11318  163F                     _EUSART1_Write:	
 11319  163F                     i1l191:	
 11320                           ;eusart1.c: 114: {
 11321                           
 11322                           ;eusart1.c: 113: while(0 == PIR3bits.TX1IF)
 11323                           
 11324                           ;incstack = 0
 11325                           ; Regs used in _EUSART1_Write: [wreg]
 11326                           
 11327  163F  014E               	movlb	14	; select bank14
 11328  1640  1E0F               	btfss	15,4	;volatile
 11329  1641  2E3F               	goto	i1l191
 11330                           
 11331                           ;eusart1.c: 115: };eusart1.c: 117: TX1REG = txData;
 11332  1642  0870               	movf	EUSART1_Write@txData,w
 11333  1643  0142               	movlb	2	; select bank2
 11334  1644  009A               	movwf	26	;volatile
 11335  1645  0008               	return
 11336  1646                     __end_of_EUSART1_Write:	
 11337  007E                     btemp	set	126	;btemp
 11338  007E                     int$flags	set	126
 11339  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    26
    Data        34
    BSS         78
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      76
    BANK1            80     54      62
    BANK2            80     73      79
    BANK3            80      8      74
    BANK4            80      0      30
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i1null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> BMP280_delay_msek(), 

    i1null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 0
		 -> BMP280_SPI_bus_write(), 

    i1null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 0
		 -> BMP280_SPI_bus_read(), 

    S498$4$2	PTR unsigned char  size(2) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK1[8]), main@tx(BANK3[2]), 

    S498$3$2	PTR unsigned char  size(2) Largest target is 42
		 -> conf_sensor@temp(BANK2[2]), get_calib_param@temp(BANK2[24]), bmp280_get_uncomp_data@temp(BANK0[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(BANK1[2]), bmp(BANK3[42]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), tmr_fire(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), tmr_fire(), 

    conf_sensor@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    conf_sensor@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    conf_sensor@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    conf_sensor@conf	PTR const struct bmp280_config size(1) Largest target is 42
		 -> bmp.conf(BANK3[5]), main@conf(BANK3[5]), bmp(BANK3[42]), 

    conf_sensor@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    get_calib_param@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    get_calib_param@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    get_calib_param@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    interleave_data@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(BANK2[2]), bmp280_soft_reset@soft_rst_cmd(BANK2[1]), 

    interleave_data@reg_addr	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(BANK2[2]), bmp280_soft_reset@reg_addr(BANK2[1]), 

    interleave_data@temp_buff	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK1[8]), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    null_ptr_check@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_compute_meas_time@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_compute_meas_time@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_compute_meas_time@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_compute_meas_time@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_comp_pres_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_pres_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_pres_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_pres_32bit@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_comp_temp_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_temp_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_temp_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_temp_32bit@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_get_uncomp_data@uncomp_data	PTR struct bmp280_uncomp_data size(1) Largest target is 8
		 -> tmr_fire@ucomp_data(BANK1[8]), 

    bmp280_get_uncomp_data@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_set_power_mode@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_power_mode@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_power_mode@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_power_mode@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_set_config@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_set_config@conf	PTR const struct bmp280_config size(1) Largest target is 5
		 -> main@conf(BANK3[5]), 

    bmp280_get_config@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_config@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_config@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_config@conf	PTR struct bmp280_config size(1) Largest target is 5
		 -> main@conf(BANK3[5]), 

    bmp280_get_config@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_soft_reset@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(BANK2[2]), bmp280_soft_reset@soft_rst_cmd(BANK2[1]), 

    bmp280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(BANK2[2]), bmp280_soft_reset@reg_addr(BANK2[1]), 

    bmp280_set_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    bmp280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_regs@reg_data	PTR unsigned char  size(2) Largest target is 42
		 -> conf_sensor@temp(BANK2[2]), get_calib_param@temp(BANK2[24]), bmp280_get_uncomp_data@temp(BANK0[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(BANK1[2]), bmp(BANK3[42]), 

    bmp280_get_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK3[42]), 

    BMP280_SPI_bus_write@reg_data	PTR unsigned char  size(2) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK1[8]), main@tx(BANK3[2]), 

    BMP280_SPI_bus_read@reg_data	PTR unsigned char  size(2) Largest target is 42
		 -> conf_sensor@temp(BANK2[2]), get_calib_param@temp(BANK2[24]), bmp280_get_uncomp_data@temp(BANK0[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(BANK1[2]), bmp(BANK3[42]), 

    S498bmp280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    S498bmp280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    S498bmp280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> i1_BMP280_SPI_bus_read(), BMP280_SPI_bus_read(), 

    S28$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S28$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S28$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S28$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S28$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S28$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _bmp280_get_uncomp_data->i1_bmp280_get_regs
    i1_bmp280_get_regs->i1_BMP280_SPI_bus_read
    i1_BMP280_SPI_bus_read->i1_spi1_exchangeByte
    _bmp280_compute_meas_time->___lldiv
    _bmp280_comp_temp_32bit->___lmul
    _bmp280_comp_pres_32bit->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_tmr_fire
    _tmr_fire->_bmp280_get_uncomp_data
    _bmp280_get_uncomp_data->i1_bmp280_get_regs
    i1_bmp280_get_regs->i1_BMP280_SPI_bus_read

Critical Paths under _main in BANK1

    _main->_bmp280_set_config
    _spi1_master_open->___wmul
    _conf_sensor->_bmp280_soft_reset
    _bmp280_init->_bmp280_soft_reset
    _get_calib_param->_bmp280_get_regs
    _bmp280_soft_reset->_bmp280_set_regs
    _bmp280_set_regs->_BMP280_SPI_bus_write
    _BMP280_SPI_bus_write->_spi1_exchangeByte
    _bmp280_get_config->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _BMP280_SPI_bus_read->_spi1_exchangeByte
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR0_CallBack->_tmr_fire

Critical Paths under _main in BANK2

    _main->_bmp280_init
    _bmp280_set_power_mode->_conf_sensor
    _bmp280_set_config->_conf_sensor
    _conf_sensor->_bmp280_get_regs
    _bmp280_init->_get_calib_param
    _get_calib_param->_bmp280_get_regs
    _bmp280_get_config->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   79300
                                             71 BANK2      2     2      0
                                              0 BANK3      8     8      0
               _BMP280_SPI_bus_write
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                  _bmp280_get_config
                        _bmp280_init
                  _bmp280_set_config
              _bmp280_set_power_mode
                   _spi1_master_open
 ---------------------------------------------------------------------------------
 (1) _spi1_master_open                                     5     5      0    1422
                                             24 BANK1      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1296
                                             18 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _bmp280_set_power_mode                                6     5      1   22933
                                             52 BANK2      6     5      1
                        _conf_sensor
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (1) _bmp280_set_config                                    4     3      1   21891
                                             53 BANK1      1     1      0
                                             52 BANK2      3     2      1
                        _conf_sensor
 ---------------------------------------------------------------------------------
 (2) _conf_sensor                                         12    10      2   21633
                                             40 BANK2     12    10      2
                    _bmp280_get_regs
                    _bmp280_set_regs
                  _bmp280_soft_reset
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          5     5      0   23219
                                             66 BANK2      5     5      0
                  _BMP280_delay_msek *
                    _bmp280_get_regs
                  _bmp280_soft_reset
                    _get_calib_param
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _get_calib_param                                     29    29      0    8414
                                             34 BANK1      3     3      0
                                             40 BANK2     26    26      0
                    _bmp280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_soft_reset                                    7     7      0    7480
                                             50 BANK1      3     3      0
                                              0 BANK2      4     4      0
                  _BMP280_delay_msek *
                    _bmp280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (4) _bmp280_set_regs                                     19    16      3    5772
                                             31 BANK1     19    16      3
               _BMP280_SPI_bus_write
                    _interleave_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _interleave_data                                      8     5      3     948
                                             18 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (5) _BMP280_SPI_bus_write                                12     7      5    1259
                                             19 BANK1     12     7      5
                  _spi1_exchangeByte
 ---------------------------------------------------------------------------------
 (4) _BMP280_delay_msek                                    8     4      4     294
                                             18 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _bmp280_get_config                                    8     7      1    7364
                                             34 BANK1      8     7      1
                    _bmp280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_get_regs                                      9     5      4    4926
                                             29 BANK1      5     5      0
                                             36 BANK2      4     0      4
                _BMP280_SPI_bus_read *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     841
                                             18 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_read                                 46    41      5    1263
                                             19 BANK1     10     5      5
                                              0 BANK2     36    36      0
                  _spi1_exchangeByte
 ---------------------------------------------------------------------------------
 (6) _spi1_exchangeByte                                    1     1      0      55
                                             18 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     226
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     226
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     226
                                             18 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   14158
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0   14158
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0   14158
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _tmr_fire *
 ---------------------------------------------------------------------------------
 (10) _tmr_fire                                           31    31      0   14158
                                             64 BANK0      6     6      0
                                              0 BANK1     18    18      0
                      _EUSART1_Write
             _bmp280_comp_pres_32bit
             _bmp280_comp_temp_32bit
           _bmp280_compute_meas_time
             _bmp280_get_uncomp_data
 ---------------------------------------------------------------------------------
 (11) _bmp280_get_uncomp_data                             22    21      1    2795
                                             42 BANK0     22    21      1
                  i1_bmp280_get_regs
                   i1_null_ptr_check
 ---------------------------------------------------------------------------------
 (12) i1_bmp280_get_regs                                   9     5      4    1637
                                             11 COMMON     3     3      0
                                             36 BANK0      6     2      4
              i1_BMP280_SPI_bus_read *
                   i1_null_ptr_check
 ---------------------------------------------------------------------------------
 (13) i1_BMP280_SPI_bus_read                              46    41      5     638
                                              1 COMMON    10     5      5
                                              0 BANK0     36    36      0
                i1_spi1_exchangeByte
 ---------------------------------------------------------------------------------
 (14) i1_spi1_exchangeByte                                 1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _bmp280_compute_meas_time                           36    36      0    3210
                                              0 BANK0     36    36      0
                            ___lldiv
                             ___lmul
                   i1_null_ptr_check
 ---------------------------------------------------------------------------------
 (11) _bmp280_comp_temp_32bit                             46    41      5    2866
                                              0 BANK0     46    41      5
                             ___lmul
                   i1_null_ptr_check
 ---------------------------------------------------------------------------------
 (11) _bmp280_comp_pres_32bit                             41    36      5    3930
                                              0 BANK0     41    36      5
                            ___lldiv
                             ___lmul
                   i1_null_ptr_check
 ---------------------------------------------------------------------------------
 (12) i1_null_ptr_check                                    4     4      0     112
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) ___lmul                                             12     4      8    2268
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___lldiv                                            14     6      8     546
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Write                                       1     0      1     662
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_SPI_bus_write
     _spi1_exchangeByte
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _bmp280_get_config
     _bmp280_get_regs
       _BMP280_SPI_bus_read *
         _spi1_exchangeByte
       _null_ptr_check *
     _null_ptr_check
   _bmp280_init
     _BMP280_delay_msek *
     _bmp280_get_regs *
       _BMP280_SPI_bus_read *
         _spi1_exchangeByte
       _null_ptr_check *
     _bmp280_soft_reset *
       _BMP280_delay_msek *
       _bmp280_set_regs *
         _BMP280_SPI_bus_write
           _spi1_exchangeByte
         _interleave_data
         _null_ptr_check
       _null_ptr_check *
     _get_calib_param *
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
           _spi1_exchangeByte
         _null_ptr_check *
       _null_ptr_check
     _null_ptr_check *
   _bmp280_set_config
     _conf_sensor
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
           _spi1_exchangeByte
         _null_ptr_check *
       _bmp280_set_regs
         _BMP280_SPI_bus_write
           _spi1_exchangeByte
         _interleave_data
         _null_ptr_check
       _bmp280_soft_reset
         _BMP280_delay_msek *
         _bmp280_set_regs *
           _BMP280_SPI_bus_write
             _spi1_exchangeByte
           _interleave_data
           _null_ptr_check
         _null_ptr_check *
       _null_ptr_check
   _bmp280_set_power_mode
     _conf_sensor
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
           _spi1_exchangeByte
         _null_ptr_check *
       _bmp280_set_regs
         _BMP280_SPI_bus_write
           _spi1_exchangeByte
         _interleave_data
         _null_ptr_check
       _bmp280_soft_reset
         _BMP280_delay_msek *
         _bmp280_set_regs *
           _BMP280_SPI_bus_write
             _spi1_exchangeByte
           _interleave_data
           _null_ptr_check
         _null_ptr_check *
       _null_ptr_check
     _null_ptr_check
   _spi1_master_open
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _tmr_fire *
         _EUSART1_Write
         _bmp280_comp_pres_32bit
           ___lldiv
           ___lmul
           i1_null_ptr_check
         _bmp280_comp_temp_32bit
           ___lmul
           i1_null_ptr_check
         _bmp280_compute_meas_time
           ___lldiv
           ___lmul
           i1_null_ptr_check
         _bmp280_get_uncomp_data
           i1_bmp280_get_regs
             i1_BMP280_SPI_bus_read *
               i1_spi1_exchangeByte
             i1_null_ptr_check *
           i1_null_ptr_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     14F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     36      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     49      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      8      4A      12       92.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      1E      14       37.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jun 29 00:26:20 2018

                                    __CFG_CP$OFF 0000                                               l46 1687  
                            ___wmul@multiplicand 00B4                                ??_bmp280_set_regs 00C2  
                     __size_ofi1_bmp280_get_regs 004B                                      __CFG_LVP$ON 0000  
                                            l311 0D4E                                              l327 098A  
                                            l271 1783                                              l335 0CA7  
                                            l424 174D                                              l446 0EDA  
                                            l527 07EC                                              l368 0B78  
                       BMP280_SPI_bus_read@F6549 0220                                              _bmp 01B8  
                               ?_interleave_data 00B2                          __size_of_PMD_Initialize 0008  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                 bmp280_comp_pres_32bit@pressure 0041                                    __CFG_BBEN$OFF 0000  
                             interleave_data@len 00B4                                _bmp280_set_config 168E  
                                   __CFG_ZCD$OFF 0000                                             l4023 0958  
                                           l4041 0897                                             l4123 0BCF  
                                           l4107 0B8E                                             l4029 098D  
                                           l4133 0BF0                                             l4117 0BBB  
                                           l4127 0BE6                                             l4057 0DF5  
                                           l4129 0BE9                                             l4137 0C11  
                                           l4091 0EDC                                             l4171 1706  
                                           l4157 0B7A                                             l3571 07E6  
                                           l3901 0AC8                                             l3821 082E  
                                           l3903 0AEE                                             l3823 0845  
                                           l3837 1750                                             l3839 1751  
                                           l3951 0C5E                                             l3849 17D4  
                                           l3929 0C1D                                             l3891 0ABB  
                                           l3875 0A68                                             l3957 0C7E  
                                           l3949 0C42                                             l3965 0CA2  
                                           l3967 0CA9                                             l3889 0A8E  
                                           _LATA 0018                                             _LATC 001A  
                                           u5140 0A80                                             u5135 1791  
                                           u5155 0A9E                                             _PMD0 0796  
                                           _PMD1 0797                                             _PMD2 0798  
                                           _PMD3 0799                                             _PMD4 079A  
                                           u4705 07F2                                             _PMD5 079B  
                                           u5460 0D5C                                             i1l46 1665  
                                           u5535 0E38                                             u5545 0E4B  
                                           u5555 0E5F                                             u5580 0EB4  
                                           u5565 0E73                                             u5735 0B23  
                                           u4695 07ED                                             u5745 0B32  
                                           u5770 0B73                                             u5755 0B41  
                                           u5907 0849                                             u5765 0B51  
                                           u5917 1794                                             u5927 0A69  
                                           u5937 0ABF                                             u5897 0CC5  
                             ?_bmp280_set_config 0154                         BMP280_SPI_bus_read@array 0120  
                                           _WPUA 1F39                                             _WPUC 1F4F  
                                  _EUSART1_Write 163F                                    __CFG_FCMEN$ON 0000  
                       ??_bmp280_get_uncomp_data 004B                                             _main 0CAB  
                                _TMR0_StartTimer 1626                                             _uart 1800  
                                           fsr0h 0005                                             fsr1h 0007  
                                           indf0 0000                                             fsr0l 0004  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                    __CFG_BOREN$ON 0000  
                                           start 000E                              ??_bmp280_set_config 0155  
                                  __CFG_CSWEN$ON 0000                                    __CFG_MCLRE$ON 0000  
                              _bmp280_soft_reset 0853                                 i1_null_ptr_check 1708  
                            conf_sensor@reg_addr 014E                          __end_of_TMR0_Initialize 081C  
                 ??_TMR0_DefaultInterruptHandler 0070                               ?_bmp280_soft_reset 0070  
                       ??_bmp280_comp_temp_32bit 0025                   __size_of_OSCILLATOR_Initialize 000A  
                  __end_of_OSCILLATOR_Initialize 1661                                            _ADACT 009F  
                                          ?_main 0070                                    __CFG_WDTE$OFF 0000  
                       ??_bmp280_comp_pres_32bit 0025                                  __end_of___lldiv 0937  
                                          i1l402 0406                                            i1l405 02E8  
                                          i1l191 163F                                            i1l327 08E1  
                                          i1l424 1727                                            i1l418 0F92  
                                          i1l523 000C                                            i1l393 07DF  
                                          _OSCEN 0891                                            _TMR0H 059D  
                                          _TMR0L 059C                bmp280_get_uncomp_data@uncomp_data 005F  
                                          _TRISA 0012                                            _TRISC 0014  
              __size_of_TMR0_SetInterruptHandler 0006                       i1BMP280_SPI_bus_read@array 0020  
                       __size_of_get_calib_param 00A8                              ??_bmp280_soft_reset 00D2  
                            ___lmul@multiplicand 0074                        ?_TMR0_SetInterruptHandler 00B2  
                      __end_of_bmp280_set_config 169D                                 __end_of_TMR0_ISR 16CB  
                    __end_of_BMP280_SPI_bus_read 0AF0                                    __CFG_WRTB$OFF 0000  
                                  __CFG_WRTC$OFF 0000                          bmp280_get_regs@reg_addr 00C0  
                        bmp280_set_regs@reg_addr 00D1                          bmp280_get_regs@reg_data 0144  
                        bmp280_set_regs@reg_data 00BF                                   ?_EUSART1_Write 0070  
                                          pclath 000A                                            status 0003  
                                          wtemp0 007E                    i1BMP280_SPI_bus_read@dev_addr 0071  
                        bmp280_set_regs@temp_len 00CD                              i1_spi1_exchangeByte 1661  
                     __size_of_bmp280_get_config 008C                        __end_of_bmp280_soft_reset 089A  
                      i1bmp280_get_regs@reg_addr 0048                                  __initialization 0010  
                      i1bmp280_get_regs@reg_data 0044                       __end_of_EUSART1_Initialize 1682  
                                   __end_of_main 0D4F                            bmp280_get_config@conf 00C9  
                                   __end_of_uart 180C                            bmp280_get_config@temp 00C7  
                          bmp280_get_config@rslt 00C6                             i1bmp280_get_regs@dev 0047  
                           i1bmp280_get_regs@len 0046                                   __CFG_SAFEN$OFF 0000  
                  i1BMP280_SPI_bus_read@reg_addr 0072                    i1BMP280_SPI_bus_read@reg_data 0073  
                           interleave_data@index 00B9                          ??_bmp280_set_power_mode 0155  
                    ?_INTERRUPT_InterruptManager 0070                            i1_BMP280_SPI_bus_read 09F1  
                                         ??_main 0167                                     tmr_fire@rslt 00A0  
                       __end_of_spi1_master_open 09F1                             ?i1_spi1_exchangeByte 0070  
               __end_of_bmp280_compute_meas_time 1000                          interleave_data@reg_addr 00B8  
                        interleave_data@reg_data 00B3                                 ??_null_ptr_check 00B2  
                            i1null_ptr_check@dev 0073                          __end_of_TMR0_StartTimer 1629  
                                         _ADCON0 009D                                           _ADCON1 009E  
                                         _ADRESH 009C                                           _ADRESL 009B  
                                         _ANSELA 1F38                                           _ANSELC 1F4E  
                             __CFG_RSTOSC$HFINT1 0000                                           _T0CON0 059E  
                                         _T0CON1 059F                                           _RC1REG 0119  
                                         _RC0PPS 1F20                                           _RC1STA 011D  
                                         _RC2PPS 1F22                                           _RC4PPS 1F24  
                                         i1l2013 0FFE                                           i1l2007 0F8E  
                                         i1l2047 05A4                                           _ODCONA 1F3A  
                                         _ODCONC 1F50                                           i1l2077 02CC  
                                         i1l2085 03FE                                           i1l1903 17B3  
                                         i1l2607 0A43                                           i1l2609 0A62  
                                         i1l1931 092E                                           i1l1851 172B  
                                         i1l1917 08F5                                           u210_25 0433  
                                         i1l2581 09F1                                           i1l1927 0923  
                                         i1l1919 0903                                           i1l1849 172A  
                                         i1l2595 0A13                                           u211_25 044D  
                                         i1l2597 0A39                                           i1l3921 07E1  
                                 __CFG_WDTCCS$SC 0000                                           i1l1899 17A9  
                                         u220_25 0080                                           u212_25 0482  
                                         i1l3861 08B8  __end_ofbmp280_compute_meas_time@period_per_osrs 1816  
        bmp280_compute_meas_time@period_per_osrs 1812                                           i1l3867 08E3  
                                         u221_25 0098                                           u213_25 04B3  
                                         u230_25 0205                                           u222_25 00B4  
                                         u214_25 04EC                                           u231_25 0215  
                                         u223_25 0117                                           u215_25 050F  
                                         u240_25 0370                                           u232_25 024C  
                                         u224_25 013D                                           u216_25 0544  
                                         u241_25 039E                                           u233_25 026C  
                                         u225_25 014D                                           u217_25 0596  
                                         u314_20 0A08                                           u242_25 03E8  
                                         u226_25 016D                                           u227_25 0185  
                                         u219_25 0064                                           u315_25 0A21  
                                         u236_25 02F1                                           u228_25 01A1  
                                         u181_25 0904                                           u237_25 0308  
                                         u229_25 01D7                                           u182_25 0918  
                                         u238_25 0323                                           u183_25 0924  
                                         u175_25 17B4                                           u239_25 0359  
                                         u176_25 17BB                                           u520_25 0764  
                                         u600_27 06E5                                           u521_25 0772  
                                         u601_27 070C                                           u522_25 077E  
                                         u602_27 09F2                                           u195_20 0F1E  
                                         u179_25 08F8                                           u195_25 0F1A  
                                         u523_25 07A3                                           u603_27 0A3C  
                                         u196_25 0F21                                           u524_25 07B1  
                                         u540_25 0722                                           u197_20 0F5A  
                                         u517_20 073B                                           u197_25 0F56  
                                         u525_25 07BD                                           u198_25 0F5D  
                                         u535_25 0654                                           u536_25 067C  
                                         u537_25 06A4                                           u538_25 06D4  
                                         u539_25 06FB                                           _OSCFRQ 0893  
                                         u594_27 061A                                           u595_27 062B  
                                         u596_27 063D                                           u597_27 0665  
                                         u598_27 068D                                           u599_27 06BE  
                                         _TX1REG 011A                                           _TX1STA 011E  
                __size_of_bmp280_get_uncomp_data 00B4                        bmp280_set_power_mode@mode 0158  
                           bmp280_init@try_count 0164                        bmp280_set_power_mode@rslt 0159  
                           bmp280_set_config@dev 0154                                   __CFG_PWRTE$OFF 0000  
                                         ___lmul 17A1                             __size_of_conf_sensor 00E7  
                   __end_of_BMP280_SPI_bus_write 0853                                           ___wmul 07E3  
                                 __CFG_STVREN$ON 0000                                        ??___lldiv 0078  
                               ?_TMR0_Initialize 0070                  __size_of_bmp280_comp_temp_32bit 019E  
                          ??i1_spi1_exchangeByte 0070                                   conf_sensor@dev 0149  
                                         main@tx 01E2                  __size_of_bmp280_comp_pres_32bit 03CE  
                                 _PMD_Initialize 1646                       __size_of_bmp280_set_config 000F  
                                _bmp280_get_regs 0937                                 __end_of_tmr_fire 072F  
                          __end_of_TMR0_CallBack 1677                                _BMP280_delay_msek 177A  
                                ??_EUSART1_Write 0071         TMR0_SetInterruptHandler@InterruptHandler 00B2  
                       bmp280_set_regs@temp_buff 00C5                           i1BMP280_SPI_bus_read@i 0043  
                             ?_BMP280_delay_msek 00B2                                ??_get_calib_param 00C2  
                              _SYSTEM_Initialize 169D                          __end_of__initialization 003D  
              bmp280_comp_pres_32bit@uncomp_pres 0020                           bmp280_get_config@F6430 00DC  
                             ?_SYSTEM_Initialize 0070                                  _bmp280_set_regs 0C13  
                            ??_BMP280_delay_msek 00B6                           BMP280_SPI_bus_read@cnt 00B7  
                     __size_of_bmp280_soft_reset 0047                                   __pcstackCOMMON 0070  
                                   __pidataBANK2 1629                                     __pidataBANK4 16CB  
                            ??_SYSTEM_Initialize 00B4                                        ?_TMR0_ISR 0070  
                         ?i1_BMP280_SPI_bus_read 0071                           _bmp280_get_uncomp_data 072F  
                         __end_of_PMD_Initialize 164E                            i1bmp280_get_regs@rslt 0049  
                             _spi1_configuration 180C                            TMR0_ISR@CountCallBack 00DA  
                      __end_of_BMP280_delay_msek 17A1                         bmp280_set_power_mode@dev 0154  
                    bmp280_set_regs@reg_addr_cnt 00CF                                 ?_TMR0_StartTimer 0070  
                      __end_of_SYSTEM_Initialize 16AF                         __end_ofi1_null_ptr_check 172D  
                                     __pbssBANK0 0066                                       __pbssBANK1 00DA  
                                     __pbssBANK2 016D                                       __pbssBANK3 01A0  
                                  ??_bmp280_init 0162                           _bmp280_comp_temp_32bit 040F  
                           BMP280_SPI_bus_read@i 0143                           _bmp280_comp_pres_32bit 0041  
              __size_of_bmp280_compute_meas_time 0122                        ?_bmp280_compute_meas_time 0070  
                     bmp280_comp_temp_32bit@var1 003D                       bmp280_comp_temp_32bit@var2 0041  
                     bmp280_comp_temp_32bit@rslt 004D                                   _SSP1DATPPSbits 1EC6  
                                     __pmaintext 0CAB                         interleave_data@temp_buff 00B2  
                     bmp280_get_uncomp_data@temp 0058                       bmp280_get_uncomp_data@rslt 005E  
               __end_of_TMR0_SetInterruptHandler 1633                                          ?___lmul 0070  
                                        ?___wmul 00B2                                       ??_TMR0_ISR 007E  
                                __CFG_PPS1WAY$ON 0000                                       __pintentry 0004  
                           i1null_ptr_check@rslt 0072                    _BMP280_SPI_bus_read$intlevel0 0A68  
                                 ___lmul@product 0078                                   _SSP1CLKPPSbits 1EC5  
                                ?_PMD_Initialize 0070                          __end_of_bmp280_get_regs 098F  
                        __size_of_ADC_Initialize 0009                                          _SP1BRGH 011C  
                                        _SP1BRGL 011B                                          _OSCCON1 088D  
                                        _OSCCON3 088F                                          _OSCSTAT 0890  
                                        _OSCTUNE 0892                                          _SSP1ADD 018D  
                                        _SSP1BUF 018C                        bmp280_get_uncomp_data@dev 004A  
                           _BMP280_SPI_bus_write 081C                          __end_of_bmp280_set_regs 0CAB  
                       __size_of_interleave_data 0030                            bmp280_set_config@conf 00D5  
                            __end_of_bmp280_init 0C13                             i1spi1_exchangeByte@b 0070  
                                __size_of___lmul 002F                                          ___lldiv 08E5  
                                __size_of___wmul 001C                                        ?_tmr_fire 0070  
                             bmp280_get_regs@dev 0147                               bmp280_get_regs@len 0146  
                            _EUSART1_is_rx_ready 0000                                 tmr_fire@meas_dur 00A1  
                 __size_of_bmp280_set_power_mode 001F                              _EUSART1_is_tx_ready 0000  
                  __end_of_bmp280_set_power_mode 1708                                          __ptext1 098F  
                                        __ptext2 07E3                                          __ptext3 16E9  
                                        __ptext4 168E                                          __ptext5 0DF7  
                                        __ptext6 0B7C                                          __ptext7 0D4F  
                                        __ptext8 0853                                          __ptext9 0C13  
                                __CFG_WRTAPP$OFF 0000                                ?_spi1_master_open 0070  
                          _OSCILLATOR_Initialize 1657                       __size_of_BMP280_delay_msek 0027  
                             _EUSART1_Initialize 1677                         ??_PIN_MANAGER_Initialize 00B2  
                                __CFG_WRTSAF$OFF 0000                               ??_spi1_master_open 00B8  
                     __size_of_SYSTEM_Initialize 0012                                          clrloop0 1634  
                          ?_BMP280_SPI_bus_write 00B3                                  conf_sensor@conf 0148  
                                conf_sensor@mode 0150                    bmp280_soft_reset@soft_rst_cmd 0120  
                                conf_sensor@temp 0152                             end_of_initialization 003D  
                                conf_sensor@rslt 0151                              ?_EUSART1_Initialize 0070  
                                        init_ram 1639                     __size_of_BMP280_SPI_bus_read 008C  
                                        initloop 163A                            bmp280_soft_reset@rslt 0121  
                                ___lldiv@divisor 0070                                  ___lldiv@counter 007D  
                                     ??_tmr_fire 0060                             ??_EUSART1_Initialize 00B2  
                          __CFG_WDTCPS$WDTCPS_31 0000                         _TMR0_SetInterruptHandler 162D  
                 bmp280_compute_meas_time@period 003F                                 ?_bmp280_get_regs 0144  
                                _get_calib_param 0D4F                               get_calib_param@dev 0161  
                                      _TRISCbits 0014                              EUSART1_Write@txData 0070  
                               __CFG_FEXTOSC$OFF 0000                                 ?_bmp280_set_regs 00BF  
                                    _bmp280_init 0B7C                                     _EUSART1_Read 0000  
                                  ??_conf_sensor 014A                                ??_interleave_data 00B5  
                        ??i1_BMP280_SPI_bus_read 0076                             _timer0ReloadVal16bit 00D8  
                    __end_ofi1_spi1_exchangeByte 166C                          ?_bmp280_get_uncomp_data 004A  
                                 __end_of___lmul 17D0                                   __end_of___wmul 07FF  
                              __size_of_TMR0_ISR 001C                                   _ADC_Initialize 164E  
                         ?_OSCILLATOR_Initialize 0070                              start_initialization 0010  
                     bmp280_comp_pres_32bit@var1 0045                       bmp280_comp_pres_32bit@var2 003D  
                   BMP280_SPI_bus_read@stringpos 0142                       bmp280_comp_pres_32bit@rslt 0038  
                       __size_of_TMR0_Initialize 001C                  __size_of_PIN_MANAGER_Initialize 0027  
                                bmp280_init@rslt 0165                           ??_BMP280_SPI_bus_write 00B8  
                           bmp280_get_config@dev 00C2                          ?_bmp280_comp_temp_32bit 0020  
        __end_ofbmp280_compute_meas_time@startup 181A                  bmp280_compute_meas_time@startup 1816  
                    _bmp280_comp_temp_32bit$1772 0045                          ?_bmp280_comp_pres_32bit 0020  
                          __end_of_EUSART1_Write 1646                                ?i1_null_ptr_check 0070  
                        __size_of_null_ptr_check 0026                               ??i1_null_ptr_check 0070  
                             BMP280_delay_msek@i 00B6                          BMP280_SPI_bus_write@cnt 00B7  
                               __CFG_LPBOREN$OFF 0000                   __end_of_bmp280_get_uncomp_data 07E3  
                               ??_PMD_Initialize 00B2                                         ??___lmul 0078  
                                       ??___wmul 00B6                                   tmr_fire@temp32 00A2  
                                 tmr_fire@pres32 00A6                          __end_of_get_calib_param 0DF7  
                         __size_of_TMR0_CallBack 000B                           __end_of_ADC_Initialize 1657  
                                    __pdataBANK2 0169                                      __pdataBANK4 0220  
                             null_ptr_check@rslt 00B4                              __end_of_conf_sensor 0EDE  
                 __end_of_bmp280_comp_temp_32bit 05AD                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                    __pcstackBANK1 00A0  
                                  __pcstackBANK2 0120                                    __pcstackBANK3 01E2  
                            bmp280_set_regs@rslt 00D0                   __end_of_bmp280_comp_pres_32bit 040F  
                    bmp280_get_uncomp_data@F6465 0066                            BMP280_SPI_bus_write@i 00BE  
                          _TMR0_InterruptHandler 00D6                                        __pnvBANK1 00D6  
                       __size_of_TMR0_StartTimer 0003                           _PIN_MANAGER_Initialize 1753  
                             spi1_exchangeByte@b 00B2                                         ?___lldiv 0070  
                                ?_ADC_Initialize 0070                        BMP280_SPI_bus_read@iError 013E  
                   ??_INTERRUPT_InterruptManager 007E                                __size_of_tmr_fire 0182  
                            _BMP280_SPI_bus_read 0A64                                         _BAUD1CON 011F  
                                  _TMR0_CallBack 166C                               _EUSART1_is_tx_done 0000  
                       _bmp280_compute_meas_time 0EDE                     BMP280_SPI_bus_write@dev_addr 00B3  
                              ??_TMR0_Initialize 00B4                             ?_BMP280_SPI_bus_read 00B3  
                                 ___wmul@product 00B6                                         _LATAbits 0018  
                      __size_of_spi1_master_open 0062                            BMP280_delay_msek@msek 00B2  
                                      clear_ram0 1633                                         _PIE0bits 0716  
                           bmp280_soft_reset@dev 0123                                      _conf_sensor 0DF7  
            __size_of_INTERRUPT_InterruptManager 000A                       ??_TMR0_SetInterruptHandler 00B4  
                    BMP280_SPI_bus_read@dev_addr 00B3                                         _PIR0bits 070C  
                                       _PIR3bits 070F                     BMP280_SPI_bus_write@reg_addr 00B4  
                   BMP280_SPI_bus_write@reg_data 00B5                                __CFG_BBSIZE$BB512 0000  
                                      main@F6584 016B                                         _SSP1CON1 0190  
                                       _SSP1CON2 0191                                         _TMR0_ISR 16AF  
                  bmp280_compute_meas_time@p_dur 0034                                         _SSP1STAT 018F  
                  bmp280_compute_meas_time@t_dur 0030                                 ?_get_calib_param 0070  
                                     _ADCON0bits 009D                      BMP280_SPI_bus_read@reg_addr 00B4  
                    BMP280_SPI_bus_read@reg_data 00B5                                ___wmul@multiplier 00B2  
                                   _RX1DTPPSbits 1ECB                               tmr_fire@ucomp_data 00AA  
                              _spi1_exchangeByte 1682                            _bmp280_set_power_mode 16E9  
                             ?_spi1_exchangeByte 0070                                   ?_TMR0_CallBack 0070  
                              ___lmul@multiplier 0070                                  _interleave_data 17D0  
                    i1BMP280_SPI_bus_read@iError 003E                                   _null_ptr_check 172D  
                            ??_spi1_exchangeByte 00B2                                     ?_bmp280_init 0070  
                          ??_BMP280_SPI_bus_read 00B8                                   bmp280_init@dev 0166  
                              null_ptr_check@dev 00B5                   __size_ofi1_BMP280_SPI_bus_read 0073  
                        ??_OSCILLATOR_Initialize 00B2                    __end_ofi1_BMP280_SPI_bus_read 0A64  
                              ??_TMR0_StartTimer 00B2                      _bmp280_comp_pres_32bit$1773 0039  
                               __size_of___lldiv 0052                      __size_of_EUSART1_Initialize 000B  
                      __end_of_spi1_exchangeByte 168E                               bmp280_set_regs@dev 00C1  
                             bmp280_set_regs@len 00C0                              bmp280_get_regs@rslt 00C1  
                              i1_bmp280_get_regs 089A                                       _T0CON0bits 059E  
              bmp280_compute_meas_time@p_startup 0038                               ?i1_bmp280_get_regs 0044  
                                       __ptext10 17D0                                         __ptext11 081C  
                                       __ptext20 0800                                         __ptext12 177A  
                                       __ptext21 162D                                         __ptext13 0AF0  
                                       __ptext30 07FF                                         __ptext22 1646  
                                       __ptext14 0937                                         __ptext31 05AD  
                                       __ptext23 1753                                         __ptext15 172D  
                                       __ptext40 17A1                                         __ptext32 072F  
                                       __ptext24 1657                                         __ptext16 0A64  
                                       __ptext41 08E5                                         __ptext33 089A  
                                       __ptext25 1677                                         __ptext17 1682  
                                       __ptext42 163F                                         __ptext34 09F1  
                                       __ptext26 164E                                         __ptext18 1626  
                                       __ptext35 1661                                         __ptext19 169D  
                                       __ptext36 0EDE                                         __ptext28 16AF  
                                       __ptext37 040F                                         __ptext29 166C  
                                       __ptext38 0041                                         __ptext39 1708  
                                   _SSP1CON1bits 0190                           __end_of_null_ptr_check 1753  
         spi1_master_open@spiUniqueConfiguration 00BC                         __size_of_bmp280_get_regs 0058  
                            ??i1_bmp280_get_regs 007B                                    __size_of_main 00A4  
           __end_of_TMR0_DefaultInterruptHandler 0800            __size_of_TMR0_DefaultInterruptHandler 0001  
                   _TMR0_DefaultInterruptHandler 07FF                             __CFG_WDTCWS$WDTCWS_7 0000  
                               conf_sensor@F6602 016D                                 conf_sensor@F6604 0169  
              bmp280_comp_temp_32bit@temperature 0049                                       _RC1STAbits 011D  
                       __size_of_bmp280_set_regs 0098                        bmp280_comp_temp_32bit@dev 0024  
                   bmp280_compute_meas_time@rslt 003E                                         int$flags 007E  
                                       _tmr_fire 05AD                        __size_ofi1_null_ptr_check 0025  
             __end_of_INTERRUPT_InterruptManager 000E                       _INTERRUPT_InterruptManager 0004  
                                       main@conf 01E5                                         main@rslt 01E4  
                      __end_ofi1_bmp280_get_regs 08E5                           ?_bmp280_set_power_mode 0154  
                   __size_ofi1_spi1_exchangeByte 000B                          __end_of_interleave_data 1800  
                                     _INTCONbits 000B                                  ??_TMR0_CallBack 007E  
                      bmp280_soft_reset@reg_addr 0122                                  ?_null_ptr_check 0070  
                  __size_of_BMP280_SPI_bus_write 0037                                         intlevel1 0000  
              bmp280_comp_temp_32bit@uncomp_temp 0020                                 ___lldiv@dividend 0074  
                               _spi1_master_open 098F                          ?_PIN_MANAGER_Initialize 0070  
                  _bmp280_compute_meas_time$1111 003C                                __CFG_CLKOUTEN$OFF 0000  
                     BMP280_SPI_bus_write@iError 00BA                                 ??_ADC_Initialize 00B2  
                  ?_TMR0_DefaultInterruptHandler 0070                   i1BMP280_SPI_bus_read@stringpos 0042  
                    bmp280_compute_meas_time@dev 0043                                _bmp280_get_config 0AF0  
                             ?_bmp280_get_config 00C2                       __size_of_spi1_exchangeByte 000C  
                         __size_of_EUSART1_Write 0007                                    __pstringtext1 1800  
                                  __pstringtext2 180C                                    __pstringtext3 1812  
                                  __pstringtext4 1816                       ??_bmp280_compute_meas_time 0020  
                               ___lldiv@quotient 0079                                  _TMR0_Initialize 0800  
                            ??_bmp280_get_config 00C3                             get_calib_param@F6534 01A0  
                                     _TX1STAbits 011E                         i1BMP280_SPI_bus_read@cnt 0075  
                 __end_of_PIN_MANAGER_Initialize 177A                        bmp280_comp_pres_32bit@dev 0024  
                           __size_of_bmp280_init 0097                                ??_bmp280_get_regs 00BD  
                                   ?_conf_sensor 0148                        __end_of_bmp280_get_config 0B7C  
                     __end_of_spi1_configuration 1812                              get_calib_param@temp 0148  
                            get_calib_param@rslt 0160  
