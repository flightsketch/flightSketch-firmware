

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 27 23:31:43 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F15325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.00
    57                           ; Generated 27/05/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F15325 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  0012                     	;# 
   105  0014                     	;# 
   106  0018                     	;# 
   107  001A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0119                     	;# 
   115  0119                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011A                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011C                     	;# 
   126  011C                     	;# 
   127  011C                     	;# 
   128  011D                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011E                     	;# 
   132  011E                     	;# 
   133  011E                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  018F                     	;# 
   143  0190                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  020C                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  020E                     	;# 
   150  020F                     	;# 
   151  020F                     	;# 
   152  0210                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  028C                     	;# 
   157  028C                     	;# 
   158  028D                     	;# 
   159  028D                     	;# 
   160  028E                     	;# 
   161  028F                     	;# 
   162  0290                     	;# 
   163  0291                     	;# 
   164  030C                     	;# 
   165  030C                     	;# 
   166  030D                     	;# 
   167  030E                     	;# 
   168  030F                     	;# 
   169  0310                     	;# 
   170  0310                     	;# 
   171  0311                     	;# 
   172  0312                     	;# 
   173  0313                     	;# 
   174  0314                     	;# 
   175  0314                     	;# 
   176  0315                     	;# 
   177  0316                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  031C                     	;# 
   183  031C                     	;# 
   184  031D                     	;# 
   185  031E                     	;# 
   186  038C                     	;# 
   187  038C                     	;# 
   188  038D                     	;# 
   189  038E                     	;# 
   190  058C                     	;# 
   191  058C                     	;# 
   192  058D                     	;# 
   193  058E                     	;# 
   194  058F                     	;# 
   195  058F                     	;# 
   196  0590                     	;# 
   197  0591                     	;# 
   198  0592                     	;# 
   199  0593                     	;# 
   200  059C                     	;# 
   201  059C                     	;# 
   202  059D                     	;# 
   203  059D                     	;# 
   204  059E                     	;# 
   205  059F                     	;# 
   206  060C                     	;# 
   207  060D                     	;# 
   208  060E                     	;# 
   209  060F                     	;# 
   210  0610                     	;# 
   211  0611                     	;# 
   212  0612                     	;# 
   213  0613                     	;# 
   214  0614                     	;# 
   215  070C                     	;# 
   216  070D                     	;# 
   217  070E                     	;# 
   218  070F                     	;# 
   219  0710                     	;# 
   220  0711                     	;# 
   221  0712                     	;# 
   222  0713                     	;# 
   223  0716                     	;# 
   224  0717                     	;# 
   225  0718                     	;# 
   226  0719                     	;# 
   227  071A                     	;# 
   228  071B                     	;# 
   229  071C                     	;# 
   230  071D                     	;# 
   231  0796                     	;# 
   232  0797                     	;# 
   233  0798                     	;# 
   234  0799                     	;# 
   235  079A                     	;# 
   236  079B                     	;# 
   237  080C                     	;# 
   238  080D                     	;# 
   239  080E                     	;# 
   240  080F                     	;# 
   241  0810                     	;# 
   242  0811                     	;# 
   243  0812                     	;# 
   244  0813                     	;# 
   245  0814                     	;# 
   246  081A                     	;# 
   247  081A                     	;# 
   248  081B                     	;# 
   249  081C                     	;# 
   250  081C                     	;# 
   251  081D                     	;# 
   252  081E                     	;# 
   253  081F                     	;# 
   254  088C                     	;# 
   255  088D                     	;# 
   256  088E                     	;# 
   257  088F                     	;# 
   258  0890                     	;# 
   259  0891                     	;# 
   260  0892                     	;# 
   261  0893                     	;# 
   262  0895                     	;# 
   263  0896                     	;# 
   264  090C                     	;# 
   265  090E                     	;# 
   266  090F                     	;# 
   267  091F                     	;# 
   268  098F                     	;# 
   269  098F                     	;# 
   270  0990                     	;# 
   271  0991                     	;# 
   272  0992                     	;# 
   273  0993                     	;# 
   274  0994                     	;# 
   275  0995                     	;# 
   276  0996                     	;# 
   277  0997                     	;# 
   278  0A19                     	;# 
   279  0A19                     	;# 
   280  0A1A                     	;# 
   281  0A1A                     	;# 
   282  0A1B                     	;# 
   283  0A1B                     	;# 
   284  0A1B                     	;# 
   285  0A1C                     	;# 
   286  0A1C                     	;# 
   287  0A1D                     	;# 
   288  0A1D                     	;# 
   289  0A1E                     	;# 
   290  0A1E                     	;# 
   291  0A1F                     	;# 
   292  0A1F                     	;# 
   293  0A1F                     	;# 
   294  1E0F                     	;# 
   295  1E10                     	;# 
   296  1E11                     	;# 
   297  1E12                     	;# 
   298  1E13                     	;# 
   299  1E14                     	;# 
   300  1E15                     	;# 
   301  1E16                     	;# 
   302  1E17                     	;# 
   303  1E18                     	;# 
   304  1E19                     	;# 
   305  1E1A                     	;# 
   306  1E1B                     	;# 
   307  1E1C                     	;# 
   308  1E1D                     	;# 
   309  1E1E                     	;# 
   310  1E1F                     	;# 
   311  1E20                     	;# 
   312  1E21                     	;# 
   313  1E22                     	;# 
   314  1E23                     	;# 
   315  1E24                     	;# 
   316  1E25                     	;# 
   317  1E26                     	;# 
   318  1E27                     	;# 
   319  1E28                     	;# 
   320  1E29                     	;# 
   321  1E2A                     	;# 
   322  1E2B                     	;# 
   323  1E2C                     	;# 
   324  1E2D                     	;# 
   325  1E2E                     	;# 
   326  1E2F                     	;# 
   327  1E30                     	;# 
   328  1E31                     	;# 
   329  1E32                     	;# 
   330  1E33                     	;# 
   331  1E34                     	;# 
   332  1E35                     	;# 
   333  1E36                     	;# 
   334  1E37                     	;# 
   335  1E8F                     	;# 
   336  1E90                     	;# 
   337  1E91                     	;# 
   338  1E92                     	;# 
   339  1E93                     	;# 
   340  1E9C                     	;# 
   341  1EA1                     	;# 
   342  1EA2                     	;# 
   343  1EB1                     	;# 
   344  1EBB                     	;# 
   345  1EBC                     	;# 
   346  1EBD                     	;# 
   347  1EBE                     	;# 
   348  1EC3                     	;# 
   349  1EC5                     	;# 
   350  1EC6                     	;# 
   351  1EC7                     	;# 
   352  1ECB                     	;# 
   353  1ECC                     	;# 
   354  1ECD                     	;# 
   355  1ECE                     	;# 
   356  1F10                     	;# 
   357  1F11                     	;# 
   358  1F12                     	;# 
   359  1F13                     	;# 
   360  1F14                     	;# 
   361  1F15                     	;# 
   362  1F20                     	;# 
   363  1F21                     	;# 
   364  1F22                     	;# 
   365  1F23                     	;# 
   366  1F24                     	;# 
   367  1F25                     	;# 
   368  1F38                     	;# 
   369  1F39                     	;# 
   370  1F3A                     	;# 
   371  1F3B                     	;# 
   372  1F3C                     	;# 
   373  1F3D                     	;# 
   374  1F3E                     	;# 
   375  1F3F                     	;# 
   376  1F4E                     	;# 
   377  1F4F                     	;# 
   378  1F50                     	;# 
   379  1F51                     	;# 
   380  1F52                     	;# 
   381  1F53                     	;# 
   382  1F54                     	;# 
   383  1F55                     	;# 
   384  1FE4                     	;# 
   385  1FE5                     	;# 
   386  1FE6                     	;# 
   387  1FE7                     	;# 
   388  1FE8                     	;# 
   389  1FE8                     	;# 
   390  1FE9                     	;# 
   391  1FEA                     	;# 
   392  1FEA                     	;# 
   393  1FEB                     	;# 
   394  1FED                     	;# 
   395  1FEE                     	;# 
   396  1FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000E                     	;# 
   411  0012                     	;# 
   412  0014                     	;# 
   413  0018                     	;# 
   414  001A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  0119                     	;# 
   422  0119                     	;# 
   423  0119                     	;# 
   424  011A                     	;# 
   425  011A                     	;# 
   426  011A                     	;# 
   427  011B                     	;# 
   428  011B                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011C                     	;# 
   433  011C                     	;# 
   434  011C                     	;# 
   435  011D                     	;# 
   436  011D                     	;# 
   437  011D                     	;# 
   438  011E                     	;# 
   439  011E                     	;# 
   440  011E                     	;# 
   441  011F                     	;# 
   442  011F                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018E                     	;# 
   449  018F                     	;# 
   450  0190                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  020C                     	;# 
   454  020C                     	;# 
   455  020D                     	;# 
   456  020E                     	;# 
   457  020F                     	;# 
   458  020F                     	;# 
   459  0210                     	;# 
   460  0210                     	;# 
   461  0211                     	;# 
   462  0211                     	;# 
   463  028C                     	;# 
   464  028C                     	;# 
   465  028D                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  028F                     	;# 
   469  0290                     	;# 
   470  0291                     	;# 
   471  030C                     	;# 
   472  030C                     	;# 
   473  030D                     	;# 
   474  030E                     	;# 
   475  030F                     	;# 
   476  0310                     	;# 
   477  0310                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  0314                     	;# 
   482  0314                     	;# 
   483  0315                     	;# 
   484  0316                     	;# 
   485  0318                     	;# 
   486  0318                     	;# 
   487  0319                     	;# 
   488  031A                     	;# 
   489  031C                     	;# 
   490  031C                     	;# 
   491  031D                     	;# 
   492  031E                     	;# 
   493  038C                     	;# 
   494  038C                     	;# 
   495  038D                     	;# 
   496  038E                     	;# 
   497  058C                     	;# 
   498  058C                     	;# 
   499  058D                     	;# 
   500  058E                     	;# 
   501  058F                     	;# 
   502  058F                     	;# 
   503  0590                     	;# 
   504  0591                     	;# 
   505  0592                     	;# 
   506  0593                     	;# 
   507  059C                     	;# 
   508  059C                     	;# 
   509  059D                     	;# 
   510  059D                     	;# 
   511  059E                     	;# 
   512  059F                     	;# 
   513  060C                     	;# 
   514  060D                     	;# 
   515  060E                     	;# 
   516  060F                     	;# 
   517  0610                     	;# 
   518  0611                     	;# 
   519  0612                     	;# 
   520  0613                     	;# 
   521  0614                     	;# 
   522  070C                     	;# 
   523  070D                     	;# 
   524  070E                     	;# 
   525  070F                     	;# 
   526  0710                     	;# 
   527  0711                     	;# 
   528  0712                     	;# 
   529  0713                     	;# 
   530  0716                     	;# 
   531  0717                     	;# 
   532  0718                     	;# 
   533  0719                     	;# 
   534  071A                     	;# 
   535  071B                     	;# 
   536  071C                     	;# 
   537  071D                     	;# 
   538  0796                     	;# 
   539  0797                     	;# 
   540  0798                     	;# 
   541  0799                     	;# 
   542  079A                     	;# 
   543  079B                     	;# 
   544  080C                     	;# 
   545  080D                     	;# 
   546  080E                     	;# 
   547  080F                     	;# 
   548  0810                     	;# 
   549  0811                     	;# 
   550  0812                     	;# 
   551  0813                     	;# 
   552  0814                     	;# 
   553  081A                     	;# 
   554  081A                     	;# 
   555  081B                     	;# 
   556  081C                     	;# 
   557  081C                     	;# 
   558  081D                     	;# 
   559  081E                     	;# 
   560  081F                     	;# 
   561  088C                     	;# 
   562  088D                     	;# 
   563  088E                     	;# 
   564  088F                     	;# 
   565  0890                     	;# 
   566  0891                     	;# 
   567  0892                     	;# 
   568  0893                     	;# 
   569  0895                     	;# 
   570  0896                     	;# 
   571  090C                     	;# 
   572  090E                     	;# 
   573  090F                     	;# 
   574  091F                     	;# 
   575  098F                     	;# 
   576  098F                     	;# 
   577  0990                     	;# 
   578  0991                     	;# 
   579  0992                     	;# 
   580  0993                     	;# 
   581  0994                     	;# 
   582  0995                     	;# 
   583  0996                     	;# 
   584  0997                     	;# 
   585  0A19                     	;# 
   586  0A19                     	;# 
   587  0A1A                     	;# 
   588  0A1A                     	;# 
   589  0A1B                     	;# 
   590  0A1B                     	;# 
   591  0A1B                     	;# 
   592  0A1C                     	;# 
   593  0A1C                     	;# 
   594  0A1D                     	;# 
   595  0A1D                     	;# 
   596  0A1E                     	;# 
   597  0A1E                     	;# 
   598  0A1F                     	;# 
   599  0A1F                     	;# 
   600  0A1F                     	;# 
   601  1E0F                     	;# 
   602  1E10                     	;# 
   603  1E11                     	;# 
   604  1E12                     	;# 
   605  1E13                     	;# 
   606  1E14                     	;# 
   607  1E15                     	;# 
   608  1E16                     	;# 
   609  1E17                     	;# 
   610  1E18                     	;# 
   611  1E19                     	;# 
   612  1E1A                     	;# 
   613  1E1B                     	;# 
   614  1E1C                     	;# 
   615  1E1D                     	;# 
   616  1E1E                     	;# 
   617  1E1F                     	;# 
   618  1E20                     	;# 
   619  1E21                     	;# 
   620  1E22                     	;# 
   621  1E23                     	;# 
   622  1E24                     	;# 
   623  1E25                     	;# 
   624  1E26                     	;# 
   625  1E27                     	;# 
   626  1E28                     	;# 
   627  1E29                     	;# 
   628  1E2A                     	;# 
   629  1E2B                     	;# 
   630  1E2C                     	;# 
   631  1E2D                     	;# 
   632  1E2E                     	;# 
   633  1E2F                     	;# 
   634  1E30                     	;# 
   635  1E31                     	;# 
   636  1E32                     	;# 
   637  1E33                     	;# 
   638  1E34                     	;# 
   639  1E35                     	;# 
   640  1E36                     	;# 
   641  1E37                     	;# 
   642  1E8F                     	;# 
   643  1E90                     	;# 
   644  1E91                     	;# 
   645  1E92                     	;# 
   646  1E93                     	;# 
   647  1E9C                     	;# 
   648  1EA1                     	;# 
   649  1EA2                     	;# 
   650  1EB1                     	;# 
   651  1EBB                     	;# 
   652  1EBC                     	;# 
   653  1EBD                     	;# 
   654  1EBE                     	;# 
   655  1EC3                     	;# 
   656  1EC5                     	;# 
   657  1EC6                     	;# 
   658  1EC7                     	;# 
   659  1ECB                     	;# 
   660  1ECC                     	;# 
   661  1ECD                     	;# 
   662  1ECE                     	;# 
   663  1F10                     	;# 
   664  1F11                     	;# 
   665  1F12                     	;# 
   666  1F13                     	;# 
   667  1F14                     	;# 
   668  1F15                     	;# 
   669  1F20                     	;# 
   670  1F21                     	;# 
   671  1F22                     	;# 
   672  1F23                     	;# 
   673  1F24                     	;# 
   674  1F25                     	;# 
   675  1F38                     	;# 
   676  1F39                     	;# 
   677  1F3A                     	;# 
   678  1F3B                     	;# 
   679  1F3C                     	;# 
   680  1F3D                     	;# 
   681  1F3E                     	;# 
   682  1F3F                     	;# 
   683  1F4E                     	;# 
   684  1F4F                     	;# 
   685  1F50                     	;# 
   686  1F51                     	;# 
   687  1F52                     	;# 
   688  1F53                     	;# 
   689  1F54                     	;# 
   690  1F55                     	;# 
   691  1FE4                     	;# 
   692  1FE5                     	;# 
   693  1FE6                     	;# 
   694  1FE7                     	;# 
   695  1FE8                     	;# 
   696  1FE8                     	;# 
   697  1FE9                     	;# 
   698  1FEA                     	;# 
   699  1FEA                     	;# 
   700  1FEB                     	;# 
   701  1FED                     	;# 
   702  1FEE                     	;# 
   703  1FEF                     	;# 
   704  0000                     	;# 
   705  0001                     	;# 
   706  0002                     	;# 
   707  0003                     	;# 
   708  0004                     	;# 
   709  0005                     	;# 
   710  0006                     	;# 
   711  0007                     	;# 
   712  0008                     	;# 
   713  0009                     	;# 
   714  000A                     	;# 
   715  000B                     	;# 
   716  000C                     	;# 
   717  000E                     	;# 
   718  0012                     	;# 
   719  0014                     	;# 
   720  0018                     	;# 
   721  001A                     	;# 
   722  009B                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  009F                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011A                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011C                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  020C                     	;# 
   761  020C                     	;# 
   762  020D                     	;# 
   763  020E                     	;# 
   764  020F                     	;# 
   765  020F                     	;# 
   766  0210                     	;# 
   767  0210                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  028C                     	;# 
   771  028C                     	;# 
   772  028D                     	;# 
   773  028D                     	;# 
   774  028E                     	;# 
   775  028F                     	;# 
   776  0290                     	;# 
   777  0291                     	;# 
   778  030C                     	;# 
   779  030C                     	;# 
   780  030D                     	;# 
   781  030E                     	;# 
   782  030F                     	;# 
   783  0310                     	;# 
   784  0310                     	;# 
   785  0311                     	;# 
   786  0312                     	;# 
   787  0313                     	;# 
   788  0314                     	;# 
   789  0314                     	;# 
   790  0315                     	;# 
   791  0316                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  031C                     	;# 
   797  031C                     	;# 
   798  031D                     	;# 
   799  031E                     	;# 
   800  038C                     	;# 
   801  038C                     	;# 
   802  038D                     	;# 
   803  038E                     	;# 
   804  058C                     	;# 
   805  058C                     	;# 
   806  058D                     	;# 
   807  058E                     	;# 
   808  058F                     	;# 
   809  058F                     	;# 
   810  0590                     	;# 
   811  0591                     	;# 
   812  0592                     	;# 
   813  0593                     	;# 
   814  059C                     	;# 
   815  059C                     	;# 
   816  059D                     	;# 
   817  059D                     	;# 
   818  059E                     	;# 
   819  059F                     	;# 
   820  060C                     	;# 
   821  060D                     	;# 
   822  060E                     	;# 
   823  060F                     	;# 
   824  0610                     	;# 
   825  0611                     	;# 
   826  0612                     	;# 
   827  0613                     	;# 
   828  0614                     	;# 
   829  070C                     	;# 
   830  070D                     	;# 
   831  070E                     	;# 
   832  070F                     	;# 
   833  0710                     	;# 
   834  0711                     	;# 
   835  0712                     	;# 
   836  0713                     	;# 
   837  0716                     	;# 
   838  0717                     	;# 
   839  0718                     	;# 
   840  0719                     	;# 
   841  071A                     	;# 
   842  071B                     	;# 
   843  071C                     	;# 
   844  071D                     	;# 
   845  0796                     	;# 
   846  0797                     	;# 
   847  0798                     	;# 
   848  0799                     	;# 
   849  079A                     	;# 
   850  079B                     	;# 
   851  080C                     	;# 
   852  080D                     	;# 
   853  080E                     	;# 
   854  080F                     	;# 
   855  0810                     	;# 
   856  0811                     	;# 
   857  0812                     	;# 
   858  0813                     	;# 
   859  0814                     	;# 
   860  081A                     	;# 
   861  081A                     	;# 
   862  081B                     	;# 
   863  081C                     	;# 
   864  081C                     	;# 
   865  081D                     	;# 
   866  081E                     	;# 
   867  081F                     	;# 
   868  088C                     	;# 
   869  088D                     	;# 
   870  088E                     	;# 
   871  088F                     	;# 
   872  0890                     	;# 
   873  0891                     	;# 
   874  0892                     	;# 
   875  0893                     	;# 
   876  0895                     	;# 
   877  0896                     	;# 
   878  090C                     	;# 
   879  090E                     	;# 
   880  090F                     	;# 
   881  091F                     	;# 
   882  098F                     	;# 
   883  098F                     	;# 
   884  0990                     	;# 
   885  0991                     	;# 
   886  0992                     	;# 
   887  0993                     	;# 
   888  0994                     	;# 
   889  0995                     	;# 
   890  0996                     	;# 
   891  0997                     	;# 
   892  0A19                     	;# 
   893  0A19                     	;# 
   894  0A1A                     	;# 
   895  0A1A                     	;# 
   896  0A1B                     	;# 
   897  0A1B                     	;# 
   898  0A1B                     	;# 
   899  0A1C                     	;# 
   900  0A1C                     	;# 
   901  0A1D                     	;# 
   902  0A1D                     	;# 
   903  0A1E                     	;# 
   904  0A1E                     	;# 
   905  0A1F                     	;# 
   906  0A1F                     	;# 
   907  0A1F                     	;# 
   908  1E0F                     	;# 
   909  1E10                     	;# 
   910  1E11                     	;# 
   911  1E12                     	;# 
   912  1E13                     	;# 
   913  1E14                     	;# 
   914  1E15                     	;# 
   915  1E16                     	;# 
   916  1E17                     	;# 
   917  1E18                     	;# 
   918  1E19                     	;# 
   919  1E1A                     	;# 
   920  1E1B                     	;# 
   921  1E1C                     	;# 
   922  1E1D                     	;# 
   923  1E1E                     	;# 
   924  1E1F                     	;# 
   925  1E20                     	;# 
   926  1E21                     	;# 
   927  1E22                     	;# 
   928  1E23                     	;# 
   929  1E24                     	;# 
   930  1E25                     	;# 
   931  1E26                     	;# 
   932  1E27                     	;# 
   933  1E28                     	;# 
   934  1E29                     	;# 
   935  1E2A                     	;# 
   936  1E2B                     	;# 
   937  1E2C                     	;# 
   938  1E2D                     	;# 
   939  1E2E                     	;# 
   940  1E2F                     	;# 
   941  1E30                     	;# 
   942  1E31                     	;# 
   943  1E32                     	;# 
   944  1E33                     	;# 
   945  1E34                     	;# 
   946  1E35                     	;# 
   947  1E36                     	;# 
   948  1E37                     	;# 
   949  1E8F                     	;# 
   950  1E90                     	;# 
   951  1E91                     	;# 
   952  1E92                     	;# 
   953  1E93                     	;# 
   954  1E9C                     	;# 
   955  1EA1                     	;# 
   956  1EA2                     	;# 
   957  1EB1                     	;# 
   958  1EBB                     	;# 
   959  1EBC                     	;# 
   960  1EBD                     	;# 
   961  1EBE                     	;# 
   962  1EC3                     	;# 
   963  1EC5                     	;# 
   964  1EC6                     	;# 
   965  1EC7                     	;# 
   966  1ECB                     	;# 
   967  1ECC                     	;# 
   968  1ECD                     	;# 
   969  1ECE                     	;# 
   970  1F10                     	;# 
   971  1F11                     	;# 
   972  1F12                     	;# 
   973  1F13                     	;# 
   974  1F14                     	;# 
   975  1F15                     	;# 
   976  1F20                     	;# 
   977  1F21                     	;# 
   978  1F22                     	;# 
   979  1F23                     	;# 
   980  1F24                     	;# 
   981  1F25                     	;# 
   982  1F38                     	;# 
   983  1F39                     	;# 
   984  1F3A                     	;# 
   985  1F3B                     	;# 
   986  1F3C                     	;# 
   987  1F3D                     	;# 
   988  1F3E                     	;# 
   989  1F3F                     	;# 
   990  1F4E                     	;# 
   991  1F4F                     	;# 
   992  1F50                     	;# 
   993  1F51                     	;# 
   994  1F52                     	;# 
   995  1F53                     	;# 
   996  1F54                     	;# 
   997  1F55                     	;# 
   998  1FE4                     	;# 
   999  1FE5                     	;# 
  1000  1FE6                     	;# 
  1001  1FE7                     	;# 
  1002  1FE8                     	;# 
  1003  1FE8                     	;# 
  1004  1FE9                     	;# 
  1005  1FEA                     	;# 
  1006  1FEA                     	;# 
  1007  1FEB                     	;# 
  1008  1FED                     	;# 
  1009  1FEE                     	;# 
  1010  1FEF                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000E                     	;# 
  1025  0012                     	;# 
  1026  0014                     	;# 
  1027  0018                     	;# 
  1028  001A                     	;# 
  1029  009B                     	;# 
  1030  009B                     	;# 
  1031  009C                     	;# 
  1032  009D                     	;# 
  1033  009E                     	;# 
  1034  009F                     	;# 
  1035  0119                     	;# 
  1036  0119                     	;# 
  1037  0119                     	;# 
  1038  011A                     	;# 
  1039  011A                     	;# 
  1040  011A                     	;# 
  1041  011B                     	;# 
  1042  011B                     	;# 
  1043  011B                     	;# 
  1044  011B                     	;# 
  1045  011B                     	;# 
  1046  011C                     	;# 
  1047  011C                     	;# 
  1048  011C                     	;# 
  1049  011D                     	;# 
  1050  011D                     	;# 
  1051  011D                     	;# 
  1052  011E                     	;# 
  1053  011E                     	;# 
  1054  011E                     	;# 
  1055  011F                     	;# 
  1056  011F                     	;# 
  1057  011F                     	;# 
  1058  011F                     	;# 
  1059  011F                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  018E                     	;# 
  1063  018F                     	;# 
  1064  0190                     	;# 
  1065  0191                     	;# 
  1066  0192                     	;# 
  1067  020C                     	;# 
  1068  020C                     	;# 
  1069  020D                     	;# 
  1070  020E                     	;# 
  1071  020F                     	;# 
  1072  020F                     	;# 
  1073  0210                     	;# 
  1074  0210                     	;# 
  1075  0211                     	;# 
  1076  0211                     	;# 
  1077  028C                     	;# 
  1078  028C                     	;# 
  1079  028D                     	;# 
  1080  028D                     	;# 
  1081  028E                     	;# 
  1082  028F                     	;# 
  1083  0290                     	;# 
  1084  0291                     	;# 
  1085  030C                     	;# 
  1086  030C                     	;# 
  1087  030D                     	;# 
  1088  030E                     	;# 
  1089  030F                     	;# 
  1090  0310                     	;# 
  1091  0310                     	;# 
  1092  0311                     	;# 
  1093  0312                     	;# 
  1094  0313                     	;# 
  1095  0314                     	;# 
  1096  0314                     	;# 
  1097  0315                     	;# 
  1098  0316                     	;# 
  1099  0318                     	;# 
  1100  0318                     	;# 
  1101  0319                     	;# 
  1102  031A                     	;# 
  1103  031C                     	;# 
  1104  031C                     	;# 
  1105  031D                     	;# 
  1106  031E                     	;# 
  1107  038C                     	;# 
  1108  038C                     	;# 
  1109  038D                     	;# 
  1110  038E                     	;# 
  1111  058C                     	;# 
  1112  058C                     	;# 
  1113  058D                     	;# 
  1114  058E                     	;# 
  1115  058F                     	;# 
  1116  058F                     	;# 
  1117  0590                     	;# 
  1118  0591                     	;# 
  1119  0592                     	;# 
  1120  0593                     	;# 
  1121  059C                     	;# 
  1122  059C                     	;# 
  1123  059D                     	;# 
  1124  059D                     	;# 
  1125  059E                     	;# 
  1126  059F                     	;# 
  1127  060C                     	;# 
  1128  060D                     	;# 
  1129  060E                     	;# 
  1130  060F                     	;# 
  1131  0610                     	;# 
  1132  0611                     	;# 
  1133  0612                     	;# 
  1134  0613                     	;# 
  1135  0614                     	;# 
  1136  070C                     	;# 
  1137  070D                     	;# 
  1138  070E                     	;# 
  1139  070F                     	;# 
  1140  0710                     	;# 
  1141  0711                     	;# 
  1142  0712                     	;# 
  1143  0713                     	;# 
  1144  0716                     	;# 
  1145  0717                     	;# 
  1146  0718                     	;# 
  1147  0719                     	;# 
  1148  071A                     	;# 
  1149  071B                     	;# 
  1150  071C                     	;# 
  1151  071D                     	;# 
  1152  0796                     	;# 
  1153  0797                     	;# 
  1154  0798                     	;# 
  1155  0799                     	;# 
  1156  079A                     	;# 
  1157  079B                     	;# 
  1158  080C                     	;# 
  1159  080D                     	;# 
  1160  080E                     	;# 
  1161  080F                     	;# 
  1162  0810                     	;# 
  1163  0811                     	;# 
  1164  0812                     	;# 
  1165  0813                     	;# 
  1166  0814                     	;# 
  1167  081A                     	;# 
  1168  081A                     	;# 
  1169  081B                     	;# 
  1170  081C                     	;# 
  1171  081C                     	;# 
  1172  081D                     	;# 
  1173  081E                     	;# 
  1174  081F                     	;# 
  1175  088C                     	;# 
  1176  088D                     	;# 
  1177  088E                     	;# 
  1178  088F                     	;# 
  1179  0890                     	;# 
  1180  0891                     	;# 
  1181  0892                     	;# 
  1182  0893                     	;# 
  1183  0895                     	;# 
  1184  0896                     	;# 
  1185  090C                     	;# 
  1186  090E                     	;# 
  1187  090F                     	;# 
  1188  091F                     	;# 
  1189  098F                     	;# 
  1190  098F                     	;# 
  1191  0990                     	;# 
  1192  0991                     	;# 
  1193  0992                     	;# 
  1194  0993                     	;# 
  1195  0994                     	;# 
  1196  0995                     	;# 
  1197  0996                     	;# 
  1198  0997                     	;# 
  1199  0A19                     	;# 
  1200  0A19                     	;# 
  1201  0A1A                     	;# 
  1202  0A1A                     	;# 
  1203  0A1B                     	;# 
  1204  0A1B                     	;# 
  1205  0A1B                     	;# 
  1206  0A1C                     	;# 
  1207  0A1C                     	;# 
  1208  0A1D                     	;# 
  1209  0A1D                     	;# 
  1210  0A1E                     	;# 
  1211  0A1E                     	;# 
  1212  0A1F                     	;# 
  1213  0A1F                     	;# 
  1214  0A1F                     	;# 
  1215  1E0F                     	;# 
  1216  1E10                     	;# 
  1217  1E11                     	;# 
  1218  1E12                     	;# 
  1219  1E13                     	;# 
  1220  1E14                     	;# 
  1221  1E15                     	;# 
  1222  1E16                     	;# 
  1223  1E17                     	;# 
  1224  1E18                     	;# 
  1225  1E19                     	;# 
  1226  1E1A                     	;# 
  1227  1E1B                     	;# 
  1228  1E1C                     	;# 
  1229  1E1D                     	;# 
  1230  1E1E                     	;# 
  1231  1E1F                     	;# 
  1232  1E20                     	;# 
  1233  1E21                     	;# 
  1234  1E22                     	;# 
  1235  1E23                     	;# 
  1236  1E24                     	;# 
  1237  1E25                     	;# 
  1238  1E26                     	;# 
  1239  1E27                     	;# 
  1240  1E28                     	;# 
  1241  1E29                     	;# 
  1242  1E2A                     	;# 
  1243  1E2B                     	;# 
  1244  1E2C                     	;# 
  1245  1E2D                     	;# 
  1246  1E2E                     	;# 
  1247  1E2F                     	;# 
  1248  1E30                     	;# 
  1249  1E31                     	;# 
  1250  1E32                     	;# 
  1251  1E33                     	;# 
  1252  1E34                     	;# 
  1253  1E35                     	;# 
  1254  1E36                     	;# 
  1255  1E37                     	;# 
  1256  1E8F                     	;# 
  1257  1E90                     	;# 
  1258  1E91                     	;# 
  1259  1E92                     	;# 
  1260  1E93                     	;# 
  1261  1E9C                     	;# 
  1262  1EA1                     	;# 
  1263  1EA2                     	;# 
  1264  1EB1                     	;# 
  1265  1EBB                     	;# 
  1266  1EBC                     	;# 
  1267  1EBD                     	;# 
  1268  1EBE                     	;# 
  1269  1EC3                     	;# 
  1270  1EC5                     	;# 
  1271  1EC6                     	;# 
  1272  1EC7                     	;# 
  1273  1ECB                     	;# 
  1274  1ECC                     	;# 
  1275  1ECD                     	;# 
  1276  1ECE                     	;# 
  1277  1F10                     	;# 
  1278  1F11                     	;# 
  1279  1F12                     	;# 
  1280  1F13                     	;# 
  1281  1F14                     	;# 
  1282  1F15                     	;# 
  1283  1F20                     	;# 
  1284  1F21                     	;# 
  1285  1F22                     	;# 
  1286  1F23                     	;# 
  1287  1F24                     	;# 
  1288  1F25                     	;# 
  1289  1F38                     	;# 
  1290  1F39                     	;# 
  1291  1F3A                     	;# 
  1292  1F3B                     	;# 
  1293  1F3C                     	;# 
  1294  1F3D                     	;# 
  1295  1F3E                     	;# 
  1296  1F3F                     	;# 
  1297  1F4E                     	;# 
  1298  1F4F                     	;# 
  1299  1F50                     	;# 
  1300  1F51                     	;# 
  1301  1F52                     	;# 
  1302  1F53                     	;# 
  1303  1F54                     	;# 
  1304  1F55                     	;# 
  1305  1FE4                     	;# 
  1306  1FE5                     	;# 
  1307  1FE6                     	;# 
  1308  1FE7                     	;# 
  1309  1FE8                     	;# 
  1310  1FE8                     	;# 
  1311  1FE9                     	;# 
  1312  1FEA                     	;# 
  1313  1FEA                     	;# 
  1314  1FEB                     	;# 
  1315  1FED                     	;# 
  1316  1FEE                     	;# 
  1317  1FEF                     	;# 
  1318  0000                     	;# 
  1319  0001                     	;# 
  1320  0002                     	;# 
  1321  0003                     	;# 
  1322  0004                     	;# 
  1323  0005                     	;# 
  1324  0006                     	;# 
  1325  0007                     	;# 
  1326  0008                     	;# 
  1327  0009                     	;# 
  1328  000A                     	;# 
  1329  000B                     	;# 
  1330  000C                     	;# 
  1331  000E                     	;# 
  1332  0012                     	;# 
  1333  0014                     	;# 
  1334  0018                     	;# 
  1335  001A                     	;# 
  1336  009B                     	;# 
  1337  009B                     	;# 
  1338  009C                     	;# 
  1339  009D                     	;# 
  1340  009E                     	;# 
  1341  009F                     	;# 
  1342  0119                     	;# 
  1343  0119                     	;# 
  1344  0119                     	;# 
  1345  011A                     	;# 
  1346  011A                     	;# 
  1347  011A                     	;# 
  1348  011B                     	;# 
  1349  011B                     	;# 
  1350  011B                     	;# 
  1351  011B                     	;# 
  1352  011B                     	;# 
  1353  011C                     	;# 
  1354  011C                     	;# 
  1355  011C                     	;# 
  1356  011D                     	;# 
  1357  011D                     	;# 
  1358  011D                     	;# 
  1359  011E                     	;# 
  1360  011E                     	;# 
  1361  011E                     	;# 
  1362  011F                     	;# 
  1363  011F                     	;# 
  1364  011F                     	;# 
  1365  011F                     	;# 
  1366  011F                     	;# 
  1367  018C                     	;# 
  1368  018D                     	;# 
  1369  018E                     	;# 
  1370  018F                     	;# 
  1371  0190                     	;# 
  1372  0191                     	;# 
  1373  0192                     	;# 
  1374  020C                     	;# 
  1375  020C                     	;# 
  1376  020D                     	;# 
  1377  020E                     	;# 
  1378  020F                     	;# 
  1379  020F                     	;# 
  1380  0210                     	;# 
  1381  0210                     	;# 
  1382  0211                     	;# 
  1383  0211                     	;# 
  1384  028C                     	;# 
  1385  028C                     	;# 
  1386  028D                     	;# 
  1387  028D                     	;# 
  1388  028E                     	;# 
  1389  028F                     	;# 
  1390  0290                     	;# 
  1391  0291                     	;# 
  1392  030C                     	;# 
  1393  030C                     	;# 
  1394  030D                     	;# 
  1395  030E                     	;# 
  1396  030F                     	;# 
  1397  0310                     	;# 
  1398  0310                     	;# 
  1399  0311                     	;# 
  1400  0312                     	;# 
  1401  0313                     	;# 
  1402  0314                     	;# 
  1403  0314                     	;# 
  1404  0315                     	;# 
  1405  0316                     	;# 
  1406  0318                     	;# 
  1407  0318                     	;# 
  1408  0319                     	;# 
  1409  031A                     	;# 
  1410  031C                     	;# 
  1411  031C                     	;# 
  1412  031D                     	;# 
  1413  031E                     	;# 
  1414  038C                     	;# 
  1415  038C                     	;# 
  1416  038D                     	;# 
  1417  038E                     	;# 
  1418  058C                     	;# 
  1419  058C                     	;# 
  1420  058D                     	;# 
  1421  058E                     	;# 
  1422  058F                     	;# 
  1423  058F                     	;# 
  1424  0590                     	;# 
  1425  0591                     	;# 
  1426  0592                     	;# 
  1427  0593                     	;# 
  1428  059C                     	;# 
  1429  059C                     	;# 
  1430  059D                     	;# 
  1431  059D                     	;# 
  1432  059E                     	;# 
  1433  059F                     	;# 
  1434  060C                     	;# 
  1435  060D                     	;# 
  1436  060E                     	;# 
  1437  060F                     	;# 
  1438  0610                     	;# 
  1439  0611                     	;# 
  1440  0612                     	;# 
  1441  0613                     	;# 
  1442  0614                     	;# 
  1443  070C                     	;# 
  1444  070D                     	;# 
  1445  070E                     	;# 
  1446  070F                     	;# 
  1447  0710                     	;# 
  1448  0711                     	;# 
  1449  0712                     	;# 
  1450  0713                     	;# 
  1451  0716                     	;# 
  1452  0717                     	;# 
  1453  0718                     	;# 
  1454  0719                     	;# 
  1455  071A                     	;# 
  1456  071B                     	;# 
  1457  071C                     	;# 
  1458  071D                     	;# 
  1459  0796                     	;# 
  1460  0797                     	;# 
  1461  0798                     	;# 
  1462  0799                     	;# 
  1463  079A                     	;# 
  1464  079B                     	;# 
  1465  080C                     	;# 
  1466  080D                     	;# 
  1467  080E                     	;# 
  1468  080F                     	;# 
  1469  0810                     	;# 
  1470  0811                     	;# 
  1471  0812                     	;# 
  1472  0813                     	;# 
  1473  0814                     	;# 
  1474  081A                     	;# 
  1475  081A                     	;# 
  1476  081B                     	;# 
  1477  081C                     	;# 
  1478  081C                     	;# 
  1479  081D                     	;# 
  1480  081E                     	;# 
  1481  081F                     	;# 
  1482  088C                     	;# 
  1483  088D                     	;# 
  1484  088E                     	;# 
  1485  088F                     	;# 
  1486  0890                     	;# 
  1487  0891                     	;# 
  1488  0892                     	;# 
  1489  0893                     	;# 
  1490  0895                     	;# 
  1491  0896                     	;# 
  1492  090C                     	;# 
  1493  090E                     	;# 
  1494  090F                     	;# 
  1495  091F                     	;# 
  1496  098F                     	;# 
  1497  098F                     	;# 
  1498  0990                     	;# 
  1499  0991                     	;# 
  1500  0992                     	;# 
  1501  0993                     	;# 
  1502  0994                     	;# 
  1503  0995                     	;# 
  1504  0996                     	;# 
  1505  0997                     	;# 
  1506  0A19                     	;# 
  1507  0A19                     	;# 
  1508  0A1A                     	;# 
  1509  0A1A                     	;# 
  1510  0A1B                     	;# 
  1511  0A1B                     	;# 
  1512  0A1B                     	;# 
  1513  0A1C                     	;# 
  1514  0A1C                     	;# 
  1515  0A1D                     	;# 
  1516  0A1D                     	;# 
  1517  0A1E                     	;# 
  1518  0A1E                     	;# 
  1519  0A1F                     	;# 
  1520  0A1F                     	;# 
  1521  0A1F                     	;# 
  1522  1E0F                     	;# 
  1523  1E10                     	;# 
  1524  1E11                     	;# 
  1525  1E12                     	;# 
  1526  1E13                     	;# 
  1527  1E14                     	;# 
  1528  1E15                     	;# 
  1529  1E16                     	;# 
  1530  1E17                     	;# 
  1531  1E18                     	;# 
  1532  1E19                     	;# 
  1533  1E1A                     	;# 
  1534  1E1B                     	;# 
  1535  1E1C                     	;# 
  1536  1E1D                     	;# 
  1537  1E1E                     	;# 
  1538  1E1F                     	;# 
  1539  1E20                     	;# 
  1540  1E21                     	;# 
  1541  1E22                     	;# 
  1542  1E23                     	;# 
  1543  1E24                     	;# 
  1544  1E25                     	;# 
  1545  1E26                     	;# 
  1546  1E27                     	;# 
  1547  1E28                     	;# 
  1548  1E29                     	;# 
  1549  1E2A                     	;# 
  1550  1E2B                     	;# 
  1551  1E2C                     	;# 
  1552  1E2D                     	;# 
  1553  1E2E                     	;# 
  1554  1E2F                     	;# 
  1555  1E30                     	;# 
  1556  1E31                     	;# 
  1557  1E32                     	;# 
  1558  1E33                     	;# 
  1559  1E34                     	;# 
  1560  1E35                     	;# 
  1561  1E36                     	;# 
  1562  1E37                     	;# 
  1563  1E8F                     	;# 
  1564  1E90                     	;# 
  1565  1E91                     	;# 
  1566  1E92                     	;# 
  1567  1E93                     	;# 
  1568  1E9C                     	;# 
  1569  1EA1                     	;# 
  1570  1EA2                     	;# 
  1571  1EB1                     	;# 
  1572  1EBB                     	;# 
  1573  1EBC                     	;# 
  1574  1EBD                     	;# 
  1575  1EBE                     	;# 
  1576  1EC3                     	;# 
  1577  1EC5                     	;# 
  1578  1EC6                     	;# 
  1579  1EC7                     	;# 
  1580  1ECB                     	;# 
  1581  1ECC                     	;# 
  1582  1ECD                     	;# 
  1583  1ECE                     	;# 
  1584  1F10                     	;# 
  1585  1F11                     	;# 
  1586  1F12                     	;# 
  1587  1F13                     	;# 
  1588  1F14                     	;# 
  1589  1F15                     	;# 
  1590  1F20                     	;# 
  1591  1F21                     	;# 
  1592  1F22                     	;# 
  1593  1F23                     	;# 
  1594  1F24                     	;# 
  1595  1F25                     	;# 
  1596  1F38                     	;# 
  1597  1F39                     	;# 
  1598  1F3A                     	;# 
  1599  1F3B                     	;# 
  1600  1F3C                     	;# 
  1601  1F3D                     	;# 
  1602  1F3E                     	;# 
  1603  1F3F                     	;# 
  1604  1F4E                     	;# 
  1605  1F4F                     	;# 
  1606  1F50                     	;# 
  1607  1F51                     	;# 
  1608  1F52                     	;# 
  1609  1F53                     	;# 
  1610  1F54                     	;# 
  1611  1F55                     	;# 
  1612  1FE4                     	;# 
  1613  1FE5                     	;# 
  1614  1FE6                     	;# 
  1615  1FE7                     	;# 
  1616  1FE8                     	;# 
  1617  1FE8                     	;# 
  1618  1FE9                     	;# 
  1619  1FEA                     	;# 
  1620  1FEA                     	;# 
  1621  1FEB                     	;# 
  1622  1FED                     	;# 
  1623  1FEE                     	;# 
  1624  1FEF                     	;# 
  1625  0000                     	;# 
  1626  0001                     	;# 
  1627  0002                     	;# 
  1628  0003                     	;# 
  1629  0004                     	;# 
  1630  0005                     	;# 
  1631  0006                     	;# 
  1632  0007                     	;# 
  1633  0008                     	;# 
  1634  0009                     	;# 
  1635  000A                     	;# 
  1636  000B                     	;# 
  1637  000C                     	;# 
  1638  000E                     	;# 
  1639  0012                     	;# 
  1640  0014                     	;# 
  1641  0018                     	;# 
  1642  001A                     	;# 
  1643  009B                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  009F                     	;# 
  1649  0119                     	;# 
  1650  0119                     	;# 
  1651  0119                     	;# 
  1652  011A                     	;# 
  1653  011A                     	;# 
  1654  011A                     	;# 
  1655  011B                     	;# 
  1656  011B                     	;# 
  1657  011B                     	;# 
  1658  011B                     	;# 
  1659  011B                     	;# 
  1660  011C                     	;# 
  1661  011C                     	;# 
  1662  011C                     	;# 
  1663  011D                     	;# 
  1664  011D                     	;# 
  1665  011D                     	;# 
  1666  011E                     	;# 
  1667  011E                     	;# 
  1668  011E                     	;# 
  1669  011F                     	;# 
  1670  011F                     	;# 
  1671  011F                     	;# 
  1672  011F                     	;# 
  1673  011F                     	;# 
  1674  018C                     	;# 
  1675  018D                     	;# 
  1676  018E                     	;# 
  1677  018F                     	;# 
  1678  0190                     	;# 
  1679  0191                     	;# 
  1680  0192                     	;# 
  1681  020C                     	;# 
  1682  020C                     	;# 
  1683  020D                     	;# 
  1684  020E                     	;# 
  1685  020F                     	;# 
  1686  020F                     	;# 
  1687  0210                     	;# 
  1688  0210                     	;# 
  1689  0211                     	;# 
  1690  0211                     	;# 
  1691  028C                     	;# 
  1692  028C                     	;# 
  1693  028D                     	;# 
  1694  028D                     	;# 
  1695  028E                     	;# 
  1696  028F                     	;# 
  1697  0290                     	;# 
  1698  0291                     	;# 
  1699  030C                     	;# 
  1700  030C                     	;# 
  1701  030D                     	;# 
  1702  030E                     	;# 
  1703  030F                     	;# 
  1704  0310                     	;# 
  1705  0310                     	;# 
  1706  0311                     	;# 
  1707  0312                     	;# 
  1708  0313                     	;# 
  1709  0314                     	;# 
  1710  0314                     	;# 
  1711  0315                     	;# 
  1712  0316                     	;# 
  1713  0318                     	;# 
  1714  0318                     	;# 
  1715  0319                     	;# 
  1716  031A                     	;# 
  1717  031C                     	;# 
  1718  031C                     	;# 
  1719  031D                     	;# 
  1720  031E                     	;# 
  1721  038C                     	;# 
  1722  038C                     	;# 
  1723  038D                     	;# 
  1724  038E                     	;# 
  1725  058C                     	;# 
  1726  058C                     	;# 
  1727  058D                     	;# 
  1728  058E                     	;# 
  1729  058F                     	;# 
  1730  058F                     	;# 
  1731  0590                     	;# 
  1732  0591                     	;# 
  1733  0592                     	;# 
  1734  0593                     	;# 
  1735  059C                     	;# 
  1736  059C                     	;# 
  1737  059D                     	;# 
  1738  059D                     	;# 
  1739  059E                     	;# 
  1740  059F                     	;# 
  1741  060C                     	;# 
  1742  060D                     	;# 
  1743  060E                     	;# 
  1744  060F                     	;# 
  1745  0610                     	;# 
  1746  0611                     	;# 
  1747  0612                     	;# 
  1748  0613                     	;# 
  1749  0614                     	;# 
  1750  070C                     	;# 
  1751  070D                     	;# 
  1752  070E                     	;# 
  1753  070F                     	;# 
  1754  0710                     	;# 
  1755  0711                     	;# 
  1756  0712                     	;# 
  1757  0713                     	;# 
  1758  0716                     	;# 
  1759  0717                     	;# 
  1760  0718                     	;# 
  1761  0719                     	;# 
  1762  071A                     	;# 
  1763  071B                     	;# 
  1764  071C                     	;# 
  1765  071D                     	;# 
  1766  0796                     	;# 
  1767  0797                     	;# 
  1768  0798                     	;# 
  1769  0799                     	;# 
  1770  079A                     	;# 
  1771  079B                     	;# 
  1772  080C                     	;# 
  1773  080D                     	;# 
  1774  080E                     	;# 
  1775  080F                     	;# 
  1776  0810                     	;# 
  1777  0811                     	;# 
  1778  0812                     	;# 
  1779  0813                     	;# 
  1780  0814                     	;# 
  1781  081A                     	;# 
  1782  081A                     	;# 
  1783  081B                     	;# 
  1784  081C                     	;# 
  1785  081C                     	;# 
  1786  081D                     	;# 
  1787  081E                     	;# 
  1788  081F                     	;# 
  1789  088C                     	;# 
  1790  088D                     	;# 
  1791  088E                     	;# 
  1792  088F                     	;# 
  1793  0890                     	;# 
  1794  0891                     	;# 
  1795  0892                     	;# 
  1796  0893                     	;# 
  1797  0895                     	;# 
  1798  0896                     	;# 
  1799  090C                     	;# 
  1800  090E                     	;# 
  1801  090F                     	;# 
  1802  091F                     	;# 
  1803  098F                     	;# 
  1804  098F                     	;# 
  1805  0990                     	;# 
  1806  0991                     	;# 
  1807  0992                     	;# 
  1808  0993                     	;# 
  1809  0994                     	;# 
  1810  0995                     	;# 
  1811  0996                     	;# 
  1812  0997                     	;# 
  1813  0A19                     	;# 
  1814  0A19                     	;# 
  1815  0A1A                     	;# 
  1816  0A1A                     	;# 
  1817  0A1B                     	;# 
  1818  0A1B                     	;# 
  1819  0A1B                     	;# 
  1820  0A1C                     	;# 
  1821  0A1C                     	;# 
  1822  0A1D                     	;# 
  1823  0A1D                     	;# 
  1824  0A1E                     	;# 
  1825  0A1E                     	;# 
  1826  0A1F                     	;# 
  1827  0A1F                     	;# 
  1828  0A1F                     	;# 
  1829  1E0F                     	;# 
  1830  1E10                     	;# 
  1831  1E11                     	;# 
  1832  1E12                     	;# 
  1833  1E13                     	;# 
  1834  1E14                     	;# 
  1835  1E15                     	;# 
  1836  1E16                     	;# 
  1837  1E17                     	;# 
  1838  1E18                     	;# 
  1839  1E19                     	;# 
  1840  1E1A                     	;# 
  1841  1E1B                     	;# 
  1842  1E1C                     	;# 
  1843  1E1D                     	;# 
  1844  1E1E                     	;# 
  1845  1E1F                     	;# 
  1846  1E20                     	;# 
  1847  1E21                     	;# 
  1848  1E22                     	;# 
  1849  1E23                     	;# 
  1850  1E24                     	;# 
  1851  1E25                     	;# 
  1852  1E26                     	;# 
  1853  1E27                     	;# 
  1854  1E28                     	;# 
  1855  1E29                     	;# 
  1856  1E2A                     	;# 
  1857  1E2B                     	;# 
  1858  1E2C                     	;# 
  1859  1E2D                     	;# 
  1860  1E2E                     	;# 
  1861  1E2F                     	;# 
  1862  1E30                     	;# 
  1863  1E31                     	;# 
  1864  1E32                     	;# 
  1865  1E33                     	;# 
  1866  1E34                     	;# 
  1867  1E35                     	;# 
  1868  1E36                     	;# 
  1869  1E37                     	;# 
  1870  1E8F                     	;# 
  1871  1E90                     	;# 
  1872  1E91                     	;# 
  1873  1E92                     	;# 
  1874  1E93                     	;# 
  1875  1E9C                     	;# 
  1876  1EA1                     	;# 
  1877  1EA2                     	;# 
  1878  1EB1                     	;# 
  1879  1EBB                     	;# 
  1880  1EBC                     	;# 
  1881  1EBD                     	;# 
  1882  1EBE                     	;# 
  1883  1EC3                     	;# 
  1884  1EC5                     	;# 
  1885  1EC6                     	;# 
  1886  1EC7                     	;# 
  1887  1ECB                     	;# 
  1888  1ECC                     	;# 
  1889  1ECD                     	;# 
  1890  1ECE                     	;# 
  1891  1F10                     	;# 
  1892  1F11                     	;# 
  1893  1F12                     	;# 
  1894  1F13                     	;# 
  1895  1F14                     	;# 
  1896  1F15                     	;# 
  1897  1F20                     	;# 
  1898  1F21                     	;# 
  1899  1F22                     	;# 
  1900  1F23                     	;# 
  1901  1F24                     	;# 
  1902  1F25                     	;# 
  1903  1F38                     	;# 
  1904  1F39                     	;# 
  1905  1F3A                     	;# 
  1906  1F3B                     	;# 
  1907  1F3C                     	;# 
  1908  1F3D                     	;# 
  1909  1F3E                     	;# 
  1910  1F3F                     	;# 
  1911  1F4E                     	;# 
  1912  1F4F                     	;# 
  1913  1F50                     	;# 
  1914  1F51                     	;# 
  1915  1F52                     	;# 
  1916  1F53                     	;# 
  1917  1F54                     	;# 
  1918  1F55                     	;# 
  1919  1FE4                     	;# 
  1920  1FE5                     	;# 
  1921  1FE6                     	;# 
  1922  1FE7                     	;# 
  1923  1FE8                     	;# 
  1924  1FE8                     	;# 
  1925  1FE9                     	;# 
  1926  1FEA                     	;# 
  1927  1FEA                     	;# 
  1928  1FEB                     	;# 
  1929  1FED                     	;# 
  1930  1FEE                     	;# 
  1931  1FEF                     	;# 
  1932  0000                     	;# 
  1933  0001                     	;# 
  1934  0002                     	;# 
  1935  0003                     	;# 
  1936  0004                     	;# 
  1937  0005                     	;# 
  1938  0006                     	;# 
  1939  0007                     	;# 
  1940  0008                     	;# 
  1941  0009                     	;# 
  1942  000A                     	;# 
  1943  000B                     	;# 
  1944  000C                     	;# 
  1945  000E                     	;# 
  1946  0012                     	;# 
  1947  0014                     	;# 
  1948  0018                     	;# 
  1949  001A                     	;# 
  1950  009B                     	;# 
  1951  009B                     	;# 
  1952  009C                     	;# 
  1953  009D                     	;# 
  1954  009E                     	;# 
  1955  009F                     	;# 
  1956  0119                     	;# 
  1957  0119                     	;# 
  1958  0119                     	;# 
  1959  011A                     	;# 
  1960  011A                     	;# 
  1961  011A                     	;# 
  1962  011B                     	;# 
  1963  011B                     	;# 
  1964  011B                     	;# 
  1965  011B                     	;# 
  1966  011B                     	;# 
  1967  011C                     	;# 
  1968  011C                     	;# 
  1969  011C                     	;# 
  1970  011D                     	;# 
  1971  011D                     	;# 
  1972  011D                     	;# 
  1973  011E                     	;# 
  1974  011E                     	;# 
  1975  011E                     	;# 
  1976  011F                     	;# 
  1977  011F                     	;# 
  1978  011F                     	;# 
  1979  011F                     	;# 
  1980  011F                     	;# 
  1981  018C                     	;# 
  1982  018D                     	;# 
  1983  018E                     	;# 
  1984  018F                     	;# 
  1985  0190                     	;# 
  1986  0191                     	;# 
  1987  0192                     	;# 
  1988  020C                     	;# 
  1989  020C                     	;# 
  1990  020D                     	;# 
  1991  020E                     	;# 
  1992  020F                     	;# 
  1993  020F                     	;# 
  1994  0210                     	;# 
  1995  0210                     	;# 
  1996  0211                     	;# 
  1997  0211                     	;# 
  1998  028C                     	;# 
  1999  028C                     	;# 
  2000  028D                     	;# 
  2001  028D                     	;# 
  2002  028E                     	;# 
  2003  028F                     	;# 
  2004  0290                     	;# 
  2005  0291                     	;# 
  2006  030C                     	;# 
  2007  030C                     	;# 
  2008  030D                     	;# 
  2009  030E                     	;# 
  2010  030F                     	;# 
  2011  0310                     	;# 
  2012  0310                     	;# 
  2013  0311                     	;# 
  2014  0312                     	;# 
  2015  0313                     	;# 
  2016  0314                     	;# 
  2017  0314                     	;# 
  2018  0315                     	;# 
  2019  0316                     	;# 
  2020  0318                     	;# 
  2021  0318                     	;# 
  2022  0319                     	;# 
  2023  031A                     	;# 
  2024  031C                     	;# 
  2025  031C                     	;# 
  2026  031D                     	;# 
  2027  031E                     	;# 
  2028  038C                     	;# 
  2029  038C                     	;# 
  2030  038D                     	;# 
  2031  038E                     	;# 
  2032  058C                     	;# 
  2033  058C                     	;# 
  2034  058D                     	;# 
  2035  058E                     	;# 
  2036  058F                     	;# 
  2037  058F                     	;# 
  2038  0590                     	;# 
  2039  0591                     	;# 
  2040  0592                     	;# 
  2041  0593                     	;# 
  2042  059C                     	;# 
  2043  059C                     	;# 
  2044  059D                     	;# 
  2045  059D                     	;# 
  2046  059E                     	;# 
  2047  059F                     	;# 
  2048  060C                     	;# 
  2049  060D                     	;# 
  2050  060E                     	;# 
  2051  060F                     	;# 
  2052  0610                     	;# 
  2053  0611                     	;# 
  2054  0612                     	;# 
  2055  0613                     	;# 
  2056  0614                     	;# 
  2057  070C                     	;# 
  2058  070D                     	;# 
  2059  070E                     	;# 
  2060  070F                     	;# 
  2061  0710                     	;# 
  2062  0711                     	;# 
  2063  0712                     	;# 
  2064  0713                     	;# 
  2065  0716                     	;# 
  2066  0717                     	;# 
  2067  0718                     	;# 
  2068  0719                     	;# 
  2069  071A                     	;# 
  2070  071B                     	;# 
  2071  071C                     	;# 
  2072  071D                     	;# 
  2073  0796                     	;# 
  2074  0797                     	;# 
  2075  0798                     	;# 
  2076  0799                     	;# 
  2077  079A                     	;# 
  2078  079B                     	;# 
  2079  080C                     	;# 
  2080  080D                     	;# 
  2081  080E                     	;# 
  2082  080F                     	;# 
  2083  0810                     	;# 
  2084  0811                     	;# 
  2085  0812                     	;# 
  2086  0813                     	;# 
  2087  0814                     	;# 
  2088  081A                     	;# 
  2089  081A                     	;# 
  2090  081B                     	;# 
  2091  081C                     	;# 
  2092  081C                     	;# 
  2093  081D                     	;# 
  2094  081E                     	;# 
  2095  081F                     	;# 
  2096  088C                     	;# 
  2097  088D                     	;# 
  2098  088E                     	;# 
  2099  088F                     	;# 
  2100  0890                     	;# 
  2101  0891                     	;# 
  2102  0892                     	;# 
  2103  0893                     	;# 
  2104  0895                     	;# 
  2105  0896                     	;# 
  2106  090C                     	;# 
  2107  090E                     	;# 
  2108  090F                     	;# 
  2109  091F                     	;# 
  2110  098F                     	;# 
  2111  098F                     	;# 
  2112  0990                     	;# 
  2113  0991                     	;# 
  2114  0992                     	;# 
  2115  0993                     	;# 
  2116  0994                     	;# 
  2117  0995                     	;# 
  2118  0996                     	;# 
  2119  0997                     	;# 
  2120  0A19                     	;# 
  2121  0A19                     	;# 
  2122  0A1A                     	;# 
  2123  0A1A                     	;# 
  2124  0A1B                     	;# 
  2125  0A1B                     	;# 
  2126  0A1B                     	;# 
  2127  0A1C                     	;# 
  2128  0A1C                     	;# 
  2129  0A1D                     	;# 
  2130  0A1D                     	;# 
  2131  0A1E                     	;# 
  2132  0A1E                     	;# 
  2133  0A1F                     	;# 
  2134  0A1F                     	;# 
  2135  0A1F                     	;# 
  2136  1E0F                     	;# 
  2137  1E10                     	;# 
  2138  1E11                     	;# 
  2139  1E12                     	;# 
  2140  1E13                     	;# 
  2141  1E14                     	;# 
  2142  1E15                     	;# 
  2143  1E16                     	;# 
  2144  1E17                     	;# 
  2145  1E18                     	;# 
  2146  1E19                     	;# 
  2147  1E1A                     	;# 
  2148  1E1B                     	;# 
  2149  1E1C                     	;# 
  2150  1E1D                     	;# 
  2151  1E1E                     	;# 
  2152  1E1F                     	;# 
  2153  1E20                     	;# 
  2154  1E21                     	;# 
  2155  1E22                     	;# 
  2156  1E23                     	;# 
  2157  1E24                     	;# 
  2158  1E25                     	;# 
  2159  1E26                     	;# 
  2160  1E27                     	;# 
  2161  1E28                     	;# 
  2162  1E29                     	;# 
  2163  1E2A                     	;# 
  2164  1E2B                     	;# 
  2165  1E2C                     	;# 
  2166  1E2D                     	;# 
  2167  1E2E                     	;# 
  2168  1E2F                     	;# 
  2169  1E30                     	;# 
  2170  1E31                     	;# 
  2171  1E32                     	;# 
  2172  1E33                     	;# 
  2173  1E34                     	;# 
  2174  1E35                     	;# 
  2175  1E36                     	;# 
  2176  1E37                     	;# 
  2177  1E8F                     	;# 
  2178  1E90                     	;# 
  2179  1E91                     	;# 
  2180  1E92                     	;# 
  2181  1E93                     	;# 
  2182  1E9C                     	;# 
  2183  1EA1                     	;# 
  2184  1EA2                     	;# 
  2185  1EB1                     	;# 
  2186  1EBB                     	;# 
  2187  1EBC                     	;# 
  2188  1EBD                     	;# 
  2189  1EBE                     	;# 
  2190  1EC3                     	;# 
  2191  1EC5                     	;# 
  2192  1EC6                     	;# 
  2193  1EC7                     	;# 
  2194  1ECB                     	;# 
  2195  1ECC                     	;# 
  2196  1ECD                     	;# 
  2197  1ECE                     	;# 
  2198  1F10                     	;# 
  2199  1F11                     	;# 
  2200  1F12                     	;# 
  2201  1F13                     	;# 
  2202  1F14                     	;# 
  2203  1F15                     	;# 
  2204  1F20                     	;# 
  2205  1F21                     	;# 
  2206  1F22                     	;# 
  2207  1F23                     	;# 
  2208  1F24                     	;# 
  2209  1F25                     	;# 
  2210  1F38                     	;# 
  2211  1F39                     	;# 
  2212  1F3A                     	;# 
  2213  1F3B                     	;# 
  2214  1F3C                     	;# 
  2215  1F3D                     	;# 
  2216  1F3E                     	;# 
  2217  1F3F                     	;# 
  2218  1F4E                     	;# 
  2219  1F4F                     	;# 
  2220  1F50                     	;# 
  2221  1F51                     	;# 
  2222  1F52                     	;# 
  2223  1F53                     	;# 
  2224  1F54                     	;# 
  2225  1F55                     	;# 
  2226  1FE4                     	;# 
  2227  1FE5                     	;# 
  2228  1FE6                     	;# 
  2229  1FE7                     	;# 
  2230  1FE8                     	;# 
  2231  1FE8                     	;# 
  2232  1FE9                     	;# 
  2233  1FEA                     	;# 
  2234  1FEA                     	;# 
  2235  1FEB                     	;# 
  2236  1FED                     	;# 
  2237  1FEE                     	;# 
  2238  1FEF                     	;# 
  2239  0000                     	;# 
  2240  0001                     	;# 
  2241  0002                     	;# 
  2242  0003                     	;# 
  2243  0004                     	;# 
  2244  0005                     	;# 
  2245  0006                     	;# 
  2246  0007                     	;# 
  2247  0008                     	;# 
  2248  0009                     	;# 
  2249  000A                     	;# 
  2250  000B                     	;# 
  2251  000C                     	;# 
  2252  000E                     	;# 
  2253  0012                     	;# 
  2254  0014                     	;# 
  2255  0018                     	;# 
  2256  001A                     	;# 
  2257  009B                     	;# 
  2258  009B                     	;# 
  2259  009C                     	;# 
  2260  009D                     	;# 
  2261  009E                     	;# 
  2262  009F                     	;# 
  2263  0119                     	;# 
  2264  0119                     	;# 
  2265  0119                     	;# 
  2266  011A                     	;# 
  2267  011A                     	;# 
  2268  011A                     	;# 
  2269  011B                     	;# 
  2270  011B                     	;# 
  2271  011B                     	;# 
  2272  011B                     	;# 
  2273  011B                     	;# 
  2274  011C                     	;# 
  2275  011C                     	;# 
  2276  011C                     	;# 
  2277  011D                     	;# 
  2278  011D                     	;# 
  2279  011D                     	;# 
  2280  011E                     	;# 
  2281  011E                     	;# 
  2282  011E                     	;# 
  2283  011F                     	;# 
  2284  011F                     	;# 
  2285  011F                     	;# 
  2286  011F                     	;# 
  2287  011F                     	;# 
  2288  018C                     	;# 
  2289  018D                     	;# 
  2290  018E                     	;# 
  2291  018F                     	;# 
  2292  0190                     	;# 
  2293  0191                     	;# 
  2294  0192                     	;# 
  2295  020C                     	;# 
  2296  020C                     	;# 
  2297  020D                     	;# 
  2298  020E                     	;# 
  2299  020F                     	;# 
  2300  020F                     	;# 
  2301  0210                     	;# 
  2302  0210                     	;# 
  2303  0211                     	;# 
  2304  0211                     	;# 
  2305  028C                     	;# 
  2306  028C                     	;# 
  2307  028D                     	;# 
  2308  028D                     	;# 
  2309  028E                     	;# 
  2310  028F                     	;# 
  2311  0290                     	;# 
  2312  0291                     	;# 
  2313  030C                     	;# 
  2314  030C                     	;# 
  2315  030D                     	;# 
  2316  030E                     	;# 
  2317  030F                     	;# 
  2318  0310                     	;# 
  2319  0310                     	;# 
  2320  0311                     	;# 
  2321  0312                     	;# 
  2322  0313                     	;# 
  2323  0314                     	;# 
  2324  0314                     	;# 
  2325  0315                     	;# 
  2326  0316                     	;# 
  2327  0318                     	;# 
  2328  0318                     	;# 
  2329  0319                     	;# 
  2330  031A                     	;# 
  2331  031C                     	;# 
  2332  031C                     	;# 
  2333  031D                     	;# 
  2334  031E                     	;# 
  2335  038C                     	;# 
  2336  038C                     	;# 
  2337  038D                     	;# 
  2338  038E                     	;# 
  2339  058C                     	;# 
  2340  058C                     	;# 
  2341  058D                     	;# 
  2342  058E                     	;# 
  2343  058F                     	;# 
  2344  058F                     	;# 
  2345  0590                     	;# 
  2346  0591                     	;# 
  2347  0592                     	;# 
  2348  0593                     	;# 
  2349  059C                     	;# 
  2350  059C                     	;# 
  2351  059D                     	;# 
  2352  059D                     	;# 
  2353  059E                     	;# 
  2354  059F                     	;# 
  2355  060C                     	;# 
  2356  060D                     	;# 
  2357  060E                     	;# 
  2358  060F                     	;# 
  2359  0610                     	;# 
  2360  0611                     	;# 
  2361  0612                     	;# 
  2362  0613                     	;# 
  2363  0614                     	;# 
  2364  070C                     	;# 
  2365  070D                     	;# 
  2366  070E                     	;# 
  2367  070F                     	;# 
  2368  0710                     	;# 
  2369  0711                     	;# 
  2370  0712                     	;# 
  2371  0713                     	;# 
  2372  0716                     	;# 
  2373  0717                     	;# 
  2374  0718                     	;# 
  2375  0719                     	;# 
  2376  071A                     	;# 
  2377  071B                     	;# 
  2378  071C                     	;# 
  2379  071D                     	;# 
  2380  0796                     	;# 
  2381  0797                     	;# 
  2382  0798                     	;# 
  2383  0799                     	;# 
  2384  079A                     	;# 
  2385  079B                     	;# 
  2386  080C                     	;# 
  2387  080D                     	;# 
  2388  080E                     	;# 
  2389  080F                     	;# 
  2390  0810                     	;# 
  2391  0811                     	;# 
  2392  0812                     	;# 
  2393  0813                     	;# 
  2394  0814                     	;# 
  2395  081A                     	;# 
  2396  081A                     	;# 
  2397  081B                     	;# 
  2398  081C                     	;# 
  2399  081C                     	;# 
  2400  081D                     	;# 
  2401  081E                     	;# 
  2402  081F                     	;# 
  2403  088C                     	;# 
  2404  088D                     	;# 
  2405  088E                     	;# 
  2406  088F                     	;# 
  2407  0890                     	;# 
  2408  0891                     	;# 
  2409  0892                     	;# 
  2410  0893                     	;# 
  2411  0895                     	;# 
  2412  0896                     	;# 
  2413  090C                     	;# 
  2414  090E                     	;# 
  2415  090F                     	;# 
  2416  091F                     	;# 
  2417  098F                     	;# 
  2418  098F                     	;# 
  2419  0990                     	;# 
  2420  0991                     	;# 
  2421  0992                     	;# 
  2422  0993                     	;# 
  2423  0994                     	;# 
  2424  0995                     	;# 
  2425  0996                     	;# 
  2426  0997                     	;# 
  2427  0A19                     	;# 
  2428  0A19                     	;# 
  2429  0A1A                     	;# 
  2430  0A1A                     	;# 
  2431  0A1B                     	;# 
  2432  0A1B                     	;# 
  2433  0A1B                     	;# 
  2434  0A1C                     	;# 
  2435  0A1C                     	;# 
  2436  0A1D                     	;# 
  2437  0A1D                     	;# 
  2438  0A1E                     	;# 
  2439  0A1E                     	;# 
  2440  0A1F                     	;# 
  2441  0A1F                     	;# 
  2442  0A1F                     	;# 
  2443  1E0F                     	;# 
  2444  1E10                     	;# 
  2445  1E11                     	;# 
  2446  1E12                     	;# 
  2447  1E13                     	;# 
  2448  1E14                     	;# 
  2449  1E15                     	;# 
  2450  1E16                     	;# 
  2451  1E17                     	;# 
  2452  1E18                     	;# 
  2453  1E19                     	;# 
  2454  1E1A                     	;# 
  2455  1E1B                     	;# 
  2456  1E1C                     	;# 
  2457  1E1D                     	;# 
  2458  1E1E                     	;# 
  2459  1E1F                     	;# 
  2460  1E20                     	;# 
  2461  1E21                     	;# 
  2462  1E22                     	;# 
  2463  1E23                     	;# 
  2464  1E24                     	;# 
  2465  1E25                     	;# 
  2466  1E26                     	;# 
  2467  1E27                     	;# 
  2468  1E28                     	;# 
  2469  1E29                     	;# 
  2470  1E2A                     	;# 
  2471  1E2B                     	;# 
  2472  1E2C                     	;# 
  2473  1E2D                     	;# 
  2474  1E2E                     	;# 
  2475  1E2F                     	;# 
  2476  1E30                     	;# 
  2477  1E31                     	;# 
  2478  1E32                     	;# 
  2479  1E33                     	;# 
  2480  1E34                     	;# 
  2481  1E35                     	;# 
  2482  1E36                     	;# 
  2483  1E37                     	;# 
  2484  1E8F                     	;# 
  2485  1E90                     	;# 
  2486  1E91                     	;# 
  2487  1E92                     	;# 
  2488  1E93                     	;# 
  2489  1E9C                     	;# 
  2490  1EA1                     	;# 
  2491  1EA2                     	;# 
  2492  1EB1                     	;# 
  2493  1EBB                     	;# 
  2494  1EBC                     	;# 
  2495  1EBD                     	;# 
  2496  1EBE                     	;# 
  2497  1EC3                     	;# 
  2498  1EC5                     	;# 
  2499  1EC6                     	;# 
  2500  1EC7                     	;# 
  2501  1ECB                     	;# 
  2502  1ECC                     	;# 
  2503  1ECD                     	;# 
  2504  1ECE                     	;# 
  2505  1F10                     	;# 
  2506  1F11                     	;# 
  2507  1F12                     	;# 
  2508  1F13                     	;# 
  2509  1F14                     	;# 
  2510  1F15                     	;# 
  2511  1F20                     	;# 
  2512  1F21                     	;# 
  2513  1F22                     	;# 
  2514  1F23                     	;# 
  2515  1F24                     	;# 
  2516  1F25                     	;# 
  2517  1F38                     	;# 
  2518  1F39                     	;# 
  2519  1F3A                     	;# 
  2520  1F3B                     	;# 
  2521  1F3C                     	;# 
  2522  1F3D                     	;# 
  2523  1F3E                     	;# 
  2524  1F3F                     	;# 
  2525  1F4E                     	;# 
  2526  1F4F                     	;# 
  2527  1F50                     	;# 
  2528  1F51                     	;# 
  2529  1F52                     	;# 
  2530  1F53                     	;# 
  2531  1F54                     	;# 
  2532  1F55                     	;# 
  2533  1FE4                     	;# 
  2534  1FE5                     	;# 
  2535  1FE6                     	;# 
  2536  1FE7                     	;# 
  2537  1FE8                     	;# 
  2538  1FE8                     	;# 
  2539  1FE9                     	;# 
  2540  1FEA                     	;# 
  2541  1FEA                     	;# 
  2542  1FEB                     	;# 
  2543  1FED                     	;# 
  2544  1FEE                     	;# 
  2545  1FEF                     	;# 
  2546  0000                     	;# 
  2547  0001                     	;# 
  2548  0002                     	;# 
  2549  0003                     	;# 
  2550  0004                     	;# 
  2551  0005                     	;# 
  2552  0006                     	;# 
  2553  0007                     	;# 
  2554  0008                     	;# 
  2555  0009                     	;# 
  2556  000A                     	;# 
  2557  000B                     	;# 
  2558  000C                     	;# 
  2559  000E                     	;# 
  2560  0012                     	;# 
  2561  0014                     	;# 
  2562  0018                     	;# 
  2563  001A                     	;# 
  2564  009B                     	;# 
  2565  009B                     	;# 
  2566  009C                     	;# 
  2567  009D                     	;# 
  2568  009E                     	;# 
  2569  009F                     	;# 
  2570  0119                     	;# 
  2571  0119                     	;# 
  2572  0119                     	;# 
  2573  011A                     	;# 
  2574  011A                     	;# 
  2575  011A                     	;# 
  2576  011B                     	;# 
  2577  011B                     	;# 
  2578  011B                     	;# 
  2579  011B                     	;# 
  2580  011B                     	;# 
  2581  011C                     	;# 
  2582  011C                     	;# 
  2583  011C                     	;# 
  2584  011D                     	;# 
  2585  011D                     	;# 
  2586  011D                     	;# 
  2587  011E                     	;# 
  2588  011E                     	;# 
  2589  011E                     	;# 
  2590  011F                     	;# 
  2591  011F                     	;# 
  2592  011F                     	;# 
  2593  011F                     	;# 
  2594  011F                     	;# 
  2595  018C                     	;# 
  2596  018D                     	;# 
  2597  018E                     	;# 
  2598  018F                     	;# 
  2599  0190                     	;# 
  2600  0191                     	;# 
  2601  0192                     	;# 
  2602  020C                     	;# 
  2603  020C                     	;# 
  2604  020D                     	;# 
  2605  020E                     	;# 
  2606  020F                     	;# 
  2607  020F                     	;# 
  2608  0210                     	;# 
  2609  0210                     	;# 
  2610  0211                     	;# 
  2611  0211                     	;# 
  2612  028C                     	;# 
  2613  028C                     	;# 
  2614  028D                     	;# 
  2615  028D                     	;# 
  2616  028E                     	;# 
  2617  028F                     	;# 
  2618  0290                     	;# 
  2619  0291                     	;# 
  2620  030C                     	;# 
  2621  030C                     	;# 
  2622  030D                     	;# 
  2623  030E                     	;# 
  2624  030F                     	;# 
  2625  0310                     	;# 
  2626  0310                     	;# 
  2627  0311                     	;# 
  2628  0312                     	;# 
  2629  0313                     	;# 
  2630  0314                     	;# 
  2631  0314                     	;# 
  2632  0315                     	;# 
  2633  0316                     	;# 
  2634  0318                     	;# 
  2635  0318                     	;# 
  2636  0319                     	;# 
  2637  031A                     	;# 
  2638  031C                     	;# 
  2639  031C                     	;# 
  2640  031D                     	;# 
  2641  031E                     	;# 
  2642  038C                     	;# 
  2643  038C                     	;# 
  2644  038D                     	;# 
  2645  038E                     	;# 
  2646  058C                     	;# 
  2647  058C                     	;# 
  2648  058D                     	;# 
  2649  058E                     	;# 
  2650  058F                     	;# 
  2651  058F                     	;# 
  2652  0590                     	;# 
  2653  0591                     	;# 
  2654  0592                     	;# 
  2655  0593                     	;# 
  2656  059C                     	;# 
  2657  059C                     	;# 
  2658  059D                     	;# 
  2659  059D                     	;# 
  2660  059E                     	;# 
  2661  059F                     	;# 
  2662  060C                     	;# 
  2663  060D                     	;# 
  2664  060E                     	;# 
  2665  060F                     	;# 
  2666  0610                     	;# 
  2667  0611                     	;# 
  2668  0612                     	;# 
  2669  0613                     	;# 
  2670  0614                     	;# 
  2671  070C                     	;# 
  2672  070D                     	;# 
  2673  070E                     	;# 
  2674  070F                     	;# 
  2675  0710                     	;# 
  2676  0711                     	;# 
  2677  0712                     	;# 
  2678  0713                     	;# 
  2679  0716                     	;# 
  2680  0717                     	;# 
  2681  0718                     	;# 
  2682  0719                     	;# 
  2683  071A                     	;# 
  2684  071B                     	;# 
  2685  071C                     	;# 
  2686  071D                     	;# 
  2687  0796                     	;# 
  2688  0797                     	;# 
  2689  0798                     	;# 
  2690  0799                     	;# 
  2691  079A                     	;# 
  2692  079B                     	;# 
  2693  080C                     	;# 
  2694  080D                     	;# 
  2695  080E                     	;# 
  2696  080F                     	;# 
  2697  0810                     	;# 
  2698  0811                     	;# 
  2699  0812                     	;# 
  2700  0813                     	;# 
  2701  0814                     	;# 
  2702  081A                     	;# 
  2703  081A                     	;# 
  2704  081B                     	;# 
  2705  081C                     	;# 
  2706  081C                     	;# 
  2707  081D                     	;# 
  2708  081E                     	;# 
  2709  081F                     	;# 
  2710  088C                     	;# 
  2711  088D                     	;# 
  2712  088E                     	;# 
  2713  088F                     	;# 
  2714  0890                     	;# 
  2715  0891                     	;# 
  2716  0892                     	;# 
  2717  0893                     	;# 
  2718  0895                     	;# 
  2719  0896                     	;# 
  2720  090C                     	;# 
  2721  090E                     	;# 
  2722  090F                     	;# 
  2723  091F                     	;# 
  2724  098F                     	;# 
  2725  098F                     	;# 
  2726  0990                     	;# 
  2727  0991                     	;# 
  2728  0992                     	;# 
  2729  0993                     	;# 
  2730  0994                     	;# 
  2731  0995                     	;# 
  2732  0996                     	;# 
  2733  0997                     	;# 
  2734  0A19                     	;# 
  2735  0A19                     	;# 
  2736  0A1A                     	;# 
  2737  0A1A                     	;# 
  2738  0A1B                     	;# 
  2739  0A1B                     	;# 
  2740  0A1B                     	;# 
  2741  0A1C                     	;# 
  2742  0A1C                     	;# 
  2743  0A1D                     	;# 
  2744  0A1D                     	;# 
  2745  0A1E                     	;# 
  2746  0A1E                     	;# 
  2747  0A1F                     	;# 
  2748  0A1F                     	;# 
  2749  0A1F                     	;# 
  2750  1E0F                     	;# 
  2751  1E10                     	;# 
  2752  1E11                     	;# 
  2753  1E12                     	;# 
  2754  1E13                     	;# 
  2755  1E14                     	;# 
  2756  1E15                     	;# 
  2757  1E16                     	;# 
  2758  1E17                     	;# 
  2759  1E18                     	;# 
  2760  1E19                     	;# 
  2761  1E1A                     	;# 
  2762  1E1B                     	;# 
  2763  1E1C                     	;# 
  2764  1E1D                     	;# 
  2765  1E1E                     	;# 
  2766  1E1F                     	;# 
  2767  1E20                     	;# 
  2768  1E21                     	;# 
  2769  1E22                     	;# 
  2770  1E23                     	;# 
  2771  1E24                     	;# 
  2772  1E25                     	;# 
  2773  1E26                     	;# 
  2774  1E27                     	;# 
  2775  1E28                     	;# 
  2776  1E29                     	;# 
  2777  1E2A                     	;# 
  2778  1E2B                     	;# 
  2779  1E2C                     	;# 
  2780  1E2D                     	;# 
  2781  1E2E                     	;# 
  2782  1E2F                     	;# 
  2783  1E30                     	;# 
  2784  1E31                     	;# 
  2785  1E32                     	;# 
  2786  1E33                     	;# 
  2787  1E34                     	;# 
  2788  1E35                     	;# 
  2789  1E36                     	;# 
  2790  1E37                     	;# 
  2791  1E8F                     	;# 
  2792  1E90                     	;# 
  2793  1E91                     	;# 
  2794  1E92                     	;# 
  2795  1E93                     	;# 
  2796  1E9C                     	;# 
  2797  1EA1                     	;# 
  2798  1EA2                     	;# 
  2799  1EB1                     	;# 
  2800  1EBB                     	;# 
  2801  1EBC                     	;# 
  2802  1EBD                     	;# 
  2803  1EBE                     	;# 
  2804  1EC3                     	;# 
  2805  1EC5                     	;# 
  2806  1EC6                     	;# 
  2807  1EC7                     	;# 
  2808  1ECB                     	;# 
  2809  1ECC                     	;# 
  2810  1ECD                     	;# 
  2811  1ECE                     	;# 
  2812  1F10                     	;# 
  2813  1F11                     	;# 
  2814  1F12                     	;# 
  2815  1F13                     	;# 
  2816  1F14                     	;# 
  2817  1F15                     	;# 
  2818  1F20                     	;# 
  2819  1F21                     	;# 
  2820  1F22                     	;# 
  2821  1F23                     	;# 
  2822  1F24                     	;# 
  2823  1F25                     	;# 
  2824  1F38                     	;# 
  2825  1F39                     	;# 
  2826  1F3A                     	;# 
  2827  1F3B                     	;# 
  2828  1F3C                     	;# 
  2829  1F3D                     	;# 
  2830  1F3E                     	;# 
  2831  1F3F                     	;# 
  2832  1F4E                     	;# 
  2833  1F4F                     	;# 
  2834  1F50                     	;# 
  2835  1F51                     	;# 
  2836  1F52                     	;# 
  2837  1F53                     	;# 
  2838  1F54                     	;# 
  2839  1F55                     	;# 
  2840  1FE4                     	;# 
  2841  1FE5                     	;# 
  2842  1FE6                     	;# 
  2843  1FE7                     	;# 
  2844  1FE8                     	;# 
  2845  1FE8                     	;# 
  2846  1FE9                     	;# 
  2847  1FEA                     	;# 
  2848  1FEA                     	;# 
  2849  1FEB                     	;# 
  2850  1FED                     	;# 
  2851  1FEE                     	;# 
  2852  1FEF                     	;# 
  2853  0000                     	;# 
  2854  0001                     	;# 
  2855  0002                     	;# 
  2856  0003                     	;# 
  2857  0004                     	;# 
  2858  0005                     	;# 
  2859  0006                     	;# 
  2860  0007                     	;# 
  2861  0008                     	;# 
  2862  0009                     	;# 
  2863  000A                     	;# 
  2864  000B                     	;# 
  2865  000C                     	;# 
  2866  000E                     	;# 
  2867  0012                     	;# 
  2868  0014                     	;# 
  2869  0018                     	;# 
  2870  001A                     	;# 
  2871  009B                     	;# 
  2872  009B                     	;# 
  2873  009C                     	;# 
  2874  009D                     	;# 
  2875  009E                     	;# 
  2876  009F                     	;# 
  2877  0119                     	;# 
  2878  0119                     	;# 
  2879  0119                     	;# 
  2880  011A                     	;# 
  2881  011A                     	;# 
  2882  011A                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011B                     	;# 
  2887  011B                     	;# 
  2888  011C                     	;# 
  2889  011C                     	;# 
  2890  011C                     	;# 
  2891  011D                     	;# 
  2892  011D                     	;# 
  2893  011D                     	;# 
  2894  011E                     	;# 
  2895  011E                     	;# 
  2896  011E                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  011F                     	;# 
  2901  011F                     	;# 
  2902  018C                     	;# 
  2903  018D                     	;# 
  2904  018E                     	;# 
  2905  018F                     	;# 
  2906  0190                     	;# 
  2907  0191                     	;# 
  2908  0192                     	;# 
  2909  020C                     	;# 
  2910  020C                     	;# 
  2911  020D                     	;# 
  2912  020E                     	;# 
  2913  020F                     	;# 
  2914  020F                     	;# 
  2915  0210                     	;# 
  2916  0210                     	;# 
  2917  0211                     	;# 
  2918  0211                     	;# 
  2919  028C                     	;# 
  2920  028C                     	;# 
  2921  028D                     	;# 
  2922  028D                     	;# 
  2923  028E                     	;# 
  2924  028F                     	;# 
  2925  0290                     	;# 
  2926  0291                     	;# 
  2927  030C                     	;# 
  2928  030C                     	;# 
  2929  030D                     	;# 
  2930  030E                     	;# 
  2931  030F                     	;# 
  2932  0310                     	;# 
  2933  0310                     	;# 
  2934  0311                     	;# 
  2935  0312                     	;# 
  2936  0313                     	;# 
  2937  0314                     	;# 
  2938  0314                     	;# 
  2939  0315                     	;# 
  2940  0316                     	;# 
  2941  0318                     	;# 
  2942  0318                     	;# 
  2943  0319                     	;# 
  2944  031A                     	;# 
  2945  031C                     	;# 
  2946  031C                     	;# 
  2947  031D                     	;# 
  2948  031E                     	;# 
  2949  038C                     	;# 
  2950  038C                     	;# 
  2951  038D                     	;# 
  2952  038E                     	;# 
  2953  058C                     	;# 
  2954  058C                     	;# 
  2955  058D                     	;# 
  2956  058E                     	;# 
  2957  058F                     	;# 
  2958  058F                     	;# 
  2959  0590                     	;# 
  2960  0591                     	;# 
  2961  0592                     	;# 
  2962  0593                     	;# 
  2963  059C                     	;# 
  2964  059C                     	;# 
  2965  059D                     	;# 
  2966  059D                     	;# 
  2967  059E                     	;# 
  2968  059F                     	;# 
  2969  060C                     	;# 
  2970  060D                     	;# 
  2971  060E                     	;# 
  2972  060F                     	;# 
  2973  0610                     	;# 
  2974  0611                     	;# 
  2975  0612                     	;# 
  2976  0613                     	;# 
  2977  0614                     	;# 
  2978  070C                     	;# 
  2979  070D                     	;# 
  2980  070E                     	;# 
  2981  070F                     	;# 
  2982  0710                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0716                     	;# 
  2987  0717                     	;# 
  2988  0718                     	;# 
  2989  0719                     	;# 
  2990  071A                     	;# 
  2991  071B                     	;# 
  2992  071C                     	;# 
  2993  071D                     	;# 
  2994  0796                     	;# 
  2995  0797                     	;# 
  2996  0798                     	;# 
  2997  0799                     	;# 
  2998  079A                     	;# 
  2999  079B                     	;# 
  3000  080C                     	;# 
  3001  080D                     	;# 
  3002  080E                     	;# 
  3003  080F                     	;# 
  3004  0810                     	;# 
  3005  0811                     	;# 
  3006  0812                     	;# 
  3007  0813                     	;# 
  3008  0814                     	;# 
  3009  081A                     	;# 
  3010  081A                     	;# 
  3011  081B                     	;# 
  3012  081C                     	;# 
  3013  081C                     	;# 
  3014  081D                     	;# 
  3015  081E                     	;# 
  3016  081F                     	;# 
  3017  088C                     	;# 
  3018  088D                     	;# 
  3019  088E                     	;# 
  3020  088F                     	;# 
  3021  0890                     	;# 
  3022  0891                     	;# 
  3023  0892                     	;# 
  3024  0893                     	;# 
  3025  0895                     	;# 
  3026  0896                     	;# 
  3027  090C                     	;# 
  3028  090E                     	;# 
  3029  090F                     	;# 
  3030  091F                     	;# 
  3031  098F                     	;# 
  3032  098F                     	;# 
  3033  0990                     	;# 
  3034  0991                     	;# 
  3035  0992                     	;# 
  3036  0993                     	;# 
  3037  0994                     	;# 
  3038  0995                     	;# 
  3039  0996                     	;# 
  3040  0997                     	;# 
  3041  0A19                     	;# 
  3042  0A19                     	;# 
  3043  0A1A                     	;# 
  3044  0A1A                     	;# 
  3045  0A1B                     	;# 
  3046  0A1B                     	;# 
  3047  0A1B                     	;# 
  3048  0A1C                     	;# 
  3049  0A1C                     	;# 
  3050  0A1D                     	;# 
  3051  0A1D                     	;# 
  3052  0A1E                     	;# 
  3053  0A1E                     	;# 
  3054  0A1F                     	;# 
  3055  0A1F                     	;# 
  3056  0A1F                     	;# 
  3057  1E0F                     	;# 
  3058  1E10                     	;# 
  3059  1E11                     	;# 
  3060  1E12                     	;# 
  3061  1E13                     	;# 
  3062  1E14                     	;# 
  3063  1E15                     	;# 
  3064  1E16                     	;# 
  3065  1E17                     	;# 
  3066  1E18                     	;# 
  3067  1E19                     	;# 
  3068  1E1A                     	;# 
  3069  1E1B                     	;# 
  3070  1E1C                     	;# 
  3071  1E1D                     	;# 
  3072  1E1E                     	;# 
  3073  1E1F                     	;# 
  3074  1E20                     	;# 
  3075  1E21                     	;# 
  3076  1E22                     	;# 
  3077  1E23                     	;# 
  3078  1E24                     	;# 
  3079  1E25                     	;# 
  3080  1E26                     	;# 
  3081  1E27                     	;# 
  3082  1E28                     	;# 
  3083  1E29                     	;# 
  3084  1E2A                     	;# 
  3085  1E2B                     	;# 
  3086  1E2C                     	;# 
  3087  1E2D                     	;# 
  3088  1E2E                     	;# 
  3089  1E2F                     	;# 
  3090  1E30                     	;# 
  3091  1E31                     	;# 
  3092  1E32                     	;# 
  3093  1E33                     	;# 
  3094  1E34                     	;# 
  3095  1E35                     	;# 
  3096  1E36                     	;# 
  3097  1E37                     	;# 
  3098  1E8F                     	;# 
  3099  1E90                     	;# 
  3100  1E91                     	;# 
  3101  1E92                     	;# 
  3102  1E93                     	;# 
  3103  1E9C                     	;# 
  3104  1EA1                     	;# 
  3105  1EA2                     	;# 
  3106  1EB1                     	;# 
  3107  1EBB                     	;# 
  3108  1EBC                     	;# 
  3109  1EBD                     	;# 
  3110  1EBE                     	;# 
  3111  1EC3                     	;# 
  3112  1EC5                     	;# 
  3113  1EC6                     	;# 
  3114  1EC7                     	;# 
  3115  1ECB                     	;# 
  3116  1ECC                     	;# 
  3117  1ECD                     	;# 
  3118  1ECE                     	;# 
  3119  1F10                     	;# 
  3120  1F11                     	;# 
  3121  1F12                     	;# 
  3122  1F13                     	;# 
  3123  1F14                     	;# 
  3124  1F15                     	;# 
  3125  1F20                     	;# 
  3126  1F21                     	;# 
  3127  1F22                     	;# 
  3128  1F23                     	;# 
  3129  1F24                     	;# 
  3130  1F25                     	;# 
  3131  1F38                     	;# 
  3132  1F39                     	;# 
  3133  1F3A                     	;# 
  3134  1F3B                     	;# 
  3135  1F3C                     	;# 
  3136  1F3D                     	;# 
  3137  1F3E                     	;# 
  3138  1F3F                     	;# 
  3139  1F4E                     	;# 
  3140  1F4F                     	;# 
  3141  1F50                     	;# 
  3142  1F51                     	;# 
  3143  1F52                     	;# 
  3144  1F53                     	;# 
  3145  1F54                     	;# 
  3146  1F55                     	;# 
  3147  1FE4                     	;# 
  3148  1FE5                     	;# 
  3149  1FE6                     	;# 
  3150  1FE7                     	;# 
  3151  1FE8                     	;# 
  3152  1FE8                     	;# 
  3153  1FE9                     	;# 
  3154  1FEA                     	;# 
  3155  1FEA                     	;# 
  3156  1FEB                     	;# 
  3157  1FED                     	;# 
  3158  1FEE                     	;# 
  3159  1FEF                     	;# 
  3160                           
  3161 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  3162  0000                     
  3163 ;; Function _EUSART1_is_rx_ready is unused but had its address taken
  3164  0000                     
  3165 ;; Function _EUSART1_is_tx_done is unused but had its address taken
  3166  0000                     
  3167 ;; Function _EUSART1_Read is unused but had its address taken
  3168  0000                     
  3169                           	psect	idataBANK0
  3170  04C2                     __pidataBANK0:	
  3171                           
  3172                           ;initializer for conf_sensor@F6604
  3173  04C2  34F4               	retlw	244
  3174  04C3  34F5               	retlw	245
  3175                           
  3176                           	psect	idataBANK2
  3177  03A3                     __pidataBANK2:	
  3178                           
  3179                           ;initializer for BMP280_SPI_bus_read@F6557
  3180  03A3  34FF               	retlw	-1
  3181  03A4  3400               	retlw	0
  3182  03A5  3400               	retlw	0
  3183  03A6  3400               	retlw	0
  3184  03A7  3400               	retlw	0
  3185  03A8  3400               	retlw	0
  3186  03A9  3400               	retlw	0
  3187  03AA  3400               	retlw	0
  3188  03AB  3400               	retlw	0
  3189  03AC  3400               	retlw	0
  3190  03AD  3400               	retlw	0
  3191  03AE  3400               	retlw	0
  3192  03AF  3400               	retlw	0
  3193  03B0  3400               	retlw	0
  3194  03B1  3400               	retlw	0
  3195  03B2  3400               	retlw	0
  3196  03B3  3400               	retlw	0
  3197  03B4  3400               	retlw	0
  3198  03B5  3400               	retlw	0
  3199  03B6  3400               	retlw	0
  3200  03B7  3400               	retlw	0
  3201  03B8  3400               	retlw	0
  3202  03B9  3400               	retlw	0
  3203  03BA  3400               	retlw	0
  3204  03BB  3400               	retlw	0
  3205  03BC  3400               	retlw	0
  3206  03BD  3400               	retlw	0
  3207  03BE  3400               	retlw	0
  3208  03BF  3400               	retlw	0
  3209  03C0  3400               	retlw	0
  3210                           
  3211                           	psect	stringtext1
  3212  043B                     __pstringtext1:	
  3213  043B                     _uart:	
  3214  043B  3400               	retlw	0
  3215  043C  3400               	retlw	0
  3216  043D  34DA               	retlw	low _EUSART1_Initialize
  3217  043E  3403               	retlw	high _EUSART1_Initialize
  3218  043F  3400               	retlw	0
  3219  0440  3400               	retlw	0
  3220  0441  345B               	retlw	low _EUSART1_Receive_ISR
  3221  0442  3403               	retlw	high _EUSART1_Receive_ISR
  3222  0443  3481               	retlw	low _EUSART1_SetRxInterruptHandler
  3223  0444  3404               	retlw	high _EUSART1_SetRxInterruptHandler
  3224  0445  3400               	retlw	0
  3225  0446  3400               	retlw	0
  3226  0447  3400               	retlw	0
  3227  0448  3400               	retlw	0
  3228  0449  349B               	retlw	low _EUSART1_Write
  3229  044A  3404               	retlw	high _EUSART1_Write
  3230  044B  3400               	retlw	0
  3231  044C  3400               	retlw	0
  3232  044D  3400               	retlw	0
  3233  044E  3400               	retlw	0
  3234  044F                     __end_of_uart:	
  3235                           
  3236                           	psect	stringtext2
  3237  04B4                     __pstringtext2:	
  3238  04B4                     bmp280_compute_meas_time@period_per_osrs:	
  3239  04B4  34D0               	retlw	208
  3240  04B5  3407               	retlw	7
  3241  04B6  3400               	retlw	0
  3242  04B7  3400               	retlw	0
  3243  04B8                     __end_ofbmp280_compute_meas_time@period_per_osrs:	
  3244                           
  3245                           	psect	stringtext3
  3246  04B8                     __pstringtext3:	
  3247  04B8                     bmp280_compute_meas_time@startup:	
  3248  04B8  34E8               	retlw	232
  3249  04B9  3403               	retlw	3
  3250  04BA  3400               	retlw	0
  3251  04BB  3400               	retlw	0
  3252  04BC                     __end_ofbmp280_compute_meas_time@startup:	
  3253                           
  3254                           	psect	stringtext4
  3255  04BC                     __pstringtext4:	
  3256  04BC                     _spi1_configuration:	
  3257  04BC  3410               	retlw	16
  3258  04BD  3400               	retlw	0
  3259  04BE  3407               	retlw	7
  3260  04BF                     __end_of_spi1_configuration:	
  3261                           
  3262                           	psect	nvCOMMON
  3263  007C                     __pnvCOMMON:	
  3264  007C                     _timer0ReloadVal16bit:	
  3265  007C                     	ds	2
  3266                           
  3267                           	psect	nvBANK0
  3268  006B                     __pnvBANK0:	
  3269  006B                     _TMR0_InterruptHandler:	
  3270  006B                     	ds	2
  3271                           
  3272                           	psect	nvBANK1
  3273  00EA                     __pnvBANK1:	
  3274  00EA                     _EUSART1_RxDefaultInterruptHandler:	
  3275  00EA                     	ds	2
  3276  000B                     _INTCONbits	set	11
  3277  0014                     _TRISC	set	20
  3278  0012                     _TRISA	set	18
  3279  001A                     _LATC	set	26
  3280  0018                     _LATA	set	24
  3281  0014                     _TRISCbits	set	20
  3282  0075                     _RC5	set	117
  3283  009D                     _ADCON0bits	set	157
  3284  009C                     _ADRESH	set	156
  3285  009B                     _ADRESL	set	155
  3286  009F                     _ADACT	set	159
  3287  009E                     _ADCON1	set	158
  3288  009D                     _ADCON0	set	157
  3289  0119                     _RC1REG	set	281
  3290  011D                     _RC1STAbits	set	285
  3291  011A                     _TX1REG	set	282
  3292  011E                     _TX1STAbits	set	286
  3293  011C                     _SP1BRGH	set	284
  3294  011B                     _SP1BRGL	set	283
  3295  011E                     _TX1STA	set	286
  3296  011D                     _RC1STA	set	285
  3297  011F                     _BAUD1CON	set	287
  3298  018C                     _SSP1BUF	set	396
  3299  018D                     _SSP1ADD	set	397
  3300  0191                     _SSP1CON2	set	401
  3301  0190                     _SSP1CON1	set	400
  3302  018F                     _SSP1STAT	set	399
  3303  0190                     _SSP1CON1bits	set	400
  3304  059E                     _T0CON0bits	set	1438
  3305  059E                     _T0CON0	set	1438
  3306  059C                     _TMR0L	set	1436
  3307  059D                     _TMR0H	set	1437
  3308  059F                     _T0CON1	set	1439
  3309  0716                     _PIE0bits	set	1814
  3310  070C                     _PIR0bits	set	1804
  3311  0719                     _PIE3bits	set	1817
  3312  070F                     _PIR3bits	set	1807
  3313  079B                     _PMD5	set	1947
  3314  079A                     _PMD4	set	1946
  3315  0799                     _PMD3	set	1945
  3316  0798                     _PMD2	set	1944
  3317  0797                     _PMD1	set	1943
  3318  0796                     _PMD0	set	1942
  3319  0892                     _OSCTUNE	set	2194
  3320  0890                     _OSCSTAT	set	2192
  3321  0893                     _OSCFRQ	set	2195
  3322  0891                     _OSCEN	set	2193
  3323  088F                     _OSCCON3	set	2191
  3324  088D                     _OSCCON1	set	2189
  3325  1ECB                     _RX1DTPPSbits	set	7883
  3326  1EC6                     _SSP1DATPPSbits	set	7878
  3327  1EC5                     _SSP1CLKPPSbits	set	7877
  3328  1F22                     _RC2PPS	set	7970
  3329  1F24                     _RC4PPS	set	7972
  3330  1F20                     _RC0PPS	set	7968
  3331  1F50                     _ODCONC	set	8016
  3332  1F3A                     _ODCONA	set	7994
  3333  1F4F                     _WPUC	set	8015
  3334  1F39                     _WPUA	set	7993
  3335  1F38                     _ANSELA	set	7992
  3336  1F4E                     _ANSELC	set	8014
  3337                           
  3338                           ; #config settings
  3339  0000                     
  3340                           	psect	cinit
  3341  001D                     start_initialization:	
  3342  001D                     __initialization:	
  3343                           
  3344                           ; Initialize objects allocated to BANK0
  3345  001D  3184  24C2  3180   	fcall	__pidataBANK0	;fetch initializer
  3346  0020  00ED               	movwf	__pdataBANK0& (0+127)
  3347  0021  3184  24C3  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3348  0024  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  3349                           
  3350                           ; Initialize objects allocated to BANK2
  3351  0025  30A3               	movlw	low __pidataBANK2
  3352  0026  0084               	movwf	4
  3353  0027  3083               	movlw	(high __pidataBANK2)| (0+128)
  3354  0028  0085               	movwf	5
  3355  0029  3020               	movlw	low __pdataBANK2
  3356  002A  0086               	movwf	6
  3357  002B  3001               	movlw	high __pdataBANK2
  3358  002C  0087               	movwf	7
  3359  002D  301E               	movlw	30
  3360  002E  3184  24A2  3180   	fcall	init_ram
  3361                           
  3362                           ; Clear objects allocated to COMMON
  3363  0031  01F7               	clrf	__pbssCOMMON& (0+127)
  3364  0032  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3365  0033  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3366  0034  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3367  0035  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3368                           
  3369                           ; Clear objects allocated to BANK0
  3370  0036  305F               	movlw	low __pbssBANK0
  3371  0037  0084               	movwf	4
  3372  0038  3000               	movlw	high __pbssBANK0
  3373  0039  0085               	movwf	5
  3374  003A  300C               	movlw	12
  3375  003B  3184  24A8  3180   	fcall	clear_ram0
  3376                           
  3377                           ; Clear objects allocated to BANK1
  3378  003E  30A0               	movlw	low __pbssBANK1
  3379  003F  0084               	movwf	4
  3380  0040  3000               	movlw	high __pbssBANK1
  3381  0041  0085               	movwf	5
  3382  0042  3030               	movlw	48
  3383  0043  3184  24A8  3180   	fcall	clear_ram0
  3384                           
  3385                           ; Clear objects allocated to BANK2
  3386  0046  303E               	movlw	low __pbssBANK2
  3387  0047  0084               	movwf	4
  3388  0048  3001               	movlw	high __pbssBANK2
  3389  0049  0085               	movwf	5
  3390  004A  3018               	movlw	24
  3391  004B  3184  24A8         	fcall	clear_ram0
  3392  004D                     end_of_initialization:	
  3393                           ;End of C runtime variable initialization code
  3394                           
  3395  004D                     __end_of__initialization:	
  3396  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3397  004E  0140               	movlb	0
  3398  004F  3183  2B0D         	ljmp	_main	;jump to C main() function
  3399                           
  3400                           	psect	bssCOMMON
  3401  0077                     __pbssCOMMON:	
  3402  0077                     TMR0_ISR@CountCallBack:	
  3403  0077                     	ds	2
  3404  0079                     _eusart1RxCount:	
  3405  0079                     	ds	1
  3406  007A                     _eusart1RxTail:	
  3407  007A                     	ds	1
  3408  007B                     _eusart1RxHead:	
  3409  007B                     	ds	1
  3410                           
  3411                           	psect	bssBANK0
  3412  005F                     __pbssBANK0:	
  3413  005F                     _eusart1RxBuffer:	
  3414  005F                     	ds	8
  3415  0067                     conf_sensor@F6602:	
  3416  0067                     	ds	2
  3417  0069                     bmp280_get_config@F6430:	
  3418  0069                     	ds	2
  3419                           
  3420                           	psect	dataBANK0
  3421  006D                     __pdataBANK0:	
  3422  006D                     conf_sensor@F6604:	
  3423  006D                     	ds	2
  3424                           
  3425                           	psect	bssBANK1
  3426  00A0                     __pbssBANK1:	
  3427  00A0                     bmp280_get_uncomp_data@F6465:	
  3428  00A0                     	ds	6
  3429  00A6                     _bmp:	
  3430  00A6                     	ds	42
  3431                           
  3432                           	psect	bssBANK2
  3433  013E                     __pbssBANK2:	
  3434  013E                     get_calib_param@F6534:	
  3435  013E                     	ds	24
  3436                           
  3437                           	psect	dataBANK2
  3438  0120                     __pdataBANK2:	
  3439  0120                     BMP280_SPI_bus_read@F6557:	
  3440  0120                     	ds	30
  3441                           
  3442                           	psect	inittext
  3443  04A2                     init_ram:	
  3444  04A2  00FE               	movwf	126
  3445  04A3                     initloop:	
  3446  04A3  0012               	moviw fsr0++
  3447  04A4  001E               	movwi fsr1++
  3448  04A5  0BFE               	decfsz	126,f
  3449  04A6  2CA3               	goto	initloop
  3450  04A7  3400               	retlw	0
  3451                           
  3452                           	psect	clrtext
  3453  04A8                     clear_ram0:	
  3454                           ;	Called with FSR0 containing the base address, and
  3455                           ;	WREG with the size to clear
  3456                           
  3457  04A8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3458  04A9                     clrloop0:	
  3459  04A9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3460  04AA  3101               	addfsr 0,1
  3461  04AB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3462  04AC  2CA9               	goto	clrloop0	;have we reached the end yet?
  3463  04AD  3400               	retlw	0	;all done for this memory range, return
  3464                           
  3465                           	psect	cstackBANK1
  3466  00D0                     __pcstackBANK1:	
  3467  00D0                     get_calib_param@temp:	
  3468                           
  3469                           ; 24 bytes @ 0x0
  3470  00D0                     	ds	24
  3471  00E8                     get_calib_param@rslt:	
  3472                           
  3473                           ; 1 bytes @ 0x18
  3474  00E8                     	ds	1
  3475  00E9                     get_calib_param@dev:	
  3476                           
  3477                           ; 1 bytes @ 0x19
  3478  00E9                     	ds	1
  3479                           
  3480                           	psect	cstackCOMMON
  3481  0070                     __pcstackCOMMON:	
  3482  0070                     ?_EUSART1_Initialize:	
  3483  0070                     ?_EUSART1_Receive_ISR:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ?_EUSART1_Write:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?_PMD_Initialize:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ?_PIN_MANAGER_Initialize:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?_OSCILLATOR_Initialize:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ?_ADC_Initialize:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_TMR0_Initialize:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ?_TMR0_StartTimer:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ?_bmp280_init:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ?_null_ptr_check:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     ?_get_calib_param:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     ?_TMR0_DefaultInterruptHandler:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     ??_TMR0_DefaultInterruptHandler:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0070                     ?_TMR0_CallBack:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0070                     ?_SYSTEM_Initialize:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0070                     ?_tmr_fire:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0070                     ?_main:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  0070                     ?_bmp280_soft_reset:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  0070                     ?_TMR0_ISR:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540  0070                     ?_INTERRUPT_InterruptManager:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0070                     ?_ADC_GetConversion:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0070                     EUSART1_Write@txData:	
  3547                           ; 2 bytes @ 0x0
  3548                           
  3549                           
  3550                           ; 1 bytes @ 0x0
  3551  0070                     	ds	1
  3552  0071                     ??_EUSART1_Receive_ISR:	
  3553  0071                     ??_EUSART1_Write:	
  3554                           ; 1 bytes @ 0x1
  3555                           
  3556                           
  3557                           ; 1 bytes @ 0x1
  3558  0071                     	ds	1
  3559  0072                     ??_ADC_GetConversion:	
  3560  0072                     EUSART1_Receive_ISR@a:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563                           
  3564                           ; 1 bytes @ 0x2
  3565  0072                     	ds	1
  3566  0073                     ADC_GetConversion@channel:	
  3567                           
  3568                           ; 1 bytes @ 0x3
  3569  0073                     	ds	1
  3570  0074                     ??_tmr_fire:	
  3571                           
  3572                           ; 1 bytes @ 0x4
  3573  0074                     	ds	1
  3574  0075                     tmr_fire@a:	
  3575                           
  3576                           ; 2 bytes @ 0x5
  3577  0075                     	ds	2
  3578  0077                     ??_TMR0_CallBack:	
  3579  0077                     ??_TMR0_ISR:	
  3580                           ; 1 bytes @ 0x7
  3581                           
  3582  0077                     ??_INTERRUPT_InterruptManager:	
  3583                           ; 1 bytes @ 0x7
  3584                           
  3585                           
  3586                           	psect	cstackBANK0
  3587  0020                     __pcstackBANK0:	
  3588                           ; 1 bytes @ 0x7
  3589                           
  3590  0020                     ?_EUSART1_SetRxInterruptHandler:	
  3591  0020                     ??_PMD_Initialize:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0020                     ??_PIN_MANAGER_Initialize:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0020                     ??_OSCILLATOR_Initialize:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0020                     ??_ADC_Initialize:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0020                     ?_TMR0_SetInterruptHandler:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0020                     ??_TMR0_StartTimer:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0020                     ??_null_ptr_check:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0020                     ?_interleave_data:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0020                     ?_BMP280_delay_msek:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0020                     ?_BMP280_SPI_bus_read:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0020                     ?_BMP280_SPI_bus_write:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0020                     BMP280_SPI_bus_read@dev_addr:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0020                     BMP280_SPI_bus_write@dev_addr:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0020                     interleave_data@temp_buff:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  3637                           ; 2 bytes @ 0x0
  3638                           
  3639  0020                     BMP280_delay_msek@msek:	
  3640                           ; 2 bytes @ 0x0
  3641                           
  3642                           
  3643                           ; 4 bytes @ 0x0
  3644  0020                     	ds	1
  3645  0021                     BMP280_SPI_bus_read@reg_addr:	
  3646  0021                     BMP280_SPI_bus_write@reg_addr:	
  3647                           ; 1 bytes @ 0x1
  3648                           
  3649  0021                     interleave_data@reg_data:	
  3650                           ; 1 bytes @ 0x1
  3651                           
  3652                           
  3653                           ; 1 bytes @ 0x1
  3654  0021                     	ds	1
  3655  0022                     ??_EUSART1_Initialize:	
  3656  0022                     ??_EUSART1_SetRxInterruptHandler:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0022                     ??_TMR0_Initialize:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  0022                     ??_TMR0_SetInterruptHandler:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  0022                     ??_SYSTEM_Initialize:	
  3666                           ; 1 bytes @ 0x2
  3667                           
  3668  0022                     BMP280_SPI_bus_read@reg_data:	
  3669                           ; 1 bytes @ 0x2
  3670                           
  3671  0022                     BMP280_SPI_bus_write@reg_data:	
  3672                           ; 1 bytes @ 0x2
  3673                           
  3674  0022                     null_ptr_check@rslt:	
  3675                           ; 1 bytes @ 0x2
  3676                           
  3677  0022                     interleave_data@len:	
  3678                           ; 1 bytes @ 0x2
  3679                           
  3680                           
  3681                           ; 1 bytes @ 0x2
  3682  0022                     	ds	1
  3683  0023                     ??_interleave_data:	
  3684  0023                     BMP280_SPI_bus_read@cnt:	
  3685                           ; 1 bytes @ 0x3
  3686                           
  3687  0023                     BMP280_SPI_bus_write@cnt:	
  3688                           ; 1 bytes @ 0x3
  3689                           
  3690  0023                     null_ptr_check@dev:	
  3691                           ; 1 bytes @ 0x3
  3692                           
  3693                           
  3694                           ; 1 bytes @ 0x3
  3695  0023                     	ds	1
  3696  0024                     ??_BMP280_delay_msek:	
  3697  0024                     ??_BMP280_SPI_bus_read:	
  3698                           ; 1 bytes @ 0x4
  3699                           
  3700  0024                     ??_BMP280_SPI_bus_write:	
  3701                           ; 1 bytes @ 0x4
  3702                           
  3703  0024                     BMP280_SPI_bus_write@iError:	
  3704                           ; 1 bytes @ 0x4
  3705                           
  3706                           
  3707                           ; 4 bytes @ 0x4
  3708  0024                     	ds	2
  3709  0026                     interleave_data@reg_addr:	
  3710  0026                     BMP280_SPI_bus_read@array:	
  3711                           ; 1 bytes @ 0x6
  3712                           
  3713                           
  3714                           ; 30 bytes @ 0x6
  3715  0026                     	ds	1
  3716  0027                     interleave_data@index:	
  3717                           
  3718                           ; 1 bytes @ 0x7
  3719  0027                     	ds	1
  3720  0028                     ?_bmp280_set_regs:	
  3721  0028                     bmp280_set_regs@reg_data:	
  3722                           ; 1 bytes @ 0x8
  3723                           
  3724                           
  3725                           ; 1 bytes @ 0x8
  3726  0028                     	ds	1
  3727  0029                     bmp280_set_regs@len:	
  3728                           
  3729                           ; 1 bytes @ 0x9
  3730  0029                     	ds	1
  3731  002A                     bmp280_set_regs@dev:	
  3732                           
  3733                           ; 1 bytes @ 0xA
  3734  002A                     	ds	1
  3735  002B                     ??_bmp280_set_regs:	
  3736                           
  3737                           ; 1 bytes @ 0xB
  3738  002B                     	ds	4
  3739  002F                     bmp280_set_regs@temp_buff:	
  3740                           
  3741                           ; 8 bytes @ 0xF
  3742  002F                     	ds	8
  3743  0037                     bmp280_set_regs@temp_len:	
  3744                           
  3745                           ; 2 bytes @ 0x17
  3746  0037                     	ds	2
  3747  0039                     bmp280_set_regs@reg_addr_cnt:	
  3748                           
  3749                           ; 1 bytes @ 0x19
  3750  0039                     	ds	1
  3751  003A                     bmp280_set_regs@rslt:	
  3752                           
  3753                           ; 1 bytes @ 0x1A
  3754  003A                     	ds	1
  3755  003B                     bmp280_set_regs@reg_addr:	
  3756                           
  3757                           ; 1 bytes @ 0x1B
  3758  003B                     	ds	1
  3759  003C                     ??_bmp280_soft_reset:	
  3760                           
  3761                           ; 1 bytes @ 0x1C
  3762  003C                     	ds	3
  3763  003F                     bmp280_soft_reset@soft_rst_cmd:	
  3764                           
  3765                           ; 1 bytes @ 0x1F
  3766  003F                     	ds	1
  3767  0040                     bmp280_soft_reset@rslt:	
  3768                           
  3769                           ; 1 bytes @ 0x20
  3770  0040                     	ds	1
  3771  0041                     bmp280_soft_reset@reg_addr:	
  3772                           
  3773                           ; 1 bytes @ 0x21
  3774  0041                     	ds	1
  3775  0042                     bmp280_soft_reset@dev:	
  3776                           
  3777                           ; 1 bytes @ 0x22
  3778  0042                     	ds	2
  3779  0044                     BMP280_SPI_bus_read@iError:	
  3780                           
  3781                           ; 4 bytes @ 0x24
  3782  0044                     	ds	4
  3783  0048                     BMP280_SPI_bus_read@i:	
  3784                           
  3785                           ; 1 bytes @ 0x28
  3786  0048                     	ds	1
  3787  0049                     BMP280_SPI_bus_read@stringpos:	
  3788                           
  3789                           ; 1 bytes @ 0x29
  3790  0049                     	ds	1
  3791  004A                     ?_bmp280_get_regs:	
  3792  004A                     bmp280_get_regs@reg_data:	
  3793                           ; 1 bytes @ 0x2A
  3794                           
  3795                           
  3796                           ; 1 bytes @ 0x2A
  3797  004A                     	ds	1
  3798  004B                     bmp280_get_regs@len:	
  3799                           
  3800                           ; 1 bytes @ 0x2B
  3801  004B                     	ds	1
  3802  004C                     bmp280_get_regs@dev:	
  3803                           
  3804                           ; 1 bytes @ 0x2C
  3805  004C                     	ds	1
  3806  004D                     ??_bmp280_get_regs:	
  3807                           
  3808                           ; 1 bytes @ 0x2D
  3809  004D                     	ds	4
  3810  0051                     bmp280_get_regs@reg_addr:	
  3811                           
  3812                           ; 1 bytes @ 0x31
  3813  0051                     	ds	1
  3814  0052                     bmp280_get_regs@rslt:	
  3815                           
  3816                           ; 1 bytes @ 0x32
  3817  0052                     	ds	1
  3818  0053                     ??_get_calib_param:	
  3819                           
  3820                           ; 1 bytes @ 0x33
  3821  0053                     	ds	4
  3822  0057                     ??_bmp280_init:	
  3823                           
  3824                           ; 1 bytes @ 0x37
  3825  0057                     	ds	3
  3826  005A                     bmp280_init@try_count:	
  3827                           
  3828                           ; 1 bytes @ 0x3A
  3829  005A                     	ds	1
  3830  005B                     bmp280_init@rslt:	
  3831                           
  3832                           ; 1 bytes @ 0x3B
  3833  005B                     	ds	1
  3834  005C                     bmp280_init@dev:	
  3835                           
  3836                           ; 1 bytes @ 0x3C
  3837  005C                     	ds	1
  3838  005D                     ??_main:	
  3839                           
  3840                           ; 1 bytes @ 0x3D
  3841  005D                     	ds	1
  3842  005E                     main@rslt:	
  3843                           
  3844                           ; 1 bytes @ 0x3E
  3845  005E                     	ds	1
  3846                           
  3847                           	psect	maintext
  3848  030D                     __pmaintext:	
  3849 ;;
  3850 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3851 ;;
  3852 ;; *************** function _main *****************
  3853 ;; Defined at:
  3854 ;;		line 80 in file "main.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  rslt            1   62[BANK0 ] char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : B3F/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;Total ram usage:        2 bytes
  3873 ;; Hardware stack levels required when called:    9
  3874 ;; This function calls:
  3875 ;;		_SYSTEM_Initialize
  3876 ;;		_TMR0_SetInterruptHandler
  3877 ;;		_TMR0_StartTimer
  3878 ;;		_bmp280_init
  3879 ;; This function is called by:
  3880 ;;		Startup code after reset
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _main
  3886  030D                     _main:	
  3887                           
  3888                           ;main.c: 82: SYSTEM_Initialize();
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3892  030D  3184  244F  3183   	fcall	_SYSTEM_Initialize
  3893                           
  3894                           ;main.c: 83: INTCONbits.GIE = 1;
  3895  0310  178B               	bsf	11,7	;volatile
  3896                           
  3897                           ;main.c: 84: INTCONbits.PEIE = 1;
  3898  0311  170B               	bsf	11,6	;volatile
  3899                           
  3900                           ;main.c: 85: TMR0_SetInterruptHandler(tmr_fire);
  3901  0312  30F3               	movlw	low _tmr_fire
  3902  0313  0140               	movlb	0	; select bank0
  3903  0314  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3904  0315  3003               	movlw	high _tmr_fire
  3905  0316  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3906  0317  3184  24AE  3183   	fcall	_TMR0_SetInterruptHandler
  3907                           
  3908                           ;main.c: 86: TMR0_StartTimer();
  3909  031A  3184  24BF  3183   	fcall	_TMR0_StartTimer
  3910                           
  3911                           ;main.c: 87: int8_t rslt;;main.c: 88: bmp.dev_id = 0;
  3912  031D  0141               	movlb	1	; select bank1
  3913  031E  01A7               	clrf	(_bmp^(0+128)+1)
  3914                           
  3915                           ;main.c: 89: bmp.intf = (unsigned char) 0;
  3916  031F  01A8               	clrf	(_bmp^(0+128)+2)
  3917                           
  3918                           ;main.c: 90: bmp.read = BMP280_SPI_bus_read;
  3919  0320  300B               	movlw	low _BMP280_SPI_bus_read
  3920  0321  00A9               	movwf	(low ((_bmp| 0+3)))^(0+128)
  3921  0322  3002               	movlw	high _BMP280_SPI_bus_read
  3922  0323  00AA               	movwf	((low ((_bmp| 0+3)))^(0+128)+1)
  3923                           
  3924                           ;main.c: 91: bmp.write = BMP280_SPI_bus_write;
  3925  0324  3061               	movlw	low _BMP280_SPI_bus_write
  3926  0325  00AB               	movwf	(low ((_bmp| 0+5)))^(0+128)
  3927  0326  3004               	movlw	high _BMP280_SPI_bus_write
  3928  0327  00AC               	movwf	((low ((_bmp| 0+5)))^(0+128)+1)
  3929                           
  3930                           ;main.c: 92: bmp.delay_ms = BMP280_delay_msek;
  3931  0328  30C4               	movlw	low _BMP280_delay_msek
  3932  0329  00AD               	movwf	(low ((_bmp| 0+7)))^(0+128)
  3933  032A  3004               	movlw	high _BMP280_delay_msek
  3934  032B  00AE               	movwf	((low ((_bmp| 0+7)))^(0+128)+1)
  3935                           
  3936                           ;main.c: 94: rslt = bmp280_init(&bmp);
  3937  032C  30A6               	movlw	(low (_bmp| 0))& (0+255)
  3938  032D  3181  217F  3183   	fcall	_bmp280_init
  3939  0330  0140               	movlb	0	; select bank0
  3940  0331  00DD               	movwf	??_main
  3941  0332  085D               	movf	??_main,w
  3942  0333  00DE               	movwf	main@rslt
  3943  0334                     l315:	
  3944                           ;main.c: 96: while(1){
  3945                           
  3946  0334  2B34               	goto	l315
  3947  0335                     __end_of_main:	
  3948                           ;main.c: 98: };main.c: 101: return;
  3949                           
  3950                           
  3951                           	psect	text1
  3952  017F                     __ptext1:	
  3953 ;; *************** function _bmp280_init *****************
  3954 ;; Defined at:
  3955 ;;		line 211 in file "bmp280.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  dev             1    wreg     PTR struct bmp280_dev
  3958 ;;		 -> bmp(42), 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  dev             1   60[BANK0 ] PTR struct bmp280_dev
  3961 ;;		 -> bmp(42), 
  3962 ;;  rslt            1   59[BANK0 ] char 
  3963 ;;  try_count       1   58[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      char 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;Total ram usage:        6 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    8
  3980 ;; This function calls:
  3981 ;;		_BMP280_delay_msek
  3982 ;;		_bmp280_get_regs
  3983 ;;		_bmp280_soft_reset
  3984 ;;		_get_calib_param
  3985 ;;		_null_ptr_check
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _bmp280_init
  3993  017F                     _bmp280_init:	
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _bmp280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3997                           ;bmp280_init@dev stored from wreg
  3998  017F  0140               	movlb	0	; select bank0
  3999  0180  00DC               	movwf	bmp280_init@dev
  4000                           
  4001                           ;bmp280.c: 213: int8_t rslt;;bmp280.c: 215: uint8_t try_count = 5;
  4002  0181  3005               	movlw	5
  4003  0182  00D7               	movwf	??_bmp280_init
  4004  0183  0857               	movf	??_bmp280_init,w
  4005  0184  00DA               	movwf	bmp280_init@try_count
  4006                           
  4007                           ;bmp280.c: 217: rslt = null_ptr_check(dev);
  4008  0185  085C               	movf	bmp280_init@dev,w
  4009  0186  3183  2380  3181   	fcall	_null_ptr_check
  4010  0189  0140               	movlb	0	; select bank0
  4011  018A  00D7               	movwf	??_bmp280_init
  4012  018B  0857               	movf	??_bmp280_init,w
  4013  018C  00DB               	movwf	bmp280_init@rslt
  4014                           
  4015                           ;bmp280.c: 219: if (rslt == (0)) {
  4016  018D  085B               	movf	bmp280_init@rslt,w
  4017  018E  1903               	btfsc	3,2
  4018  018F  29E3               	goto	l2305
  4019  0190  2A09               	goto	l2315
  4020  0191                     l2285:	
  4021                           ;bmp280.c: 220: while (try_count) {
  4022                           
  4023                           
  4024                           ;bmp280.c: 221: rslt = bmp280_get_regs((unsigned char) 0xD0, &dev->chip_id, 1, dev);
  4025  0191  085C               	movf	bmp280_init@dev,w
  4026  0192  00D7               	movwf	??_bmp280_init
  4027  0193  0857               	movf	??_bmp280_init,w
  4028  0194  00CA               	movwf	bmp280_get_regs@reg_data
  4029  0195  01CB               	clrf	bmp280_get_regs@len
  4030  0196  0ACB               	incf	bmp280_get_regs@len,f
  4031  0197  085C               	movf	bmp280_init@dev,w
  4032  0198  00D8               	movwf	??_bmp280_init+1
  4033  0199  0858               	movf	??_bmp280_init+1,w
  4034  019A  00CC               	movwf	bmp280_get_regs@dev
  4035  019B  30D0               	movlw	208
  4036  019C  3182  225E  3181   	fcall	_bmp280_get_regs
  4037  019F  0140               	movlb	0	; select bank0
  4038  01A0  00D9               	movwf	??_bmp280_init+2
  4039  01A1  0859               	movf	??_bmp280_init+2,w
  4040  01A2  00DB               	movwf	bmp280_init@rslt
  4041                           
  4042                           ;bmp280.c: 224: if ((rslt == (0)) && (dev->chip_id == (unsigned char) 0x56;bmp280.c: 225
      +                          : || dev->chip_id == (unsigned char) 0x57;bmp280.c: 226: || dev->chip_id == (unsigned ch
      +                          ar) 0x58)) {
  4043  01A3  085B               	movf	bmp280_init@rslt,w
  4044  01A4  1D03               	btfss	3,2
  4045  01A5  29CF               	goto	l2301
  4046  01A6  085C               	movf	bmp280_init@dev,w
  4047  01A7  0086               	movwf	6
  4048  01A8  0187               	clrf	7
  4049  01A9  3056               	movlw	86
  4050  01AA  0601               	xorwf	1,w
  4051  01AB  1903               	btfsc	3,2
  4052  01AC  29BB               	goto	l2295
  4053  01AD  085C               	movf	bmp280_init@dev,w
  4054  01AE  0086               	movwf	6
  4055  01AF  0187               	clrf	7
  4056  01B0  3057               	movlw	87
  4057  01B1  0601               	xorwf	1,w
  4058  01B2  1903               	btfsc	3,2
  4059  01B3  29BB               	goto	l2295
  4060  01B4  085C               	movf	bmp280_init@dev,w
  4061  01B5  0086               	movwf	6
  4062  01B6  0187               	clrf	7
  4063  01B7  3058               	movlw	88
  4064  01B8  0601               	xorwf	1,w
  4065  01B9  1D03               	btfss	3,2
  4066  01BA  29CF               	goto	l2301
  4067  01BB                     l2295:	
  4068                           
  4069                           ;bmp280.c: 228: rslt = bmp280_soft_reset(dev);
  4070  01BB  085C               	movf	bmp280_init@dev,w
  4071  01BC  3182  22A4  3181   	fcall	_bmp280_soft_reset
  4072  01BF  0140               	movlb	0	; select bank0
  4073  01C0  00D7               	movwf	??_bmp280_init
  4074  01C1  0857               	movf	??_bmp280_init,w
  4075  01C2  00DB               	movwf	bmp280_init@rslt
  4076                           
  4077                           ;bmp280.c: 230: if (rslt == (0))
  4078  01C3  085B               	movf	bmp280_init@rslt,w
  4079  01C4  1D03               	btfss	3,2
  4080  01C5  29E6               	goto	l2307
  4081                           
  4082                           ;bmp280.c: 231: rslt = get_calib_param(dev);
  4083  01C6  085C               	movf	bmp280_init@dev,w
  4084  01C7  3180  2051  3181   	fcall	_get_calib_param
  4085  01CA  0140               	movlb	0	; select bank0
  4086  01CB  00D7               	movwf	??_bmp280_init
  4087  01CC  0857               	movf	??_bmp280_init,w
  4088  01CD  00DB               	movwf	bmp280_init@rslt
  4089                           
  4090                           ;bmp280.c: 232: break;
  4091  01CE  29E6               	goto	l2307
  4092  01CF                     l2301:	
  4093                           
  4094                           ;bmp280.c: 233: };bmp280.c: 236: dev->delay_ms(10);
  4095  01CF  3000               	movlw	0
  4096  01D0  00A3               	movwf	BMP280_delay_msek@msek+3
  4097  01D1  3000               	movlw	0
  4098  01D2  00A2               	movwf	BMP280_delay_msek@msek+2
  4099  01D3  3000               	movlw	0
  4100  01D4  00A1               	movwf	BMP280_delay_msek@msek+1
  4101  01D5  300A               	movlw	10
  4102  01D6  00A0               	movwf	BMP280_delay_msek@msek
  4103  01D7  085C               	movf	bmp280_init@dev,w
  4104  01D8  3E07               	addlw	7
  4105  01D9  0086               	movwf	6
  4106  01DA  0187               	clrf	7
  4107  01DB  3F41               	moviw [1]fsr1
  4108  01DC  008A               	movwf	10
  4109  01DD  3F40               	moviw [0]fsr1
  4110  01DE  000A               	callw
  4111  01DF  3181               	pagesel	$
  4112                           
  4113                           ;bmp280.c: 237: --try_count;
  4114  01E0  3001               	movlw	1
  4115  01E1  0140               	movlb	0	; select bank0
  4116  01E2  02DA               	subwf	bmp280_init@try_count,f
  4117  01E3                     l2305:	
  4118  01E3  085A               	movf	bmp280_init@try_count,w
  4119  01E4  1D03               	btfss	3,2
  4120  01E5  2991               	goto	l2285
  4121  01E6                     l2307:	
  4122                           
  4123                           ;bmp280.c: 238: };bmp280.c: 241: if (!try_count)
  4124  01E6  085A               	movf	bmp280_init@try_count,w
  4125  01E7  1D03               	btfss	3,2
  4126  01E8  29ED               	goto	l2311
  4127                           
  4128                           ;bmp280.c: 242: rslt = (-2);
  4129  01E9  30FE               	movlw	254
  4130  01EA  00D7               	movwf	??_bmp280_init
  4131  01EB  0857               	movf	??_bmp280_init,w
  4132  01EC  00DB               	movwf	bmp280_init@rslt
  4133  01ED                     l2311:	
  4134                           
  4135                           ;bmp280.c: 244: if (rslt == (0)) {
  4136  01ED  085B               	movf	bmp280_init@rslt,w
  4137  01EE  1D03               	btfss	3,2
  4138  01EF  2A09               	goto	l2315
  4139                           
  4140                           ;bmp280.c: 246: dev->conf.filter = (unsigned char) 0x00;
  4141  01F0  085C               	movf	bmp280_init@dev,w
  4142  01F1  3E28               	addlw	40
  4143  01F2  0086               	movwf	6
  4144  01F3  0187               	clrf	7
  4145  01F4  0181               	clrf	1
  4146                           
  4147                           ;bmp280.c: 247: dev->conf.os_pres = (unsigned char) 0x00;
  4148  01F5  085C               	movf	bmp280_init@dev,w
  4149  01F6  3E26               	addlw	38
  4150  01F7  0086               	movwf	6
  4151  01F8  0187               	clrf	7
  4152  01F9  0181               	clrf	1
  4153                           
  4154                           ;bmp280.c: 248: dev->conf.os_temp = (unsigned char) 0x00;
  4155  01FA  085C               	movf	bmp280_init@dev,w
  4156  01FB  3E25               	addlw	37
  4157  01FC  0086               	movwf	6
  4158  01FD  0187               	clrf	7
  4159  01FE  0181               	clrf	1
  4160                           
  4161                           ;bmp280.c: 249: dev->conf.odr = (unsigned char) 0x00;
  4162  01FF  085C               	movf	bmp280_init@dev,w
  4163  0200  3E27               	addlw	39
  4164  0201  0086               	movwf	6
  4165  0202  0187               	clrf	7
  4166  0203  0181               	clrf	1
  4167                           
  4168                           ;bmp280.c: 250: dev->conf.spi3w_en = (unsigned char) 0;
  4169  0204  085C               	movf	bmp280_init@dev,w
  4170  0205  3E29               	addlw	41
  4171  0206  0086               	movwf	6
  4172  0207  0187               	clrf	7
  4173  0208  0181               	clrf	1
  4174  0209                     l2315:	
  4175                           
  4176                           ;bmp280.c: 251: };bmp280.c: 252: };bmp280.c: 254: return rslt;
  4177  0209  085B               	movf	bmp280_init@rslt,w
  4178  020A  0008               	return
  4179  020B                     __end_of_bmp280_init:	
  4180                           
  4181                           	psect	text2
  4182  0051                     __ptext2:	
  4183 ;; *************** function _get_calib_param *****************
  4184 ;; Defined at:
  4185 ;;		line 619 in file "bmp280.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  dev             1    wreg     PTR struct bmp280_dev
  4188 ;;		 -> bmp(42), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  dev             1   25[BANK1 ] PTR struct bmp280_dev
  4191 ;;		 -> bmp(42), 
  4192 ;;  temp           24    0[BANK1 ] unsigned char [24]
  4193 ;;  rslt            1   24[BANK1 ] char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         0       4      26       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:       30 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    7
  4210 ;; This function calls:
  4211 ;;		_bmp280_get_regs
  4212 ;;		_null_ptr_check
  4213 ;; This function is called by:
  4214 ;;		_bmp280_init
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _get_calib_param
  4220  0051                     _get_calib_param:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _get_calib_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4224                           ;get_calib_param@dev stored from wreg
  4225  0051  0141               	movlb	1	; select bank1
  4226  0052  00E9               	movwf	get_calib_param@dev^(0+128)
  4227                           
  4228                           ;bmp280.c: 621: int8_t rslt;;bmp280.c: 622: uint8_t temp[(unsigned char) 24] = {0};
  4229  0053  303E               	movlw	low get_calib_param@F6534
  4230  0054  0086               	movwf	6
  4231  0055  3001               	movlw	high get_calib_param@F6534
  4232  0056  0087               	movwf	7
  4233  0057  30D0               	movlw	low get_calib_param@temp
  4234  0058  0084               	movwf	4
  4235  0059  3000               	movlw	high get_calib_param@temp
  4236  005A  0085               	movwf	5
  4237  005B  3018               	movlw	24
  4238  005C  0140               	movlb	0	; select bank0
  4239  005D  00D3               	movwf	??_get_calib_param
  4240  005E                     u1400:	
  4241  005E  0016               	moviw fsr1++
  4242  005F  001A               	movwi fsr0++
  4243  0060  0BD3               	decfsz	??_get_calib_param,f
  4244  0061  285E               	goto	u1400
  4245                           
  4246                           ;bmp280.c: 624: rslt = null_ptr_check(dev);
  4247  0062  0141               	movlb	1	; select bank1
  4248  0063  0869               	movf	get_calib_param@dev^(0+128),w
  4249  0064  3183  2380  3180   	fcall	_null_ptr_check
  4250  0067  0140               	movlb	0	; select bank0
  4251  0068  00D3               	movwf	??_get_calib_param
  4252  0069  0853               	movf	??_get_calib_param,w
  4253  006A  0141               	movlb	1	; select bank1
  4254  006B  00E8               	movwf	get_calib_param@rslt^(0+128)
  4255                           
  4256                           ;bmp280.c: 626: if (rslt == (0)) {
  4257  006C  0868               	movf	get_calib_param@rslt^(0+128),w
  4258  006D  1D03               	btfss	3,2
  4259  006E  28EA               	goto	l1841
  4260                           
  4261                           ;bmp280.c: 627: rslt = bmp280_get_regs((unsigned char) 0x88, temp, (unsigned char) 24, d
      +                          ev);
  4262  006F  30D0               	movlw	(low (get_calib_param@temp| 0))& (0+255)
  4263  0070  0140               	movlb	0	; select bank0
  4264  0071  00D3               	movwf	??_get_calib_param
  4265  0072  0853               	movf	??_get_calib_param,w
  4266  0073  00CA               	movwf	bmp280_get_regs@reg_data
  4267  0074  3018               	movlw	24
  4268  0075  00D4               	movwf	??_get_calib_param+1
  4269  0076  0854               	movf	??_get_calib_param+1,w
  4270  0077  00CB               	movwf	bmp280_get_regs@len
  4271  0078  0141               	movlb	1	; select bank1
  4272  0079  0869               	movf	get_calib_param@dev^(0+128),w
  4273  007A  0140               	movlb	0	; select bank0
  4274  007B  00D5               	movwf	??_get_calib_param+2
  4275  007C  0855               	movf	??_get_calib_param+2,w
  4276  007D  00CC               	movwf	bmp280_get_regs@dev
  4277  007E  3088               	movlw	136
  4278  007F  3182  225E  3180   	fcall	_bmp280_get_regs
  4279  0082  0140               	movlb	0	; select bank0
  4280  0083  00D6               	movwf	??_get_calib_param+3
  4281  0084  0856               	movf	??_get_calib_param+3,w
  4282  0085  0141               	movlb	1	; select bank1
  4283  0086  00E8               	movwf	get_calib_param@rslt^(0+128)
  4284                           
  4285                           ;bmp280.c: 629: if (rslt == (0)) {
  4286  0087  0868               	movf	get_calib_param@rslt^(0+128),w
  4287  0088  1D03               	btfss	3,2
  4288  0089  28EA               	goto	l1841
  4289                           
  4290                           ;bmp280.c: 630: dev->calib_param.dig_t1 = (uint16_t) (((uint16_t) temp[(unsigned char) 1
      +                          ] << 8);bmp280.c: 631: | ((uint16_t) temp[(unsigned char) 0]));
  4291  008A  0869               	movf	get_calib_param@dev^(0+128),w
  4292  008B  3E09               	addlw	9
  4293  008C  0086               	movwf	6
  4294  008D  0187               	clrf	7
  4295  008E  0850               	movf	get_calib_param@temp^(0+128),w
  4296  008F  3FC0               	movwi [0]fsr1
  4297  0090  0851               	movf	(get_calib_param@temp^(0+128)+1),w
  4298  0091  3FC1               	movwi [1]fsr1
  4299                           
  4300                           ;bmp280.c: 632: dev->calib_param.dig_t2 = (int16_t) (((int16_t) temp[(unsigned char) 3] 
      +                          << 8);bmp280.c: 633: | ((int16_t) temp[(unsigned char) 2]));
  4301  0092  0869               	movf	get_calib_param@dev^(0+128),w
  4302  0093  3E0B               	addlw	11
  4303  0094  0086               	movwf	6
  4304  0095  0187               	clrf	7
  4305  0096  0852               	movf	(get_calib_param@temp^(0+128)+2),w
  4306  0097  3FC0               	movwi [0]fsr1
  4307  0098  0853               	movf	(get_calib_param@temp^(0+128)+3),w
  4308  0099  3FC1               	movwi [1]fsr1
  4309                           
  4310                           ;bmp280.c: 634: dev->calib_param.dig_t3 = (int16_t) (((int16_t) temp[(unsigned char) 5] 
      +                          << 8);bmp280.c: 635: | ((int16_t) temp[(unsigned char) 4]));
  4311  009A  0869               	movf	get_calib_param@dev^(0+128),w
  4312  009B  3E0D               	addlw	13
  4313  009C  0086               	movwf	6
  4314  009D  0187               	clrf	7
  4315  009E  0854               	movf	(get_calib_param@temp^(0+128)+4),w
  4316  009F  3FC0               	movwi [0]fsr1
  4317  00A0  0855               	movf	(get_calib_param@temp^(0+128)+5),w
  4318  00A1  3FC1               	movwi [1]fsr1
  4319                           
  4320                           ;bmp280.c: 636: dev->calib_param.dig_p1 = (uint16_t) (((uint16_t) temp[(unsigned char) 7
      +                          ] << 8);bmp280.c: 637: | ((uint16_t) temp[(unsigned char) 6]));
  4321  00A2  0869               	movf	get_calib_param@dev^(0+128),w
  4322  00A3  3E0F               	addlw	15
  4323  00A4  0086               	movwf	6
  4324  00A5  0187               	clrf	7
  4325  00A6  0856               	movf	(get_calib_param@temp^(0+128)+6),w
  4326  00A7  3FC0               	movwi [0]fsr1
  4327  00A8  0857               	movf	(get_calib_param@temp^(0+128)+7),w
  4328  00A9  3FC1               	movwi [1]fsr1
  4329                           
  4330                           ;bmp280.c: 638: dev->calib_param.dig_p2 = (int16_t) (((int16_t) temp[(unsigned char) 9] 
      +                          << 8);bmp280.c: 639: | ((int16_t) temp[(unsigned char) 8]));
  4331  00AA  0869               	movf	get_calib_param@dev^(0+128),w
  4332  00AB  3E11               	addlw	17
  4333  00AC  0086               	movwf	6
  4334  00AD  0187               	clrf	7
  4335  00AE  0858               	movf	(get_calib_param@temp^(0+128)+8),w
  4336  00AF  3FC0               	movwi [0]fsr1
  4337  00B0  0859               	movf	(get_calib_param@temp^(0+128)+9),w
  4338  00B1  3FC1               	movwi [1]fsr1
  4339                           
  4340                           ;bmp280.c: 640: dev->calib_param.dig_p3 = (int16_t) (((int16_t) temp[(unsigned char) 11]
      +                           << 8);bmp280.c: 641: | ((int16_t) temp[(unsigned char) 10]));
  4341  00B2  0869               	movf	get_calib_param@dev^(0+128),w
  4342  00B3  3E13               	addlw	19
  4343  00B4  0086               	movwf	6
  4344  00B5  0187               	clrf	7
  4345  00B6  085A               	movf	(get_calib_param@temp^(0+128)+10),w
  4346  00B7  3FC0               	movwi [0]fsr1
  4347  00B8  085B               	movf	(get_calib_param@temp^(0+128)+11),w
  4348  00B9  3FC1               	movwi [1]fsr1
  4349                           
  4350                           ;bmp280.c: 642: dev->calib_param.dig_p4 = (int16_t) (((int16_t) temp[(unsigned char) 13]
      +                           << 8);bmp280.c: 643: | ((int16_t) temp[(unsigned char) 12]));
  4351  00BA  0869               	movf	get_calib_param@dev^(0+128),w
  4352  00BB  3E15               	addlw	21
  4353  00BC  0086               	movwf	6
  4354  00BD  0187               	clrf	7
  4355  00BE  085C               	movf	(get_calib_param@temp^(0+128)+12),w
  4356  00BF  3FC0               	movwi [0]fsr1
  4357  00C0  085D               	movf	(get_calib_param@temp^(0+128)+13),w
  4358  00C1  3FC1               	movwi [1]fsr1
  4359                           
  4360                           ;bmp280.c: 644: dev->calib_param.dig_p5 = (int16_t) (((int16_t) temp[(unsigned char) 15]
      +                           << 8);bmp280.c: 645: | ((int16_t) temp[(unsigned char) 14]));
  4361  00C2  0869               	movf	get_calib_param@dev^(0+128),w
  4362  00C3  3E17               	addlw	23
  4363  00C4  0086               	movwf	6
  4364  00C5  0187               	clrf	7
  4365  00C6  085E               	movf	(get_calib_param@temp^(0+128)+14),w
  4366  00C7  3FC0               	movwi [0]fsr1
  4367  00C8  085F               	movf	(get_calib_param@temp^(0+128)+15),w
  4368  00C9  3FC1               	movwi [1]fsr1
  4369                           
  4370                           ;bmp280.c: 646: dev->calib_param.dig_p6 = (int16_t) (((int16_t) temp[(unsigned char) 17]
      +                           << 8);bmp280.c: 647: | ((int16_t) temp[(unsigned char) 16]));
  4371  00CA  0869               	movf	get_calib_param@dev^(0+128),w
  4372  00CB  3E19               	addlw	25
  4373  00CC  0086               	movwf	6
  4374  00CD  0187               	clrf	7
  4375  00CE  0860               	movf	(get_calib_param@temp^(0+128)+16),w
  4376  00CF  3FC0               	movwi [0]fsr1
  4377  00D0  0861               	movf	(get_calib_param@temp^(0+128)+17),w
  4378  00D1  3FC1               	movwi [1]fsr1
  4379                           
  4380                           ;bmp280.c: 648: dev->calib_param.dig_p7 = (int16_t) (((int16_t) temp[(unsigned char) 19]
      +                           << 8);bmp280.c: 649: | ((int16_t) temp[(unsigned char) 18]));
  4381  00D2  0869               	movf	get_calib_param@dev^(0+128),w
  4382  00D3  3E1B               	addlw	27
  4383  00D4  0086               	movwf	6
  4384  00D5  0187               	clrf	7
  4385  00D6  0862               	movf	(get_calib_param@temp^(0+128)+18),w
  4386  00D7  3FC0               	movwi [0]fsr1
  4387  00D8  0863               	movf	(get_calib_param@temp^(0+128)+19),w
  4388  00D9  3FC1               	movwi [1]fsr1
  4389                           
  4390                           ;bmp280.c: 650: dev->calib_param.dig_p8 = (int16_t) (((int16_t) temp[(unsigned char) 21]
      +                           << 8);bmp280.c: 651: | ((int16_t) temp[(unsigned char) 20]));
  4391  00DA  0869               	movf	get_calib_param@dev^(0+128),w
  4392  00DB  3E1D               	addlw	29
  4393  00DC  0086               	movwf	6
  4394  00DD  0187               	clrf	7
  4395  00DE  0864               	movf	(get_calib_param@temp^(0+128)+20),w
  4396  00DF  3FC0               	movwi [0]fsr1
  4397  00E0  0865               	movf	(get_calib_param@temp^(0+128)+21),w
  4398  00E1  3FC1               	movwi [1]fsr1
  4399                           
  4400                           ;bmp280.c: 652: dev->calib_param.dig_p9 = (int16_t) (((int16_t) temp[(unsigned char) 23]
      +                           << 8);bmp280.c: 653: | ((int16_t) temp[(unsigned char) 22]));
  4401  00E2  0869               	movf	get_calib_param@dev^(0+128),w
  4402  00E3  3E1F               	addlw	31
  4403  00E4  0086               	movwf	6
  4404  00E5  0187               	clrf	7
  4405  00E6  0866               	movf	(get_calib_param@temp^(0+128)+22),w
  4406  00E7  3FC0               	movwi [0]fsr1
  4407  00E8  0867               	movf	(get_calib_param@temp^(0+128)+23),w
  4408  00E9  3FC1               	movwi [1]fsr1
  4409  00EA                     l1841:	
  4410                           
  4411                           ;bmp280.c: 654: };bmp280.c: 655: };bmp280.c: 657: return rslt;
  4412  00EA  0868               	movf	get_calib_param@rslt^(0+128),w
  4413  00EB  0008               	return
  4414  00EC                     __end_of_get_calib_param:	
  4415                           
  4416                           	psect	text3
  4417  025E                     __ptext3:	
  4418 ;; *************** function _bmp280_get_regs *****************
  4419 ;; Defined at:
  4420 ;;		line 114 in file "bmp280.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  reg_addr        1    wreg     unsigned char 
  4423 ;;  reg_data        1   42[BANK0 ] PTR unsigned char 
  4424 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4425 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4426 ;;  len             1   43[BANK0 ] unsigned char 
  4427 ;;  dev             1   44[BANK0 ] PTR const struct bmp280_
  4428 ;;		 -> bmp(42), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  reg_addr        1   49[BANK0 ] unsigned char 
  4431 ;;  rslt            1   50[BANK0 ] char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      char 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:        9 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    6
  4448 ;; This function calls:
  4449 ;;		_BMP280_SPI_bus_read
  4450 ;;		_null_ptr_check
  4451 ;; This function is called by:
  4452 ;;		_bmp280_init
  4453 ;;		_get_calib_param
  4454 ;;		_bmp280_get_config
  4455 ;;		_bmp280_get_status
  4456 ;;		_bmp280_get_power_mode
  4457 ;;		_bmp280_get_uncomp_data
  4458 ;;		_conf_sensor
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _bmp280_get_regs
  4464  025E                     _bmp280_get_regs:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _bmp280_get_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4468                           ;bmp280_get_regs@reg_addr stored from wreg
  4469  025E  0140               	movlb	0	; select bank0
  4470  025F  00D1               	movwf	bmp280_get_regs@reg_addr
  4471                           
  4472                           ;bmp280.c: 116: int8_t rslt;;bmp280.c: 118: rslt = null_ptr_check(dev);
  4473  0260  084C               	movf	bmp280_get_regs@dev,w
  4474  0261  3183  2380  3182   	fcall	_null_ptr_check
  4475  0264  0140               	movlb	0	; select bank0
  4476  0265  00CD               	movwf	??_bmp280_get_regs
  4477  0266  084D               	movf	??_bmp280_get_regs,w
  4478  0267  00D2               	movwf	bmp280_get_regs@rslt
  4479                           
  4480                           ;bmp280.c: 120: if ((rslt == (0)) && (reg_data != (0))) {
  4481  0268  0852               	movf	bmp280_get_regs@rslt,w
  4482  0269  1D03               	btfss	3,2
  4483  026A  2AA0               	goto	l331
  4484  026B  084A               	movf	bmp280_get_regs@reg_data,w
  4485  026C  1903               	btfsc	3,2
  4486  026D  2AA0               	goto	l331
  4487                           
  4488                           ;bmp280.c: 122: if (dev->intf == (unsigned char) 0)
  4489  026E  084C               	movf	bmp280_get_regs@dev,w
  4490  026F  3E02               	addlw	2
  4491  0270  0086               	movwf	6
  4492  0271  0187               	clrf	7
  4493  0272  0801               	movf	1,w
  4494  0273  1D03               	btfss	3,2
  4495  0274  2A7A               	goto	l1687
  4496                           
  4497                           ;bmp280.c: 123: reg_addr = reg_addr | 0x80;
  4498  0275  0851               	movf	bmp280_get_regs@reg_addr,w
  4499  0276  3880               	iorlw	128
  4500  0277  00CD               	movwf	??_bmp280_get_regs
  4501  0278  084D               	movf	??_bmp280_get_regs,w
  4502  0279  00D1               	movwf	bmp280_get_regs@reg_addr
  4503  027A                     l1687:	
  4504                           
  4505                           ;bmp280.c: 125: rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
  4506  027A  084C               	movf	bmp280_get_regs@dev,w
  4507  027B  0086               	movwf	6
  4508  027C  0187               	clrf	7
  4509  027D  3F41               	moviw [1]fsr1
  4510  027E  00A0               	movwf	BMP280_SPI_bus_read@dev_addr
  4511  027F  0851               	movf	bmp280_get_regs@reg_addr,w
  4512  0280  00CD               	movwf	??_bmp280_get_regs
  4513  0281  084D               	movf	??_bmp280_get_regs,w
  4514  0282  00A1               	movwf	BMP280_SPI_bus_read@reg_addr
  4515  0283  084A               	movf	bmp280_get_regs@reg_data,w
  4516  0284  00CE               	movwf	??_bmp280_get_regs+1
  4517  0285  084E               	movf	??_bmp280_get_regs+1,w
  4518  0286  00A2               	movwf	BMP280_SPI_bus_read@reg_data
  4519  0287  084B               	movf	bmp280_get_regs@len,w
  4520  0288  00CF               	movwf	??_bmp280_get_regs+2
  4521  0289  084F               	movf	??_bmp280_get_regs+2,w
  4522  028A  00A3               	movwf	BMP280_SPI_bus_read@cnt
  4523  028B  084C               	movf	bmp280_get_regs@dev,w
  4524  028C  3E03               	addlw	3
  4525  028D  0086               	movwf	6
  4526  028E  0187               	clrf	7
  4527  028F  3F41               	moviw [1]fsr1
  4528  0290  008A               	movwf	10
  4529  0291  3F40               	moviw [0]fsr1
  4530  0292  000A               	callw
  4531  0293  3182               	pagesel	$
  4532  0294  0140               	movlb	0	; select bank0
  4533  0295  00D0               	movwf	??_bmp280_get_regs+3
  4534  0296  0850               	movf	??_bmp280_get_regs+3,w
  4535  0297  00D2               	movwf	bmp280_get_regs@rslt
  4536                           
  4537                           ;bmp280.c: 127: if (rslt != (0))
  4538  0298  0852               	movf	bmp280_get_regs@rslt,w
  4539  0299  1903               	btfsc	3,2
  4540  029A  2AA2               	goto	l1693
  4541                           
  4542                           ;bmp280.c: 128: rslt = (-4);
  4543  029B  30FC               	movlw	252
  4544  029C  00CD               	movwf	??_bmp280_get_regs
  4545  029D  084D               	movf	??_bmp280_get_regs,w
  4546  029E  00D2               	movwf	bmp280_get_regs@rslt
  4547                           
  4548                           ;bmp280.c: 129: } else {
  4549  029F  2AA2               	goto	l1693
  4550  02A0                     l331:	
  4551                           
  4552                           ;bmp280.c: 130: rslt = (-1);
  4553  02A0  01D2               	clrf	bmp280_get_regs@rslt
  4554  02A1  03D2               	decf	bmp280_get_regs@rslt,f
  4555  02A2                     l1693:	
  4556                           
  4557                           ;bmp280.c: 131: };bmp280.c: 133: return rslt;
  4558  02A2  0852               	movf	bmp280_get_regs@rslt,w
  4559  02A3  0008               	return
  4560  02A4                     __end_of_bmp280_get_regs:	
  4561                           
  4562                           	psect	text4
  4563  020B                     __ptext4:	
  4564 ;; *************** function _BMP280_SPI_bus_read *****************
  4565 ;; Defined at:
  4566 ;;		line 35 in file "main.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dev_addr        1    0[BANK0 ] unsigned char 
  4569 ;;  reg_addr        1    1[BANK0 ] unsigned char 
  4570 ;;  reg_data        1    2[BANK0 ] PTR unsigned char 
  4571 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4572 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4573 ;;  cnt             1    3[BANK0 ] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  array          30    6[BANK0 ] char [30]
  4576 ;;  iError          4   36[BANK0 ] long 
  4577 ;;  stringpos       1   41[BANK0 ] unsigned char 
  4578 ;;  i               1   40[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      char 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;Total ram usage:       42 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    5
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;;		_bmp280_get_regs
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _BMP280_SPI_bus_read
  4605  020B                     _BMP280_SPI_bus_read:	
  4606                           
  4607                           ;main.c: 37: _delay((unsigned long)((1)*(4000000/4000.0)));
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _BMP280_SPI_bus_read: [wreg-fsr1h+status,2+status,0]
  4611  020B  30C8               	movlw	200
  4612  020C                     u2537:	
  4613  020C  3200               	nop2
  4614  020D  0B89               	decfsz	9,f
  4615  020E  2A0C               	goto	u2537
  4616                           
  4617                           ;main.c: 38: int32_t iError=(0);
  4618  020F  3000               	movlw	0
  4619  0210  0140               	movlb	0	; select bank0
  4620  0211  00C7               	movwf	BMP280_SPI_bus_read@iError+3
  4621  0212  3000               	movlw	0
  4622  0213  00C6               	movwf	BMP280_SPI_bus_read@iError+2
  4623  0214  3000               	movlw	0
  4624  0215  00C5               	movwf	BMP280_SPI_bus_read@iError+1
  4625  0216  3000               	movlw	0
  4626  0217  00C4               	movwf	BMP280_SPI_bus_read@iError
  4627                           
  4628                           ;main.c: 39: int8_t array[30]={0xFF};
  4629  0218  3020               	movlw	low BMP280_SPI_bus_read@F6557
  4630  0219  0086               	movwf	6
  4631  021A  3001               	movlw	high BMP280_SPI_bus_read@F6557
  4632  021B  0087               	movwf	7
  4633  021C  3026               	movlw	low BMP280_SPI_bus_read@array
  4634  021D  0084               	movwf	4
  4635  021E  3000               	movlw	high BMP280_SPI_bus_read@array
  4636  021F  0085               	movwf	5
  4637  0220  301E               	movlw	30
  4638  0221  00A4               	movwf	??_BMP280_SPI_bus_read
  4639  0222                     u1180:	
  4640  0222  0016               	moviw fsr1++
  4641  0223  001A               	movwi fsr0++
  4642  0224  0BA4               	decfsz	??_BMP280_SPI_bus_read,f
  4643  0225  2A22               	goto	u1180
  4644                           
  4645                           ;main.c: 40: uint8_t stringpos;;main.c: 41: array[0] = reg_addr|0x80;
  4646  0226  0821               	movf	BMP280_SPI_bus_read@reg_addr,w
  4647  0227  3880               	iorlw	-128
  4648  0228  00A4               	movwf	??_BMP280_SPI_bus_read
  4649  0229  0824               	movf	??_BMP280_SPI_bus_read,w
  4650  022A  00A6               	movwf	BMP280_SPI_bus_read@array
  4651                           
  4652                           ;main.c: 43: uint8_t i;;main.c: 45: for (i=0; i<cnt+1; i++){
  4653  022B  01C8               	clrf	BMP280_SPI_bus_read@i
  4654  022C                     l1625:	
  4655  022C  0823               	movf	BMP280_SPI_bus_read@cnt,w
  4656  022D  3E01               	addlw	1
  4657  022E  00A4               	movwf	??_BMP280_SPI_bus_read
  4658  022F  3000               	movlw	0
  4659  0230  1803               	skipnc
  4660  0231  3001               	movlw	1
  4661  0232  00A5               	movwf	??_BMP280_SPI_bus_read+1
  4662  0233  0825               	movf	??_BMP280_SPI_bus_read+1,w
  4663  0234  3A80               	xorlw	128
  4664  0235  3C80               	sublw	128
  4665  0236  1D03               	skipz
  4666  0237  2A3A               	goto	u1195
  4667  0238  0824               	movf	??_BMP280_SPI_bus_read,w
  4668  0239  0248               	subwf	BMP280_SPI_bus_read@i,w
  4669  023A                     u1195:	
  4670  023A  1803               	btfsc	3,0
  4671  023B  2A42               	goto	l1627
  4672  023C  3001               	movlw	1
  4673  023D  0140               	movlb	0	; select bank0
  4674  023E  00A4               	movwf	??_BMP280_SPI_bus_read
  4675  023F  0824               	movf	??_BMP280_SPI_bus_read,w
  4676  0240  07C8               	addwf	BMP280_SPI_bus_read@i,f
  4677  0241  2A2C               	goto	l1625
  4678  0242                     l1627:	
  4679                           
  4680                           ;main.c: 47: };main.c: 50: for (stringpos = 0; stringpos < cnt; stringpos++) {
  4681  0242  0140               	movlb	0	; select bank0
  4682  0243  01C9               	clrf	BMP280_SPI_bus_read@stringpos
  4683  0244                     l1633:	
  4684  0244  0823               	movf	BMP280_SPI_bus_read@cnt,w
  4685  0245  0249               	subwf	BMP280_SPI_bus_read@stringpos,w
  4686  0246  1803               	btfsc	3,0
  4687  0247  2A5C               	goto	l1635
  4688                           
  4689                           ;main.c: 51: *(reg_data + stringpos) = array[stringpos+1];
  4690  0248  0849               	movf	BMP280_SPI_bus_read@stringpos,w
  4691  0249  3E01               	addlw	1
  4692  024A  3E26               	addlw	(low (BMP280_SPI_bus_read@array| 0))& (0+255)
  4693  024B  0086               	movwf	6
  4694  024C  0187               	clrf	7
  4695  024D  0801               	movf	1,w
  4696  024E  00A4               	movwf	??_BMP280_SPI_bus_read
  4697  024F  0849               	movf	BMP280_SPI_bus_read@stringpos,w
  4698  0250  0722               	addwf	BMP280_SPI_bus_read@reg_data,w
  4699  0251  00A5               	movwf	??_BMP280_SPI_bus_read+1
  4700  0252  0825               	movf	??_BMP280_SPI_bus_read+1,w
  4701  0253  0086               	movwf	6
  4702  0254  0187               	clrf	7
  4703  0255  0824               	movf	??_BMP280_SPI_bus_read,w
  4704  0256  0081               	movwf	1
  4705  0257  3001               	movlw	1
  4706  0258  00A4               	movwf	??_BMP280_SPI_bus_read
  4707  0259  0824               	movf	??_BMP280_SPI_bus_read,w
  4708  025A  07C9               	addwf	BMP280_SPI_bus_read@stringpos,f
  4709  025B  2A44               	goto	l1633
  4710  025C                     l1635:	
  4711                           
  4712                           ;main.c: 52: };main.c: 53: return (int8_t)iError;
  4713  025C  0844               	movf	BMP280_SPI_bus_read@iError,w
  4714  025D  0008               	return
  4715  025E                     __end_of_BMP280_SPI_bus_read:	
  4716                           
  4717                           	psect	text5
  4718  02A4                     __ptext5:	
  4719 ;; *************** function _bmp280_soft_reset *****************
  4720 ;; Defined at:
  4721 ;;		line 189 in file "bmp280.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  dev             1    wreg     PTR const struct bmp280_
  4724 ;;		 -> bmp(42), 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  dev             1   34[BANK0 ] PTR const struct bmp280_
  4727 ;;		 -> bmp(42), 
  4728 ;;  reg_addr        1   33[BANK0 ] unsigned char 
  4729 ;;  rslt            1   32[BANK0 ] char 
  4730 ;;  soft_rst_cmd    1   31[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      char 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;Total ram usage:        7 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    7
  4747 ;; This function calls:
  4748 ;;		_BMP280_delay_msek
  4749 ;;		_bmp280_set_regs
  4750 ;;		_null_ptr_check
  4751 ;; This function is called by:
  4752 ;;		_bmp280_init
  4753 ;;		_conf_sensor
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _bmp280_soft_reset
  4759  02A4                     _bmp280_soft_reset:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _bmp280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4763                           ;bmp280_soft_reset@dev stored from wreg
  4764  02A4  0140               	movlb	0	; select bank0
  4765  02A5  00C2               	movwf	bmp280_soft_reset@dev
  4766                           
  4767                           ;bmp280.c: 191: int8_t rslt;;bmp280.c: 192: uint8_t reg_addr = (unsigned char) 0xE0;
  4768  02A6  30E0               	movlw	224
  4769  02A7  00BC               	movwf	??_bmp280_soft_reset
  4770  02A8  083C               	movf	??_bmp280_soft_reset,w
  4771  02A9  00C1               	movwf	bmp280_soft_reset@reg_addr
  4772                           
  4773                           ;bmp280.c: 193: uint8_t soft_rst_cmd = (unsigned char) 0xB6;
  4774  02AA  30B6               	movlw	182
  4775  02AB  00BC               	movwf	??_bmp280_soft_reset
  4776  02AC  083C               	movf	??_bmp280_soft_reset,w
  4777  02AD  00BF               	movwf	bmp280_soft_reset@soft_rst_cmd
  4778                           
  4779                           ;bmp280.c: 195: rslt = null_ptr_check(dev);
  4780  02AE  0842               	movf	bmp280_soft_reset@dev,w
  4781  02AF  3183  2380  3182   	fcall	_null_ptr_check
  4782  02B2  0140               	movlb	0	; select bank0
  4783  02B3  00BC               	movwf	??_bmp280_soft_reset
  4784  02B4  083C               	movf	??_bmp280_soft_reset,w
  4785  02B5  00C0               	movwf	bmp280_soft_reset@rslt
  4786                           
  4787                           ;bmp280.c: 197: if (rslt == (0)) {
  4788  02B6  0840               	movf	bmp280_soft_reset@rslt,w
  4789  02B7  1D03               	btfss	3,2
  4790  02B8  2ADC               	goto	l2259
  4791                           
  4792                           ;bmp280.c: 198: rslt = bmp280_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
  4793  02B9  303F               	movlw	(low (bmp280_soft_reset@soft_rst_cmd| 0))& (0+255)
  4794  02BA  00BC               	movwf	??_bmp280_soft_reset
  4795  02BB  083C               	movf	??_bmp280_soft_reset,w
  4796  02BC  00A8               	movwf	bmp280_set_regs@reg_data
  4797  02BD  01A9               	clrf	bmp280_set_regs@len
  4798  02BE  0AA9               	incf	bmp280_set_regs@len,f
  4799  02BF  0842               	movf	bmp280_soft_reset@dev,w
  4800  02C0  00BD               	movwf	??_bmp280_soft_reset+1
  4801  02C1  083D               	movf	??_bmp280_soft_reset+1,w
  4802  02C2  00AA               	movwf	bmp280_set_regs@dev
  4803  02C3  3041               	movlw	(low (bmp280_soft_reset@reg_addr| 0))& (0+255)
  4804  02C4  3180  20EC  3182   	fcall	_bmp280_set_regs
  4805  02C7  0140               	movlb	0	; select bank0
  4806  02C8  00BE               	movwf	??_bmp280_soft_reset+2
  4807  02C9  083E               	movf	??_bmp280_soft_reset+2,w
  4808  02CA  00C0               	movwf	bmp280_soft_reset@rslt
  4809                           
  4810                           ;bmp280.c: 201: dev->delay_ms(2);
  4811  02CB  3000               	movlw	0
  4812  02CC  00A3               	movwf	BMP280_delay_msek@msek+3
  4813  02CD  3000               	movlw	0
  4814  02CE  00A2               	movwf	BMP280_delay_msek@msek+2
  4815  02CF  3000               	movlw	0
  4816  02D0  00A1               	movwf	BMP280_delay_msek@msek+1
  4817  02D1  3002               	movlw	2
  4818  02D2  00A0               	movwf	BMP280_delay_msek@msek
  4819  02D3  0842               	movf	bmp280_soft_reset@dev,w
  4820  02D4  3E07               	addlw	7
  4821  02D5  0086               	movwf	6
  4822  02D6  0187               	clrf	7
  4823  02D7  3F41               	moviw [1]fsr1
  4824  02D8  008A               	movwf	10
  4825  02D9  3F40               	moviw [0]fsr1
  4826  02DA  000A               	callw
  4827  02DB  3182               	pagesel	$
  4828  02DC                     l2259:	
  4829                           
  4830                           ;bmp280.c: 202: };bmp280.c: 204: return rslt;
  4831  02DC  0140               	movlb	0	; select bank0
  4832  02DD  0840               	movf	bmp280_soft_reset@rslt,w
  4833  02DE  0008               	return
  4834  02DF                     __end_of_bmp280_soft_reset:	
  4835                           
  4836                           	psect	text6
  4837  00EC                     __ptext6:	
  4838 ;; *************** function _bmp280_set_regs *****************
  4839 ;; Defined at:
  4840 ;;		line 140 in file "bmp280.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  reg_addr        1    wreg     PTR unsigned char 
  4843 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4844 ;;  reg_data        1    8[BANK0 ] PTR const unsigned char 
  4845 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  4846 ;;  len             1    9[BANK0 ] unsigned char 
  4847 ;;  dev             1   10[BANK0 ] PTR const struct bmp280_
  4848 ;;		 -> bmp(42), 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  reg_addr        1   27[BANK0 ] PTR unsigned char 
  4851 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4852 ;;  temp_buff       8   15[BANK0 ] unsigned char [8]
  4853 ;;  temp_len        2   23[BANK0 ] unsigned int 
  4854 ;;  rslt            1   26[BANK0 ] char 
  4855 ;;  reg_addr_cnt    1   25[BANK0 ] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      char 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;Total ram usage:       20 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    6
  4872 ;; This function calls:
  4873 ;;		_BMP280_SPI_bus_write
  4874 ;;		_interleave_data
  4875 ;;		_null_ptr_check
  4876 ;; This function is called by:
  4877 ;;		_bmp280_soft_reset
  4878 ;;		_conf_sensor
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _bmp280_set_regs
  4884  00EC                     _bmp280_set_regs:	
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _bmp280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4888                           ;bmp280_set_regs@reg_addr stored from wreg
  4889  00EC  0140               	movlb	0	; select bank0
  4890  00ED  00BB               	movwf	bmp280_set_regs@reg_addr
  4891                           
  4892                           ;bmp280.c: 142: int8_t rslt;;bmp280.c: 143: uint8_t temp_buff[8];;bmp280.c: 144: uint16_
      +                          t temp_len;;bmp280.c: 145: uint8_t reg_addr_cnt;;bmp280.c: 147: if (len > 4)
  4893  00EE  3005               	movlw	5
  4894  00EF  0229               	subwf	bmp280_set_regs@len,w
  4895  00F0  1C03               	skipc
  4896  00F1  28F6               	goto	l2135
  4897                           
  4898                           ;bmp280.c: 148: len = 4;
  4899  00F2  3004               	movlw	4
  4900  00F3  00AB               	movwf	??_bmp280_set_regs
  4901  00F4  082B               	movf	??_bmp280_set_regs,w
  4902  00F5  00A9               	movwf	bmp280_set_regs@len
  4903  00F6                     l2135:	
  4904                           
  4905                           ;bmp280.c: 150: rslt = null_ptr_check(dev);
  4906  00F6  082A               	movf	bmp280_set_regs@dev,w
  4907  00F7  3183  2380  3180   	fcall	_null_ptr_check
  4908  00FA  0140               	movlb	0	; select bank0
  4909  00FB  00AB               	movwf	??_bmp280_set_regs
  4910  00FC  082B               	movf	??_bmp280_set_regs,w
  4911  00FD  00BA               	movwf	bmp280_set_regs@rslt
  4912                           
  4913                           ;bmp280.c: 152: if ((rslt == (0)) && (reg_addr != (0)) && (reg_data != (0))) {
  4914  00FE  083A               	movf	bmp280_set_regs@rslt,w
  4915  00FF  1D03               	btfss	3,2
  4916  0100  297B               	goto	l339
  4917  0101  083B               	movf	bmp280_set_regs@reg_addr,w
  4918  0102  1903               	btfsc	3,2
  4919  0103  297B               	goto	l339
  4920  0104  0828               	movf	bmp280_set_regs@reg_data,w
  4921  0105  1903               	btfsc	3,2
  4922  0106  297B               	goto	l339
  4923                           
  4924                           ;bmp280.c: 153: if (len != 0) {
  4925  0107  0829               	movf	bmp280_set_regs@len,w
  4926  0108  1903               	btfsc	3,2
  4927  0109  2976               	goto	l2171
  4928                           
  4929                           ;bmp280.c: 154: temp_buff[0] = reg_data[0];
  4930  010A  0828               	movf	bmp280_set_regs@reg_data,w
  4931  010B  0086               	movwf	6
  4932  010C  0187               	clrf	7
  4933  010D  0801               	movf	1,w
  4934  010E  00AB               	movwf	??_bmp280_set_regs
  4935  010F  082B               	movf	??_bmp280_set_regs,w
  4936  0110  00AF               	movwf	bmp280_set_regs@temp_buff
  4937                           
  4938                           ;bmp280.c: 156: if (dev->intf == (unsigned char) 0) {
  4939  0111  082A               	movf	bmp280_set_regs@dev,w
  4940  0112  3E02               	addlw	2
  4941  0113  0086               	movwf	6
  4942  0114  0187               	clrf	7
  4943  0115  0801               	movf	1,w
  4944  0116  1D03               	btfss	3,2
  4945  0117  2933               	goto	l2157
  4946                           
  4947                           ;bmp280.c: 159: for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
  4948  0118  01B9               	clrf	bmp280_set_regs@reg_addr_cnt
  4949  0119                     l2155:	
  4950  0119  0829               	movf	bmp280_set_regs@len,w
  4951  011A  0239               	subwf	bmp280_set_regs@reg_addr_cnt,w
  4952  011B  1803               	btfsc	3,0
  4953  011C  2933               	goto	l2157
  4954                           
  4955                           ;bmp280.c: 160: reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
  4956  011D  0839               	movf	bmp280_set_regs@reg_addr_cnt,w
  4957  011E  073B               	addwf	bmp280_set_regs@reg_addr,w
  4958  011F  00AB               	movwf	??_bmp280_set_regs
  4959  0120  082B               	movf	??_bmp280_set_regs,w
  4960  0121  0086               	movwf	6
  4961  0122  0187               	clrf	7
  4962  0123  0801               	movf	1,w
  4963  0124  397F               	andlw	127
  4964  0125  00AC               	movwf	??_bmp280_set_regs+1
  4965  0126  0839               	movf	bmp280_set_regs@reg_addr_cnt,w
  4966  0127  073B               	addwf	bmp280_set_regs@reg_addr,w
  4967  0128  00AD               	movwf	??_bmp280_set_regs+2
  4968  0129  082D               	movf	??_bmp280_set_regs+2,w
  4969  012A  0086               	movwf	6
  4970  012B  0187               	clrf	7
  4971  012C  082C               	movf	??_bmp280_set_regs+1,w
  4972  012D  0081               	movwf	1
  4973  012E  3001               	movlw	1
  4974  012F  00AB               	movwf	??_bmp280_set_regs
  4975  0130  082B               	movf	??_bmp280_set_regs,w
  4976  0131  07B9               	addwf	bmp280_set_regs@reg_addr_cnt,f
  4977  0132  2919               	goto	l2155
  4978  0133                     l2157:	
  4979                           
  4980                           ;bmp280.c: 161: };bmp280.c: 164: if (len > 1) {
  4981  0133  3002               	movlw	2
  4982  0134  0229               	subwf	bmp280_set_regs@len,w
  4983  0135  1C03               	skipc
  4984  0136  2953               	goto	l2163
  4985                           
  4986                           ;bmp280.c: 166: interleave_data(reg_addr, temp_buff, reg_data, len);
  4987  0137  302F               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  4988  0138  00AB               	movwf	??_bmp280_set_regs
  4989  0139  082B               	movf	??_bmp280_set_regs,w
  4990  013A  00A0               	movwf	interleave_data@temp_buff
  4991  013B  0828               	movf	bmp280_set_regs@reg_data,w
  4992  013C  00AC               	movwf	??_bmp280_set_regs+1
  4993  013D  082C               	movf	??_bmp280_set_regs+1,w
  4994  013E  00A1               	movwf	interleave_data@reg_data
  4995  013F  0829               	movf	bmp280_set_regs@len,w
  4996  0140  00AD               	movwf	??_bmp280_set_regs+2
  4997  0141  082D               	movf	??_bmp280_set_regs+2,w
  4998  0142  00A2               	movwf	interleave_data@len
  4999  0143  083B               	movf	bmp280_set_regs@reg_addr,w
  5000  0144  3182  22DF  3180   	fcall	_interleave_data
  5001                           
  5002                           ;bmp280.c: 167: temp_len = ((len * 2) - 1);
  5003  0147  0140               	movlb	0	; select bank0
  5004  0148  0829               	movf	bmp280_set_regs@len,w
  5005  0149  00AB               	movwf	??_bmp280_set_regs
  5006  014A  01AC               	clrf	??_bmp280_set_regs+1
  5007  014B  35AB               	lslf	??_bmp280_set_regs,f
  5008  014C  0DAC               	rlf	??_bmp280_set_regs+1,f
  5009  014D  082B               	movf	??_bmp280_set_regs,w
  5010  014E  3EFF               	addlw	255
  5011  014F  00B7               	movwf	bmp280_set_regs@temp_len
  5012  0150  30FF               	movlw	255
  5013  0151  3D2C               	addwfc	??_bmp280_set_regs+1,w
  5014  0152  2959               	goto	L1
  5015  0153                     l2163:	
  5016                           ;bmp280.c: 168: } else {
  5017                           
  5018                           
  5019                           ;bmp280.c: 169: temp_len = len;
  5020  0153  0829               	movf	bmp280_set_regs@len,w
  5021  0154  00AB               	movwf	??_bmp280_set_regs
  5022  0155  01AC               	clrf	??_bmp280_set_regs+1
  5023  0156  082B               	movf	??_bmp280_set_regs,w
  5024  0157  00B7               	movwf	bmp280_set_regs@temp_len
  5025  0158  082C               	movf	??_bmp280_set_regs+1,w
  5026  0159                     L1:	
  5027  0159  00B8               	movwf	bmp280_set_regs@temp_len+1
  5028                           
  5029                           ;bmp280.c: 170: };bmp280.c: 172: rslt = BMP280_SPI_bus_write(0, reg_addr[0], temp_buff, 
      +                          temp_len);
  5030  015A  01A0               	clrf	BMP280_SPI_bus_write@dev_addr
  5031  015B  083B               	movf	bmp280_set_regs@reg_addr,w
  5032  015C  0086               	movwf	6
  5033  015D  0187               	clrf	7
  5034  015E  0801               	movf	1,w
  5035  015F  00AB               	movwf	??_bmp280_set_regs
  5036  0160  082B               	movf	??_bmp280_set_regs,w
  5037  0161  00A1               	movwf	BMP280_SPI_bus_write@reg_addr
  5038  0162  302F               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  5039  0163  00AC               	movwf	??_bmp280_set_regs+1
  5040  0164  082C               	movf	??_bmp280_set_regs+1,w
  5041  0165  00A2               	movwf	BMP280_SPI_bus_write@reg_data
  5042  0166  0837               	movf	bmp280_set_regs@temp_len,w
  5043  0167  00AD               	movwf	??_bmp280_set_regs+2
  5044  0168  082D               	movf	??_bmp280_set_regs+2,w
  5045  0169  00A3               	movwf	BMP280_SPI_bus_write@cnt
  5046  016A  3184  2461  3180   	fcall	_BMP280_SPI_bus_write
  5047  016D  0140               	movlb	0	; select bank0
  5048  016E  00AE               	movwf	??_bmp280_set_regs+3
  5049  016F  082E               	movf	??_bmp280_set_regs+3,w
  5050  0170  00BA               	movwf	bmp280_set_regs@rslt
  5051                           
  5052                           ;bmp280.c: 174: if (rslt != (0))
  5053  0171  083A               	movf	bmp280_set_regs@rslt,w
  5054  0172  1903               	btfsc	3,2
  5055  0173  297D               	goto	l2173
  5056                           
  5057                           ;bmp280.c: 175: rslt = (-4);
  5058  0174  30FC               	movlw	252
  5059  0175  2977               	goto	L2
  5060  0176                     l2171:	
  5061                           ;bmp280.c: 176: } else {
  5062                           
  5063                           
  5064                           ;bmp280.c: 177: rslt = (-3);
  5065  0176  30FD               	movlw	253
  5066  0177                     L2:	
  5067  0177  00AB               	movwf	??_bmp280_set_regs
  5068  0178  082B               	movf	??_bmp280_set_regs,w
  5069  0179  00BA               	movwf	bmp280_set_regs@rslt
  5070                           
  5071                           ;bmp280.c: 178: };bmp280.c: 179: } else {
  5072  017A  297D               	goto	l2173
  5073  017B                     l339:	
  5074                           
  5075                           ;bmp280.c: 180: rslt = (-1);
  5076  017B  01BA               	clrf	bmp280_set_regs@rslt
  5077  017C  03BA               	decf	bmp280_set_regs@rslt,f
  5078  017D                     l2173:	
  5079                           
  5080                           ;bmp280.c: 181: };bmp280.c: 183: return rslt;
  5081  017D  083A               	movf	bmp280_set_regs@rslt,w
  5082  017E  0008               	return
  5083  017F                     __end_of_bmp280_set_regs:	
  5084                           
  5085                           	psect	text7
  5086  0380                     __ptext7:	
  5087 ;; *************** function _null_ptr_check *****************
  5088 ;; Defined at:
  5089 ;;		line 587 in file "bmp280.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  dev             1    wreg     PTR const struct bmp280_
  5092 ;;		 -> bmp(42), 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  dev             1    3[BANK0 ] PTR const struct bmp280_
  5095 ;;		 -> bmp(42), 
  5096 ;;  rslt            1    2[BANK0 ] char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      char 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;Total ram usage:        4 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    5
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_bmp280_get_regs
  5117 ;;		_bmp280_set_regs
  5118 ;;		_bmp280_soft_reset
  5119 ;;		_bmp280_init
  5120 ;;		_get_calib_param
  5121 ;;		_bmp280_get_config
  5122 ;;		_bmp280_get_status
  5123 ;;		_bmp280_get_power_mode
  5124 ;;		_bmp280_set_power_mode
  5125 ;;		_bmp280_get_uncomp_data
  5126 ;;		_bmp280_comp_temp_32bit
  5127 ;;		_bmp280_comp_pres_32bit
  5128 ;;		_bmp280_compute_meas_time
  5129 ;;		_conf_sensor
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _null_ptr_check
  5135  0380                     _null_ptr_check:	
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
  5139                           ;null_ptr_check@dev stored from wreg
  5140  0380  0140               	movlb	0	; select bank0
  5141  0381  00A3               	movwf	null_ptr_check@dev
  5142                           
  5143                           ;bmp280.c: 589: int8_t rslt;;bmp280.c: 591: if ((dev == (0)) || (dev->read == (0)) || (d
      +                          ev->write == (0)) || (dev->delay_ms == (0))) {
  5144  0382  0823               	movf	null_ptr_check@dev,w
  5145  0383  1903               	btfsc	3,2
  5146  0384  2B9D               	goto	l428
  5147  0385  0823               	movf	null_ptr_check@dev,w
  5148  0386  3E03               	addlw	3
  5149  0387  0086               	movwf	6
  5150  0388  0187               	clrf	7
  5151  0389  0016               	moviw fsr1++
  5152  038A  0401               	iorwf	1,w
  5153  038B  1903               	btfsc	3,2
  5154  038C  2B9D               	goto	l428
  5155  038D  0823               	movf	null_ptr_check@dev,w
  5156  038E  3E05               	addlw	5
  5157  038F  0086               	movwf	6
  5158  0390  0187               	clrf	7
  5159  0391  0016               	moviw fsr1++
  5160  0392  0401               	iorwf	1,w
  5161  0393  1903               	btfsc	3,2
  5162  0394  2B9D               	goto	l428
  5163  0395  0823               	movf	null_ptr_check@dev,w
  5164  0396  3E07               	addlw	7
  5165  0397  0086               	movwf	6
  5166  0398  0187               	clrf	7
  5167  0399  0016               	moviw fsr1++
  5168  039A  0401               	iorwf	1,w
  5169  039B  1D03               	btfss	3,2
  5170  039C  2BA0               	goto	l1651
  5171  039D                     l428:	
  5172                           
  5173                           ;bmp280.c: 593: rslt = (-1);
  5174  039D  01A2               	clrf	null_ptr_check@rslt
  5175  039E  03A2               	decf	null_ptr_check@rslt,f
  5176                           
  5177                           ;bmp280.c: 594: } else {
  5178  039F  2BA1               	goto	l1653
  5179  03A0                     l1651:	
  5180                           
  5181                           ;bmp280.c: 595: rslt = (0);
  5182  03A0  01A2               	clrf	null_ptr_check@rslt
  5183  03A1                     l1653:	
  5184                           
  5185                           ;bmp280.c: 596: };bmp280.c: 598: return rslt;
  5186  03A1  0822               	movf	null_ptr_check@rslt,w
  5187  03A2  0008               	return
  5188  03A3                     __end_of_null_ptr_check:	
  5189                           
  5190                           	psect	text8
  5191  02DF                     __ptext8:	
  5192 ;; *************** function _interleave_data *****************
  5193 ;; Defined at:
  5194 ;;		line 605 in file "bmp280.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  reg_addr        1    wreg     PTR const unsigned char 
  5197 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5198 ;;  temp_buff       1    0[BANK0 ] PTR unsigned char 
  5199 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5200 ;;  reg_data        1    1[BANK0 ] PTR const unsigned char 
  5201 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  5202 ;;  len             1    2[BANK0 ] unsigned char 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  reg_addr        1    6[BANK0 ] PTR const unsigned char 
  5205 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5206 ;;  index           1    7[BANK0 ] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5216 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;Total ram usage:        8 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    5
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_bmp280_set_regs
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _interleave_data
  5232  02DF                     _interleave_data:	
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _interleave_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  5236                           ;interleave_data@reg_addr stored from wreg
  5237  02DF  0140               	movlb	0	; select bank0
  5238  02E0  00A6               	movwf	interleave_data@reg_addr
  5239                           
  5240                           ;bmp280.c: 607: uint8_t index;;bmp280.c: 609: for (index = 1; index < len; index++) {
  5241  02E1  01A7               	clrf	interleave_data@index
  5242  02E2  0AA7               	incf	interleave_data@index,f
  5243  02E3                     l1663:	
  5244  02E3  0822               	movf	interleave_data@len,w
  5245  02E4  0227               	subwf	interleave_data@index,w
  5246  02E5  1803               	btfsc	3,0
  5247  02E6  0008               	return
  5248                           
  5249                           ;bmp280.c: 610: temp_buff[(index * 2) - 1] = reg_addr[index];
  5250  02E7  0827               	movf	interleave_data@index,w
  5251  02E8  0726               	addwf	interleave_data@reg_addr,w
  5252  02E9  00A3               	movwf	??_interleave_data
  5253  02EA  0823               	movf	??_interleave_data,w
  5254  02EB  0086               	movwf	6
  5255  02EC  0187               	clrf	7
  5256  02ED  0801               	movf	1,w
  5257  02EE  00A4               	movwf	??_interleave_data+1
  5258  02EF  3527               	lslf	interleave_data@index,w
  5259  02F0  3EFF               	addlw	-1
  5260  02F1  0720               	addwf	interleave_data@temp_buff,w
  5261  02F2  00A5               	movwf	??_interleave_data+2
  5262  02F3  0825               	movf	??_interleave_data+2,w
  5263  02F4  0086               	movwf	6
  5264  02F5  0187               	clrf	7
  5265  02F6  0824               	movf	??_interleave_data+1,w
  5266  02F7  0081               	movwf	1
  5267                           
  5268                           ;bmp280.c: 611: temp_buff[index * 2] = reg_data[index];
  5269  02F8  0827               	movf	interleave_data@index,w
  5270  02F9  0721               	addwf	interleave_data@reg_data,w
  5271  02FA  00A3               	movwf	??_interleave_data
  5272  02FB  0823               	movf	??_interleave_data,w
  5273  02FC  0086               	movwf	6
  5274  02FD  0187               	clrf	7
  5275  02FE  0801               	movf	1,w
  5276  02FF  00A4               	movwf	??_interleave_data+1
  5277  0300  3527               	lslf	interleave_data@index,w
  5278  0301  0720               	addwf	interleave_data@temp_buff,w
  5279  0302  00A5               	movwf	??_interleave_data+2
  5280  0303  0825               	movf	??_interleave_data+2,w
  5281  0304  0086               	movwf	6
  5282  0305  0187               	clrf	7
  5283  0306  0824               	movf	??_interleave_data+1,w
  5284  0307  0081               	movwf	1
  5285  0308  3001               	movlw	1
  5286  0309  00A3               	movwf	??_interleave_data
  5287  030A  0823               	movf	??_interleave_data,w
  5288  030B  07A7               	addwf	interleave_data@index,f
  5289  030C  2AE3               	goto	l1663
  5290  030D                     __end_of_interleave_data:	
  5291                           
  5292                           	psect	text9
  5293  0461                     __ptext9:	
  5294 ;; *************** function _BMP280_SPI_bus_write *****************
  5295 ;; Defined at:
  5296 ;;		line 56 in file "main.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  dev_addr        1    0[BANK0 ] unsigned char 
  5299 ;;  reg_addr        1    1[BANK0 ] unsigned char 
  5300 ;;  reg_data        1    2[BANK0 ] PTR unsigned char 
  5301 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5302 ;;  cnt             1    3[BANK0 ] unsigned char 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  iError          4    4[BANK0 ] long 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      char 
  5307 ;; Registers used:
  5308 ;;		wreg
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;Total ram usage:        8 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    5
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_main
  5325 ;;		_bmp280_set_regs
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function _BMP280_SPI_bus_write
  5331  0461                     _BMP280_SPI_bus_write:	
  5332                           
  5333                           ;main.c: 58: int32_t iError=(0);
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _BMP280_SPI_bus_write: [wreg]
  5337  0461  3000               	movlw	0
  5338  0462  0140               	movlb	0	; select bank0
  5339  0463  00A7               	movwf	BMP280_SPI_bus_write@iError+3
  5340  0464  3000               	movlw	0
  5341  0465  00A6               	movwf	BMP280_SPI_bus_write@iError+2
  5342  0466  3000               	movlw	0
  5343  0467  00A5               	movwf	BMP280_SPI_bus_write@iError+1
  5344  0468  3000               	movlw	0
  5345  0469  00A4               	movwf	BMP280_SPI_bus_write@iError
  5346                           
  5347                           ;main.c: 69: return (int8_t)iError;
  5348  046A  0824               	movf	BMP280_SPI_bus_write@iError,w
  5349  046B  0008               	return
  5350  046C                     __end_of_BMP280_SPI_bus_write:	
  5351                           
  5352                           	psect	text10
  5353  04C4                     __ptext10:	
  5354 ;; *************** function _BMP280_delay_msek *****************
  5355 ;; Defined at:
  5356 ;;		line 30 in file "main.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  msek            4    0[BANK0 ] unsigned long 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		None
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;Total ram usage:        4 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    5
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;;		_bmp280_soft_reset
  5382 ;;		_bmp280_init
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _BMP280_delay_msek
  5388  04C4                     _BMP280_delay_msek:	
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _BMP280_delay_msek: []
  5392  04C4  0008               	return
  5393  04C5                     __end_of_BMP280_delay_msek:	
  5394                           
  5395                           	psect	text11
  5396  04BF                     __ptext11:	
  5397 ;; *************** function _TMR0_StartTimer *****************
  5398 ;; Defined at:
  5399 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		None
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;Total ram usage:        0 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    5
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _TMR0_StartTimer
  5429  04BF                     _TMR0_StartTimer:	
  5430                           
  5431                           ;tmr0.c: 98: T0CON0bits.T0EN = 1;
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _TMR0_StartTimer: []
  5435  04BF  014B               	movlb	11	; select bank11
  5436  04C0  179E               	bsf	30,7	;volatile
  5437  04C1  0008               	return
  5438  04C2                     __end_of_TMR0_StartTimer:	
  5439                           
  5440                           	psect	text12
  5441  044F                     __ptext12:	
  5442 ;; *************** function _SYSTEM_Initialize *****************
  5443 ;; Defined at:
  5444 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    7
  5465 ;; This function calls:
  5466 ;;		_ADC_Initialize
  5467 ;;		_EUSART1_Initialize
  5468 ;;		_OSCILLATOR_Initialize
  5469 ;;		_PIN_MANAGER_Initialize
  5470 ;;		_PMD_Initialize
  5471 ;;		_TMR0_Initialize
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _SYSTEM_Initialize
  5479  044F                     _SYSTEM_Initialize:	
  5480                           
  5481                           ;mcc.c: 52: PMD_Initialize();
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5485  044F  3184  2493  3184   	fcall	_PMD_Initialize
  5486                           
  5487                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5488  0452  3183  2335  3184   	fcall	_PIN_MANAGER_Initialize
  5489                           
  5490                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5491  0455  3184  2477  3184   	fcall	_OSCILLATOR_Initialize
  5492                           
  5493                           ;mcc.c: 55: ADC_Initialize();
  5494  0458  3184  248A  3184   	fcall	_ADC_Initialize
  5495                           
  5496                           ;mcc.c: 56: TMR0_Initialize();
  5497  045B  3183  23C1  3184   	fcall	_TMR0_Initialize
  5498                           
  5499                           ;mcc.c: 57: EUSART1_Initialize();
  5500  045E  3183  23DA         	fcall	_EUSART1_Initialize
  5501  0460  0008               	return
  5502  0461                     __end_of_SYSTEM_Initialize:	
  5503                           
  5504                           	psect	text13
  5505  03C1                     __ptext13:	
  5506 ;; *************** function _TMR0_Initialize *****************
  5507 ;; Defined at:
  5508 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    6
  5529 ;; This function calls:
  5530 ;;		_TMR0_SetInterruptHandler
  5531 ;; This function is called by:
  5532 ;;		_SYSTEM_Initialize
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _TMR0_Initialize
  5538  03C1                     _TMR0_Initialize:	
  5539                           
  5540                           ;tmr0.c: 71: T0CON1 = 0x51;
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5544  03C1  3051               	movlw	81
  5545  03C2  014B               	movlb	11	; select bank11
  5546  03C3  009F               	movwf	31	;volatile
  5547                           
  5548                           ;tmr0.c: 74: TMR0H = 0x3C;
  5549  03C4  303C               	movlw	60
  5550  03C5  009D               	movwf	29	;volatile
  5551                           
  5552                           ;tmr0.c: 77: TMR0L = 0xB0;
  5553  03C6  30B0               	movlw	176
  5554  03C7  009C               	movwf	28	;volatile
  5555                           
  5556                           ;tmr0.c: 80: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  5557  03C8  081D               	movf	29,w	;volatile
  5558  03C9  00FD               	movwf	_timer0ReloadVal16bit+1	;volatile
  5559  03CA  081C               	movf	28,w	;volatile
  5560  03CB  00FC               	movwf	_timer0ReloadVal16bit	;volatile
  5561                           
  5562                           ;tmr0.c: 83: PIR0bits.TMR0IF = 0;
  5563  03CC  014E               	movlb	14	; select bank14
  5564  03CD  128C               	bcf	12,5	;volatile
  5565                           
  5566                           ;tmr0.c: 86: PIE0bits.TMR0IE = 1;
  5567  03CE  1696               	bsf	22,5	;volatile
  5568                           
  5569                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  5570  03CF  30C5               	movlw	low _TMR0_DefaultInterruptHandler
  5571  03D0  0140               	movlb	0	; select bank0
  5572  03D1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5573  03D2  3004               	movlw	high _TMR0_DefaultInterruptHandler
  5574  03D3  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5575  03D4  3184  24AE         	fcall	_TMR0_SetInterruptHandler
  5576                           
  5577                           ;tmr0.c: 92: T0CON0 = 0x90;
  5578  03D6  3090               	movlw	144
  5579  03D7  014B               	movlb	11	; select bank11
  5580  03D8  009E               	movwf	30	;volatile
  5581  03D9  0008               	return
  5582  03DA                     __end_of_TMR0_Initialize:	
  5583                           
  5584                           	psect	text14
  5585  04AE                     __ptext14:	
  5586 ;; *************** function _TMR0_SetInterruptHandler *****************
  5587 ;; Defined at:
  5588 ;;		line 167 in file "mcc_generated_files/tmr0.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5591 ;;		 -> TMR0_DefaultInterruptHandler(1), tmr_fire(1), 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    5
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_main
  5614 ;;		_TMR0_Initialize
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _TMR0_SetInterruptHandler
  5620  04AE                     _TMR0_SetInterruptHandler:	
  5621                           
  5622                           ;tmr0.c: 168: TMR0_InterruptHandler = InterruptHandler;
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5626  04AE  0140               	movlb	0	; select bank0
  5627  04AF  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5628  04B0  00EC               	movwf	_TMR0_InterruptHandler+1
  5629  04B1  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5630  04B2  00EB               	movwf	_TMR0_InterruptHandler
  5631  04B3  0008               	return
  5632  04B4                     __end_of_TMR0_SetInterruptHandler:	
  5633                           
  5634                           	psect	text15
  5635  0493                     __ptext15:	
  5636 ;; *************** function _PMD_Initialize *****************
  5637 ;; Defined at:
  5638 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		status,2
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    5
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_SYSTEM_Initialize
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _PMD_Initialize
  5668  0493                     _PMD_Initialize:	
  5669                           
  5670                           ;mcc.c: 79: PMD0 = 0x00;
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _PMD_Initialize: [status,2]
  5674  0493  014F               	movlb	15	; select bank15
  5675  0494  0196               	clrf	22	;volatile
  5676                           
  5677                           ;mcc.c: 81: PMD1 = 0x00;
  5678  0495  0197               	clrf	23	;volatile
  5679                           
  5680                           ;mcc.c: 83: PMD2 = 0x00;
  5681  0496  0198               	clrf	24	;volatile
  5682                           
  5683                           ;mcc.c: 85: PMD3 = 0x00;
  5684  0497  0199               	clrf	25	;volatile
  5685                           
  5686                           ;mcc.c: 87: PMD4 = 0x00;
  5687  0498  019A               	clrf	26	;volatile
  5688                           
  5689                           ;mcc.c: 89: PMD5 = 0x00;
  5690  0499  019B               	clrf	27	;volatile
  5691  049A  0008               	return
  5692  049B                     __end_of_PMD_Initialize:	
  5693                           
  5694                           	psect	text16
  5695  0335                     __ptext16:	
  5696 ;; *************** function _PIN_MANAGER_Initialize *****************
  5697 ;; Defined at:
  5698 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    5
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_SYSTEM_Initialize
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function _PIN_MANAGER_Initialize
  5728  0335                     _PIN_MANAGER_Initialize:	
  5729                           
  5730                           ;pin_manager.c: 62: LATA = 0x00;
  5731                           
  5732                           ;incstack = 0
  5733                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5734  0335  0140               	movlb	0	; select bank0
  5735  0336  0198               	clrf	24	;volatile
  5736                           
  5737                           ;pin_manager.c: 63: LATC = 0x00;
  5738  0337  019A               	clrf	26	;volatile
  5739                           
  5740                           ;pin_manager.c: 68: TRISA = 0x33;
  5741  0338  3033               	movlw	51
  5742  0339  0092               	movwf	18	;volatile
  5743                           
  5744                           ;pin_manager.c: 69: TRISC = 0x0A;
  5745  033A  300A               	movlw	10
  5746  033B  0094               	movwf	20	;volatile
  5747                           
  5748                           ;pin_manager.c: 74: ANSELC = 0x04;
  5749  033C  3004               	movlw	4
  5750  033D  017E               	movlb	62	; select bank62
  5751  033E  00CE               	movwf	78	;volatile
  5752                           
  5753                           ;pin_manager.c: 75: ANSELA = 0x1B;
  5754  033F  301B               	movlw	27
  5755  0340  00B8               	movwf	56	;volatile
  5756                           
  5757                           ;pin_manager.c: 80: WPUA = 0x00;
  5758  0341  01B9               	clrf	57	;volatile
  5759                           
  5760                           ;pin_manager.c: 81: WPUC = 0x00;
  5761  0342  01CF               	clrf	79	;volatile
  5762                           
  5763                           ;pin_manager.c: 86: ODCONA = 0x00;
  5764  0343  01BA               	clrf	58	;volatile
  5765                           
  5766                           ;pin_manager.c: 87: ODCONC = 0x00;
  5767  0344  01D0               	clrf	80	;volatile
  5768                           
  5769                           ;pin_manager.c: 96: RC0PPS = 0x15;
  5770  0345  3015               	movlw	21
  5771  0346  00A0               	movwf	32	;volatile
  5772                           
  5773                           ;pin_manager.c: 97: SSP1CLKPPSbits.SSP1CLKPPS = 0x10;
  5774  0347  017D               	movlb	61	; select bank61
  5775  0348  0845               	movf	69,w	;volatile
  5776  0349  39C0               	andlw	-64
  5777  034A  3810               	iorlw	16
  5778  034B  00C5               	movwf	69	;volatile
  5779                           
  5780                           ;pin_manager.c: 98: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  5781  034C  0846               	movf	70,w	;volatile
  5782  034D  39C0               	andlw	-64
  5783  034E  3811               	iorlw	17
  5784  034F  00C6               	movwf	70	;volatile
  5785                           
  5786                           ;pin_manager.c: 99: RC4PPS = 0x0F;
  5787  0350  300F               	movlw	15
  5788  0351  017E               	movlb	62	; select bank62
  5789  0352  00A4               	movwf	36	;volatile
  5790                           
  5791                           ;pin_manager.c: 100: RC2PPS = 0x16;
  5792  0353  3016               	movlw	22
  5793  0354  00A2               	movwf	34	;volatile
  5794                           
  5795                           ;pin_manager.c: 101: RX1DTPPSbits.RX1DTPPS = 0x13;
  5796  0355  017D               	movlb	61	; select bank61
  5797  0356  084B               	movf	75,w	;volatile
  5798  0357  39C0               	andlw	-64
  5799  0358  3813               	iorlw	19
  5800  0359  00CB               	movwf	75	;volatile
  5801  035A  0008               	return
  5802  035B                     __end_of_PIN_MANAGER_Initialize:	
  5803                           
  5804                           	psect	text17
  5805  0477                     __ptext17:	
  5806 ;; *************** function _OSCILLATOR_Initialize *****************
  5807 ;; Defined at:
  5808 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    5
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_SYSTEM_Initialize
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           
  5837                           ;psect for function _OSCILLATOR_Initialize
  5838  0477                     _OSCILLATOR_Initialize:	
  5839                           
  5840                           ;mcc.c: 63: OSCCON1 = 0x60;
  5841                           
  5842                           ;incstack = 0
  5843                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5844  0477  3060               	movlw	96
  5845  0478  0151               	movlb	17	; select bank17
  5846  0479  008D               	movwf	13	;volatile
  5847                           
  5848                           ;mcc.c: 65: OSCCON3 = 0x00;
  5849  047A  018F               	clrf	15	;volatile
  5850                           
  5851                           ;mcc.c: 67: OSCEN = 0x00;
  5852  047B  0191               	clrf	17	;volatile
  5853                           
  5854                           ;mcc.c: 69: OSCFRQ = 0x02;
  5855  047C  3002               	movlw	2
  5856  047D  0093               	movwf	19	;volatile
  5857                           
  5858                           ;mcc.c: 71: OSCSTAT = 0x00;
  5859  047E  0190               	clrf	16	;volatile
  5860                           
  5861                           ;mcc.c: 73: OSCTUNE = 0x00;
  5862  047F  0192               	clrf	18	;volatile
  5863  0480  0008               	return
  5864  0481                     __end_of_OSCILLATOR_Initialize:	
  5865                           
  5866                           	psect	text18
  5867  03DA                     __ptext18:	
  5868 ;; *************** function _EUSART1_Initialize *****************
  5869 ;; Defined at:
  5870 ;;		line 71 in file "mcc_generated_files/eusart1.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    6
  5891 ;; This function calls:
  5892 ;;		_EUSART1_SetRxInterruptHandler
  5893 ;; This function is called by:
  5894 ;;		_SYSTEM_Initialize
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function _EUSART1_Initialize
  5900  03DA                     _EUSART1_Initialize:	
  5901                           
  5902                           ;eusart1.c: 74: PIE3bits.RC1IE = 0;
  5903                           
  5904                           ;incstack = 0
  5905                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5906  03DA  014E               	movlb	14	; select bank14
  5907  03DB  1299               	bcf	25,5	;volatile
  5908                           
  5909                           ;eusart1.c: 75: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  5910  03DC  305B               	movlw	low _EUSART1_Receive_ISR
  5911  03DD  0140               	movlb	0	; select bank0
  5912  03DE  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  5913  03DF  3003               	movlw	high _EUSART1_Receive_ISR
  5914  03E0  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  5915  03E1  3184  2481         	fcall	_EUSART1_SetRxInterruptHandler
  5916                           
  5917                           ;eusart1.c: 79: BAUD1CON = 0x08;
  5918  03E3  3008               	movlw	8
  5919  03E4  0142               	movlb	2	; select bank2
  5920  03E5  009F               	movwf	31	;volatile
  5921                           
  5922                           ;eusart1.c: 82: RC1STA = 0x90;
  5923  03E6  3090               	movlw	144
  5924  03E7  009D               	movwf	29	;volatile
  5925                           
  5926                           ;eusart1.c: 85: TX1STA = 0x24;
  5927  03E8  3024               	movlw	36
  5928  03E9  009E               	movwf	30	;volatile
  5929                           
  5930                           ;eusart1.c: 88: SP1BRGL = 0x08;
  5931  03EA  3008               	movlw	8
  5932  03EB  009B               	movwf	27	;volatile
  5933                           
  5934                           ;eusart1.c: 91: SP1BRGH = 0x00;
  5935  03EC  019C               	clrf	28	;volatile
  5936                           
  5937                           ;eusart1.c: 95: eusart1RxHead = 0;
  5938  03ED  01FB               	clrf	_eusart1RxHead	;volatile
  5939                           
  5940                           ;eusart1.c: 96: eusart1RxTail = 0;
  5941  03EE  01FA               	clrf	_eusart1RxTail	;volatile
  5942                           
  5943                           ;eusart1.c: 97: eusart1RxCount = 0;
  5944  03EF  01F9               	clrf	_eusart1RxCount	;volatile
  5945                           
  5946                           ;eusart1.c: 100: PIE3bits.RC1IE = 1;
  5947  03F0  014E               	movlb	14	; select bank14
  5948  03F1  1699               	bsf	25,5	;volatile
  5949  03F2  0008               	return
  5950  03F3                     __end_of_EUSART1_Initialize:	
  5951                           
  5952                           	psect	text19
  5953  0481                     __ptext19:	
  5954 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5955 ;; Defined at:
  5956 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5959 ;;		 -> EUSART1_Receive_ISR(1), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;Total ram usage:        2 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    5
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_EUSART1_Initialize
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function _EUSART1_SetRxInterruptHandler
  5987  0481                     _EUSART1_SetRxInterruptHandler:	
  5988                           
  5989                           ;eusart1.c: 174: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  5993  0481  0140               	movlb	0	; select bank0
  5994  0482  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  5995  0483  0141               	movlb	1	; select bank1
  5996  0484  00EB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  5997  0485  0140               	movlb	0	; select bank0
  5998  0486  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  5999  0487  0141               	movlb	1	; select bank1
  6000  0488  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  6001  0489  0008               	return
  6002  048A                     __end_of_EUSART1_SetRxInterruptHandler:	
  6003                           
  6004                           	psect	text20
  6005  048A                     __ptext20:	
  6006 ;; *************** function _ADC_Initialize *****************
  6007 ;; Defined at:
  6008 ;;		line 64 in file "mcc_generated_files/adc.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;Total ram usage:        0 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    5
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_SYSTEM_Initialize
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           
  6037                           ;psect for function _ADC_Initialize
  6038  048A                     _ADC_Initialize:	
  6039                           
  6040                           ;adc.c: 69: ADCON0 = 0x01;
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6044  048A  3001               	movlw	1
  6045  048B  0141               	movlb	1	; select bank1
  6046  048C  009D               	movwf	29	;volatile
  6047                           
  6048                           ;adc.c: 72: ADCON1 = 0xE0;
  6049  048D  30E0               	movlw	224
  6050  048E  009E               	movwf	30	;volatile
  6051                           
  6052                           ;adc.c: 75: ADACT = 0x00;
  6053  048F  019F               	clrf	31	;volatile
  6054                           
  6055                           ;adc.c: 78: ADRESL = 0x00;
  6056  0490  019B               	clrf	27	;volatile
  6057                           
  6058                           ;adc.c: 81: ADRESH = 0x00;
  6059  0491  019C               	clrf	28	;volatile
  6060  0492  0008               	return
  6061  0493                     __end_of_ADC_Initialize:	
  6062                           
  6063                           	psect	intentry
  6064  0004                     __pintentry:	
  6065 ;; *************** function _INTERRUPT_InterruptManager *****************
  6066 ;; Defined at:
  6067 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    4
  6088 ;; This function calls:
  6089 ;;		Absolute function
  6090 ;;		_EUSART1_Receive_ISR
  6091 ;;		_TMR0_ISR
  6092 ;; This function is called by:
  6093 ;;		Interrupt level 1
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097  0004                     _INTERRUPT_InterruptManager:	
  6098                           
  6099                           ;incstack = 0
  6100  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6101                           
  6102                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6103  0005  3180               	pagesel	$
  6104                           
  6105                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6106  0006  014E               	movlb	14	; select bank14
  6107  0007  1A96               	btfsc	22,5	;volatile
  6108  0008  1E8C               	btfss	12,5	;volatile
  6109  0009  280E               	goto	i1l533
  6110                           
  6111                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  6112  000A  3184  2424  3180   	fcall	_TMR0_ISR
  6113                           
  6114                           ;interrupt_manager.c: 58: }
  6115  000D  2819               	goto	i1l539
  6116  000E                     i1l533:	
  6117                           
  6118                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  6119  000E  1B0B               	btfsc	11,6	;volatile
  6120                           
  6121                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.RC1IE == 1 && PIR3bits.
      +                          RC1IF == 1)
  6122  000F  1E99               	btfss	25,5	;volatile
  6123  0010  2819               	goto	i1l539
  6124  0011  1E8F               	btfss	15,5	;volatile
  6125  0012  2819               	goto	i1l539
  6126                           
  6127                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  6128  0013  0141               	movlb	1	; select bank1
  6129  0014  086B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
  6130  0015  008A               	movwf	10
  6131  0016  086A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
  6132  0017  000A               	callw
  6133  0018  3180               	pagesel	$
  6134  0019                     i1l539:	
  6135                           ;interrupt_manager.c: 70: else;interrupt_manager.c: 71: {
  6136                           
  6137                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  6138                           
  6139                           ;interrupt_manager.c: 65: else;interrupt_manager.c: 66: {
  6140                           
  6141                           ;interrupt_manager.c: 64: }
  6142                           
  6143  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6144  001A  0009               	retfie
  6145  001B                     __end_of_INTERRUPT_InterruptManager:	
  6146                           
  6147                           	psect	text22
  6148  0424                     __ptext22:	
  6149 ;; *************** function _TMR0_ISR *****************
  6150 ;; Defined at:
  6151 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, pclath, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;Total ram usage:        0 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    3
  6172 ;; This function calls:
  6173 ;;		_TMR0_CallBack
  6174 ;; This function is called by:
  6175 ;;		_INTERRUPT_InterruptManager
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           
  6180                           ;psect for function _TMR0_ISR
  6181  0424                     _TMR0_ISR:	
  6182                           
  6183                           ;tmr0.c: 136: static volatile uint16_t CountCallBack = 0;;tmr0.c: 139: PIR0bits.TMR0IF =
      +                           0;
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6187  0424  014E               	movlb	14	; select bank14
  6188  0425  128C               	bcf	12,5	;volatile
  6189                           
  6190                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
  6191  0426  087D               	movf	_timer0ReloadVal16bit+1,w	;volatile
  6192  0427  014B               	movlb	11	; select bank11
  6193  0428  009D               	movwf	29	;volatile
  6194                           
  6195                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
  6196  0429  087C               	movf	_timer0ReloadVal16bit,w	;volatile
  6197  042A  009C               	movwf	28	;volatile
  6198                           
  6199                           ;tmr0.c: 145: if (++CountCallBack >= 10)
  6200  042B  3001               	movlw	1
  6201  042C  07F7               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  6202  042D  3000               	movlw	0
  6203  042E  3DF8               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  6204  042F  3000               	movlw	0
  6205  0430  0278               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  6206  0431  300A               	movlw	10
  6207  0432  1903               	skipnz
  6208  0433  0277               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  6209  0434  1C03               	skipc
  6210  0435  0008               	return
  6211                           
  6212                           ;tmr0.c: 146: {;tmr0.c: 148: TMR0_CallBack();
  6213  0436  3184  246C         	fcall	_TMR0_CallBack
  6214                           
  6215                           ;tmr0.c: 151: CountCallBack = 0;
  6216  0438  01F7               	clrf	TMR0_ISR@CountCallBack	;volatile
  6217  0439  01F8               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  6218  043A  0008               	return
  6219  043B                     __end_of_TMR0_ISR:	
  6220                           
  6221                           	psect	text23
  6222  046C                     __ptext23:	
  6223 ;; *************** function _TMR0_CallBack *****************
  6224 ;; Defined at:
  6225 ;;		line 157 in file "mcc_generated_files/tmr0.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, pclath, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    2
  6246 ;; This function calls:
  6247 ;;		Absolute function
  6248 ;;		_TMR0_DefaultInterruptHandler
  6249 ;;		_tmr_fire
  6250 ;; This function is called by:
  6251 ;;		_TMR0_ISR
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _TMR0_CallBack
  6257  046C                     _TMR0_CallBack:	
  6258                           
  6259                           ;tmr0.c: 161: if(TMR0_InterruptHandler)
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6263  046C  0140               	movlb	0	; select bank0
  6264  046D  086B               	movf	_TMR0_InterruptHandler,w
  6265  046E  046C               	iorwf	_TMR0_InterruptHandler+1,w
  6266  046F  1903               	btfsc	3,2
  6267  0470  0008               	return
  6268                           
  6269                           ;tmr0.c: 162: {;tmr0.c: 163: TMR0_InterruptHandler();
  6270  0471  086C               	movf	_TMR0_InterruptHandler+1,w
  6271  0472  008A               	movwf	10
  6272  0473  086B               	movf	_TMR0_InterruptHandler,w
  6273  0474  000A               	callw
  6274  0475  3184               	pagesel	$
  6275  0476  0008               	return
  6276  0477                     __end_of_TMR0_CallBack:	
  6277                           
  6278                           	psect	text24
  6279  04C5                     __ptext24:	
  6280 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6281 ;; Defined at:
  6282 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		None
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_TMR0_Initialize
  6306 ;;		_TMR0_CallBack
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           
  6311                           ;psect for function _TMR0_DefaultInterruptHandler
  6312  04C5                     _TMR0_DefaultInterruptHandler:	
  6313                           
  6314                           ;incstack = 0
  6315                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6316  04C5  0008               	return
  6317  04C6                     __end_of_TMR0_DefaultInterruptHandler:	
  6318                           
  6319                           	psect	text25
  6320  03F3                     __ptext25:	
  6321 ;; *************** function _tmr_fire *****************
  6322 ;; Defined at:
  6323 ;;		line 72 in file "main.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;		None
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  a               2    5[COMMON] int 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0, pclath, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;Total ram usage:        3 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    1
  6344 ;; This function calls:
  6345 ;;		_ADC_GetConversion
  6346 ;;		_EUSART1_Write
  6347 ;; This function is called by:
  6348 ;;		_main
  6349 ;;		_TMR0_CallBack
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _tmr_fire
  6355  03F3                     _tmr_fire:	
  6356                           
  6357                           ;main.c: 73: int a;;main.c: 74: RC5 = !RC5;
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _tmr_fire: [wreg+status,2+status,0+pclath+cstack]
  6361  03F3  3020               	movlw	32
  6362  03F4  0140               	movlb	0	; select bank0
  6363  03F5  068E               	xorwf	14,f
  6364                           
  6365                           ;main.c: 75: a = ADC_GetConversion(5);
  6366  03F6  3005               	movlw	5
  6367  03F7  3184  240C  3183   	fcall	_ADC_GetConversion
  6368  03FA  0871               	movf	?_ADC_GetConversion+1,w
  6369  03FB  00F6               	movwf	tmr_fire@a+1
  6370  03FC  0870               	movf	?_ADC_GetConversion,w
  6371  03FD  00F5               	movwf	tmr_fire@a
  6372                           
  6373                           ;main.c: 76: EUSART1_Write(a>>8);
  6374  03FE  0876               	movf	tmr_fire@a+1,w
  6375  03FF  00F4               	movwf	??_tmr_fire
  6376  0400  0874               	movf	??_tmr_fire,w
  6377  0401  00F0               	movwf	EUSART1_Write@txData
  6378  0402  3184  249B  3183   	fcall	_EUSART1_Write
  6379                           
  6380                           ;main.c: 77: EUSART1_Write(a);
  6381  0405  0875               	movf	tmr_fire@a,w
  6382  0406  00F4               	movwf	??_tmr_fire
  6383  0407  0874               	movf	??_tmr_fire,w
  6384  0408  00F0               	movwf	EUSART1_Write@txData
  6385  0409  3184  249B         	fcall	_EUSART1_Write
  6386  040B  0008               	return
  6387  040C                     __end_of_tmr_fire:	
  6388                           
  6389                           	psect	text26
  6390  040C                     __ptext26:	
  6391 ;; *************** function _ADC_GetConversion *****************
  6392 ;; Defined at:
  6393 ;;		line 112 in file "mcc_generated_files/adc.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  channel         1    wreg     enum E6288
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  channel         1    3[COMMON] enum E6288
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2    0[COMMON] unsigned int 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;Total ram usage:        4 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_tmr_fire
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _ADC_GetConversion
  6422  040C                     _ADC_GetConversion:	
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6426                           ;ADC_GetConversion@channel stored from wreg
  6427  040C  00F3               	movwf	ADC_GetConversion@channel
  6428                           
  6429                           ;adc.c: 115: ADCON0bits.CHS = channel;
  6430  040D  0873               	movf	ADC_GetConversion@channel,w
  6431  040E  00F2               	movwf	??_ADC_GetConversion
  6432  040F  0DF2               	rlf	??_ADC_GetConversion,f
  6433  0410  0DF2               	rlf	??_ADC_GetConversion,f
  6434  0411  0141               	movlb	1	; select bank1
  6435  0412  081D               	movf	29,w	;volatile
  6436  0413  0672               	xorwf	??_ADC_GetConversion,w
  6437  0414  3903               	andlw	-253
  6438  0415  0672               	xorwf	??_ADC_GetConversion,w
  6439  0416  009D               	movwf	29	;volatile
  6440                           
  6441                           ;adc.c: 118: ADCON0bits.ADON = 1;
  6442  0417  141D               	bsf	29,0	;volatile
  6443                           
  6444                           ;adc.c: 120: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6445  0418  3200               	nop2	;2 cycle nop
  6446  0419  3200               	nop2	;2 cycle nop
  6447  041A  0000               	nop
  6448                           
  6449                           ;adc.c: 123: ADCON0bits.GOnDONE = 1;
  6450  041B  0141               	movlb	1	; select bank1
  6451  041C  149D               	bsf	29,1	;volatile
  6452  041D                     i1l156:	
  6453                           ;adc.c: 127: {
  6454                           
  6455                           ;adc.c: 126: while (ADCON0bits.GOnDONE)
  6456                           
  6457  041D  189D               	btfsc	29,1	;volatile
  6458  041E  2C1D               	goto	i1l156
  6459                           
  6460                           ;adc.c: 128: };adc.c: 130: return ((ADRESH << 8) + ADRESL);
  6461  041F  081C               	movf	28,w	;volatile
  6462  0420  00F1               	movwf	?_ADC_GetConversion+1
  6463  0421  081B               	movf	27,w	;volatile
  6464  0422  00F0               	movwf	?_ADC_GetConversion
  6465  0423  0008               	return
  6466  0424                     __end_of_ADC_GetConversion:	
  6467                           
  6468                           	psect	text27
  6469  035B                     __ptext27:	
  6470 ;; *************** function _EUSART1_Receive_ISR *****************
  6471 ;; Defined at:
  6472 ;;		line 149 in file "mcc_generated_files/eusart1.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  a               1    2[COMMON] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      void 
  6479 ;; Registers used:
  6480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;Total ram usage:        2 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    1
  6493 ;; This function calls:
  6494 ;;		_EUSART1_Write
  6495 ;; This function is called by:
  6496 ;;		_EUSART1_Initialize
  6497 ;;		_INTERRUPT_InterruptManager
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _EUSART1_Receive_ISR
  6503  035B                     _EUSART1_Receive_ISR:	
  6504                           
  6505                           ;eusart1.c: 151: char a;;eusart1.c: 153: if(1 == RC1STAbits.OERR)
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6509  035B  0142               	movlb	2	; select bank2
  6510  035C  1C9D               	btfss	29,1	;volatile
  6511  035D  2B60               	goto	i1l1865
  6512                           
  6513                           ;eusart1.c: 154: {;eusart1.c: 157: RC1STAbits.CREN = 0;
  6514  035E  121D               	bcf	29,4	;volatile
  6515                           
  6516                           ;eusart1.c: 158: RC1STAbits.CREN = 1;
  6517  035F  161D               	bsf	29,4	;volatile
  6518  0360                     i1l1865:	
  6519                           
  6520                           ;eusart1.c: 159: };eusart1.c: 162: a = RC1REG;
  6521  0360  0819               	movf	25,w	;volatile
  6522  0361  00F1               	movwf	??_EUSART1_Receive_ISR
  6523  0362  0871               	movf	??_EUSART1_Receive_ISR,w
  6524  0363  00F2               	movwf	EUSART1_Receive_ISR@a
  6525                           
  6526                           ;eusart1.c: 163: eusart1RxBuffer[eusart1RxHead++] = a;
  6527  0364  0872               	movf	EUSART1_Receive_ISR@a,w
  6528  0365  00F1               	movwf	??_EUSART1_Receive_ISR
  6529  0366  087B               	movf	_eusart1RxHead,w
  6530  0367  3E5F               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  6531  0368  0086               	movwf	6
  6532  0369  0187               	clrf	7
  6533  036A  0871               	movf	??_EUSART1_Receive_ISR,w
  6534  036B  0081               	movwf	1
  6535  036C  3001               	movlw	1
  6536  036D  00F1               	movwf	??_EUSART1_Receive_ISR
  6537  036E  0871               	movf	??_EUSART1_Receive_ISR,w
  6538  036F  07FB               	addwf	_eusart1RxHead,f	;volatile
  6539                           
  6540                           ;eusart1.c: 164: EUSART1_Write(a+1);
  6541  0370  0872               	movf	EUSART1_Receive_ISR@a,w
  6542  0371  3E01               	addlw	1
  6543  0372  00F1               	movwf	??_EUSART1_Receive_ISR
  6544  0373  0871               	movf	??_EUSART1_Receive_ISR,w
  6545  0374  00F0               	movwf	EUSART1_Write@txData
  6546  0375  3184  249B         	fcall	_EUSART1_Write
  6547                           
  6548                           ;eusart1.c: 165: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6549  0377  3008               	movlw	8
  6550  0378  027B               	subwf	_eusart1RxHead,w	;volatile
  6551  0379  1803               	btfsc	3,0
  6552                           
  6553                           ;eusart1.c: 166: {;eusart1.c: 167: eusart1RxHead = 0;
  6554  037A  01FB               	clrf	_eusart1RxHead	;volatile
  6555                           
  6556                           ;eusart1.c: 168: };eusart1.c: 169: eusart1RxCount++;
  6557  037B  3001               	movlw	1
  6558  037C  00F1               	movwf	??_EUSART1_Receive_ISR
  6559  037D  0871               	movf	??_EUSART1_Receive_ISR,w
  6560  037E  07F9               	addwf	_eusart1RxCount,f	;volatile
  6561  037F  0008               	return
  6562  0380                     __end_of_EUSART1_Receive_ISR:	
  6563                           
  6564                           	psect	text28
  6565  049B                     __ptext28:	
  6566 ;; *************** function _EUSART1_Write *****************
  6567 ;; Defined at:
  6568 ;;		line 138 in file "mcc_generated_files/eusart1.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  txData          1    0[COMMON] unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_EUSART1_Receive_ISR
  6592 ;;		_tmr_fire
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _EUSART1_Write
  6598  049B                     _EUSART1_Write:	
  6599  049B                     i1l219:	
  6600                           ;eusart1.c: 141: {
  6601                           
  6602                           ;eusart1.c: 140: while(0 == PIR3bits.TX1IF)
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in _EUSART1_Write: [wreg]
  6606                           
  6607  049B  014E               	movlb	14	; select bank14
  6608  049C  1E0F               	btfss	15,4	;volatile
  6609  049D  2C9B               	goto	i1l219
  6610                           
  6611                           ;eusart1.c: 142: };eusart1.c: 144: TX1REG = txData;
  6612  049E  0870               	movf	EUSART1_Write@txData,w
  6613  049F  0142               	movlb	2	; select bank2
  6614  04A0  009A               	movwf	26	;volatile
  6615  04A1  0008               	return
  6616  04A2                     __end_of_EUSART1_Write:	
  6617  007E                     btemp	set	126	;btemp
  6618  007E                     int$flags	set	126
  6619  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    31
    Data        32
    BSS         89
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     63      79
    BANK1            80     26      76
    BANK2            80      0      54
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S35$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S579$4$2	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    BMP280_SPI_bus_write@reg_data	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    S579$3$2	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK1[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), tmr_fire(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), tmr_fire(), 

    conf_sensor@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    conf_sensor@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    conf_sensor@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    get_calib_param@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    get_calib_param@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    interleave_data@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_data@reg_addr	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    interleave_data@temp_buff	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    null_ptr_check@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_compute_meas_time@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_compute_meas_time@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_compute_meas_time@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_pres_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_pres_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_pres_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_temp_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_temp_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_temp_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_power_mode@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_power_mode@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_power_mode@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_config@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_config@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_config@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_soft_reset@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bmp280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    bmp280_set_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK1[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    bmp280_get_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    BMP280_SPI_bus_read@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK1[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    S579bmp280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    S579bmp280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    S579bmp280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    S35$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S35$TxDefaultISR	PTR FTN()void  size(2) Largest target is 0

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 0

    S35$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S35$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S35$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S35$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S35$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S35$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S35$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S35$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_tmr_fire
    _tmr_fire->_ADC_GetConversion
    _EUSART1_Receive_ISR->_EUSART1_Write

Critical Paths under _main in BANK0

    _main->_bmp280_init
    _bmp280_init->_get_calib_param
    _get_calib_param->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _bmp280_soft_reset->_bmp280_set_regs
    _bmp280_set_regs->_BMP280_SPI_bus_write
    _bmp280_set_regs->_interleave_data
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _bmp280_init->_get_calib_param

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12335
                                             61 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                        _bmp280_init
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          6     6      0   11854
                                             55 BANK0      6     6      0
                  _BMP280_delay_msek *
                    _bmp280_get_regs
                  _bmp280_soft_reset
                    _get_calib_param
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _get_calib_param                                     30    30      0    4059
                                             51 BANK0      4     4      0
                                              0 BANK1     26    26      0
                    _bmp280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_get_regs                                      9     6      3    2545
                                             42 BANK0      9     6      3
                _BMP280_SPI_bus_read *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_read                                 42    38      4     400
                                              0 BANK0     42    38      4
 ---------------------------------------------------------------------------------
 (2) _bmp280_soft_reset                                    7     7      0    3905
                                             28 BANK0      7     7      0
                  _BMP280_delay_msek *
                    _bmp280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_set_regs                                     20    17      3    2949
                                              8 BANK0     20    17      3
               _BMP280_SPI_bus_write
                    _interleave_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     532
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _interleave_data                                      8     5      3     444
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_write                                 8     4      4     330
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _BMP280_delay_msek                                    4     0      4     108
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     293
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     185
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     185
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     108
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     540
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     281
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0     281
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _tmr_fire *
 ---------------------------------------------------------------------------------
 (8) _tmr_fire                                             3     3      0     281
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  2     2      0     259
                                              1 COMMON     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     0      1     214
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _bmp280_init
     _BMP280_delay_msek *
     _bmp280_get_regs *
       _BMP280_SPI_bus_read *
       _null_ptr_check *
     _bmp280_soft_reset *
       _BMP280_delay_msek *
       _bmp280_set_regs *
         _BMP280_SPI_bus_write
         _interleave_data
         _null_ptr_check
       _null_ptr_check *
     _get_calib_param *
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
         _null_ptr_check *
       _null_ptr_check
     _null_ptr_check *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     _EUSART1_Write
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _tmr_fire *
         _ADC_GetConversion
         _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      36      10       67.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 27 23:31:43 2018

                                    __CFG_CP$OFF 0000                                ??_bmp280_set_regs 002B  
                                    __CFG_LVP$ON 0000                                              l331 02A0  
                                            l315 0334                                              l339 017B  
                                            l428 039D                                              _RC5 0075  
                       BMP280_SPI_bus_read@F6557 0120                                              _bmp 00A6  
                               ?_interleave_data 0020                          __size_of_PMD_Initialize 0008  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                                  __CFG_BBEN$OFF 0000                               interleave_data@len 0022  
                                   __CFG_ZCD$OFF 0000                                             l2301 01CF  
                                           l2135 00F6                                             l2311 01ED  
                                           l2305 01E3                                             l2163 0153  
                                           l2155 0119                                             l2171 0176  
                                           l2307 01E6                                             l2315 0209  
                                           l2173 017D                                             l2157 0133  
                                           l1633 0244                                             l1625 022C  
                                           l1651 03A0                                             l2259 02DC  
                                           l1635 025C                                             l1627 0242  
                                           l1653 03A1                                             l2285 0191  
                                           l1663 02E3                                             l2295 01BB  
                                           l1841 00EA                                             l1693 02A2  
                                           l1687 027A                                             u1400 005E  
                                           u1180 0222                                             _LATA 0018  
                                           _LATC 001A                                             u1195 023A  
                                           u2537 020C                                             _PMD0 0796  
                                           _PMD1 0797                                             _PMD2 0798  
                                           _PMD3 0799                                             _PMD4 079A  
                                           _PMD5 079B                         BMP280_SPI_bus_read@array 0026  
                                           _WPUA 1F39                                             _WPUC 1F4F  
                                  _EUSART1_Write 049B                                    __CFG_FCMEN$ON 0000  
                                           _main 030D                                  _TMR0_StartTimer 04BF  
                                           _uart 043B                                             fsr0h 0005  
                                           fsr1h 0007                                             indf0 0000  
                                           fsr0l 0004                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                                  __CFG_BOREN$ON 0000                                             start 001B  
                                  __CFG_CSWEN$ON 0000                                    __CFG_MCLRE$ON 0000  
                              _bmp280_soft_reset 02A4                          __end_of_TMR0_Initialize 03DA  
                 ??_TMR0_DefaultInterruptHandler 0070                               ?_bmp280_soft_reset 0070  
                 __size_of_OSCILLATOR_Initialize 000A                    __end_of_OSCILLATOR_Initialize 0481  
                                          _ADACT 009F                                            ?_main 0070  
                                  __CFG_WDTE$OFF 0000                                            i1l219 049B  
                                          i1l156 041D                                            i1l533 000E  
                                          i1l539 0019                                            _OSCEN 0891  
                                          _TMR0H 059D                                            _TMR0L 059C  
                                          _TRISA 0012                                            _TRISC 0014  
              __size_of_TMR0_SetInterruptHandler 0006                         __size_of_get_calib_param 009B  
                            ??_bmp280_soft_reset 003C                        ?_TMR0_SetInterruptHandler 0020  
                               __end_of_TMR0_ISR 043B                      __end_of_BMP280_SPI_bus_read 025E  
                                  __CFG_WRTB$OFF 0000                                    __CFG_WRTC$OFF 0000  
                           EUSART1_Receive_ISR@a 0072                          bmp280_get_regs@reg_addr 0051  
                        bmp280_set_regs@reg_addr 003B                          bmp280_get_regs@reg_data 004A  
                        bmp280_set_regs@reg_data 0028                                   ?_EUSART1_Write 0070  
                                          pclath 000A                                            status 0003  
                                          wtemp0 007E                          bmp280_set_regs@temp_len 0037  
                      __end_of_bmp280_soft_reset 02DF                                  __initialization 001D  
                     __end_of_EUSART1_Initialize 03F3                                     __end_of_main 0335  
                                   __end_of_uart 044F                                   __CFG_SAFEN$OFF 0000  
                           interleave_data@index 0027                      ?_INTERRUPT_InterruptManager 0070  
                                         ??_main 005D                          interleave_data@reg_addr 0026  
                        interleave_data@reg_data 0021                                 ??_null_ptr_check 0020  
                        __end_of_TMR0_StartTimer 04C2                                           _ADCON0 009D  
                                         _ADCON1 009E                                           _ADRESH 009C  
                                         _ADRESL 009B                                           _ANSELA 1F38  
                                         _ANSELC 1F4E                               __CFG_RSTOSC$HFINT1 0000  
                                         _T0CON0 059E                                           _T0CON1 059F  
                                         _RC1REG 0119                                           _RC0PPS 1F20  
                                         _RC1STA 011D                                           _RC2PPS 1F22  
                                         _RC4PPS 1F24                                           _ODCONA 1F3A  
                                         _ODCONC 1F50                                           i1l1865 0360  
                                 __CFG_WDTCCS$SC 0000  __end_ofbmp280_compute_meas_time@period_per_osrs 04B8  
        bmp280_compute_meas_time@period_per_osrs 04B4                                           _OSCFRQ 0893  
                                         _TX1REG 011A                                           _TX1STA 011E  
                           bmp280_init@try_count 005A                                   __CFG_PWRTE$OFF 0000  
                   __end_of_BMP280_SPI_bus_write 046C                                   __CFG_STVREN$ON 0000  
                               ?_TMR0_Initialize 0070                                   _PMD_Initialize 0493  
                       ADC_GetConversion@channel 0073                                  _bmp280_get_regs 025E  
                               __end_of_tmr_fire 040C                            __end_of_TMR0_CallBack 0477  
                              _BMP280_delay_msek 04C4                                  ??_EUSART1_Write 0071  
       TMR0_SetInterruptHandler@InterruptHandler 0020                                  _eusart1RxBuffer 005F  
                       bmp280_set_regs@temp_buff 002F                               ?_BMP280_delay_msek 0020  
                              ??_get_calib_param 0053                                _SYSTEM_Initialize 044F  
                        __end_of__initialization 004D                           bmp280_get_config@F6430 0069  
                             ?_SYSTEM_Initialize 0070                                  _bmp280_set_regs 00EC  
                            ??_BMP280_delay_msek 0024                           BMP280_SPI_bus_read@cnt 0023  
                     __size_of_bmp280_soft_reset 003B                                   __pcstackCOMMON 0070  
                                   __pidataBANK0 04C2                                     __pidataBANK2 03A3  
                            ??_SYSTEM_Initialize 0022                                        ?_TMR0_ISR 0070  
                         __end_of_PMD_Initialize 049B                               _spi1_configuration 04BC  
                          TMR0_ISR@CountCallBack 0077                        __end_of_BMP280_delay_msek 04C5  
                    bmp280_set_regs@reg_addr_cnt 0039                      __end_of_EUSART1_Receive_ISR 0380  
                               ?_TMR0_StartTimer 0070                        __end_of_SYSTEM_Initialize 0461  
                                  _eusart1RxHead 007B                                    _eusart1RxTail 007A  
                                     __pbssBANK0 005F                                       __pbssBANK1 00A0  
                                     __pbssBANK2 013E                                    ??_bmp280_init 0057  
                ??_EUSART1_SetRxInterruptHandler 0022                             BMP280_SPI_bus_read@i 0048  
                                     __pnvCOMMON 007C                                   _SSP1DATPPSbits 1EC6  
                                     __pmaintext 030D                         interleave_data@temp_buff 0020  
               __end_of_TMR0_SetInterruptHandler 04B4                                       ??_TMR0_ISR 0077  
                                __CFG_PPS1WAY$ON 0000                                       __pintentry 0004  
                                 _SSP1CLKPPSbits 1EC5                                  ?_PMD_Initialize 0070  
                        __end_of_bmp280_get_regs 02A4                          __size_of_ADC_Initialize 0009  
                                        _SP1BRGH 011C                                          _SP1BRGL 011B  
                                        _OSCCON1 088D                                          _OSCCON3 088F  
                                        _OSCSTAT 0890                                          _OSCTUNE 0892  
                                        _SSP1ADD 018D                                          _SSP1BUF 018C  
                           _BMP280_SPI_bus_write 0461                          __end_of_bmp280_set_regs 017F  
                       __size_of_interleave_data 002E                              __end_of_bmp280_init 020B  
                                      ?_tmr_fire 0070                               bmp280_get_regs@dev 004C  
                             bmp280_get_regs@len 004B                              _EUSART1_is_rx_ready 0000  
                            _EUSART1_is_tx_ready 0000                                          __ptext1 017F  
                                        __ptext2 0051                                          __ptext3 025E  
                                        __ptext4 020B                                          __ptext5 02A4  
                                        __ptext6 00EC                                          __ptext7 0380  
                                        __ptext8 02DF                                          __ptext9 0461  
                                __CFG_WRTAPP$OFF 0000                            _OSCILLATOR_Initialize 0477  
                     __size_of_BMP280_delay_msek 0001                               _EUSART1_Initialize 03DA  
                       ??_PIN_MANAGER_Initialize 0020                                  __CFG_WRTSAF$OFF 0000  
                     __size_of_SYSTEM_Initialize 0012                                          clrloop0 04A9  
                          ?_BMP280_SPI_bus_write 0020                    bmp280_soft_reset@soft_rst_cmd 003F  
                           end_of_initialization 004D                              ?_EUSART1_Initialize 0070  
                                        init_ram 04A2                     __size_of_BMP280_SPI_bus_read 0053  
                                        initloop 04A3                            bmp280_soft_reset@rslt 0040  
          __end_of_EUSART1_SetRxInterruptHandler 048A           __size_of_EUSART1_SetRxInterruptHandler 0009  
                  _EUSART1_SetRxInterruptHandler 0481                                       ??_tmr_fire 0074  
                           ??_EUSART1_Initialize 0022                            __CFG_WDTCPS$WDTCPS_31 0000  
                       _TMR0_SetInterruptHandler 04AE                                 ?_bmp280_get_regs 004A  
                                _get_calib_param 0051                               get_calib_param@dev 00E9  
                                      _TRISCbits 0014                              EUSART1_Write@txData 0070  
                               __CFG_FEXTOSC$OFF 0000                                 ?_bmp280_set_regs 0028  
                                    _bmp280_init 017F                                     _EUSART1_Read 0000  
                              ??_interleave_data 0023                             _timer0ReloadVal16bit 007C  
                              __size_of_TMR0_ISR 0017                                   _ADC_Initialize 048A  
                         ?_OSCILLATOR_Initialize 0070                              start_initialization 001D  
                   BMP280_SPI_bus_read@stringpos 0049                         __size_of_TMR0_Initialize 0019  
                __size_of_PIN_MANAGER_Initialize 0026                                  bmp280_init@rslt 005B  
                         ??_BMP280_SPI_bus_write 0024          __end_ofbmp280_compute_meas_time@startup 04BC  
                bmp280_compute_meas_time@startup 04B8    EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                          __end_of_EUSART1_Write 04A2                          __size_of_null_ptr_check 0023  
                        BMP280_SPI_bus_write@cnt 0023                                 __CFG_LPBOREN$OFF 0000  
                               ??_PMD_Initialize 0020                          __end_of_get_calib_param 00EC  
                         __size_of_TMR0_CallBack 000B                   ?_EUSART1_SetRxInterruptHandler 0020  
                         __end_of_ADC_Initialize 0493                                      __pdataBANK0 006D  
                                    __pdataBANK2 0120                               null_ptr_check@rslt 0022  
                                 _eusart1RxCount 0079                                      __pbssCOMMON 0077  
              _EUSART1_RxDefaultInterruptHandler 00EA                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                    __pcstackBANK1 00D0  
                            bmp280_set_regs@rslt 003A                      bmp280_get_uncomp_data@F6465 00A0  
                   __size_of_EUSART1_Receive_ISR 0025                            _TMR0_InterruptHandler 006B  
                                      __pnvBANK0 006B                                        __pnvBANK1 00EA  
                       __size_of_TMR0_StartTimer 0003                           _PIN_MANAGER_Initialize 0335  
                                ?_ADC_Initialize 0070                        BMP280_SPI_bus_read@iError 0044  
                   ??_INTERRUPT_InterruptManager 0077                                __size_of_tmr_fire 0019  
                            _BMP280_SPI_bus_read 020B                                         _BAUD1CON 011F  
                                  _TMR0_CallBack 046C                               _EUSART1_is_tx_done 0000  
                   BMP280_SPI_bus_write@dev_addr 0020                                ??_TMR0_Initialize 0022  
                           ?_BMP280_SPI_bus_read 0020                            BMP280_delay_msek@msek 0020  
                                      clear_ram0 04A8                                         _PIE0bits 0716  
                                       _PIE3bits 0719                             bmp280_soft_reset@dev 0042  
            __size_of_INTERRUPT_InterruptManager 0017                       ??_TMR0_SetInterruptHandler 0022  
                    BMP280_SPI_bus_read@dev_addr 0020                                         _PIR0bits 070C  
                                       _PIR3bits 070F                     BMP280_SPI_bus_write@reg_addr 0021  
                   BMP280_SPI_bus_write@reg_data 0022                                __CFG_BBSIZE$BB512 0000  
                                       _SSP1CON1 0190                                         _SSP1CON2 0191  
                                       _TMR0_ISR 0424                                         _SSP1STAT 018F  
                               ?_get_calib_param 0070                                       _ADCON0bits 009D  
                    BMP280_SPI_bus_read@reg_addr 0021                      BMP280_SPI_bus_read@reg_data 0022  
                                   _RX1DTPPSbits 1ECB                                   ?_TMR0_CallBack 0070  
                                _interleave_data 02DF                                   _null_ptr_check 0380  
                                   ?_bmp280_init 0070                            ??_BMP280_SPI_bus_read 0024  
                                 bmp280_init@dev 005C                                _ADC_GetConversion 040C  
                              null_ptr_check@dev 0023                          ??_OSCILLATOR_Initialize 0020  
                             ?_ADC_GetConversion 0070                                ??_TMR0_StartTimer 0020  
                    __size_of_EUSART1_Initialize 0019                               bmp280_set_regs@dev 002A  
                             bmp280_set_regs@len 0029                              bmp280_get_regs@rslt 0052  
                            ??_ADC_GetConversion 0072                                       _T0CON0bits 059E  
                                       __ptext10 04C4                                         __ptext11 04BF  
                                       __ptext20 048A                                         __ptext12 044F  
                                       __ptext13 03C1                                         __ptext22 0424  
                                       __ptext14 04AE                                         __ptext23 046C  
                                       __ptext15 0493                                         __ptext24 04C5  
                                       __ptext16 0335                                         __ptext25 03F3  
                                       __ptext17 0477                                         __ptext26 040C  
                                       __ptext18 03DA                                         __ptext27 035B  
                                       __ptext19 0481                                         __ptext28 049B  
                                   _SSP1CON1bits 0190                           __end_of_null_ptr_check 03A3  
                       __size_of_bmp280_get_regs 0046                                    __size_of_main 0028  
           __end_of_TMR0_DefaultInterruptHandler 04C6            __size_of_TMR0_DefaultInterruptHandler 0001  
                   _TMR0_DefaultInterruptHandler 04C5                        __end_of_ADC_GetConversion 0424  
                           __CFG_WDTCWS$WDTCWS_7 0000                                 conf_sensor@F6602 0067  
                               conf_sensor@F6604 006D                                       _RC1STAbits 011D  
                       __size_of_bmp280_set_regs 0093                                         int$flags 007E  
                                       _tmr_fire 03F3               __end_of_INTERRUPT_InterruptManager 001B  
                     _INTERRUPT_InterruptManager 0004                                         main@rslt 005E  
                            _EUSART1_Receive_ISR 035B                          __end_of_interleave_data 030D  
                                      tmr_fire@a 0075                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0077                        bmp280_soft_reset@reg_addr 0041  
                                ?_null_ptr_check 0070                    __size_of_BMP280_SPI_bus_write 000B  
                                       intlevel1 0000                             ?_EUSART1_Receive_ISR 0070  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
                     BMP280_SPI_bus_write@iError 0024                                 ??_ADC_Initialize 0020  
                  ?_TMR0_DefaultInterruptHandler 0070                           __size_of_EUSART1_Write 0007  
                                  __pstringtext1 043B                                    __pstringtext2 04B4  
                                  __pstringtext3 04B8                                    __pstringtext4 04BC  
                                _TMR0_Initialize 03C1                             get_calib_param@F6534 013E  
                                     _TX1STAbits 011E                            ??_EUSART1_Receive_ISR 0071  
                 __end_of_PIN_MANAGER_Initialize 035B                             __size_of_bmp280_init 008C  
                              ??_bmp280_get_regs 004D                       __size_of_ADC_GetConversion 0018  
                     __end_of_spi1_configuration 04BF                              get_calib_param@temp 00D0  
                            get_calib_param@rslt 00E8  
