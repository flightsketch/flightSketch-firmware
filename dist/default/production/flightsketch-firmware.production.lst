

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 27 23:13:53 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F15325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.00
    52                           ; Generated 27/05/2018 GMT
    53                           ; 
    54                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F15325 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  0012                     	;# 
   100  0014                     	;# 
   101  0018                     	;# 
   102  001A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0119                     	;# 
   110  0119                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011A                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011B                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011C                     	;# 
   121  011C                     	;# 
   122  011C                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  011E                     	;# 
   128  011E                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  011F                     	;# 
   132  011F                     	;# 
   133  011F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  018F                     	;# 
   138  0190                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  020C                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  020E                     	;# 
   145  020F                     	;# 
   146  020F                     	;# 
   147  0210                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  028C                     	;# 
   152  028C                     	;# 
   153  028D                     	;# 
   154  028D                     	;# 
   155  028E                     	;# 
   156  028F                     	;# 
   157  0290                     	;# 
   158  0291                     	;# 
   159  030C                     	;# 
   160  030C                     	;# 
   161  030D                     	;# 
   162  030E                     	;# 
   163  030F                     	;# 
   164  0310                     	;# 
   165  0310                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0314                     	;# 
   170  0314                     	;# 
   171  0315                     	;# 
   172  0316                     	;# 
   173  0318                     	;# 
   174  0318                     	;# 
   175  0319                     	;# 
   176  031A                     	;# 
   177  031C                     	;# 
   178  031C                     	;# 
   179  031D                     	;# 
   180  031E                     	;# 
   181  038C                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  058C                     	;# 
   186  058C                     	;# 
   187  058D                     	;# 
   188  058E                     	;# 
   189  058F                     	;# 
   190  058F                     	;# 
   191  0590                     	;# 
   192  0591                     	;# 
   193  0592                     	;# 
   194  0593                     	;# 
   195  059C                     	;# 
   196  059C                     	;# 
   197  059D                     	;# 
   198  059D                     	;# 
   199  059E                     	;# 
   200  059F                     	;# 
   201  060C                     	;# 
   202  060D                     	;# 
   203  060E                     	;# 
   204  060F                     	;# 
   205  0610                     	;# 
   206  0611                     	;# 
   207  0612                     	;# 
   208  0613                     	;# 
   209  0614                     	;# 
   210  070C                     	;# 
   211  070D                     	;# 
   212  070E                     	;# 
   213  070F                     	;# 
   214  0710                     	;# 
   215  0711                     	;# 
   216  0712                     	;# 
   217  0713                     	;# 
   218  0716                     	;# 
   219  0717                     	;# 
   220  0718                     	;# 
   221  0719                     	;# 
   222  071A                     	;# 
   223  071B                     	;# 
   224  071C                     	;# 
   225  071D                     	;# 
   226  0796                     	;# 
   227  0797                     	;# 
   228  0798                     	;# 
   229  0799                     	;# 
   230  079A                     	;# 
   231  079B                     	;# 
   232  080C                     	;# 
   233  080D                     	;# 
   234  080E                     	;# 
   235  080F                     	;# 
   236  0810                     	;# 
   237  0811                     	;# 
   238  0812                     	;# 
   239  0813                     	;# 
   240  0814                     	;# 
   241  081A                     	;# 
   242  081A                     	;# 
   243  081B                     	;# 
   244  081C                     	;# 
   245  081C                     	;# 
   246  081D                     	;# 
   247  081E                     	;# 
   248  081F                     	;# 
   249  088C                     	;# 
   250  088D                     	;# 
   251  088E                     	;# 
   252  088F                     	;# 
   253  0890                     	;# 
   254  0891                     	;# 
   255  0892                     	;# 
   256  0893                     	;# 
   257  0895                     	;# 
   258  0896                     	;# 
   259  090C                     	;# 
   260  090E                     	;# 
   261  090F                     	;# 
   262  091F                     	;# 
   263  098F                     	;# 
   264  098F                     	;# 
   265  0990                     	;# 
   266  0991                     	;# 
   267  0992                     	;# 
   268  0993                     	;# 
   269  0994                     	;# 
   270  0995                     	;# 
   271  0996                     	;# 
   272  0997                     	;# 
   273  0A19                     	;# 
   274  0A19                     	;# 
   275  0A1A                     	;# 
   276  0A1A                     	;# 
   277  0A1B                     	;# 
   278  0A1B                     	;# 
   279  0A1B                     	;# 
   280  0A1C                     	;# 
   281  0A1C                     	;# 
   282  0A1D                     	;# 
   283  0A1D                     	;# 
   284  0A1E                     	;# 
   285  0A1E                     	;# 
   286  0A1F                     	;# 
   287  0A1F                     	;# 
   288  0A1F                     	;# 
   289  1E0F                     	;# 
   290  1E10                     	;# 
   291  1E11                     	;# 
   292  1E12                     	;# 
   293  1E13                     	;# 
   294  1E14                     	;# 
   295  1E15                     	;# 
   296  1E16                     	;# 
   297  1E17                     	;# 
   298  1E18                     	;# 
   299  1E19                     	;# 
   300  1E1A                     	;# 
   301  1E1B                     	;# 
   302  1E1C                     	;# 
   303  1E1D                     	;# 
   304  1E1E                     	;# 
   305  1E1F                     	;# 
   306  1E20                     	;# 
   307  1E21                     	;# 
   308  1E22                     	;# 
   309  1E23                     	;# 
   310  1E24                     	;# 
   311  1E25                     	;# 
   312  1E26                     	;# 
   313  1E27                     	;# 
   314  1E28                     	;# 
   315  1E29                     	;# 
   316  1E2A                     	;# 
   317  1E2B                     	;# 
   318  1E2C                     	;# 
   319  1E2D                     	;# 
   320  1E2E                     	;# 
   321  1E2F                     	;# 
   322  1E30                     	;# 
   323  1E31                     	;# 
   324  1E32                     	;# 
   325  1E33                     	;# 
   326  1E34                     	;# 
   327  1E35                     	;# 
   328  1E36                     	;# 
   329  1E37                     	;# 
   330  1E8F                     	;# 
   331  1E90                     	;# 
   332  1E91                     	;# 
   333  1E92                     	;# 
   334  1E93                     	;# 
   335  1E9C                     	;# 
   336  1EA1                     	;# 
   337  1EA2                     	;# 
   338  1EB1                     	;# 
   339  1EBB                     	;# 
   340  1EBC                     	;# 
   341  1EBD                     	;# 
   342  1EBE                     	;# 
   343  1EC3                     	;# 
   344  1EC5                     	;# 
   345  1EC6                     	;# 
   346  1EC7                     	;# 
   347  1ECB                     	;# 
   348  1ECC                     	;# 
   349  1ECD                     	;# 
   350  1ECE                     	;# 
   351  1F10                     	;# 
   352  1F11                     	;# 
   353  1F12                     	;# 
   354  1F13                     	;# 
   355  1F14                     	;# 
   356  1F15                     	;# 
   357  1F20                     	;# 
   358  1F21                     	;# 
   359  1F22                     	;# 
   360  1F23                     	;# 
   361  1F24                     	;# 
   362  1F25                     	;# 
   363  1F38                     	;# 
   364  1F39                     	;# 
   365  1F3A                     	;# 
   366  1F3B                     	;# 
   367  1F3C                     	;# 
   368  1F3D                     	;# 
   369  1F3E                     	;# 
   370  1F3F                     	;# 
   371  1F4E                     	;# 
   372  1F4F                     	;# 
   373  1F50                     	;# 
   374  1F51                     	;# 
   375  1F52                     	;# 
   376  1F53                     	;# 
   377  1F54                     	;# 
   378  1F55                     	;# 
   379  1FE4                     	;# 
   380  1FE5                     	;# 
   381  1FE6                     	;# 
   382  1FE7                     	;# 
   383  1FE8                     	;# 
   384  1FE8                     	;# 
   385  1FE9                     	;# 
   386  1FEA                     	;# 
   387  1FEA                     	;# 
   388  1FEB                     	;# 
   389  1FED                     	;# 
   390  1FEE                     	;# 
   391  1FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000E                     	;# 
   406  0012                     	;# 
   407  0014                     	;# 
   408  0018                     	;# 
   409  001A                     	;# 
   410  009B                     	;# 
   411  009B                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  009F                     	;# 
   416  0119                     	;# 
   417  0119                     	;# 
   418  0119                     	;# 
   419  011A                     	;# 
   420  011A                     	;# 
   421  011A                     	;# 
   422  011B                     	;# 
   423  011B                     	;# 
   424  011B                     	;# 
   425  011B                     	;# 
   426  011B                     	;# 
   427  011C                     	;# 
   428  011C                     	;# 
   429  011C                     	;# 
   430  011D                     	;# 
   431  011D                     	;# 
   432  011D                     	;# 
   433  011E                     	;# 
   434  011E                     	;# 
   435  011E                     	;# 
   436  011F                     	;# 
   437  011F                     	;# 
   438  011F                     	;# 
   439  011F                     	;# 
   440  011F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  018E                     	;# 
   444  018F                     	;# 
   445  0190                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  020C                     	;# 
   449  020C                     	;# 
   450  020D                     	;# 
   451  020E                     	;# 
   452  020F                     	;# 
   453  020F                     	;# 
   454  0210                     	;# 
   455  0210                     	;# 
   456  0211                     	;# 
   457  0211                     	;# 
   458  028C                     	;# 
   459  028C                     	;# 
   460  028D                     	;# 
   461  028D                     	;# 
   462  028E                     	;# 
   463  028F                     	;# 
   464  0290                     	;# 
   465  0291                     	;# 
   466  030C                     	;# 
   467  030C                     	;# 
   468  030D                     	;# 
   469  030E                     	;# 
   470  030F                     	;# 
   471  0310                     	;# 
   472  0310                     	;# 
   473  0311                     	;# 
   474  0312                     	;# 
   475  0313                     	;# 
   476  0314                     	;# 
   477  0314                     	;# 
   478  0315                     	;# 
   479  0316                     	;# 
   480  0318                     	;# 
   481  0318                     	;# 
   482  0319                     	;# 
   483  031A                     	;# 
   484  031C                     	;# 
   485  031C                     	;# 
   486  031D                     	;# 
   487  031E                     	;# 
   488  038C                     	;# 
   489  038C                     	;# 
   490  038D                     	;# 
   491  038E                     	;# 
   492  058C                     	;# 
   493  058C                     	;# 
   494  058D                     	;# 
   495  058E                     	;# 
   496  058F                     	;# 
   497  058F                     	;# 
   498  0590                     	;# 
   499  0591                     	;# 
   500  0592                     	;# 
   501  0593                     	;# 
   502  059C                     	;# 
   503  059C                     	;# 
   504  059D                     	;# 
   505  059D                     	;# 
   506  059E                     	;# 
   507  059F                     	;# 
   508  060C                     	;# 
   509  060D                     	;# 
   510  060E                     	;# 
   511  060F                     	;# 
   512  0610                     	;# 
   513  0611                     	;# 
   514  0612                     	;# 
   515  0613                     	;# 
   516  0614                     	;# 
   517  070C                     	;# 
   518  070D                     	;# 
   519  070E                     	;# 
   520  070F                     	;# 
   521  0710                     	;# 
   522  0711                     	;# 
   523  0712                     	;# 
   524  0713                     	;# 
   525  0716                     	;# 
   526  0717                     	;# 
   527  0718                     	;# 
   528  0719                     	;# 
   529  071A                     	;# 
   530  071B                     	;# 
   531  071C                     	;# 
   532  071D                     	;# 
   533  0796                     	;# 
   534  0797                     	;# 
   535  0798                     	;# 
   536  0799                     	;# 
   537  079A                     	;# 
   538  079B                     	;# 
   539  080C                     	;# 
   540  080D                     	;# 
   541  080E                     	;# 
   542  080F                     	;# 
   543  0810                     	;# 
   544  0811                     	;# 
   545  0812                     	;# 
   546  0813                     	;# 
   547  0814                     	;# 
   548  081A                     	;# 
   549  081A                     	;# 
   550  081B                     	;# 
   551  081C                     	;# 
   552  081C                     	;# 
   553  081D                     	;# 
   554  081E                     	;# 
   555  081F                     	;# 
   556  088C                     	;# 
   557  088D                     	;# 
   558  088E                     	;# 
   559  088F                     	;# 
   560  0890                     	;# 
   561  0891                     	;# 
   562  0892                     	;# 
   563  0893                     	;# 
   564  0895                     	;# 
   565  0896                     	;# 
   566  090C                     	;# 
   567  090E                     	;# 
   568  090F                     	;# 
   569  091F                     	;# 
   570  098F                     	;# 
   571  098F                     	;# 
   572  0990                     	;# 
   573  0991                     	;# 
   574  0992                     	;# 
   575  0993                     	;# 
   576  0994                     	;# 
   577  0995                     	;# 
   578  0996                     	;# 
   579  0997                     	;# 
   580  0A19                     	;# 
   581  0A19                     	;# 
   582  0A1A                     	;# 
   583  0A1A                     	;# 
   584  0A1B                     	;# 
   585  0A1B                     	;# 
   586  0A1B                     	;# 
   587  0A1C                     	;# 
   588  0A1C                     	;# 
   589  0A1D                     	;# 
   590  0A1D                     	;# 
   591  0A1E                     	;# 
   592  0A1E                     	;# 
   593  0A1F                     	;# 
   594  0A1F                     	;# 
   595  0A1F                     	;# 
   596  1E0F                     	;# 
   597  1E10                     	;# 
   598  1E11                     	;# 
   599  1E12                     	;# 
   600  1E13                     	;# 
   601  1E14                     	;# 
   602  1E15                     	;# 
   603  1E16                     	;# 
   604  1E17                     	;# 
   605  1E18                     	;# 
   606  1E19                     	;# 
   607  1E1A                     	;# 
   608  1E1B                     	;# 
   609  1E1C                     	;# 
   610  1E1D                     	;# 
   611  1E1E                     	;# 
   612  1E1F                     	;# 
   613  1E20                     	;# 
   614  1E21                     	;# 
   615  1E22                     	;# 
   616  1E23                     	;# 
   617  1E24                     	;# 
   618  1E25                     	;# 
   619  1E26                     	;# 
   620  1E27                     	;# 
   621  1E28                     	;# 
   622  1E29                     	;# 
   623  1E2A                     	;# 
   624  1E2B                     	;# 
   625  1E2C                     	;# 
   626  1E2D                     	;# 
   627  1E2E                     	;# 
   628  1E2F                     	;# 
   629  1E30                     	;# 
   630  1E31                     	;# 
   631  1E32                     	;# 
   632  1E33                     	;# 
   633  1E34                     	;# 
   634  1E35                     	;# 
   635  1E36                     	;# 
   636  1E37                     	;# 
   637  1E8F                     	;# 
   638  1E90                     	;# 
   639  1E91                     	;# 
   640  1E92                     	;# 
   641  1E93                     	;# 
   642  1E9C                     	;# 
   643  1EA1                     	;# 
   644  1EA2                     	;# 
   645  1EB1                     	;# 
   646  1EBB                     	;# 
   647  1EBC                     	;# 
   648  1EBD                     	;# 
   649  1EBE                     	;# 
   650  1EC3                     	;# 
   651  1EC5                     	;# 
   652  1EC6                     	;# 
   653  1EC7                     	;# 
   654  1ECB                     	;# 
   655  1ECC                     	;# 
   656  1ECD                     	;# 
   657  1ECE                     	;# 
   658  1F10                     	;# 
   659  1F11                     	;# 
   660  1F12                     	;# 
   661  1F13                     	;# 
   662  1F14                     	;# 
   663  1F15                     	;# 
   664  1F20                     	;# 
   665  1F21                     	;# 
   666  1F22                     	;# 
   667  1F23                     	;# 
   668  1F24                     	;# 
   669  1F25                     	;# 
   670  1F38                     	;# 
   671  1F39                     	;# 
   672  1F3A                     	;# 
   673  1F3B                     	;# 
   674  1F3C                     	;# 
   675  1F3D                     	;# 
   676  1F3E                     	;# 
   677  1F3F                     	;# 
   678  1F4E                     	;# 
   679  1F4F                     	;# 
   680  1F50                     	;# 
   681  1F51                     	;# 
   682  1F52                     	;# 
   683  1F53                     	;# 
   684  1F54                     	;# 
   685  1F55                     	;# 
   686  1FE4                     	;# 
   687  1FE5                     	;# 
   688  1FE6                     	;# 
   689  1FE7                     	;# 
   690  1FE8                     	;# 
   691  1FE8                     	;# 
   692  1FE9                     	;# 
   693  1FEA                     	;# 
   694  1FEA                     	;# 
   695  1FEB                     	;# 
   696  1FED                     	;# 
   697  1FEE                     	;# 
   698  1FEF                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0008                     	;# 
   708  0009                     	;# 
   709  000A                     	;# 
   710  000B                     	;# 
   711  000C                     	;# 
   712  000E                     	;# 
   713  0012                     	;# 
   714  0014                     	;# 
   715  0018                     	;# 
   716  001A                     	;# 
   717  009B                     	;# 
   718  009B                     	;# 
   719  009C                     	;# 
   720  009D                     	;# 
   721  009E                     	;# 
   722  009F                     	;# 
   723  0119                     	;# 
   724  0119                     	;# 
   725  0119                     	;# 
   726  011A                     	;# 
   727  011A                     	;# 
   728  011A                     	;# 
   729  011B                     	;# 
   730  011B                     	;# 
   731  011B                     	;# 
   732  011B                     	;# 
   733  011B                     	;# 
   734  011C                     	;# 
   735  011C                     	;# 
   736  011C                     	;# 
   737  011D                     	;# 
   738  011D                     	;# 
   739  011D                     	;# 
   740  011E                     	;# 
   741  011E                     	;# 
   742  011E                     	;# 
   743  011F                     	;# 
   744  011F                     	;# 
   745  011F                     	;# 
   746  011F                     	;# 
   747  011F                     	;# 
   748  018C                     	;# 
   749  018D                     	;# 
   750  018E                     	;# 
   751  018F                     	;# 
   752  0190                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  020C                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  020F                     	;# 
   760  020F                     	;# 
   761  0210                     	;# 
   762  0210                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  028C                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028D                     	;# 
   769  028E                     	;# 
   770  028F                     	;# 
   771  0290                     	;# 
   772  0291                     	;# 
   773  030C                     	;# 
   774  030C                     	;# 
   775  030D                     	;# 
   776  030E                     	;# 
   777  030F                     	;# 
   778  0310                     	;# 
   779  0310                     	;# 
   780  0311                     	;# 
   781  0312                     	;# 
   782  0313                     	;# 
   783  0314                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0316                     	;# 
   787  0318                     	;# 
   788  0318                     	;# 
   789  0319                     	;# 
   790  031A                     	;# 
   791  031C                     	;# 
   792  031C                     	;# 
   793  031D                     	;# 
   794  031E                     	;# 
   795  038C                     	;# 
   796  038C                     	;# 
   797  038D                     	;# 
   798  038E                     	;# 
   799  058C                     	;# 
   800  058C                     	;# 
   801  058D                     	;# 
   802  058E                     	;# 
   803  058F                     	;# 
   804  058F                     	;# 
   805  0590                     	;# 
   806  0591                     	;# 
   807  0592                     	;# 
   808  0593                     	;# 
   809  059C                     	;# 
   810  059C                     	;# 
   811  059D                     	;# 
   812  059D                     	;# 
   813  059E                     	;# 
   814  059F                     	;# 
   815  060C                     	;# 
   816  060D                     	;# 
   817  060E                     	;# 
   818  060F                     	;# 
   819  0610                     	;# 
   820  0611                     	;# 
   821  0612                     	;# 
   822  0613                     	;# 
   823  0614                     	;# 
   824  070C                     	;# 
   825  070D                     	;# 
   826  070E                     	;# 
   827  070F                     	;# 
   828  0710                     	;# 
   829  0711                     	;# 
   830  0712                     	;# 
   831  0713                     	;# 
   832  0716                     	;# 
   833  0717                     	;# 
   834  0718                     	;# 
   835  0719                     	;# 
   836  071A                     	;# 
   837  071B                     	;# 
   838  071C                     	;# 
   839  071D                     	;# 
   840  0796                     	;# 
   841  0797                     	;# 
   842  0798                     	;# 
   843  0799                     	;# 
   844  079A                     	;# 
   845  079B                     	;# 
   846  080C                     	;# 
   847  080D                     	;# 
   848  080E                     	;# 
   849  080F                     	;# 
   850  0810                     	;# 
   851  0811                     	;# 
   852  0812                     	;# 
   853  0813                     	;# 
   854  0814                     	;# 
   855  081A                     	;# 
   856  081A                     	;# 
   857  081B                     	;# 
   858  081C                     	;# 
   859  081C                     	;# 
   860  081D                     	;# 
   861  081E                     	;# 
   862  081F                     	;# 
   863  088C                     	;# 
   864  088D                     	;# 
   865  088E                     	;# 
   866  088F                     	;# 
   867  0890                     	;# 
   868  0891                     	;# 
   869  0892                     	;# 
   870  0893                     	;# 
   871  0895                     	;# 
   872  0896                     	;# 
   873  090C                     	;# 
   874  090E                     	;# 
   875  090F                     	;# 
   876  091F                     	;# 
   877  098F                     	;# 
   878  098F                     	;# 
   879  0990                     	;# 
   880  0991                     	;# 
   881  0992                     	;# 
   882  0993                     	;# 
   883  0994                     	;# 
   884  0995                     	;# 
   885  0996                     	;# 
   886  0997                     	;# 
   887  0A19                     	;# 
   888  0A19                     	;# 
   889  0A1A                     	;# 
   890  0A1A                     	;# 
   891  0A1B                     	;# 
   892  0A1B                     	;# 
   893  0A1B                     	;# 
   894  0A1C                     	;# 
   895  0A1C                     	;# 
   896  0A1D                     	;# 
   897  0A1D                     	;# 
   898  0A1E                     	;# 
   899  0A1E                     	;# 
   900  0A1F                     	;# 
   901  0A1F                     	;# 
   902  0A1F                     	;# 
   903  1E0F                     	;# 
   904  1E10                     	;# 
   905  1E11                     	;# 
   906  1E12                     	;# 
   907  1E13                     	;# 
   908  1E14                     	;# 
   909  1E15                     	;# 
   910  1E16                     	;# 
   911  1E17                     	;# 
   912  1E18                     	;# 
   913  1E19                     	;# 
   914  1E1A                     	;# 
   915  1E1B                     	;# 
   916  1E1C                     	;# 
   917  1E1D                     	;# 
   918  1E1E                     	;# 
   919  1E1F                     	;# 
   920  1E20                     	;# 
   921  1E21                     	;# 
   922  1E22                     	;# 
   923  1E23                     	;# 
   924  1E24                     	;# 
   925  1E25                     	;# 
   926  1E26                     	;# 
   927  1E27                     	;# 
   928  1E28                     	;# 
   929  1E29                     	;# 
   930  1E2A                     	;# 
   931  1E2B                     	;# 
   932  1E2C                     	;# 
   933  1E2D                     	;# 
   934  1E2E                     	;# 
   935  1E2F                     	;# 
   936  1E30                     	;# 
   937  1E31                     	;# 
   938  1E32                     	;# 
   939  1E33                     	;# 
   940  1E34                     	;# 
   941  1E35                     	;# 
   942  1E36                     	;# 
   943  1E37                     	;# 
   944  1E8F                     	;# 
   945  1E90                     	;# 
   946  1E91                     	;# 
   947  1E92                     	;# 
   948  1E93                     	;# 
   949  1E9C                     	;# 
   950  1EA1                     	;# 
   951  1EA2                     	;# 
   952  1EB1                     	;# 
   953  1EBB                     	;# 
   954  1EBC                     	;# 
   955  1EBD                     	;# 
   956  1EBE                     	;# 
   957  1EC3                     	;# 
   958  1EC5                     	;# 
   959  1EC6                     	;# 
   960  1EC7                     	;# 
   961  1ECB                     	;# 
   962  1ECC                     	;# 
   963  1ECD                     	;# 
   964  1ECE                     	;# 
   965  1F10                     	;# 
   966  1F11                     	;# 
   967  1F12                     	;# 
   968  1F13                     	;# 
   969  1F14                     	;# 
   970  1F15                     	;# 
   971  1F20                     	;# 
   972  1F21                     	;# 
   973  1F22                     	;# 
   974  1F23                     	;# 
   975  1F24                     	;# 
   976  1F25                     	;# 
   977  1F38                     	;# 
   978  1F39                     	;# 
   979  1F3A                     	;# 
   980  1F3B                     	;# 
   981  1F3C                     	;# 
   982  1F3D                     	;# 
   983  1F3E                     	;# 
   984  1F3F                     	;# 
   985  1F4E                     	;# 
   986  1F4F                     	;# 
   987  1F50                     	;# 
   988  1F51                     	;# 
   989  1F52                     	;# 
   990  1F53                     	;# 
   991  1F54                     	;# 
   992  1F55                     	;# 
   993  1FE4                     	;# 
   994  1FE5                     	;# 
   995  1FE6                     	;# 
   996  1FE7                     	;# 
   997  1FE8                     	;# 
   998  1FE8                     	;# 
   999  1FE9                     	;# 
  1000  1FEA                     	;# 
  1001  1FEA                     	;# 
  1002  1FEB                     	;# 
  1003  1FED                     	;# 
  1004  1FEE                     	;# 
  1005  1FEF                     	;# 
  1006  0000                     	;# 
  1007  0001                     	;# 
  1008  0002                     	;# 
  1009  0003                     	;# 
  1010  0004                     	;# 
  1011  0005                     	;# 
  1012  0006                     	;# 
  1013  0007                     	;# 
  1014  0008                     	;# 
  1015  0009                     	;# 
  1016  000A                     	;# 
  1017  000B                     	;# 
  1018  000C                     	;# 
  1019  000E                     	;# 
  1020  0012                     	;# 
  1021  0014                     	;# 
  1022  0018                     	;# 
  1023  001A                     	;# 
  1024  009B                     	;# 
  1025  009B                     	;# 
  1026  009C                     	;# 
  1027  009D                     	;# 
  1028  009E                     	;# 
  1029  009F                     	;# 
  1030  0119                     	;# 
  1031  0119                     	;# 
  1032  0119                     	;# 
  1033  011A                     	;# 
  1034  011A                     	;# 
  1035  011A                     	;# 
  1036  011B                     	;# 
  1037  011B                     	;# 
  1038  011B                     	;# 
  1039  011B                     	;# 
  1040  011B                     	;# 
  1041  011C                     	;# 
  1042  011C                     	;# 
  1043  011C                     	;# 
  1044  011D                     	;# 
  1045  011D                     	;# 
  1046  011D                     	;# 
  1047  011E                     	;# 
  1048  011E                     	;# 
  1049  011E                     	;# 
  1050  011F                     	;# 
  1051  011F                     	;# 
  1052  011F                     	;# 
  1053  011F                     	;# 
  1054  011F                     	;# 
  1055  018C                     	;# 
  1056  018D                     	;# 
  1057  018E                     	;# 
  1058  018F                     	;# 
  1059  0190                     	;# 
  1060  0191                     	;# 
  1061  0192                     	;# 
  1062  020C                     	;# 
  1063  020C                     	;# 
  1064  020D                     	;# 
  1065  020E                     	;# 
  1066  020F                     	;# 
  1067  020F                     	;# 
  1068  0210                     	;# 
  1069  0210                     	;# 
  1070  0211                     	;# 
  1071  0211                     	;# 
  1072  028C                     	;# 
  1073  028C                     	;# 
  1074  028D                     	;# 
  1075  028D                     	;# 
  1076  028E                     	;# 
  1077  028F                     	;# 
  1078  0290                     	;# 
  1079  0291                     	;# 
  1080  030C                     	;# 
  1081  030C                     	;# 
  1082  030D                     	;# 
  1083  030E                     	;# 
  1084  030F                     	;# 
  1085  0310                     	;# 
  1086  0310                     	;# 
  1087  0311                     	;# 
  1088  0312                     	;# 
  1089  0313                     	;# 
  1090  0314                     	;# 
  1091  0314                     	;# 
  1092  0315                     	;# 
  1093  0316                     	;# 
  1094  0318                     	;# 
  1095  0318                     	;# 
  1096  0319                     	;# 
  1097  031A                     	;# 
  1098  031C                     	;# 
  1099  031C                     	;# 
  1100  031D                     	;# 
  1101  031E                     	;# 
  1102  038C                     	;# 
  1103  038C                     	;# 
  1104  038D                     	;# 
  1105  038E                     	;# 
  1106  058C                     	;# 
  1107  058C                     	;# 
  1108  058D                     	;# 
  1109  058E                     	;# 
  1110  058F                     	;# 
  1111  058F                     	;# 
  1112  0590                     	;# 
  1113  0591                     	;# 
  1114  0592                     	;# 
  1115  0593                     	;# 
  1116  059C                     	;# 
  1117  059C                     	;# 
  1118  059D                     	;# 
  1119  059D                     	;# 
  1120  059E                     	;# 
  1121  059F                     	;# 
  1122  060C                     	;# 
  1123  060D                     	;# 
  1124  060E                     	;# 
  1125  060F                     	;# 
  1126  0610                     	;# 
  1127  0611                     	;# 
  1128  0612                     	;# 
  1129  0613                     	;# 
  1130  0614                     	;# 
  1131  070C                     	;# 
  1132  070D                     	;# 
  1133  070E                     	;# 
  1134  070F                     	;# 
  1135  0710                     	;# 
  1136  0711                     	;# 
  1137  0712                     	;# 
  1138  0713                     	;# 
  1139  0716                     	;# 
  1140  0717                     	;# 
  1141  0718                     	;# 
  1142  0719                     	;# 
  1143  071A                     	;# 
  1144  071B                     	;# 
  1145  071C                     	;# 
  1146  071D                     	;# 
  1147  0796                     	;# 
  1148  0797                     	;# 
  1149  0798                     	;# 
  1150  0799                     	;# 
  1151  079A                     	;# 
  1152  079B                     	;# 
  1153  080C                     	;# 
  1154  080D                     	;# 
  1155  080E                     	;# 
  1156  080F                     	;# 
  1157  0810                     	;# 
  1158  0811                     	;# 
  1159  0812                     	;# 
  1160  0813                     	;# 
  1161  0814                     	;# 
  1162  081A                     	;# 
  1163  081A                     	;# 
  1164  081B                     	;# 
  1165  081C                     	;# 
  1166  081C                     	;# 
  1167  081D                     	;# 
  1168  081E                     	;# 
  1169  081F                     	;# 
  1170  088C                     	;# 
  1171  088D                     	;# 
  1172  088E                     	;# 
  1173  088F                     	;# 
  1174  0890                     	;# 
  1175  0891                     	;# 
  1176  0892                     	;# 
  1177  0893                     	;# 
  1178  0895                     	;# 
  1179  0896                     	;# 
  1180  090C                     	;# 
  1181  090E                     	;# 
  1182  090F                     	;# 
  1183  091F                     	;# 
  1184  098F                     	;# 
  1185  098F                     	;# 
  1186  0990                     	;# 
  1187  0991                     	;# 
  1188  0992                     	;# 
  1189  0993                     	;# 
  1190  0994                     	;# 
  1191  0995                     	;# 
  1192  0996                     	;# 
  1193  0997                     	;# 
  1194  0A19                     	;# 
  1195  0A19                     	;# 
  1196  0A1A                     	;# 
  1197  0A1A                     	;# 
  1198  0A1B                     	;# 
  1199  0A1B                     	;# 
  1200  0A1B                     	;# 
  1201  0A1C                     	;# 
  1202  0A1C                     	;# 
  1203  0A1D                     	;# 
  1204  0A1D                     	;# 
  1205  0A1E                     	;# 
  1206  0A1E                     	;# 
  1207  0A1F                     	;# 
  1208  0A1F                     	;# 
  1209  0A1F                     	;# 
  1210  1E0F                     	;# 
  1211  1E10                     	;# 
  1212  1E11                     	;# 
  1213  1E12                     	;# 
  1214  1E13                     	;# 
  1215  1E14                     	;# 
  1216  1E15                     	;# 
  1217  1E16                     	;# 
  1218  1E17                     	;# 
  1219  1E18                     	;# 
  1220  1E19                     	;# 
  1221  1E1A                     	;# 
  1222  1E1B                     	;# 
  1223  1E1C                     	;# 
  1224  1E1D                     	;# 
  1225  1E1E                     	;# 
  1226  1E1F                     	;# 
  1227  1E20                     	;# 
  1228  1E21                     	;# 
  1229  1E22                     	;# 
  1230  1E23                     	;# 
  1231  1E24                     	;# 
  1232  1E25                     	;# 
  1233  1E26                     	;# 
  1234  1E27                     	;# 
  1235  1E28                     	;# 
  1236  1E29                     	;# 
  1237  1E2A                     	;# 
  1238  1E2B                     	;# 
  1239  1E2C                     	;# 
  1240  1E2D                     	;# 
  1241  1E2E                     	;# 
  1242  1E2F                     	;# 
  1243  1E30                     	;# 
  1244  1E31                     	;# 
  1245  1E32                     	;# 
  1246  1E33                     	;# 
  1247  1E34                     	;# 
  1248  1E35                     	;# 
  1249  1E36                     	;# 
  1250  1E37                     	;# 
  1251  1E8F                     	;# 
  1252  1E90                     	;# 
  1253  1E91                     	;# 
  1254  1E92                     	;# 
  1255  1E93                     	;# 
  1256  1E9C                     	;# 
  1257  1EA1                     	;# 
  1258  1EA2                     	;# 
  1259  1EB1                     	;# 
  1260  1EBB                     	;# 
  1261  1EBC                     	;# 
  1262  1EBD                     	;# 
  1263  1EBE                     	;# 
  1264  1EC3                     	;# 
  1265  1EC5                     	;# 
  1266  1EC6                     	;# 
  1267  1EC7                     	;# 
  1268  1ECB                     	;# 
  1269  1ECC                     	;# 
  1270  1ECD                     	;# 
  1271  1ECE                     	;# 
  1272  1F10                     	;# 
  1273  1F11                     	;# 
  1274  1F12                     	;# 
  1275  1F13                     	;# 
  1276  1F14                     	;# 
  1277  1F15                     	;# 
  1278  1F20                     	;# 
  1279  1F21                     	;# 
  1280  1F22                     	;# 
  1281  1F23                     	;# 
  1282  1F24                     	;# 
  1283  1F25                     	;# 
  1284  1F38                     	;# 
  1285  1F39                     	;# 
  1286  1F3A                     	;# 
  1287  1F3B                     	;# 
  1288  1F3C                     	;# 
  1289  1F3D                     	;# 
  1290  1F3E                     	;# 
  1291  1F3F                     	;# 
  1292  1F4E                     	;# 
  1293  1F4F                     	;# 
  1294  1F50                     	;# 
  1295  1F51                     	;# 
  1296  1F52                     	;# 
  1297  1F53                     	;# 
  1298  1F54                     	;# 
  1299  1F55                     	;# 
  1300  1FE4                     	;# 
  1301  1FE5                     	;# 
  1302  1FE6                     	;# 
  1303  1FE7                     	;# 
  1304  1FE8                     	;# 
  1305  1FE8                     	;# 
  1306  1FE9                     	;# 
  1307  1FEA                     	;# 
  1308  1FEA                     	;# 
  1309  1FEB                     	;# 
  1310  1FED                     	;# 
  1311  1FEE                     	;# 
  1312  1FEF                     	;# 
  1313  0000                     	;# 
  1314  0001                     	;# 
  1315  0002                     	;# 
  1316  0003                     	;# 
  1317  0004                     	;# 
  1318  0005                     	;# 
  1319  0006                     	;# 
  1320  0007                     	;# 
  1321  0008                     	;# 
  1322  0009                     	;# 
  1323  000A                     	;# 
  1324  000B                     	;# 
  1325  000C                     	;# 
  1326  000E                     	;# 
  1327  0012                     	;# 
  1328  0014                     	;# 
  1329  0018                     	;# 
  1330  001A                     	;# 
  1331  009B                     	;# 
  1332  009B                     	;# 
  1333  009C                     	;# 
  1334  009D                     	;# 
  1335  009E                     	;# 
  1336  009F                     	;# 
  1337  0119                     	;# 
  1338  0119                     	;# 
  1339  0119                     	;# 
  1340  011A                     	;# 
  1341  011A                     	;# 
  1342  011A                     	;# 
  1343  011B                     	;# 
  1344  011B                     	;# 
  1345  011B                     	;# 
  1346  011B                     	;# 
  1347  011B                     	;# 
  1348  011C                     	;# 
  1349  011C                     	;# 
  1350  011C                     	;# 
  1351  011D                     	;# 
  1352  011D                     	;# 
  1353  011D                     	;# 
  1354  011E                     	;# 
  1355  011E                     	;# 
  1356  011E                     	;# 
  1357  011F                     	;# 
  1358  011F                     	;# 
  1359  011F                     	;# 
  1360  011F                     	;# 
  1361  011F                     	;# 
  1362  018C                     	;# 
  1363  018D                     	;# 
  1364  018E                     	;# 
  1365  018F                     	;# 
  1366  0190                     	;# 
  1367  0191                     	;# 
  1368  0192                     	;# 
  1369  020C                     	;# 
  1370  020C                     	;# 
  1371  020D                     	;# 
  1372  020E                     	;# 
  1373  020F                     	;# 
  1374  020F                     	;# 
  1375  0210                     	;# 
  1376  0210                     	;# 
  1377  0211                     	;# 
  1378  0211                     	;# 
  1379  028C                     	;# 
  1380  028C                     	;# 
  1381  028D                     	;# 
  1382  028D                     	;# 
  1383  028E                     	;# 
  1384  028F                     	;# 
  1385  0290                     	;# 
  1386  0291                     	;# 
  1387  030C                     	;# 
  1388  030C                     	;# 
  1389  030D                     	;# 
  1390  030E                     	;# 
  1391  030F                     	;# 
  1392  0310                     	;# 
  1393  0310                     	;# 
  1394  0311                     	;# 
  1395  0312                     	;# 
  1396  0313                     	;# 
  1397  0314                     	;# 
  1398  0314                     	;# 
  1399  0315                     	;# 
  1400  0316                     	;# 
  1401  0318                     	;# 
  1402  0318                     	;# 
  1403  0319                     	;# 
  1404  031A                     	;# 
  1405  031C                     	;# 
  1406  031C                     	;# 
  1407  031D                     	;# 
  1408  031E                     	;# 
  1409  038C                     	;# 
  1410  038C                     	;# 
  1411  038D                     	;# 
  1412  038E                     	;# 
  1413  058C                     	;# 
  1414  058C                     	;# 
  1415  058D                     	;# 
  1416  058E                     	;# 
  1417  058F                     	;# 
  1418  058F                     	;# 
  1419  0590                     	;# 
  1420  0591                     	;# 
  1421  0592                     	;# 
  1422  0593                     	;# 
  1423  059C                     	;# 
  1424  059C                     	;# 
  1425  059D                     	;# 
  1426  059D                     	;# 
  1427  059E                     	;# 
  1428  059F                     	;# 
  1429  060C                     	;# 
  1430  060D                     	;# 
  1431  060E                     	;# 
  1432  060F                     	;# 
  1433  0610                     	;# 
  1434  0611                     	;# 
  1435  0612                     	;# 
  1436  0613                     	;# 
  1437  0614                     	;# 
  1438  070C                     	;# 
  1439  070D                     	;# 
  1440  070E                     	;# 
  1441  070F                     	;# 
  1442  0710                     	;# 
  1443  0711                     	;# 
  1444  0712                     	;# 
  1445  0713                     	;# 
  1446  0716                     	;# 
  1447  0717                     	;# 
  1448  0718                     	;# 
  1449  0719                     	;# 
  1450  071A                     	;# 
  1451  071B                     	;# 
  1452  071C                     	;# 
  1453  071D                     	;# 
  1454  0796                     	;# 
  1455  0797                     	;# 
  1456  0798                     	;# 
  1457  0799                     	;# 
  1458  079A                     	;# 
  1459  079B                     	;# 
  1460  080C                     	;# 
  1461  080D                     	;# 
  1462  080E                     	;# 
  1463  080F                     	;# 
  1464  0810                     	;# 
  1465  0811                     	;# 
  1466  0812                     	;# 
  1467  0813                     	;# 
  1468  0814                     	;# 
  1469  081A                     	;# 
  1470  081A                     	;# 
  1471  081B                     	;# 
  1472  081C                     	;# 
  1473  081C                     	;# 
  1474  081D                     	;# 
  1475  081E                     	;# 
  1476  081F                     	;# 
  1477  088C                     	;# 
  1478  088D                     	;# 
  1479  088E                     	;# 
  1480  088F                     	;# 
  1481  0890                     	;# 
  1482  0891                     	;# 
  1483  0892                     	;# 
  1484  0893                     	;# 
  1485  0895                     	;# 
  1486  0896                     	;# 
  1487  090C                     	;# 
  1488  090E                     	;# 
  1489  090F                     	;# 
  1490  091F                     	;# 
  1491  098F                     	;# 
  1492  098F                     	;# 
  1493  0990                     	;# 
  1494  0991                     	;# 
  1495  0992                     	;# 
  1496  0993                     	;# 
  1497  0994                     	;# 
  1498  0995                     	;# 
  1499  0996                     	;# 
  1500  0997                     	;# 
  1501  0A19                     	;# 
  1502  0A19                     	;# 
  1503  0A1A                     	;# 
  1504  0A1A                     	;# 
  1505  0A1B                     	;# 
  1506  0A1B                     	;# 
  1507  0A1B                     	;# 
  1508  0A1C                     	;# 
  1509  0A1C                     	;# 
  1510  0A1D                     	;# 
  1511  0A1D                     	;# 
  1512  0A1E                     	;# 
  1513  0A1E                     	;# 
  1514  0A1F                     	;# 
  1515  0A1F                     	;# 
  1516  0A1F                     	;# 
  1517  1E0F                     	;# 
  1518  1E10                     	;# 
  1519  1E11                     	;# 
  1520  1E12                     	;# 
  1521  1E13                     	;# 
  1522  1E14                     	;# 
  1523  1E15                     	;# 
  1524  1E16                     	;# 
  1525  1E17                     	;# 
  1526  1E18                     	;# 
  1527  1E19                     	;# 
  1528  1E1A                     	;# 
  1529  1E1B                     	;# 
  1530  1E1C                     	;# 
  1531  1E1D                     	;# 
  1532  1E1E                     	;# 
  1533  1E1F                     	;# 
  1534  1E20                     	;# 
  1535  1E21                     	;# 
  1536  1E22                     	;# 
  1537  1E23                     	;# 
  1538  1E24                     	;# 
  1539  1E25                     	;# 
  1540  1E26                     	;# 
  1541  1E27                     	;# 
  1542  1E28                     	;# 
  1543  1E29                     	;# 
  1544  1E2A                     	;# 
  1545  1E2B                     	;# 
  1546  1E2C                     	;# 
  1547  1E2D                     	;# 
  1548  1E2E                     	;# 
  1549  1E2F                     	;# 
  1550  1E30                     	;# 
  1551  1E31                     	;# 
  1552  1E32                     	;# 
  1553  1E33                     	;# 
  1554  1E34                     	;# 
  1555  1E35                     	;# 
  1556  1E36                     	;# 
  1557  1E37                     	;# 
  1558  1E8F                     	;# 
  1559  1E90                     	;# 
  1560  1E91                     	;# 
  1561  1E92                     	;# 
  1562  1E93                     	;# 
  1563  1E9C                     	;# 
  1564  1EA1                     	;# 
  1565  1EA2                     	;# 
  1566  1EB1                     	;# 
  1567  1EBB                     	;# 
  1568  1EBC                     	;# 
  1569  1EBD                     	;# 
  1570  1EBE                     	;# 
  1571  1EC3                     	;# 
  1572  1EC5                     	;# 
  1573  1EC6                     	;# 
  1574  1EC7                     	;# 
  1575  1ECB                     	;# 
  1576  1ECC                     	;# 
  1577  1ECD                     	;# 
  1578  1ECE                     	;# 
  1579  1F10                     	;# 
  1580  1F11                     	;# 
  1581  1F12                     	;# 
  1582  1F13                     	;# 
  1583  1F14                     	;# 
  1584  1F15                     	;# 
  1585  1F20                     	;# 
  1586  1F21                     	;# 
  1587  1F22                     	;# 
  1588  1F23                     	;# 
  1589  1F24                     	;# 
  1590  1F25                     	;# 
  1591  1F38                     	;# 
  1592  1F39                     	;# 
  1593  1F3A                     	;# 
  1594  1F3B                     	;# 
  1595  1F3C                     	;# 
  1596  1F3D                     	;# 
  1597  1F3E                     	;# 
  1598  1F3F                     	;# 
  1599  1F4E                     	;# 
  1600  1F4F                     	;# 
  1601  1F50                     	;# 
  1602  1F51                     	;# 
  1603  1F52                     	;# 
  1604  1F53                     	;# 
  1605  1F54                     	;# 
  1606  1F55                     	;# 
  1607  1FE4                     	;# 
  1608  1FE5                     	;# 
  1609  1FE6                     	;# 
  1610  1FE7                     	;# 
  1611  1FE8                     	;# 
  1612  1FE8                     	;# 
  1613  1FE9                     	;# 
  1614  1FEA                     	;# 
  1615  1FEA                     	;# 
  1616  1FEB                     	;# 
  1617  1FED                     	;# 
  1618  1FEE                     	;# 
  1619  1FEF                     	;# 
  1620  0000                     	;# 
  1621  0001                     	;# 
  1622  0002                     	;# 
  1623  0003                     	;# 
  1624  0004                     	;# 
  1625  0005                     	;# 
  1626  0006                     	;# 
  1627  0007                     	;# 
  1628  0008                     	;# 
  1629  0009                     	;# 
  1630  000A                     	;# 
  1631  000B                     	;# 
  1632  000C                     	;# 
  1633  000E                     	;# 
  1634  0012                     	;# 
  1635  0014                     	;# 
  1636  0018                     	;# 
  1637  001A                     	;# 
  1638  009B                     	;# 
  1639  009B                     	;# 
  1640  009C                     	;# 
  1641  009D                     	;# 
  1642  009E                     	;# 
  1643  009F                     	;# 
  1644  0119                     	;# 
  1645  0119                     	;# 
  1646  0119                     	;# 
  1647  011A                     	;# 
  1648  011A                     	;# 
  1649  011A                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011B                     	;# 
  1653  011B                     	;# 
  1654  011B                     	;# 
  1655  011C                     	;# 
  1656  011C                     	;# 
  1657  011C                     	;# 
  1658  011D                     	;# 
  1659  011D                     	;# 
  1660  011D                     	;# 
  1661  011E                     	;# 
  1662  011E                     	;# 
  1663  011E                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  011F                     	;# 
  1667  011F                     	;# 
  1668  011F                     	;# 
  1669  018C                     	;# 
  1670  018D                     	;# 
  1671  018E                     	;# 
  1672  018F                     	;# 
  1673  0190                     	;# 
  1674  0191                     	;# 
  1675  0192                     	;# 
  1676  020C                     	;# 
  1677  020C                     	;# 
  1678  020D                     	;# 
  1679  020E                     	;# 
  1680  020F                     	;# 
  1681  020F                     	;# 
  1682  0210                     	;# 
  1683  0210                     	;# 
  1684  0211                     	;# 
  1685  0211                     	;# 
  1686  028C                     	;# 
  1687  028C                     	;# 
  1688  028D                     	;# 
  1689  028D                     	;# 
  1690  028E                     	;# 
  1691  028F                     	;# 
  1692  0290                     	;# 
  1693  0291                     	;# 
  1694  030C                     	;# 
  1695  030C                     	;# 
  1696  030D                     	;# 
  1697  030E                     	;# 
  1698  030F                     	;# 
  1699  0310                     	;# 
  1700  0310                     	;# 
  1701  0311                     	;# 
  1702  0312                     	;# 
  1703  0313                     	;# 
  1704  0314                     	;# 
  1705  0314                     	;# 
  1706  0315                     	;# 
  1707  0316                     	;# 
  1708  0318                     	;# 
  1709  0318                     	;# 
  1710  0319                     	;# 
  1711  031A                     	;# 
  1712  031C                     	;# 
  1713  031C                     	;# 
  1714  031D                     	;# 
  1715  031E                     	;# 
  1716  038C                     	;# 
  1717  038C                     	;# 
  1718  038D                     	;# 
  1719  038E                     	;# 
  1720  058C                     	;# 
  1721  058C                     	;# 
  1722  058D                     	;# 
  1723  058E                     	;# 
  1724  058F                     	;# 
  1725  058F                     	;# 
  1726  0590                     	;# 
  1727  0591                     	;# 
  1728  0592                     	;# 
  1729  0593                     	;# 
  1730  059C                     	;# 
  1731  059C                     	;# 
  1732  059D                     	;# 
  1733  059D                     	;# 
  1734  059E                     	;# 
  1735  059F                     	;# 
  1736  060C                     	;# 
  1737  060D                     	;# 
  1738  060E                     	;# 
  1739  060F                     	;# 
  1740  0610                     	;# 
  1741  0611                     	;# 
  1742  0612                     	;# 
  1743  0613                     	;# 
  1744  0614                     	;# 
  1745  070C                     	;# 
  1746  070D                     	;# 
  1747  070E                     	;# 
  1748  070F                     	;# 
  1749  0710                     	;# 
  1750  0711                     	;# 
  1751  0712                     	;# 
  1752  0713                     	;# 
  1753  0716                     	;# 
  1754  0717                     	;# 
  1755  0718                     	;# 
  1756  0719                     	;# 
  1757  071A                     	;# 
  1758  071B                     	;# 
  1759  071C                     	;# 
  1760  071D                     	;# 
  1761  0796                     	;# 
  1762  0797                     	;# 
  1763  0798                     	;# 
  1764  0799                     	;# 
  1765  079A                     	;# 
  1766  079B                     	;# 
  1767  080C                     	;# 
  1768  080D                     	;# 
  1769  080E                     	;# 
  1770  080F                     	;# 
  1771  0810                     	;# 
  1772  0811                     	;# 
  1773  0812                     	;# 
  1774  0813                     	;# 
  1775  0814                     	;# 
  1776  081A                     	;# 
  1777  081A                     	;# 
  1778  081B                     	;# 
  1779  081C                     	;# 
  1780  081C                     	;# 
  1781  081D                     	;# 
  1782  081E                     	;# 
  1783  081F                     	;# 
  1784  088C                     	;# 
  1785  088D                     	;# 
  1786  088E                     	;# 
  1787  088F                     	;# 
  1788  0890                     	;# 
  1789  0891                     	;# 
  1790  0892                     	;# 
  1791  0893                     	;# 
  1792  0895                     	;# 
  1793  0896                     	;# 
  1794  090C                     	;# 
  1795  090E                     	;# 
  1796  090F                     	;# 
  1797  091F                     	;# 
  1798  098F                     	;# 
  1799  098F                     	;# 
  1800  0990                     	;# 
  1801  0991                     	;# 
  1802  0992                     	;# 
  1803  0993                     	;# 
  1804  0994                     	;# 
  1805  0995                     	;# 
  1806  0996                     	;# 
  1807  0997                     	;# 
  1808  0A19                     	;# 
  1809  0A19                     	;# 
  1810  0A1A                     	;# 
  1811  0A1A                     	;# 
  1812  0A1B                     	;# 
  1813  0A1B                     	;# 
  1814  0A1B                     	;# 
  1815  0A1C                     	;# 
  1816  0A1C                     	;# 
  1817  0A1D                     	;# 
  1818  0A1D                     	;# 
  1819  0A1E                     	;# 
  1820  0A1E                     	;# 
  1821  0A1F                     	;# 
  1822  0A1F                     	;# 
  1823  0A1F                     	;# 
  1824  1E0F                     	;# 
  1825  1E10                     	;# 
  1826  1E11                     	;# 
  1827  1E12                     	;# 
  1828  1E13                     	;# 
  1829  1E14                     	;# 
  1830  1E15                     	;# 
  1831  1E16                     	;# 
  1832  1E17                     	;# 
  1833  1E18                     	;# 
  1834  1E19                     	;# 
  1835  1E1A                     	;# 
  1836  1E1B                     	;# 
  1837  1E1C                     	;# 
  1838  1E1D                     	;# 
  1839  1E1E                     	;# 
  1840  1E1F                     	;# 
  1841  1E20                     	;# 
  1842  1E21                     	;# 
  1843  1E22                     	;# 
  1844  1E23                     	;# 
  1845  1E24                     	;# 
  1846  1E25                     	;# 
  1847  1E26                     	;# 
  1848  1E27                     	;# 
  1849  1E28                     	;# 
  1850  1E29                     	;# 
  1851  1E2A                     	;# 
  1852  1E2B                     	;# 
  1853  1E2C                     	;# 
  1854  1E2D                     	;# 
  1855  1E2E                     	;# 
  1856  1E2F                     	;# 
  1857  1E30                     	;# 
  1858  1E31                     	;# 
  1859  1E32                     	;# 
  1860  1E33                     	;# 
  1861  1E34                     	;# 
  1862  1E35                     	;# 
  1863  1E36                     	;# 
  1864  1E37                     	;# 
  1865  1E8F                     	;# 
  1866  1E90                     	;# 
  1867  1E91                     	;# 
  1868  1E92                     	;# 
  1869  1E93                     	;# 
  1870  1E9C                     	;# 
  1871  1EA1                     	;# 
  1872  1EA2                     	;# 
  1873  1EB1                     	;# 
  1874  1EBB                     	;# 
  1875  1EBC                     	;# 
  1876  1EBD                     	;# 
  1877  1EBE                     	;# 
  1878  1EC3                     	;# 
  1879  1EC5                     	;# 
  1880  1EC6                     	;# 
  1881  1EC7                     	;# 
  1882  1ECB                     	;# 
  1883  1ECC                     	;# 
  1884  1ECD                     	;# 
  1885  1ECE                     	;# 
  1886  1F10                     	;# 
  1887  1F11                     	;# 
  1888  1F12                     	;# 
  1889  1F13                     	;# 
  1890  1F14                     	;# 
  1891  1F15                     	;# 
  1892  1F20                     	;# 
  1893  1F21                     	;# 
  1894  1F22                     	;# 
  1895  1F23                     	;# 
  1896  1F24                     	;# 
  1897  1F25                     	;# 
  1898  1F38                     	;# 
  1899  1F39                     	;# 
  1900  1F3A                     	;# 
  1901  1F3B                     	;# 
  1902  1F3C                     	;# 
  1903  1F3D                     	;# 
  1904  1F3E                     	;# 
  1905  1F3F                     	;# 
  1906  1F4E                     	;# 
  1907  1F4F                     	;# 
  1908  1F50                     	;# 
  1909  1F51                     	;# 
  1910  1F52                     	;# 
  1911  1F53                     	;# 
  1912  1F54                     	;# 
  1913  1F55                     	;# 
  1914  1FE4                     	;# 
  1915  1FE5                     	;# 
  1916  1FE6                     	;# 
  1917  1FE7                     	;# 
  1918  1FE8                     	;# 
  1919  1FE8                     	;# 
  1920  1FE9                     	;# 
  1921  1FEA                     	;# 
  1922  1FEA                     	;# 
  1923  1FEB                     	;# 
  1924  1FED                     	;# 
  1925  1FEE                     	;# 
  1926  1FEF                     	;# 
  1927  0000                     	;# 
  1928  0001                     	;# 
  1929  0002                     	;# 
  1930  0003                     	;# 
  1931  0004                     	;# 
  1932  0005                     	;# 
  1933  0006                     	;# 
  1934  0007                     	;# 
  1935  0008                     	;# 
  1936  0009                     	;# 
  1937  000A                     	;# 
  1938  000B                     	;# 
  1939  000C                     	;# 
  1940  000E                     	;# 
  1941  0012                     	;# 
  1942  0014                     	;# 
  1943  0018                     	;# 
  1944  001A                     	;# 
  1945  009B                     	;# 
  1946  009B                     	;# 
  1947  009C                     	;# 
  1948  009D                     	;# 
  1949  009E                     	;# 
  1950  009F                     	;# 
  1951  0119                     	;# 
  1952  0119                     	;# 
  1953  0119                     	;# 
  1954  011A                     	;# 
  1955  011A                     	;# 
  1956  011A                     	;# 
  1957  011B                     	;# 
  1958  011B                     	;# 
  1959  011B                     	;# 
  1960  011B                     	;# 
  1961  011B                     	;# 
  1962  011C                     	;# 
  1963  011C                     	;# 
  1964  011C                     	;# 
  1965  011D                     	;# 
  1966  011D                     	;# 
  1967  011D                     	;# 
  1968  011E                     	;# 
  1969  011E                     	;# 
  1970  011E                     	;# 
  1971  011F                     	;# 
  1972  011F                     	;# 
  1973  011F                     	;# 
  1974  011F                     	;# 
  1975  011F                     	;# 
  1976  018C                     	;# 
  1977  018D                     	;# 
  1978  018E                     	;# 
  1979  018F                     	;# 
  1980  0190                     	;# 
  1981  0191                     	;# 
  1982  0192                     	;# 
  1983  020C                     	;# 
  1984  020C                     	;# 
  1985  020D                     	;# 
  1986  020E                     	;# 
  1987  020F                     	;# 
  1988  020F                     	;# 
  1989  0210                     	;# 
  1990  0210                     	;# 
  1991  0211                     	;# 
  1992  0211                     	;# 
  1993  028C                     	;# 
  1994  028C                     	;# 
  1995  028D                     	;# 
  1996  028D                     	;# 
  1997  028E                     	;# 
  1998  028F                     	;# 
  1999  0290                     	;# 
  2000  0291                     	;# 
  2001  030C                     	;# 
  2002  030C                     	;# 
  2003  030D                     	;# 
  2004  030E                     	;# 
  2005  030F                     	;# 
  2006  0310                     	;# 
  2007  0310                     	;# 
  2008  0311                     	;# 
  2009  0312                     	;# 
  2010  0313                     	;# 
  2011  0314                     	;# 
  2012  0314                     	;# 
  2013  0315                     	;# 
  2014  0316                     	;# 
  2015  0318                     	;# 
  2016  0318                     	;# 
  2017  0319                     	;# 
  2018  031A                     	;# 
  2019  031C                     	;# 
  2020  031C                     	;# 
  2021  031D                     	;# 
  2022  031E                     	;# 
  2023  038C                     	;# 
  2024  038C                     	;# 
  2025  038D                     	;# 
  2026  038E                     	;# 
  2027  058C                     	;# 
  2028  058C                     	;# 
  2029  058D                     	;# 
  2030  058E                     	;# 
  2031  058F                     	;# 
  2032  058F                     	;# 
  2033  0590                     	;# 
  2034  0591                     	;# 
  2035  0592                     	;# 
  2036  0593                     	;# 
  2037  059C                     	;# 
  2038  059C                     	;# 
  2039  059D                     	;# 
  2040  059D                     	;# 
  2041  059E                     	;# 
  2042  059F                     	;# 
  2043  060C                     	;# 
  2044  060D                     	;# 
  2045  060E                     	;# 
  2046  060F                     	;# 
  2047  0610                     	;# 
  2048  0611                     	;# 
  2049  0612                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  070C                     	;# 
  2053  070D                     	;# 
  2054  070E                     	;# 
  2055  070F                     	;# 
  2056  0710                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0716                     	;# 
  2061  0717                     	;# 
  2062  0718                     	;# 
  2063  0719                     	;# 
  2064  071A                     	;# 
  2065  071B                     	;# 
  2066  071C                     	;# 
  2067  071D                     	;# 
  2068  0796                     	;# 
  2069  0797                     	;# 
  2070  0798                     	;# 
  2071  0799                     	;# 
  2072  079A                     	;# 
  2073  079B                     	;# 
  2074  080C                     	;# 
  2075  080D                     	;# 
  2076  080E                     	;# 
  2077  080F                     	;# 
  2078  0810                     	;# 
  2079  0811                     	;# 
  2080  0812                     	;# 
  2081  0813                     	;# 
  2082  0814                     	;# 
  2083  081A                     	;# 
  2084  081A                     	;# 
  2085  081B                     	;# 
  2086  081C                     	;# 
  2087  081C                     	;# 
  2088  081D                     	;# 
  2089  081E                     	;# 
  2090  081F                     	;# 
  2091  088C                     	;# 
  2092  088D                     	;# 
  2093  088E                     	;# 
  2094  088F                     	;# 
  2095  0890                     	;# 
  2096  0891                     	;# 
  2097  0892                     	;# 
  2098  0893                     	;# 
  2099  0895                     	;# 
  2100  0896                     	;# 
  2101  090C                     	;# 
  2102  090E                     	;# 
  2103  090F                     	;# 
  2104  091F                     	;# 
  2105  098F                     	;# 
  2106  098F                     	;# 
  2107  0990                     	;# 
  2108  0991                     	;# 
  2109  0992                     	;# 
  2110  0993                     	;# 
  2111  0994                     	;# 
  2112  0995                     	;# 
  2113  0996                     	;# 
  2114  0997                     	;# 
  2115  0A19                     	;# 
  2116  0A19                     	;# 
  2117  0A1A                     	;# 
  2118  0A1A                     	;# 
  2119  0A1B                     	;# 
  2120  0A1B                     	;# 
  2121  0A1B                     	;# 
  2122  0A1C                     	;# 
  2123  0A1C                     	;# 
  2124  0A1D                     	;# 
  2125  0A1D                     	;# 
  2126  0A1E                     	;# 
  2127  0A1E                     	;# 
  2128  0A1F                     	;# 
  2129  0A1F                     	;# 
  2130  0A1F                     	;# 
  2131  1E0F                     	;# 
  2132  1E10                     	;# 
  2133  1E11                     	;# 
  2134  1E12                     	;# 
  2135  1E13                     	;# 
  2136  1E14                     	;# 
  2137  1E15                     	;# 
  2138  1E16                     	;# 
  2139  1E17                     	;# 
  2140  1E18                     	;# 
  2141  1E19                     	;# 
  2142  1E1A                     	;# 
  2143  1E1B                     	;# 
  2144  1E1C                     	;# 
  2145  1E1D                     	;# 
  2146  1E1E                     	;# 
  2147  1E1F                     	;# 
  2148  1E20                     	;# 
  2149  1E21                     	;# 
  2150  1E22                     	;# 
  2151  1E23                     	;# 
  2152  1E24                     	;# 
  2153  1E25                     	;# 
  2154  1E26                     	;# 
  2155  1E27                     	;# 
  2156  1E28                     	;# 
  2157  1E29                     	;# 
  2158  1E2A                     	;# 
  2159  1E2B                     	;# 
  2160  1E2C                     	;# 
  2161  1E2D                     	;# 
  2162  1E2E                     	;# 
  2163  1E2F                     	;# 
  2164  1E30                     	;# 
  2165  1E31                     	;# 
  2166  1E32                     	;# 
  2167  1E33                     	;# 
  2168  1E34                     	;# 
  2169  1E35                     	;# 
  2170  1E36                     	;# 
  2171  1E37                     	;# 
  2172  1E8F                     	;# 
  2173  1E90                     	;# 
  2174  1E91                     	;# 
  2175  1E92                     	;# 
  2176  1E93                     	;# 
  2177  1E9C                     	;# 
  2178  1EA1                     	;# 
  2179  1EA2                     	;# 
  2180  1EB1                     	;# 
  2181  1EBB                     	;# 
  2182  1EBC                     	;# 
  2183  1EBD                     	;# 
  2184  1EBE                     	;# 
  2185  1EC3                     	;# 
  2186  1EC5                     	;# 
  2187  1EC6                     	;# 
  2188  1EC7                     	;# 
  2189  1ECB                     	;# 
  2190  1ECC                     	;# 
  2191  1ECD                     	;# 
  2192  1ECE                     	;# 
  2193  1F10                     	;# 
  2194  1F11                     	;# 
  2195  1F12                     	;# 
  2196  1F13                     	;# 
  2197  1F14                     	;# 
  2198  1F15                     	;# 
  2199  1F20                     	;# 
  2200  1F21                     	;# 
  2201  1F22                     	;# 
  2202  1F23                     	;# 
  2203  1F24                     	;# 
  2204  1F25                     	;# 
  2205  1F38                     	;# 
  2206  1F39                     	;# 
  2207  1F3A                     	;# 
  2208  1F3B                     	;# 
  2209  1F3C                     	;# 
  2210  1F3D                     	;# 
  2211  1F3E                     	;# 
  2212  1F3F                     	;# 
  2213  1F4E                     	;# 
  2214  1F4F                     	;# 
  2215  1F50                     	;# 
  2216  1F51                     	;# 
  2217  1F52                     	;# 
  2218  1F53                     	;# 
  2219  1F54                     	;# 
  2220  1F55                     	;# 
  2221  1FE4                     	;# 
  2222  1FE5                     	;# 
  2223  1FE6                     	;# 
  2224  1FE7                     	;# 
  2225  1FE8                     	;# 
  2226  1FE8                     	;# 
  2227  1FE9                     	;# 
  2228  1FEA                     	;# 
  2229  1FEA                     	;# 
  2230  1FEB                     	;# 
  2231  1FED                     	;# 
  2232  1FEE                     	;# 
  2233  1FEF                     	;# 
  2234  0000                     	;# 
  2235  0001                     	;# 
  2236  0002                     	;# 
  2237  0003                     	;# 
  2238  0004                     	;# 
  2239  0005                     	;# 
  2240  0006                     	;# 
  2241  0007                     	;# 
  2242  0008                     	;# 
  2243  0009                     	;# 
  2244  000A                     	;# 
  2245  000B                     	;# 
  2246  000C                     	;# 
  2247  000E                     	;# 
  2248  0012                     	;# 
  2249  0014                     	;# 
  2250  0018                     	;# 
  2251  001A                     	;# 
  2252  009B                     	;# 
  2253  009B                     	;# 
  2254  009C                     	;# 
  2255  009D                     	;# 
  2256  009E                     	;# 
  2257  009F                     	;# 
  2258  0119                     	;# 
  2259  0119                     	;# 
  2260  0119                     	;# 
  2261  011A                     	;# 
  2262  011A                     	;# 
  2263  011A                     	;# 
  2264  011B                     	;# 
  2265  011B                     	;# 
  2266  011B                     	;# 
  2267  011B                     	;# 
  2268  011B                     	;# 
  2269  011C                     	;# 
  2270  011C                     	;# 
  2271  011C                     	;# 
  2272  011D                     	;# 
  2273  011D                     	;# 
  2274  011D                     	;# 
  2275  011E                     	;# 
  2276  011E                     	;# 
  2277  011E                     	;# 
  2278  011F                     	;# 
  2279  011F                     	;# 
  2280  011F                     	;# 
  2281  011F                     	;# 
  2282  011F                     	;# 
  2283  018C                     	;# 
  2284  018D                     	;# 
  2285  018E                     	;# 
  2286  018F                     	;# 
  2287  0190                     	;# 
  2288  0191                     	;# 
  2289  0192                     	;# 
  2290  020C                     	;# 
  2291  020C                     	;# 
  2292  020D                     	;# 
  2293  020E                     	;# 
  2294  020F                     	;# 
  2295  020F                     	;# 
  2296  0210                     	;# 
  2297  0210                     	;# 
  2298  0211                     	;# 
  2299  0211                     	;# 
  2300  028C                     	;# 
  2301  028C                     	;# 
  2302  028D                     	;# 
  2303  028D                     	;# 
  2304  028E                     	;# 
  2305  028F                     	;# 
  2306  0290                     	;# 
  2307  0291                     	;# 
  2308  030C                     	;# 
  2309  030C                     	;# 
  2310  030D                     	;# 
  2311  030E                     	;# 
  2312  030F                     	;# 
  2313  0310                     	;# 
  2314  0310                     	;# 
  2315  0311                     	;# 
  2316  0312                     	;# 
  2317  0313                     	;# 
  2318  0314                     	;# 
  2319  0314                     	;# 
  2320  0315                     	;# 
  2321  0316                     	;# 
  2322  0318                     	;# 
  2323  0318                     	;# 
  2324  0319                     	;# 
  2325  031A                     	;# 
  2326  031C                     	;# 
  2327  031C                     	;# 
  2328  031D                     	;# 
  2329  031E                     	;# 
  2330  038C                     	;# 
  2331  038C                     	;# 
  2332  038D                     	;# 
  2333  038E                     	;# 
  2334  058C                     	;# 
  2335  058C                     	;# 
  2336  058D                     	;# 
  2337  058E                     	;# 
  2338  058F                     	;# 
  2339  058F                     	;# 
  2340  0590                     	;# 
  2341  0591                     	;# 
  2342  0592                     	;# 
  2343  0593                     	;# 
  2344  059C                     	;# 
  2345  059C                     	;# 
  2346  059D                     	;# 
  2347  059D                     	;# 
  2348  059E                     	;# 
  2349  059F                     	;# 
  2350  060C                     	;# 
  2351  060D                     	;# 
  2352  060E                     	;# 
  2353  060F                     	;# 
  2354  0610                     	;# 
  2355  0611                     	;# 
  2356  0612                     	;# 
  2357  0613                     	;# 
  2358  0614                     	;# 
  2359  070C                     	;# 
  2360  070D                     	;# 
  2361  070E                     	;# 
  2362  070F                     	;# 
  2363  0710                     	;# 
  2364  0711                     	;# 
  2365  0712                     	;# 
  2366  0713                     	;# 
  2367  0716                     	;# 
  2368  0717                     	;# 
  2369  0718                     	;# 
  2370  0719                     	;# 
  2371  071A                     	;# 
  2372  071B                     	;# 
  2373  071C                     	;# 
  2374  071D                     	;# 
  2375  0796                     	;# 
  2376  0797                     	;# 
  2377  0798                     	;# 
  2378  0799                     	;# 
  2379  079A                     	;# 
  2380  079B                     	;# 
  2381  080C                     	;# 
  2382  080D                     	;# 
  2383  080E                     	;# 
  2384  080F                     	;# 
  2385  0810                     	;# 
  2386  0811                     	;# 
  2387  0812                     	;# 
  2388  0813                     	;# 
  2389  0814                     	;# 
  2390  081A                     	;# 
  2391  081A                     	;# 
  2392  081B                     	;# 
  2393  081C                     	;# 
  2394  081C                     	;# 
  2395  081D                     	;# 
  2396  081E                     	;# 
  2397  081F                     	;# 
  2398  088C                     	;# 
  2399  088D                     	;# 
  2400  088E                     	;# 
  2401  088F                     	;# 
  2402  0890                     	;# 
  2403  0891                     	;# 
  2404  0892                     	;# 
  2405  0893                     	;# 
  2406  0895                     	;# 
  2407  0896                     	;# 
  2408  090C                     	;# 
  2409  090E                     	;# 
  2410  090F                     	;# 
  2411  091F                     	;# 
  2412  098F                     	;# 
  2413  098F                     	;# 
  2414  0990                     	;# 
  2415  0991                     	;# 
  2416  0992                     	;# 
  2417  0993                     	;# 
  2418  0994                     	;# 
  2419  0995                     	;# 
  2420  0996                     	;# 
  2421  0997                     	;# 
  2422  0A19                     	;# 
  2423  0A19                     	;# 
  2424  0A1A                     	;# 
  2425  0A1A                     	;# 
  2426  0A1B                     	;# 
  2427  0A1B                     	;# 
  2428  0A1B                     	;# 
  2429  0A1C                     	;# 
  2430  0A1C                     	;# 
  2431  0A1D                     	;# 
  2432  0A1D                     	;# 
  2433  0A1E                     	;# 
  2434  0A1E                     	;# 
  2435  0A1F                     	;# 
  2436  0A1F                     	;# 
  2437  0A1F                     	;# 
  2438  1E0F                     	;# 
  2439  1E10                     	;# 
  2440  1E11                     	;# 
  2441  1E12                     	;# 
  2442  1E13                     	;# 
  2443  1E14                     	;# 
  2444  1E15                     	;# 
  2445  1E16                     	;# 
  2446  1E17                     	;# 
  2447  1E18                     	;# 
  2448  1E19                     	;# 
  2449  1E1A                     	;# 
  2450  1E1B                     	;# 
  2451  1E1C                     	;# 
  2452  1E1D                     	;# 
  2453  1E1E                     	;# 
  2454  1E1F                     	;# 
  2455  1E20                     	;# 
  2456  1E21                     	;# 
  2457  1E22                     	;# 
  2458  1E23                     	;# 
  2459  1E24                     	;# 
  2460  1E25                     	;# 
  2461  1E26                     	;# 
  2462  1E27                     	;# 
  2463  1E28                     	;# 
  2464  1E29                     	;# 
  2465  1E2A                     	;# 
  2466  1E2B                     	;# 
  2467  1E2C                     	;# 
  2468  1E2D                     	;# 
  2469  1E2E                     	;# 
  2470  1E2F                     	;# 
  2471  1E30                     	;# 
  2472  1E31                     	;# 
  2473  1E32                     	;# 
  2474  1E33                     	;# 
  2475  1E34                     	;# 
  2476  1E35                     	;# 
  2477  1E36                     	;# 
  2478  1E37                     	;# 
  2479  1E8F                     	;# 
  2480  1E90                     	;# 
  2481  1E91                     	;# 
  2482  1E92                     	;# 
  2483  1E93                     	;# 
  2484  1E9C                     	;# 
  2485  1EA1                     	;# 
  2486  1EA2                     	;# 
  2487  1EB1                     	;# 
  2488  1EBB                     	;# 
  2489  1EBC                     	;# 
  2490  1EBD                     	;# 
  2491  1EBE                     	;# 
  2492  1EC3                     	;# 
  2493  1EC5                     	;# 
  2494  1EC6                     	;# 
  2495  1EC7                     	;# 
  2496  1ECB                     	;# 
  2497  1ECC                     	;# 
  2498  1ECD                     	;# 
  2499  1ECE                     	;# 
  2500  1F10                     	;# 
  2501  1F11                     	;# 
  2502  1F12                     	;# 
  2503  1F13                     	;# 
  2504  1F14                     	;# 
  2505  1F15                     	;# 
  2506  1F20                     	;# 
  2507  1F21                     	;# 
  2508  1F22                     	;# 
  2509  1F23                     	;# 
  2510  1F24                     	;# 
  2511  1F25                     	;# 
  2512  1F38                     	;# 
  2513  1F39                     	;# 
  2514  1F3A                     	;# 
  2515  1F3B                     	;# 
  2516  1F3C                     	;# 
  2517  1F3D                     	;# 
  2518  1F3E                     	;# 
  2519  1F3F                     	;# 
  2520  1F4E                     	;# 
  2521  1F4F                     	;# 
  2522  1F50                     	;# 
  2523  1F51                     	;# 
  2524  1F52                     	;# 
  2525  1F53                     	;# 
  2526  1F54                     	;# 
  2527  1F55                     	;# 
  2528  1FE4                     	;# 
  2529  1FE5                     	;# 
  2530  1FE6                     	;# 
  2531  1FE7                     	;# 
  2532  1FE8                     	;# 
  2533  1FE8                     	;# 
  2534  1FE9                     	;# 
  2535  1FEA                     	;# 
  2536  1FEA                     	;# 
  2537  1FEB                     	;# 
  2538  1FED                     	;# 
  2539  1FEE                     	;# 
  2540  1FEF                     	;# 
  2541  0000                     	;# 
  2542  0001                     	;# 
  2543  0002                     	;# 
  2544  0003                     	;# 
  2545  0004                     	;# 
  2546  0005                     	;# 
  2547  0006                     	;# 
  2548  0007                     	;# 
  2549  0008                     	;# 
  2550  0009                     	;# 
  2551  000A                     	;# 
  2552  000B                     	;# 
  2553  000C                     	;# 
  2554  000E                     	;# 
  2555  0012                     	;# 
  2556  0014                     	;# 
  2557  0018                     	;# 
  2558  001A                     	;# 
  2559  009B                     	;# 
  2560  009B                     	;# 
  2561  009C                     	;# 
  2562  009D                     	;# 
  2563  009E                     	;# 
  2564  009F                     	;# 
  2565  0119                     	;# 
  2566  0119                     	;# 
  2567  0119                     	;# 
  2568  011A                     	;# 
  2569  011A                     	;# 
  2570  011A                     	;# 
  2571  011B                     	;# 
  2572  011B                     	;# 
  2573  011B                     	;# 
  2574  011B                     	;# 
  2575  011B                     	;# 
  2576  011C                     	;# 
  2577  011C                     	;# 
  2578  011C                     	;# 
  2579  011D                     	;# 
  2580  011D                     	;# 
  2581  011D                     	;# 
  2582  011E                     	;# 
  2583  011E                     	;# 
  2584  011E                     	;# 
  2585  011F                     	;# 
  2586  011F                     	;# 
  2587  011F                     	;# 
  2588  011F                     	;# 
  2589  011F                     	;# 
  2590  018C                     	;# 
  2591  018D                     	;# 
  2592  018E                     	;# 
  2593  018F                     	;# 
  2594  0190                     	;# 
  2595  0191                     	;# 
  2596  0192                     	;# 
  2597  020C                     	;# 
  2598  020C                     	;# 
  2599  020D                     	;# 
  2600  020E                     	;# 
  2601  020F                     	;# 
  2602  020F                     	;# 
  2603  0210                     	;# 
  2604  0210                     	;# 
  2605  0211                     	;# 
  2606  0211                     	;# 
  2607  028C                     	;# 
  2608  028C                     	;# 
  2609  028D                     	;# 
  2610  028D                     	;# 
  2611  028E                     	;# 
  2612  028F                     	;# 
  2613  0290                     	;# 
  2614  0291                     	;# 
  2615  030C                     	;# 
  2616  030C                     	;# 
  2617  030D                     	;# 
  2618  030E                     	;# 
  2619  030F                     	;# 
  2620  0310                     	;# 
  2621  0310                     	;# 
  2622  0311                     	;# 
  2623  0312                     	;# 
  2624  0313                     	;# 
  2625  0314                     	;# 
  2626  0314                     	;# 
  2627  0315                     	;# 
  2628  0316                     	;# 
  2629  0318                     	;# 
  2630  0318                     	;# 
  2631  0319                     	;# 
  2632  031A                     	;# 
  2633  031C                     	;# 
  2634  031C                     	;# 
  2635  031D                     	;# 
  2636  031E                     	;# 
  2637  038C                     	;# 
  2638  038C                     	;# 
  2639  038D                     	;# 
  2640  038E                     	;# 
  2641  058C                     	;# 
  2642  058C                     	;# 
  2643  058D                     	;# 
  2644  058E                     	;# 
  2645  058F                     	;# 
  2646  058F                     	;# 
  2647  0590                     	;# 
  2648  0591                     	;# 
  2649  0592                     	;# 
  2650  0593                     	;# 
  2651  059C                     	;# 
  2652  059C                     	;# 
  2653  059D                     	;# 
  2654  059D                     	;# 
  2655  059E                     	;# 
  2656  059F                     	;# 
  2657  060C                     	;# 
  2658  060D                     	;# 
  2659  060E                     	;# 
  2660  060F                     	;# 
  2661  0610                     	;# 
  2662  0611                     	;# 
  2663  0612                     	;# 
  2664  0613                     	;# 
  2665  0614                     	;# 
  2666  070C                     	;# 
  2667  070D                     	;# 
  2668  070E                     	;# 
  2669  070F                     	;# 
  2670  0710                     	;# 
  2671  0711                     	;# 
  2672  0712                     	;# 
  2673  0713                     	;# 
  2674  0716                     	;# 
  2675  0717                     	;# 
  2676  0718                     	;# 
  2677  0719                     	;# 
  2678  071A                     	;# 
  2679  071B                     	;# 
  2680  071C                     	;# 
  2681  071D                     	;# 
  2682  0796                     	;# 
  2683  0797                     	;# 
  2684  0798                     	;# 
  2685  0799                     	;# 
  2686  079A                     	;# 
  2687  079B                     	;# 
  2688  080C                     	;# 
  2689  080D                     	;# 
  2690  080E                     	;# 
  2691  080F                     	;# 
  2692  0810                     	;# 
  2693  0811                     	;# 
  2694  0812                     	;# 
  2695  0813                     	;# 
  2696  0814                     	;# 
  2697  081A                     	;# 
  2698  081A                     	;# 
  2699  081B                     	;# 
  2700  081C                     	;# 
  2701  081C                     	;# 
  2702  081D                     	;# 
  2703  081E                     	;# 
  2704  081F                     	;# 
  2705  088C                     	;# 
  2706  088D                     	;# 
  2707  088E                     	;# 
  2708  088F                     	;# 
  2709  0890                     	;# 
  2710  0891                     	;# 
  2711  0892                     	;# 
  2712  0893                     	;# 
  2713  0895                     	;# 
  2714  0896                     	;# 
  2715  090C                     	;# 
  2716  090E                     	;# 
  2717  090F                     	;# 
  2718  091F                     	;# 
  2719  098F                     	;# 
  2720  098F                     	;# 
  2721  0990                     	;# 
  2722  0991                     	;# 
  2723  0992                     	;# 
  2724  0993                     	;# 
  2725  0994                     	;# 
  2726  0995                     	;# 
  2727  0996                     	;# 
  2728  0997                     	;# 
  2729  0A19                     	;# 
  2730  0A19                     	;# 
  2731  0A1A                     	;# 
  2732  0A1A                     	;# 
  2733  0A1B                     	;# 
  2734  0A1B                     	;# 
  2735  0A1B                     	;# 
  2736  0A1C                     	;# 
  2737  0A1C                     	;# 
  2738  0A1D                     	;# 
  2739  0A1D                     	;# 
  2740  0A1E                     	;# 
  2741  0A1E                     	;# 
  2742  0A1F                     	;# 
  2743  0A1F                     	;# 
  2744  0A1F                     	;# 
  2745  1E0F                     	;# 
  2746  1E10                     	;# 
  2747  1E11                     	;# 
  2748  1E12                     	;# 
  2749  1E13                     	;# 
  2750  1E14                     	;# 
  2751  1E15                     	;# 
  2752  1E16                     	;# 
  2753  1E17                     	;# 
  2754  1E18                     	;# 
  2755  1E19                     	;# 
  2756  1E1A                     	;# 
  2757  1E1B                     	;# 
  2758  1E1C                     	;# 
  2759  1E1D                     	;# 
  2760  1E1E                     	;# 
  2761  1E1F                     	;# 
  2762  1E20                     	;# 
  2763  1E21                     	;# 
  2764  1E22                     	;# 
  2765  1E23                     	;# 
  2766  1E24                     	;# 
  2767  1E25                     	;# 
  2768  1E26                     	;# 
  2769  1E27                     	;# 
  2770  1E28                     	;# 
  2771  1E29                     	;# 
  2772  1E2A                     	;# 
  2773  1E2B                     	;# 
  2774  1E2C                     	;# 
  2775  1E2D                     	;# 
  2776  1E2E                     	;# 
  2777  1E2F                     	;# 
  2778  1E30                     	;# 
  2779  1E31                     	;# 
  2780  1E32                     	;# 
  2781  1E33                     	;# 
  2782  1E34                     	;# 
  2783  1E35                     	;# 
  2784  1E36                     	;# 
  2785  1E37                     	;# 
  2786  1E8F                     	;# 
  2787  1E90                     	;# 
  2788  1E91                     	;# 
  2789  1E92                     	;# 
  2790  1E93                     	;# 
  2791  1E9C                     	;# 
  2792  1EA1                     	;# 
  2793  1EA2                     	;# 
  2794  1EB1                     	;# 
  2795  1EBB                     	;# 
  2796  1EBC                     	;# 
  2797  1EBD                     	;# 
  2798  1EBE                     	;# 
  2799  1EC3                     	;# 
  2800  1EC5                     	;# 
  2801  1EC6                     	;# 
  2802  1EC7                     	;# 
  2803  1ECB                     	;# 
  2804  1ECC                     	;# 
  2805  1ECD                     	;# 
  2806  1ECE                     	;# 
  2807  1F10                     	;# 
  2808  1F11                     	;# 
  2809  1F12                     	;# 
  2810  1F13                     	;# 
  2811  1F14                     	;# 
  2812  1F15                     	;# 
  2813  1F20                     	;# 
  2814  1F21                     	;# 
  2815  1F22                     	;# 
  2816  1F23                     	;# 
  2817  1F24                     	;# 
  2818  1F25                     	;# 
  2819  1F38                     	;# 
  2820  1F39                     	;# 
  2821  1F3A                     	;# 
  2822  1F3B                     	;# 
  2823  1F3C                     	;# 
  2824  1F3D                     	;# 
  2825  1F3E                     	;# 
  2826  1F3F                     	;# 
  2827  1F4E                     	;# 
  2828  1F4F                     	;# 
  2829  1F50                     	;# 
  2830  1F51                     	;# 
  2831  1F52                     	;# 
  2832  1F53                     	;# 
  2833  1F54                     	;# 
  2834  1F55                     	;# 
  2835  1FE4                     	;# 
  2836  1FE5                     	;# 
  2837  1FE6                     	;# 
  2838  1FE7                     	;# 
  2839  1FE8                     	;# 
  2840  1FE8                     	;# 
  2841  1FE9                     	;# 
  2842  1FEA                     	;# 
  2843  1FEA                     	;# 
  2844  1FEB                     	;# 
  2845  1FED                     	;# 
  2846  1FEE                     	;# 
  2847  1FEF                     	;# 
  2848  0000                     	;# 
  2849  0001                     	;# 
  2850  0002                     	;# 
  2851  0003                     	;# 
  2852  0004                     	;# 
  2853  0005                     	;# 
  2854  0006                     	;# 
  2855  0007                     	;# 
  2856  0008                     	;# 
  2857  0009                     	;# 
  2858  000A                     	;# 
  2859  000B                     	;# 
  2860  000C                     	;# 
  2861  000E                     	;# 
  2862  0012                     	;# 
  2863  0014                     	;# 
  2864  0018                     	;# 
  2865  001A                     	;# 
  2866  009B                     	;# 
  2867  009B                     	;# 
  2868  009C                     	;# 
  2869  009D                     	;# 
  2870  009E                     	;# 
  2871  009F                     	;# 
  2872  0119                     	;# 
  2873  0119                     	;# 
  2874  0119                     	;# 
  2875  011A                     	;# 
  2876  011A                     	;# 
  2877  011A                     	;# 
  2878  011B                     	;# 
  2879  011B                     	;# 
  2880  011B                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011C                     	;# 
  2884  011C                     	;# 
  2885  011C                     	;# 
  2886  011D                     	;# 
  2887  011D                     	;# 
  2888  011D                     	;# 
  2889  011E                     	;# 
  2890  011E                     	;# 
  2891  011E                     	;# 
  2892  011F                     	;# 
  2893  011F                     	;# 
  2894  011F                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  018C                     	;# 
  2898  018D                     	;# 
  2899  018E                     	;# 
  2900  018F                     	;# 
  2901  0190                     	;# 
  2902  0191                     	;# 
  2903  0192                     	;# 
  2904  020C                     	;# 
  2905  020C                     	;# 
  2906  020D                     	;# 
  2907  020E                     	;# 
  2908  020F                     	;# 
  2909  020F                     	;# 
  2910  0210                     	;# 
  2911  0210                     	;# 
  2912  0211                     	;# 
  2913  0211                     	;# 
  2914  028C                     	;# 
  2915  028C                     	;# 
  2916  028D                     	;# 
  2917  028D                     	;# 
  2918  028E                     	;# 
  2919  028F                     	;# 
  2920  0290                     	;# 
  2921  0291                     	;# 
  2922  030C                     	;# 
  2923  030C                     	;# 
  2924  030D                     	;# 
  2925  030E                     	;# 
  2926  030F                     	;# 
  2927  0310                     	;# 
  2928  0310                     	;# 
  2929  0311                     	;# 
  2930  0312                     	;# 
  2931  0313                     	;# 
  2932  0314                     	;# 
  2933  0314                     	;# 
  2934  0315                     	;# 
  2935  0316                     	;# 
  2936  0318                     	;# 
  2937  0318                     	;# 
  2938  0319                     	;# 
  2939  031A                     	;# 
  2940  031C                     	;# 
  2941  031C                     	;# 
  2942  031D                     	;# 
  2943  031E                     	;# 
  2944  038C                     	;# 
  2945  038C                     	;# 
  2946  038D                     	;# 
  2947  038E                     	;# 
  2948  058C                     	;# 
  2949  058C                     	;# 
  2950  058D                     	;# 
  2951  058E                     	;# 
  2952  058F                     	;# 
  2953  058F                     	;# 
  2954  0590                     	;# 
  2955  0591                     	;# 
  2956  0592                     	;# 
  2957  0593                     	;# 
  2958  059C                     	;# 
  2959  059C                     	;# 
  2960  059D                     	;# 
  2961  059D                     	;# 
  2962  059E                     	;# 
  2963  059F                     	;# 
  2964  060C                     	;# 
  2965  060D                     	;# 
  2966  060E                     	;# 
  2967  060F                     	;# 
  2968  0610                     	;# 
  2969  0611                     	;# 
  2970  0612                     	;# 
  2971  0613                     	;# 
  2972  0614                     	;# 
  2973  070C                     	;# 
  2974  070D                     	;# 
  2975  070E                     	;# 
  2976  070F                     	;# 
  2977  0710                     	;# 
  2978  0711                     	;# 
  2979  0712                     	;# 
  2980  0713                     	;# 
  2981  0716                     	;# 
  2982  0717                     	;# 
  2983  0718                     	;# 
  2984  0719                     	;# 
  2985  071A                     	;# 
  2986  071B                     	;# 
  2987  071C                     	;# 
  2988  071D                     	;# 
  2989  0796                     	;# 
  2990  0797                     	;# 
  2991  0798                     	;# 
  2992  0799                     	;# 
  2993  079A                     	;# 
  2994  079B                     	;# 
  2995  080C                     	;# 
  2996  080D                     	;# 
  2997  080E                     	;# 
  2998  080F                     	;# 
  2999  0810                     	;# 
  3000  0811                     	;# 
  3001  0812                     	;# 
  3002  0813                     	;# 
  3003  0814                     	;# 
  3004  081A                     	;# 
  3005  081A                     	;# 
  3006  081B                     	;# 
  3007  081C                     	;# 
  3008  081C                     	;# 
  3009  081D                     	;# 
  3010  081E                     	;# 
  3011  081F                     	;# 
  3012  088C                     	;# 
  3013  088D                     	;# 
  3014  088E                     	;# 
  3015  088F                     	;# 
  3016  0890                     	;# 
  3017  0891                     	;# 
  3018  0892                     	;# 
  3019  0893                     	;# 
  3020  0895                     	;# 
  3021  0896                     	;# 
  3022  090C                     	;# 
  3023  090E                     	;# 
  3024  090F                     	;# 
  3025  091F                     	;# 
  3026  098F                     	;# 
  3027  098F                     	;# 
  3028  0990                     	;# 
  3029  0991                     	;# 
  3030  0992                     	;# 
  3031  0993                     	;# 
  3032  0994                     	;# 
  3033  0995                     	;# 
  3034  0996                     	;# 
  3035  0997                     	;# 
  3036  0A19                     	;# 
  3037  0A19                     	;# 
  3038  0A1A                     	;# 
  3039  0A1A                     	;# 
  3040  0A1B                     	;# 
  3041  0A1B                     	;# 
  3042  0A1B                     	;# 
  3043  0A1C                     	;# 
  3044  0A1C                     	;# 
  3045  0A1D                     	;# 
  3046  0A1D                     	;# 
  3047  0A1E                     	;# 
  3048  0A1E                     	;# 
  3049  0A1F                     	;# 
  3050  0A1F                     	;# 
  3051  0A1F                     	;# 
  3052  1E0F                     	;# 
  3053  1E10                     	;# 
  3054  1E11                     	;# 
  3055  1E12                     	;# 
  3056  1E13                     	;# 
  3057  1E14                     	;# 
  3058  1E15                     	;# 
  3059  1E16                     	;# 
  3060  1E17                     	;# 
  3061  1E18                     	;# 
  3062  1E19                     	;# 
  3063  1E1A                     	;# 
  3064  1E1B                     	;# 
  3065  1E1C                     	;# 
  3066  1E1D                     	;# 
  3067  1E1E                     	;# 
  3068  1E1F                     	;# 
  3069  1E20                     	;# 
  3070  1E21                     	;# 
  3071  1E22                     	;# 
  3072  1E23                     	;# 
  3073  1E24                     	;# 
  3074  1E25                     	;# 
  3075  1E26                     	;# 
  3076  1E27                     	;# 
  3077  1E28                     	;# 
  3078  1E29                     	;# 
  3079  1E2A                     	;# 
  3080  1E2B                     	;# 
  3081  1E2C                     	;# 
  3082  1E2D                     	;# 
  3083  1E2E                     	;# 
  3084  1E2F                     	;# 
  3085  1E30                     	;# 
  3086  1E31                     	;# 
  3087  1E32                     	;# 
  3088  1E33                     	;# 
  3089  1E34                     	;# 
  3090  1E35                     	;# 
  3091  1E36                     	;# 
  3092  1E37                     	;# 
  3093  1E8F                     	;# 
  3094  1E90                     	;# 
  3095  1E91                     	;# 
  3096  1E92                     	;# 
  3097  1E93                     	;# 
  3098  1E9C                     	;# 
  3099  1EA1                     	;# 
  3100  1EA2                     	;# 
  3101  1EB1                     	;# 
  3102  1EBB                     	;# 
  3103  1EBC                     	;# 
  3104  1EBD                     	;# 
  3105  1EBE                     	;# 
  3106  1EC3                     	;# 
  3107  1EC5                     	;# 
  3108  1EC6                     	;# 
  3109  1EC7                     	;# 
  3110  1ECB                     	;# 
  3111  1ECC                     	;# 
  3112  1ECD                     	;# 
  3113  1ECE                     	;# 
  3114  1F10                     	;# 
  3115  1F11                     	;# 
  3116  1F12                     	;# 
  3117  1F13                     	;# 
  3118  1F14                     	;# 
  3119  1F15                     	;# 
  3120  1F20                     	;# 
  3121  1F21                     	;# 
  3122  1F22                     	;# 
  3123  1F23                     	;# 
  3124  1F24                     	;# 
  3125  1F25                     	;# 
  3126  1F38                     	;# 
  3127  1F39                     	;# 
  3128  1F3A                     	;# 
  3129  1F3B                     	;# 
  3130  1F3C                     	;# 
  3131  1F3D                     	;# 
  3132  1F3E                     	;# 
  3133  1F3F                     	;# 
  3134  1F4E                     	;# 
  3135  1F4F                     	;# 
  3136  1F50                     	;# 
  3137  1F51                     	;# 
  3138  1F52                     	;# 
  3139  1F53                     	;# 
  3140  1F54                     	;# 
  3141  1F55                     	;# 
  3142  1FE4                     	;# 
  3143  1FE5                     	;# 
  3144  1FE6                     	;# 
  3145  1FE7                     	;# 
  3146  1FE8                     	;# 
  3147  1FE8                     	;# 
  3148  1FE9                     	;# 
  3149  1FEA                     	;# 
  3150  1FEA                     	;# 
  3151  1FEB                     	;# 
  3152  1FED                     	;# 
  3153  1FEE                     	;# 
  3154  1FEF                     	;# 
  3155                           
  3156 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  3157  0000                     
  3158 ;; Function _EUSART1_is_rx_ready is unused but had its address taken
  3159  0000                     
  3160 ;; Function _EUSART1_is_tx_done is unused but had its address taken
  3161  0000                     
  3162 ;; Function _EUSART1_Read is unused but had its address taken
  3163  0000                     
  3164                           	psect	idataBANK1
  3165  0474                     __pidataBANK1:	
  3166                           
  3167                           ;initializer for conf_sensor@F6604
  3168  0474  34F4               	retlw	244
  3169  0475  34F5               	retlw	245
  3170                           
  3171                           	psect	idataBANK2
  3172  0395                     __pidataBANK2:	
  3173                           
  3174                           ;initializer for BMP280_SPI_bus_read@F6557
  3175  0395  34FF               	retlw	-1
  3176  0396  3400               	retlw	0
  3177  0397  3400               	retlw	0
  3178  0398  3400               	retlw	0
  3179  0399  3400               	retlw	0
  3180  039A  3400               	retlw	0
  3181  039B  3400               	retlw	0
  3182  039C  3400               	retlw	0
  3183  039D  3400               	retlw	0
  3184  039E  3400               	retlw	0
  3185  039F  3400               	retlw	0
  3186  03A0  3400               	retlw	0
  3187  03A1  3400               	retlw	0
  3188  03A2  3400               	retlw	0
  3189  03A3  3400               	retlw	0
  3190  03A4  3400               	retlw	0
  3191  03A5  3400               	retlw	0
  3192  03A6  3400               	retlw	0
  3193  03A7  3400               	retlw	0
  3194  03A8  3400               	retlw	0
  3195  03A9  3400               	retlw	0
  3196  03AA  3400               	retlw	0
  3197  03AB  3400               	retlw	0
  3198  03AC  3400               	retlw	0
  3199  03AD  3400               	retlw	0
  3200  03AE  3400               	retlw	0
  3201  03AF  3400               	retlw	0
  3202  03B0  3400               	retlw	0
  3203  03B1  3400               	retlw	0
  3204  03B2  3400               	retlw	0
  3205                           
  3206                           	psect	stringtext1
  3207  03E4                     __pstringtext1:	
  3208  03E4                     _uart:	
  3209  03E4  3400               	retlw	0
  3210  03E5  3400               	retlw	0
  3211  03E6  34CC               	retlw	low _EUSART1_Initialize
  3212  03E7  3403               	retlw	high _EUSART1_Initialize
  3213  03E8  3400               	retlw	0
  3214  03E9  3400               	retlw	0
  3215  03EA  342E               	retlw	low _EUSART1_Receive_ISR
  3216  03EB  3403               	retlw	high _EUSART1_Receive_ISR
  3217  03EC  3460               	retlw	low _EUSART1_SetRxInterruptHandler
  3218  03ED  3404               	retlw	high _EUSART1_SetRxInterruptHandler
  3219  03EE  3400               	retlw	0
  3220  03EF  3400               	retlw	0
  3221  03F0  3400               	retlw	0
  3222  03F1  3400               	retlw	0
  3223  03F2  3447               	retlw	low _EUSART1_Write
  3224  03F3  3404               	retlw	high _EUSART1_Write
  3225  03F4  3400               	retlw	0
  3226  03F5  3400               	retlw	0
  3227  03F6  3400               	retlw	0
  3228  03F7  3400               	retlw	0
  3229  03F8                     __end_of_uart:	
  3230                           
  3231                           	psect	stringtext2
  3232  0466                     __pstringtext2:	
  3233  0466                     bmp280_compute_meas_time@period_per_osrs:	
  3234  0466  34D0               	retlw	208
  3235  0467  3407               	retlw	7
  3236  0468  3400               	retlw	0
  3237  0469  3400               	retlw	0
  3238  046A                     __end_ofbmp280_compute_meas_time@period_per_osrs:	
  3239                           
  3240                           	psect	stringtext3
  3241  046A                     __pstringtext3:	
  3242  046A                     bmp280_compute_meas_time@startup:	
  3243  046A  34E8               	retlw	232
  3244  046B  3403               	retlw	3
  3245  046C  3400               	retlw	0
  3246  046D  3400               	retlw	0
  3247  046E                     __end_ofbmp280_compute_meas_time@startup:	
  3248                           
  3249                           	psect	stringtext4
  3250  046E                     __pstringtext4:	
  3251  046E                     _spi1_configuration:	
  3252  046E  3410               	retlw	16
  3253  046F  3400               	retlw	0
  3254  0470  3407               	retlw	7
  3255  0471                     __end_of_spi1_configuration:	
  3256                           
  3257                           	psect	nvBANK1
  3258  00DC                     __pnvBANK1:	
  3259  00DC                     _TMR0_InterruptHandler:	
  3260  00DC                     	ds	2
  3261  00DE                     _timer0ReloadVal16bit:	
  3262  00DE                     	ds	2
  3263  00E0                     _EUSART1_RxDefaultInterruptHandler:	
  3264  00E0                     	ds	2
  3265  000B                     _INTCONbits	set	11
  3266  0014                     _TRISC	set	20
  3267  0012                     _TRISA	set	18
  3268  001A                     _LATC	set	26
  3269  0018                     _LATA	set	24
  3270  0014                     _TRISCbits	set	20
  3271  0075                     _RC5	set	117
  3272  009D                     _ADCON0bits	set	157
  3273  009C                     _ADRESH	set	156
  3274  009B                     _ADRESL	set	155
  3275  009F                     _ADACT	set	159
  3276  009E                     _ADCON1	set	158
  3277  009D                     _ADCON0	set	157
  3278  0119                     _RC1REG	set	281
  3279  011D                     _RC1STAbits	set	285
  3280  011A                     _TX1REG	set	282
  3281  011E                     _TX1STAbits	set	286
  3282  011C                     _SP1BRGH	set	284
  3283  011B                     _SP1BRGL	set	283
  3284  011E                     _TX1STA	set	286
  3285  011D                     _RC1STA	set	285
  3286  011F                     _BAUD1CON	set	287
  3287  018C                     _SSP1BUF	set	396
  3288  018D                     _SSP1ADD	set	397
  3289  0191                     _SSP1CON2	set	401
  3290  0190                     _SSP1CON1	set	400
  3291  018F                     _SSP1STAT	set	399
  3292  0190                     _SSP1CON1bits	set	400
  3293  059E                     _T0CON0bits	set	1438
  3294  059E                     _T0CON0	set	1438
  3295  059C                     _TMR0L	set	1436
  3296  059D                     _TMR0H	set	1437
  3297  059F                     _T0CON1	set	1439
  3298  0716                     _PIE0bits	set	1814
  3299  070C                     _PIR0bits	set	1804
  3300  0719                     _PIE3bits	set	1817
  3301  070F                     _PIR3bits	set	1807
  3302  079B                     _PMD5	set	1947
  3303  079A                     _PMD4	set	1946
  3304  0799                     _PMD3	set	1945
  3305  0798                     _PMD2	set	1944
  3306  0797                     _PMD1	set	1943
  3307  0796                     _PMD0	set	1942
  3308  0892                     _OSCTUNE	set	2194
  3309  0890                     _OSCSTAT	set	2192
  3310  0893                     _OSCFRQ	set	2195
  3311  0891                     _OSCEN	set	2193
  3312  088F                     _OSCCON3	set	2191
  3313  088D                     _OSCCON1	set	2189
  3314  1ECB                     _RX1DTPPSbits	set	7883
  3315  1EC6                     _SSP1DATPPSbits	set	7878
  3316  1EC5                     _SSP1CLKPPSbits	set	7877
  3317  1F22                     _RC2PPS	set	7970
  3318  1F24                     _RC4PPS	set	7972
  3319  1F20                     _RC0PPS	set	7968
  3320  1F50                     _ODCONC	set	8016
  3321  1F3A                     _ODCONA	set	7994
  3322  1F4F                     _WPUC	set	8015
  3323  1F39                     _WPUA	set	7993
  3324  1F38                     _ANSELA	set	7992
  3325  1F4E                     _ANSELC	set	8014
  3326                           
  3327                           ; #config settings
  3328  0000                     
  3329                           	psect	cinit
  3330  001D                     start_initialization:	
  3331  001D                     __initialization:	
  3332                           
  3333                           ; Initialize objects allocated to BANK1
  3334  001D  0141               	movlb	1	; select bank1
  3335  001E  3184  2474  3180   	fcall	__pidataBANK1	;fetch initializer
  3336  0021  00E7               	movwf	__pdataBANK1& (0+127)
  3337  0022  3184  2475  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3338  0025  00E8               	movwf	(__pdataBANK1+1)& (0+127)
  3339                           
  3340                           ; Initialize objects allocated to BANK2
  3341  0026  3095               	movlw	low __pidataBANK2
  3342  0027  0084               	movwf	4
  3343  0028  3083               	movlw	(high __pidataBANK2)| (0+128)
  3344  0029  0085               	movwf	5
  3345  002A  3020               	movlw	low __pdataBANK2
  3346  002B  0086               	movwf	6
  3347  002C  3001               	movlw	high __pdataBANK2
  3348  002D  0087               	movwf	7
  3349  002E  301E               	movlw	30
  3350  002F  3184  244E  3180   	fcall	init_ram
  3351                           
  3352                           ; Clear objects allocated to COMMON
  3353  0032  01F8               	clrf	__pbssCOMMON& (0+127)
  3354  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3355  0034  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  3356                           
  3357                           ; Clear objects allocated to BANK1
  3358  0035  30A0               	movlw	low __pbssBANK1
  3359  0036  0084               	movwf	4
  3360  0037  3000               	movlw	high __pbssBANK1
  3361  0038  0085               	movwf	5
  3362  0039  303C               	movlw	60
  3363  003A  3184  2454  3180   	fcall	clear_ram0
  3364                           
  3365                           ; Clear objects allocated to BANK2
  3366  003D  303E               	movlw	low __pbssBANK2
  3367  003E  0084               	movwf	4
  3368  003F  3001               	movlw	high __pbssBANK2
  3369  0040  0085               	movwf	5
  3370  0041  3018               	movlw	24
  3371  0042  3184  2454         	fcall	clear_ram0
  3372  0044                     end_of_initialization:	
  3373                           ;End of C runtime variable initialization code
  3374                           
  3375  0044                     __end_of__initialization:	
  3376  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3377  0045  0140               	movlb	0
  3378  0046  3183  2B75         	ljmp	_main	;jump to C main() function
  3379                           
  3380                           	psect	bssCOMMON
  3381  0078                     __pbssCOMMON:	
  3382  0078                     _eusart1RxCount:	
  3383  0078                     	ds	1
  3384  0079                     _eusart1RxTail:	
  3385  0079                     	ds	1
  3386  007A                     _eusart1RxHead:	
  3387  007A                     	ds	1
  3388                           
  3389                           	psect	bssBANK1
  3390  00A0                     __pbssBANK1:	
  3391  00A0                     _eusart1RxBuffer:	
  3392  00A0                     	ds	8
  3393  00A8                     bmp280_get_uncomp_data@F6465:	
  3394  00A8                     	ds	6
  3395  00AE                     conf_sensor@F6602:	
  3396  00AE                     	ds	2
  3397  00B0                     bmp280_get_config@F6430:	
  3398  00B0                     	ds	2
  3399  00B2                     _bmp:	
  3400  00B2                     	ds	42
  3401                           
  3402                           	psect	dataBANK1
  3403  00E7                     __pdataBANK1:	
  3404  00E7                     conf_sensor@F6604:	
  3405  00E7                     	ds	2
  3406                           
  3407                           	psect	bssBANK2
  3408  013E                     __pbssBANK2:	
  3409  013E                     get_calib_param@F6534:	
  3410  013E                     	ds	24
  3411                           
  3412                           	psect	dataBANK2
  3413  0120                     __pdataBANK2:	
  3414  0120                     BMP280_SPI_bus_read@F6557:	
  3415  0120                     	ds	30
  3416                           
  3417                           	psect	inittext
  3418  044E                     init_ram:	
  3419  044E  00FE               	movwf	126
  3420  044F                     initloop:	
  3421  044F  0012               	moviw fsr0++
  3422  0450  001E               	movwi fsr1++
  3423  0451  0BFE               	decfsz	126,f
  3424  0452  2C4F               	goto	initloop
  3425  0453  3400               	retlw	0
  3426                           
  3427                           	psect	clrtext
  3428  0454                     clear_ram0:	
  3429                           ;	Called with FSR0 containing the base address, and
  3430                           ;	WREG with the size to clear
  3431                           
  3432  0454  0064               	clrwdt	;clear the watchdog before getting into this loop
  3433  0455                     clrloop0:	
  3434  0455  0180               	clrf	0	;clear RAM location pointed to by FSR
  3435  0456  3101               	addfsr 0,1
  3436  0457  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3437  0458  2C55               	goto	clrloop0	;have we reached the end yet?
  3438  0459  3400               	retlw	0	;all done for this memory range, return
  3439                           
  3440                           	psect	cstackBANK1
  3441  00E2                     __pcstackBANK1:	
  3442  00E2                     bmp280_init@try_count:	
  3443                           
  3444                           ; 1 bytes @ 0x0
  3445  00E2                     	ds	1
  3446  00E3                     bmp280_init@rslt:	
  3447                           
  3448                           ; 1 bytes @ 0x1
  3449  00E3                     	ds	1
  3450  00E4                     bmp280_init@dev:	
  3451                           
  3452                           ; 1 bytes @ 0x2
  3453  00E4                     	ds	1
  3454  00E5                     ??_main:	
  3455                           
  3456                           ; 1 bytes @ 0x3
  3457  00E5                     	ds	1
  3458  00E6                     main@rslt:	
  3459                           
  3460                           ; 1 bytes @ 0x4
  3461  00E6                     	ds	1
  3462                           
  3463                           	psect	cstackCOMMON
  3464  0070                     __pcstackCOMMON:	
  3465  0070                     ?_EUSART1_Initialize:	
  3466  0070                     ?_EUSART1_Receive_ISR:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0070                     ?_EUSART1_Write:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0070                     ?_PMD_Initialize:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0070                     ?_PIN_MANAGER_Initialize:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0070                     ?_OSCILLATOR_Initialize:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0070                     ?_ADC_Initialize:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0070                     ?_TMR0_Initialize:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0070                     ?_TMR0_StartTimer:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0070                     ?_bmp280_init:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493  0070                     ?_null_ptr_check:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496  0070                     ?_get_calib_param:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0070                     ?_TMR0_DefaultInterruptHandler:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0070                     ??_TMR0_DefaultInterruptHandler:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0070                     ?_TMR0_CallBack:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508  0070                     ??_TMR0_CallBack:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511  0070                     ?_SYSTEM_Initialize:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514  0070                     ?_main:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517  0070                     ?_bmp280_soft_reset:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520  0070                     ?_TMR0_ISR:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523  0070                     ??_TMR0_ISR:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526  0070                     ?_INTERRUPT_InterruptManager:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529  0070                     EUSART1_Write@txData:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532                           
  3533                           ; 1 bytes @ 0x0
  3534  0070                     	ds	1
  3535  0071                     ??_EUSART1_Receive_ISR:	
  3536  0071                     ??_EUSART1_Write:	
  3537                           ; 1 bytes @ 0x1
  3538                           
  3539                           
  3540                           ; 1 bytes @ 0x1
  3541  0071                     	ds	1
  3542  0072                     EUSART1_Receive_ISR@a:	
  3543                           
  3544                           ; 1 bytes @ 0x2
  3545  0072                     	ds	1
  3546  0073                     ?_EUSART1_SetRxInterruptHandler:	
  3547  0073                     ??_PMD_Initialize:	
  3548                           ; 1 bytes @ 0x3
  3549                           
  3550  0073                     ??_PIN_MANAGER_Initialize:	
  3551                           ; 1 bytes @ 0x3
  3552                           
  3553  0073                     ??_OSCILLATOR_Initialize:	
  3554                           ; 1 bytes @ 0x3
  3555                           
  3556  0073                     ??_ADC_Initialize:	
  3557                           ; 1 bytes @ 0x3
  3558                           
  3559  0073                     ??_TMR0_StartTimer:	
  3560                           ; 1 bytes @ 0x3
  3561                           
  3562  0073                     ??_null_ptr_check:	
  3563                           ; 1 bytes @ 0x3
  3564                           
  3565  0073                     ?_interleave_data:	
  3566                           ; 1 bytes @ 0x3
  3567                           
  3568  0073                     ?_TMR0_SetInterruptHandler:	
  3569                           ; 1 bytes @ 0x3
  3570                           
  3571  0073                     ?_BMP280_delay_msek:	
  3572                           ; 1 bytes @ 0x3
  3573                           
  3574  0073                     ?_BMP280_SPI_bus_read:	
  3575                           ; 1 bytes @ 0x3
  3576                           
  3577  0073                     ?_BMP280_SPI_bus_write:	
  3578                           ; 1 bytes @ 0x3
  3579                           
  3580  0073                     ??_INTERRUPT_InterruptManager:	
  3581                           ; 1 bytes @ 0x3
  3582                           
  3583  0073                     BMP280_SPI_bus_read@dev_addr:	
  3584                           ; 1 bytes @ 0x3
  3585                           
  3586  0073                     BMP280_SPI_bus_write@dev_addr:	
  3587                           ; 1 bytes @ 0x3
  3588                           
  3589  0073                     interleave_data@temp_buff:	
  3590                           ; 1 bytes @ 0x3
  3591                           
  3592  0073                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  3593                           ; 1 bytes @ 0x3
  3594                           
  3595  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  3596                           ; 2 bytes @ 0x3
  3597                           
  3598  0073                     BMP280_delay_msek@msek:	
  3599                           ; 2 bytes @ 0x3
  3600                           
  3601                           
  3602                           ; 4 bytes @ 0x3
  3603  0073                     	ds	1
  3604  0074                     BMP280_SPI_bus_read@reg_addr:	
  3605  0074                     BMP280_SPI_bus_write@reg_addr:	
  3606                           ; 1 bytes @ 0x4
  3607                           
  3608  0074                     interleave_data@reg_data:	
  3609                           ; 1 bytes @ 0x4
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0x4
  3613  0074                     	ds	1
  3614  0075                     ??_EUSART1_Initialize:	
  3615  0075                     ??_EUSART1_SetRxInterruptHandler:	
  3616                           ; 1 bytes @ 0x5
  3617                           
  3618  0075                     ??_TMR0_Initialize:	
  3619                           ; 1 bytes @ 0x5
  3620                           
  3621  0075                     ??_TMR0_SetInterruptHandler:	
  3622                           ; 1 bytes @ 0x5
  3623                           
  3624  0075                     ??_SYSTEM_Initialize:	
  3625                           ; 1 bytes @ 0x5
  3626                           
  3627  0075                     BMP280_SPI_bus_read@reg_data:	
  3628                           ; 1 bytes @ 0x5
  3629                           
  3630  0075                     BMP280_SPI_bus_write@reg_data:	
  3631                           ; 1 bytes @ 0x5
  3632                           
  3633  0075                     null_ptr_check@rslt:	
  3634                           ; 1 bytes @ 0x5
  3635                           
  3636  0075                     interleave_data@len:	
  3637                           ; 1 bytes @ 0x5
  3638                           
  3639                           
  3640                           ; 1 bytes @ 0x5
  3641  0075                     	ds	1
  3642  0076                     BMP280_SPI_bus_read@cnt:	
  3643  0076                     BMP280_SPI_bus_write@cnt:	
  3644                           ; 1 bytes @ 0x6
  3645                           
  3646  0076                     null_ptr_check@dev:	
  3647                           ; 1 bytes @ 0x6
  3648                           
  3649  0076                     interleave_data@reg_addr:	
  3650                           ; 1 bytes @ 0x6
  3651                           
  3652                           
  3653                           ; 1 bytes @ 0x6
  3654  0076                     	ds	1
  3655  0077                     ??_BMP280_delay_msek:	
  3656  0077                     ??_BMP280_SPI_bus_write:	
  3657                           ; 1 bytes @ 0x7
  3658                           
  3659  0077                     interleave_data@index:	
  3660                           ; 1 bytes @ 0x7
  3661                           
  3662                           
  3663                           ; 1 bytes @ 0x7
  3664  0077                     	ds	1
  3665                           
  3666                           	psect	cstackBANK0
  3667  0020                     __pcstackBANK0:	
  3668  0020                     ??_interleave_data:	
  3669  0020                     ??_BMP280_SPI_bus_read:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672  0020                     BMP280_SPI_bus_write@iError:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675                           
  3676                           ; 4 bytes @ 0x0
  3677  0020                     	ds	2
  3678  0022                     BMP280_SPI_bus_read@array:	
  3679                           
  3680                           ; 30 bytes @ 0x2
  3681  0022                     	ds	2
  3682  0024                     ?_bmp280_set_regs:	
  3683  0024                     bmp280_set_regs@reg_data:	
  3684                           ; 1 bytes @ 0x4
  3685                           
  3686                           
  3687                           ; 1 bytes @ 0x4
  3688  0024                     	ds	1
  3689  0025                     bmp280_set_regs@len:	
  3690                           
  3691                           ; 1 bytes @ 0x5
  3692  0025                     	ds	1
  3693  0026                     bmp280_set_regs@dev:	
  3694                           
  3695                           ; 1 bytes @ 0x6
  3696  0026                     	ds	1
  3697  0027                     ??_bmp280_set_regs:	
  3698                           
  3699                           ; 1 bytes @ 0x7
  3700  0027                     	ds	4
  3701  002B                     bmp280_set_regs@temp_buff:	
  3702                           
  3703                           ; 8 bytes @ 0xB
  3704  002B                     	ds	8
  3705  0033                     bmp280_set_regs@temp_len:	
  3706                           
  3707                           ; 2 bytes @ 0x13
  3708  0033                     	ds	2
  3709  0035                     bmp280_set_regs@reg_addr_cnt:	
  3710                           
  3711                           ; 1 bytes @ 0x15
  3712  0035                     	ds	1
  3713  0036                     bmp280_set_regs@rslt:	
  3714                           
  3715                           ; 1 bytes @ 0x16
  3716  0036                     	ds	1
  3717  0037                     bmp280_set_regs@reg_addr:	
  3718                           
  3719                           ; 1 bytes @ 0x17
  3720  0037                     	ds	1
  3721  0038                     ??_bmp280_soft_reset:	
  3722                           
  3723                           ; 1 bytes @ 0x18
  3724  0038                     	ds	3
  3725  003B                     bmp280_soft_reset@soft_rst_cmd:	
  3726                           
  3727                           ; 1 bytes @ 0x1B
  3728  003B                     	ds	1
  3729  003C                     bmp280_soft_reset@rslt:	
  3730                           
  3731                           ; 1 bytes @ 0x1C
  3732  003C                     	ds	1
  3733  003D                     bmp280_soft_reset@reg_addr:	
  3734                           
  3735                           ; 1 bytes @ 0x1D
  3736  003D                     	ds	1
  3737  003E                     bmp280_soft_reset@dev:	
  3738                           
  3739                           ; 1 bytes @ 0x1E
  3740  003E                     	ds	2
  3741  0040                     BMP280_SPI_bus_read@iError:	
  3742                           
  3743                           ; 4 bytes @ 0x20
  3744  0040                     	ds	4
  3745  0044                     BMP280_SPI_bus_read@i:	
  3746                           
  3747                           ; 1 bytes @ 0x24
  3748  0044                     	ds	1
  3749  0045                     BMP280_SPI_bus_read@stringpos:	
  3750                           
  3751                           ; 1 bytes @ 0x25
  3752  0045                     	ds	1
  3753  0046                     ?_bmp280_get_regs:	
  3754  0046                     bmp280_get_regs@reg_data:	
  3755                           ; 1 bytes @ 0x26
  3756                           
  3757                           
  3758                           ; 1 bytes @ 0x26
  3759  0046                     	ds	1
  3760  0047                     bmp280_get_regs@len:	
  3761                           
  3762                           ; 1 bytes @ 0x27
  3763  0047                     	ds	1
  3764  0048                     bmp280_get_regs@dev:	
  3765                           
  3766                           ; 1 bytes @ 0x28
  3767  0048                     	ds	1
  3768  0049                     ??_bmp280_get_regs:	
  3769                           
  3770                           ; 1 bytes @ 0x29
  3771  0049                     	ds	4
  3772  004D                     bmp280_get_regs@reg_addr:	
  3773                           
  3774                           ; 1 bytes @ 0x2D
  3775  004D                     	ds	1
  3776  004E                     bmp280_get_regs@rslt:	
  3777                           
  3778                           ; 1 bytes @ 0x2E
  3779  004E                     	ds	1
  3780  004F                     ??_get_calib_param:	
  3781                           
  3782                           ; 1 bytes @ 0x2F
  3783  004F                     	ds	4
  3784  0053                     get_calib_param@temp:	
  3785                           
  3786                           ; 24 bytes @ 0x33
  3787  0053                     	ds	24
  3788  006B                     get_calib_param@rslt:	
  3789                           
  3790                           ; 1 bytes @ 0x4B
  3791  006B                     	ds	1
  3792  006C                     get_calib_param@dev:	
  3793                           
  3794                           ; 1 bytes @ 0x4C
  3795  006C                     	ds	1
  3796  006D                     ??_bmp280_init:	
  3797                           
  3798                           ; 1 bytes @ 0x4D
  3799  006D                     	ds	3
  3800                           
  3801                           	psect	maintext
  3802  0375                     __pmaintext:	
  3803 ;;
  3804 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3805 ;;
  3806 ;; *************** function _main *****************
  3807 ;; Defined at:
  3808 ;;		line 76 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  rslt            1    4[BANK1 ] char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : B3F/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels required when called:    8
  3828 ;; This function calls:
  3829 ;;		_SYSTEM_Initialize
  3830 ;;		_TMR0_StartTimer
  3831 ;;		_bmp280_init
  3832 ;; This function is called by:
  3833 ;;		Startup code after reset
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _main
  3839  0375                     _main:	
  3840                           
  3841                           ;main.c: 78: SYSTEM_Initialize();
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3845  0375  3183  23F8  3183   	fcall	_SYSTEM_Initialize
  3846                           
  3847                           ;main.c: 79: INTCONbits.GIE = 1;
  3848  0378  178B               	bsf	11,7	;volatile
  3849                           
  3850                           ;main.c: 80: INTCONbits.PEIE = 1;
  3851  0379  170B               	bsf	11,6	;volatile
  3852                           
  3853                           ;main.c: 82: TMR0_StartTimer();
  3854  037A  3184  2471  3183   	fcall	_TMR0_StartTimer
  3855                           
  3856                           ;main.c: 83: int8_t rslt;;main.c: 84: bmp.dev_id = 0;
  3857  037D  0141               	movlb	1	; select bank1
  3858  037E  01B3               	clrf	(_bmp^(0+128)+1)
  3859                           
  3860                           ;main.c: 85: bmp.intf = (unsigned char) 0;
  3861  037F  01B4               	clrf	(_bmp^(0+128)+2)
  3862                           
  3863                           ;main.c: 86: bmp.read = BMP280_SPI_bus_read;
  3864  0380  3006               	movlw	low _BMP280_SPI_bus_read
  3865  0381  00B5               	movwf	(low ((_bmp| 0+3)))^(0+128)
  3866  0382  3002               	movlw	high _BMP280_SPI_bus_read
  3867  0383  00B6               	movwf	((low ((_bmp| 0+3)))^(0+128)+1)
  3868                           
  3869                           ;main.c: 87: bmp.write = BMP280_SPI_bus_write;
  3870  0384  3017               	movlw	low _BMP280_SPI_bus_write
  3871  0385  00B7               	movwf	(low ((_bmp| 0+5)))^(0+128)
  3872  0386  3004               	movlw	high _BMP280_SPI_bus_write
  3873  0387  00B8               	movwf	((low ((_bmp| 0+5)))^(0+128)+1)
  3874                           
  3875                           ;main.c: 88: bmp.delay_ms = BMP280_delay_msek;
  3876  0388  3076               	movlw	low _BMP280_delay_msek
  3877  0389  00B9               	movwf	(low ((_bmp| 0+7)))^(0+128)
  3878  038A  3004               	movlw	high _BMP280_delay_msek
  3879  038B  00BA               	movwf	((low ((_bmp| 0+7)))^(0+128)+1)
  3880                           
  3881                           ;main.c: 90: rslt = bmp280_init(&bmp);
  3882  038C  30B2               	movlw	(low (_bmp| 0))& (0+255)
  3883  038D  3180  2048  3183   	fcall	_bmp280_init
  3884  0390  0141               	movlb	1	; select bank1
  3885  0391  00E5               	movwf	??_main^(0+128)
  3886  0392  0865               	movf	??_main^(0+128),w
  3887  0393  00E6               	movwf	main@rslt^(0+128)
  3888  0394                     l309:	
  3889                           ;main.c: 92: while(1){
  3890                           
  3891  0394  2B94               	goto	l309
  3892  0395                     __end_of_main:	
  3893                           ;main.c: 94: };main.c: 97: return;
  3894                           
  3895                           
  3896                           	psect	text1
  3897  0048                     __ptext1:	
  3898 ;; *************** function _bmp280_init *****************
  3899 ;; Defined at:
  3900 ;;		line 211 in file "bmp280.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  dev             1    wreg     PTR struct bmp280_dev
  3903 ;;		 -> bmp(42), 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  dev             1    2[BANK1 ] PTR struct bmp280_dev
  3906 ;;		 -> bmp(42), 
  3907 ;;  rslt            1    1[BANK1 ] char 
  3908 ;;  try_count       1    0[BANK1 ] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      char 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;Total ram usage:        6 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    7
  3925 ;; This function calls:
  3926 ;;		_BMP280_delay_msek
  3927 ;;		_bmp280_get_regs
  3928 ;;		_bmp280_soft_reset
  3929 ;;		_get_calib_param
  3930 ;;		_null_ptr_check
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _bmp280_init
  3938  0048                     _bmp280_init:	
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _bmp280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3942                           ;bmp280_init@dev stored from wreg
  3943  0048  0141               	movlb	1	; select bank1
  3944  0049  00E4               	movwf	bmp280_init@dev^(0+128)
  3945                           
  3946                           ;bmp280.c: 213: int8_t rslt;;bmp280.c: 215: uint8_t try_count = 5;
  3947  004A  3005               	movlw	5
  3948  004B  0140               	movlb	0	; select bank0
  3949  004C  00ED               	movwf	??_bmp280_init
  3950  004D  086D               	movf	??_bmp280_init,w
  3951  004E  0141               	movlb	1	; select bank1
  3952  004F  00E2               	movwf	bmp280_init@try_count^(0+128)
  3953                           
  3954                           ;bmp280.c: 217: rslt = null_ptr_check(dev);
  3955  0050  0864               	movf	bmp280_init@dev^(0+128),w
  3956  0051  3183  2353  3180   	fcall	_null_ptr_check
  3957  0054  0140               	movlb	0	; select bank0
  3958  0055  00ED               	movwf	??_bmp280_init
  3959  0056  086D               	movf	??_bmp280_init,w
  3960  0057  0141               	movlb	1	; select bank1
  3961  0058  00E3               	movwf	bmp280_init@rslt^(0+128)
  3962                           
  3963                           ;bmp280.c: 219: if (rslt == (0)) {
  3964  0059  0863               	movf	bmp280_init@rslt^(0+128),w
  3965  005A  1903               	btfsc	3,2
  3966  005B  28B5               	goto	l2268
  3967  005C  28DD               	goto	l2278
  3968  005D                     l2248:	
  3969                           ;bmp280.c: 220: while (try_count) {
  3970                           
  3971                           
  3972                           ;bmp280.c: 221: rslt = bmp280_get_regs((unsigned char) 0xD0, &dev->chip_id, 1, dev);
  3973  005D  0864               	movf	bmp280_init@dev^(0+128),w
  3974  005E  0140               	movlb	0	; select bank0
  3975  005F  00ED               	movwf	??_bmp280_init
  3976  0060  086D               	movf	??_bmp280_init,w
  3977  0061  00C6               	movwf	bmp280_get_regs@reg_data
  3978  0062  01C7               	clrf	bmp280_get_regs@len
  3979  0063  0AC7               	incf	bmp280_get_regs@len,f
  3980  0064  0141               	movlb	1	; select bank1
  3981  0065  0864               	movf	bmp280_init@dev^(0+128),w
  3982  0066  0140               	movlb	0	; select bank0
  3983  0067  00EE               	movwf	??_bmp280_init+1
  3984  0068  086E               	movf	??_bmp280_init+1,w
  3985  0069  00C8               	movwf	bmp280_get_regs@dev
  3986  006A  30D0               	movlw	208
  3987  006B  3182  2259  3180   	fcall	_bmp280_get_regs
  3988  006E  0140               	movlb	0	; select bank0
  3989  006F  00EF               	movwf	??_bmp280_init+2
  3990  0070  086F               	movf	??_bmp280_init+2,w
  3991  0071  0141               	movlb	1	; select bank1
  3992  0072  00E3               	movwf	bmp280_init@rslt^(0+128)
  3993                           
  3994                           ;bmp280.c: 224: if ((rslt == (0)) && (dev->chip_id == (unsigned char) 0x56;bmp280.c: 225
      +                          : || dev->chip_id == (unsigned char) 0x57;bmp280.c: 226: || dev->chip_id == (unsigned ch
      +                          ar) 0x58)) {
  3995  0073  0863               	movf	bmp280_init@rslt^(0+128),w
  3996  0074  1D03               	btfss	3,2
  3997  0075  28A1               	goto	l2264
  3998  0076  0864               	movf	bmp280_init@dev^(0+128),w
  3999  0077  0086               	movwf	6
  4000  0078  0187               	clrf	7
  4001  0079  3056               	movlw	86
  4002  007A  0601               	xorwf	1,w
  4003  007B  1903               	btfsc	3,2
  4004  007C  288B               	goto	l2258
  4005  007D  0864               	movf	bmp280_init@dev^(0+128),w
  4006  007E  0086               	movwf	6
  4007  007F  0187               	clrf	7
  4008  0080  3057               	movlw	87
  4009  0081  0601               	xorwf	1,w
  4010  0082  1903               	btfsc	3,2
  4011  0083  288B               	goto	l2258
  4012  0084  0864               	movf	bmp280_init@dev^(0+128),w
  4013  0085  0086               	movwf	6
  4014  0086  0187               	clrf	7
  4015  0087  3058               	movlw	88
  4016  0088  0601               	xorwf	1,w
  4017  0089  1D03               	btfss	3,2
  4018  008A  28A1               	goto	l2264
  4019  008B                     l2258:	
  4020                           
  4021                           ;bmp280.c: 228: rslt = bmp280_soft_reset(dev);
  4022  008B  0864               	movf	bmp280_init@dev^(0+128),w
  4023  008C  3182  229F  3180   	fcall	_bmp280_soft_reset
  4024  008F  0140               	movlb	0	; select bank0
  4025  0090  00ED               	movwf	??_bmp280_init
  4026  0091  086D               	movf	??_bmp280_init,w
  4027  0092  0141               	movlb	1	; select bank1
  4028  0093  00E3               	movwf	bmp280_init@rslt^(0+128)
  4029                           
  4030                           ;bmp280.c: 230: if (rslt == (0))
  4031  0094  0863               	movf	bmp280_init@rslt^(0+128),w
  4032  0095  1D03               	btfss	3,2
  4033  0096  28B8               	goto	l2270
  4034                           
  4035                           ;bmp280.c: 231: rslt = get_calib_param(dev);
  4036  0097  0864               	movf	bmp280_init@dev^(0+128),w
  4037  0098  3180  20DF  3180   	fcall	_get_calib_param
  4038  009B  0140               	movlb	0	; select bank0
  4039  009C  00ED               	movwf	??_bmp280_init
  4040  009D  086D               	movf	??_bmp280_init,w
  4041  009E  0141               	movlb	1	; select bank1
  4042  009F  00E3               	movwf	bmp280_init@rslt^(0+128)
  4043                           
  4044                           ;bmp280.c: 232: break;
  4045  00A0  28B8               	goto	l2270
  4046  00A1                     l2264:	
  4047                           
  4048                           ;bmp280.c: 233: };bmp280.c: 236: dev->delay_ms(10);
  4049  00A1  3000               	movlw	0
  4050  00A2  00F6               	movwf	BMP280_delay_msek@msek+3
  4051  00A3  3000               	movlw	0
  4052  00A4  00F5               	movwf	BMP280_delay_msek@msek+2
  4053  00A5  3000               	movlw	0
  4054  00A6  00F4               	movwf	BMP280_delay_msek@msek+1
  4055  00A7  300A               	movlw	10
  4056  00A8  00F3               	movwf	BMP280_delay_msek@msek
  4057  00A9  0864               	movf	bmp280_init@dev^(0+128),w
  4058  00AA  3E07               	addlw	7
  4059  00AB  0086               	movwf	6
  4060  00AC  0187               	clrf	7
  4061  00AD  3F41               	moviw [1]fsr1
  4062  00AE  008A               	movwf	10
  4063  00AF  3F40               	moviw [0]fsr1
  4064  00B0  000A               	callw
  4065  00B1  3180               	pagesel	$
  4066                           
  4067                           ;bmp280.c: 237: --try_count;
  4068  00B2  3001               	movlw	1
  4069  00B3  0141               	movlb	1	; select bank1
  4070  00B4  02E2               	subwf	bmp280_init@try_count^(0+128),f
  4071  00B5                     l2268:	
  4072  00B5  0862               	movf	bmp280_init@try_count^(0+128),w
  4073  00B6  1D03               	btfss	3,2
  4074  00B7  285D               	goto	l2248
  4075  00B8                     l2270:	
  4076                           
  4077                           ;bmp280.c: 238: };bmp280.c: 241: if (!try_count)
  4078  00B8  0862               	movf	bmp280_init@try_count^(0+128),w
  4079  00B9  1D03               	btfss	3,2
  4080  00BA  28C1               	goto	l2274
  4081                           
  4082                           ;bmp280.c: 242: rslt = (-2);
  4083  00BB  30FE               	movlw	254
  4084  00BC  0140               	movlb	0	; select bank0
  4085  00BD  00ED               	movwf	??_bmp280_init
  4086  00BE  086D               	movf	??_bmp280_init,w
  4087  00BF  0141               	movlb	1	; select bank1
  4088  00C0  00E3               	movwf	bmp280_init@rslt^(0+128)
  4089  00C1                     l2274:	
  4090                           
  4091                           ;bmp280.c: 244: if (rslt == (0)) {
  4092  00C1  0863               	movf	bmp280_init@rslt^(0+128),w
  4093  00C2  1D03               	btfss	3,2
  4094  00C3  28DD               	goto	l2278
  4095                           
  4096                           ;bmp280.c: 246: dev->conf.filter = (unsigned char) 0x00;
  4097  00C4  0864               	movf	bmp280_init@dev^(0+128),w
  4098  00C5  3E28               	addlw	40
  4099  00C6  0086               	movwf	6
  4100  00C7  0187               	clrf	7
  4101  00C8  0181               	clrf	1
  4102                           
  4103                           ;bmp280.c: 247: dev->conf.os_pres = (unsigned char) 0x00;
  4104  00C9  0864               	movf	bmp280_init@dev^(0+128),w
  4105  00CA  3E26               	addlw	38
  4106  00CB  0086               	movwf	6
  4107  00CC  0187               	clrf	7
  4108  00CD  0181               	clrf	1
  4109                           
  4110                           ;bmp280.c: 248: dev->conf.os_temp = (unsigned char) 0x00;
  4111  00CE  0864               	movf	bmp280_init@dev^(0+128),w
  4112  00CF  3E25               	addlw	37
  4113  00D0  0086               	movwf	6
  4114  00D1  0187               	clrf	7
  4115  00D2  0181               	clrf	1
  4116                           
  4117                           ;bmp280.c: 249: dev->conf.odr = (unsigned char) 0x00;
  4118  00D3  0864               	movf	bmp280_init@dev^(0+128),w
  4119  00D4  3E27               	addlw	39
  4120  00D5  0086               	movwf	6
  4121  00D6  0187               	clrf	7
  4122  00D7  0181               	clrf	1
  4123                           
  4124                           ;bmp280.c: 250: dev->conf.spi3w_en = (unsigned char) 0;
  4125  00D8  0864               	movf	bmp280_init@dev^(0+128),w
  4126  00D9  3E29               	addlw	41
  4127  00DA  0086               	movwf	6
  4128  00DB  0187               	clrf	7
  4129  00DC  0181               	clrf	1
  4130  00DD                     l2278:	
  4131                           
  4132                           ;bmp280.c: 251: };bmp280.c: 252: };bmp280.c: 254: return rslt;
  4133  00DD  0863               	movf	bmp280_init@rslt^(0+128),w
  4134  00DE  0008               	return
  4135  00DF                     __end_of_bmp280_init:	
  4136                           
  4137                           	psect	text2
  4138  00DF                     __ptext2:	
  4139 ;; *************** function _get_calib_param *****************
  4140 ;; Defined at:
  4141 ;;		line 619 in file "bmp280.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  dev             1    wreg     PTR struct bmp280_dev
  4144 ;;		 -> bmp(42), 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  dev             1   76[BANK0 ] PTR struct bmp280_dev
  4147 ;;		 -> bmp(42), 
  4148 ;;  temp           24   51[BANK0 ] unsigned char [24]
  4149 ;;  rslt            1   75[BANK0 ] char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      char 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;Total ram usage:       30 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    6
  4166 ;; This function calls:
  4167 ;;		_bmp280_get_regs
  4168 ;;		_null_ptr_check
  4169 ;; This function is called by:
  4170 ;;		_bmp280_init
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _get_calib_param
  4176  00DF                     _get_calib_param:	
  4177                           
  4178                           ;incstack = 0
  4179                           ; Regs used in _get_calib_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4180                           ;get_calib_param@dev stored from wreg
  4181  00DF  0140               	movlb	0	; select bank0
  4182  00E0  00EC               	movwf	get_calib_param@dev
  4183                           
  4184                           ;bmp280.c: 621: int8_t rslt;;bmp280.c: 622: uint8_t temp[(unsigned char) 24] = {0};
  4185  00E1  303E               	movlw	low get_calib_param@F6534
  4186  00E2  0086               	movwf	6
  4187  00E3  3001               	movlw	high get_calib_param@F6534
  4188  00E4  0087               	movwf	7
  4189  00E5  3053               	movlw	low get_calib_param@temp
  4190  00E6  0084               	movwf	4
  4191  00E7  3000               	movlw	high get_calib_param@temp
  4192  00E8  0085               	movwf	5
  4193  00E9  3018               	movlw	24
  4194  00EA  00CF               	movwf	??_get_calib_param
  4195  00EB                     u2420:	
  4196  00EB  0016               	moviw fsr1++
  4197  00EC  001A               	movwi fsr0++
  4198  00ED  0BCF               	decfsz	??_get_calib_param,f
  4199  00EE  28EB               	goto	u2420
  4200                           
  4201                           ;bmp280.c: 624: rslt = null_ptr_check(dev);
  4202  00EF  086C               	movf	get_calib_param@dev,w
  4203  00F0  3183  2353  3180   	fcall	_null_ptr_check
  4204  00F3  0140               	movlb	0	; select bank0
  4205  00F4  00CF               	movwf	??_get_calib_param
  4206  00F5  084F               	movf	??_get_calib_param,w
  4207  00F6  00EB               	movwf	get_calib_param@rslt
  4208                           
  4209                           ;bmp280.c: 626: if (rslt == (0)) {
  4210  00F7  086B               	movf	get_calib_param@rslt,w
  4211  00F8  1D03               	btfss	3,2
  4212  00F9  2971               	goto	l2236
  4213                           
  4214                           ;bmp280.c: 627: rslt = bmp280_get_regs((unsigned char) 0x88, temp, (unsigned char) 24, d
      +                          ev);
  4215  00FA  3053               	movlw	(low (get_calib_param@temp| 0))& (0+255)
  4216  00FB  00CF               	movwf	??_get_calib_param
  4217  00FC  084F               	movf	??_get_calib_param,w
  4218  00FD  00C6               	movwf	bmp280_get_regs@reg_data
  4219  00FE  3018               	movlw	24
  4220  00FF  00D0               	movwf	??_get_calib_param+1
  4221  0100  0850               	movf	??_get_calib_param+1,w
  4222  0101  00C7               	movwf	bmp280_get_regs@len
  4223  0102  086C               	movf	get_calib_param@dev,w
  4224  0103  00D1               	movwf	??_get_calib_param+2
  4225  0104  0851               	movf	??_get_calib_param+2,w
  4226  0105  00C8               	movwf	bmp280_get_regs@dev
  4227  0106  3088               	movlw	136
  4228  0107  3182  2259  3180   	fcall	_bmp280_get_regs
  4229  010A  0140               	movlb	0	; select bank0
  4230  010B  00D2               	movwf	??_get_calib_param+3
  4231  010C  0852               	movf	??_get_calib_param+3,w
  4232  010D  00EB               	movwf	get_calib_param@rslt
  4233                           
  4234                           ;bmp280.c: 629: if (rslt == (0)) {
  4235  010E  086B               	movf	get_calib_param@rslt,w
  4236  010F  1D03               	btfss	3,2
  4237  0110  2971               	goto	l2236
  4238                           
  4239                           ;bmp280.c: 630: dev->calib_param.dig_t1 = (uint16_t) (((uint16_t) temp[(unsigned char) 1
      +                          ] << 8);bmp280.c: 631: | ((uint16_t) temp[(unsigned char) 0]));
  4240  0111  086C               	movf	get_calib_param@dev,w
  4241  0112  3E09               	addlw	9
  4242  0113  0086               	movwf	6
  4243  0114  0187               	clrf	7
  4244  0115  0853               	movf	get_calib_param@temp,w
  4245  0116  3FC0               	movwi [0]fsr1
  4246  0117  0854               	movf	get_calib_param@temp+1,w
  4247  0118  3FC1               	movwi [1]fsr1
  4248                           
  4249                           ;bmp280.c: 632: dev->calib_param.dig_t2 = (int16_t) (((int16_t) temp[(unsigned char) 3] 
      +                          << 8);bmp280.c: 633: | ((int16_t) temp[(unsigned char) 2]));
  4250  0119  086C               	movf	get_calib_param@dev,w
  4251  011A  3E0B               	addlw	11
  4252  011B  0086               	movwf	6
  4253  011C  0187               	clrf	7
  4254  011D  0855               	movf	get_calib_param@temp+2,w
  4255  011E  3FC0               	movwi [0]fsr1
  4256  011F  0856               	movf	get_calib_param@temp+3,w
  4257  0120  3FC1               	movwi [1]fsr1
  4258                           
  4259                           ;bmp280.c: 634: dev->calib_param.dig_t3 = (int16_t) (((int16_t) temp[(unsigned char) 5] 
      +                          << 8);bmp280.c: 635: | ((int16_t) temp[(unsigned char) 4]));
  4260  0121  086C               	movf	get_calib_param@dev,w
  4261  0122  3E0D               	addlw	13
  4262  0123  0086               	movwf	6
  4263  0124  0187               	clrf	7
  4264  0125  0857               	movf	get_calib_param@temp+4,w
  4265  0126  3FC0               	movwi [0]fsr1
  4266  0127  0858               	movf	get_calib_param@temp+5,w
  4267  0128  3FC1               	movwi [1]fsr1
  4268                           
  4269                           ;bmp280.c: 636: dev->calib_param.dig_p1 = (uint16_t) (((uint16_t) temp[(unsigned char) 7
      +                          ] << 8);bmp280.c: 637: | ((uint16_t) temp[(unsigned char) 6]));
  4270  0129  086C               	movf	get_calib_param@dev,w
  4271  012A  3E0F               	addlw	15
  4272  012B  0086               	movwf	6
  4273  012C  0187               	clrf	7
  4274  012D  0859               	movf	get_calib_param@temp+6,w
  4275  012E  3FC0               	movwi [0]fsr1
  4276  012F  085A               	movf	get_calib_param@temp+7,w
  4277  0130  3FC1               	movwi [1]fsr1
  4278                           
  4279                           ;bmp280.c: 638: dev->calib_param.dig_p2 = (int16_t) (((int16_t) temp[(unsigned char) 9] 
      +                          << 8);bmp280.c: 639: | ((int16_t) temp[(unsigned char) 8]));
  4280  0131  086C               	movf	get_calib_param@dev,w
  4281  0132  3E11               	addlw	17
  4282  0133  0086               	movwf	6
  4283  0134  0187               	clrf	7
  4284  0135  085B               	movf	get_calib_param@temp+8,w
  4285  0136  3FC0               	movwi [0]fsr1
  4286  0137  085C               	movf	get_calib_param@temp+9,w
  4287  0138  3FC1               	movwi [1]fsr1
  4288                           
  4289                           ;bmp280.c: 640: dev->calib_param.dig_p3 = (int16_t) (((int16_t) temp[(unsigned char) 11]
      +                           << 8);bmp280.c: 641: | ((int16_t) temp[(unsigned char) 10]));
  4290  0139  086C               	movf	get_calib_param@dev,w
  4291  013A  3E13               	addlw	19
  4292  013B  0086               	movwf	6
  4293  013C  0187               	clrf	7
  4294  013D  085D               	movf	get_calib_param@temp+10,w
  4295  013E  3FC0               	movwi [0]fsr1
  4296  013F  085E               	movf	get_calib_param@temp+11,w
  4297  0140  3FC1               	movwi [1]fsr1
  4298                           
  4299                           ;bmp280.c: 642: dev->calib_param.dig_p4 = (int16_t) (((int16_t) temp[(unsigned char) 13]
      +                           << 8);bmp280.c: 643: | ((int16_t) temp[(unsigned char) 12]));
  4300  0141  086C               	movf	get_calib_param@dev,w
  4301  0142  3E15               	addlw	21
  4302  0143  0086               	movwf	6
  4303  0144  0187               	clrf	7
  4304  0145  085F               	movf	get_calib_param@temp+12,w
  4305  0146  3FC0               	movwi [0]fsr1
  4306  0147  0860               	movf	get_calib_param@temp+13,w
  4307  0148  3FC1               	movwi [1]fsr1
  4308                           
  4309                           ;bmp280.c: 644: dev->calib_param.dig_p5 = (int16_t) (((int16_t) temp[(unsigned char) 15]
      +                           << 8);bmp280.c: 645: | ((int16_t) temp[(unsigned char) 14]));
  4310  0149  086C               	movf	get_calib_param@dev,w
  4311  014A  3E17               	addlw	23
  4312  014B  0086               	movwf	6
  4313  014C  0187               	clrf	7
  4314  014D  0861               	movf	get_calib_param@temp+14,w
  4315  014E  3FC0               	movwi [0]fsr1
  4316  014F  0862               	movf	get_calib_param@temp+15,w
  4317  0150  3FC1               	movwi [1]fsr1
  4318                           
  4319                           ;bmp280.c: 646: dev->calib_param.dig_p6 = (int16_t) (((int16_t) temp[(unsigned char) 17]
      +                           << 8);bmp280.c: 647: | ((int16_t) temp[(unsigned char) 16]));
  4320  0151  086C               	movf	get_calib_param@dev,w
  4321  0152  3E19               	addlw	25
  4322  0153  0086               	movwf	6
  4323  0154  0187               	clrf	7
  4324  0155  0863               	movf	get_calib_param@temp+16,w
  4325  0156  3FC0               	movwi [0]fsr1
  4326  0157  0864               	movf	get_calib_param@temp+17,w
  4327  0158  3FC1               	movwi [1]fsr1
  4328                           
  4329                           ;bmp280.c: 648: dev->calib_param.dig_p7 = (int16_t) (((int16_t) temp[(unsigned char) 19]
      +                           << 8);bmp280.c: 649: | ((int16_t) temp[(unsigned char) 18]));
  4330  0159  086C               	movf	get_calib_param@dev,w
  4331  015A  3E1B               	addlw	27
  4332  015B  0086               	movwf	6
  4333  015C  0187               	clrf	7
  4334  015D  0865               	movf	get_calib_param@temp+18,w
  4335  015E  3FC0               	movwi [0]fsr1
  4336  015F  0866               	movf	get_calib_param@temp+19,w
  4337  0160  3FC1               	movwi [1]fsr1
  4338                           
  4339                           ;bmp280.c: 650: dev->calib_param.dig_p8 = (int16_t) (((int16_t) temp[(unsigned char) 21]
      +                           << 8);bmp280.c: 651: | ((int16_t) temp[(unsigned char) 20]));
  4340  0161  086C               	movf	get_calib_param@dev,w
  4341  0162  3E1D               	addlw	29
  4342  0163  0086               	movwf	6
  4343  0164  0187               	clrf	7
  4344  0165  0867               	movf	get_calib_param@temp+20,w
  4345  0166  3FC0               	movwi [0]fsr1
  4346  0167  0868               	movf	get_calib_param@temp+21,w
  4347  0168  3FC1               	movwi [1]fsr1
  4348                           
  4349                           ;bmp280.c: 652: dev->calib_param.dig_p9 = (int16_t) (((int16_t) temp[(unsigned char) 23]
      +                           << 8);bmp280.c: 653: | ((int16_t) temp[(unsigned char) 22]));
  4350  0169  086C               	movf	get_calib_param@dev,w
  4351  016A  3E1F               	addlw	31
  4352  016B  0086               	movwf	6
  4353  016C  0187               	clrf	7
  4354  016D  0869               	movf	get_calib_param@temp+22,w
  4355  016E  3FC0               	movwi [0]fsr1
  4356  016F  086A               	movf	get_calib_param@temp+23,w
  4357  0170  3FC1               	movwi [1]fsr1
  4358  0171                     l2236:	
  4359                           
  4360                           ;bmp280.c: 654: };bmp280.c: 655: };bmp280.c: 657: return rslt;
  4361  0171  086B               	movf	get_calib_param@rslt,w
  4362  0172  0008               	return
  4363  0173                     __end_of_get_calib_param:	
  4364                           
  4365                           	psect	text3
  4366  0259                     __ptext3:	
  4367 ;; *************** function _bmp280_get_regs *****************
  4368 ;; Defined at:
  4369 ;;		line 114 in file "bmp280.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  reg_addr        1    wreg     unsigned char 
  4372 ;;  reg_data        1   38[BANK0 ] PTR unsigned char 
  4373 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4374 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4375 ;;  len             1   39[BANK0 ] unsigned char 
  4376 ;;  dev             1   40[BANK0 ] PTR const struct bmp280_
  4377 ;;		 -> bmp(42), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  reg_addr        1   45[BANK0 ] unsigned char 
  4380 ;;  rslt            1   46[BANK0 ] char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      char 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4390 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;Total ram usage:        9 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    5
  4397 ;; This function calls:
  4398 ;;		_BMP280_SPI_bus_read
  4399 ;;		_null_ptr_check
  4400 ;; This function is called by:
  4401 ;;		_bmp280_init
  4402 ;;		_get_calib_param
  4403 ;;		_bmp280_get_config
  4404 ;;		_bmp280_get_status
  4405 ;;		_bmp280_get_power_mode
  4406 ;;		_bmp280_get_uncomp_data
  4407 ;;		_conf_sensor
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _bmp280_get_regs
  4413  0259                     _bmp280_get_regs:	
  4414                           
  4415                           ;incstack = 0
  4416                           ; Regs used in _bmp280_get_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4417                           ;bmp280_get_regs@reg_addr stored from wreg
  4418  0259  0140               	movlb	0	; select bank0
  4419  025A  00CD               	movwf	bmp280_get_regs@reg_addr
  4420                           
  4421                           ;bmp280.c: 116: int8_t rslt;;bmp280.c: 118: rslt = null_ptr_check(dev);
  4422  025B  0848               	movf	bmp280_get_regs@dev,w
  4423  025C  3183  2353  3182   	fcall	_null_ptr_check
  4424  025F  0140               	movlb	0	; select bank0
  4425  0260  00C9               	movwf	??_bmp280_get_regs
  4426  0261  0849               	movf	??_bmp280_get_regs,w
  4427  0262  00CE               	movwf	bmp280_get_regs@rslt
  4428                           
  4429                           ;bmp280.c: 120: if ((rslt == (0)) && (reg_data != (0))) {
  4430  0263  084E               	movf	bmp280_get_regs@rslt,w
  4431  0264  1D03               	btfss	3,2
  4432  0265  2A9B               	goto	l325
  4433  0266  0846               	movf	bmp280_get_regs@reg_data,w
  4434  0267  1903               	btfsc	3,2
  4435  0268  2A9B               	goto	l325
  4436                           
  4437                           ;bmp280.c: 122: if (dev->intf == (unsigned char) 0)
  4438  0269  0848               	movf	bmp280_get_regs@dev,w
  4439  026A  3E02               	addlw	2
  4440  026B  0086               	movwf	6
  4441  026C  0187               	clrf	7
  4442  026D  0801               	movf	1,w
  4443  026E  1D03               	btfss	3,2
  4444  026F  2A75               	goto	l2156
  4445                           
  4446                           ;bmp280.c: 123: reg_addr = reg_addr | 0x80;
  4447  0270  084D               	movf	bmp280_get_regs@reg_addr,w
  4448  0271  3880               	iorlw	128
  4449  0272  00C9               	movwf	??_bmp280_get_regs
  4450  0273  0849               	movf	??_bmp280_get_regs,w
  4451  0274  00CD               	movwf	bmp280_get_regs@reg_addr
  4452  0275                     l2156:	
  4453                           
  4454                           ;bmp280.c: 125: rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
  4455  0275  0848               	movf	bmp280_get_regs@dev,w
  4456  0276  0086               	movwf	6
  4457  0277  0187               	clrf	7
  4458  0278  3F41               	moviw [1]fsr1
  4459  0279  00F3               	movwf	BMP280_SPI_bus_read@dev_addr
  4460  027A  084D               	movf	bmp280_get_regs@reg_addr,w
  4461  027B  00C9               	movwf	??_bmp280_get_regs
  4462  027C  0849               	movf	??_bmp280_get_regs,w
  4463  027D  00F4               	movwf	BMP280_SPI_bus_read@reg_addr
  4464  027E  0846               	movf	bmp280_get_regs@reg_data,w
  4465  027F  00CA               	movwf	??_bmp280_get_regs+1
  4466  0280  084A               	movf	??_bmp280_get_regs+1,w
  4467  0281  00F5               	movwf	BMP280_SPI_bus_read@reg_data
  4468  0282  0847               	movf	bmp280_get_regs@len,w
  4469  0283  00CB               	movwf	??_bmp280_get_regs+2
  4470  0284  084B               	movf	??_bmp280_get_regs+2,w
  4471  0285  00F6               	movwf	BMP280_SPI_bus_read@cnt
  4472  0286  0848               	movf	bmp280_get_regs@dev,w
  4473  0287  3E03               	addlw	3
  4474  0288  0086               	movwf	6
  4475  0289  0187               	clrf	7
  4476  028A  3F41               	moviw [1]fsr1
  4477  028B  008A               	movwf	10
  4478  028C  3F40               	moviw [0]fsr1
  4479  028D  000A               	callw
  4480  028E  3182               	pagesel	$
  4481  028F  0140               	movlb	0	; select bank0
  4482  0290  00CC               	movwf	??_bmp280_get_regs+3
  4483  0291  084C               	movf	??_bmp280_get_regs+3,w
  4484  0292  00CE               	movwf	bmp280_get_regs@rslt
  4485                           
  4486                           ;bmp280.c: 127: if (rslt != (0))
  4487  0293  084E               	movf	bmp280_get_regs@rslt,w
  4488  0294  1903               	btfsc	3,2
  4489  0295  2A9D               	goto	l2162
  4490                           
  4491                           ;bmp280.c: 128: rslt = (-4);
  4492  0296  30FC               	movlw	252
  4493  0297  00C9               	movwf	??_bmp280_get_regs
  4494  0298  0849               	movf	??_bmp280_get_regs,w
  4495  0299  00CE               	movwf	bmp280_get_regs@rslt
  4496                           
  4497                           ;bmp280.c: 129: } else {
  4498  029A  2A9D               	goto	l2162
  4499  029B                     l325:	
  4500                           
  4501                           ;bmp280.c: 130: rslt = (-1);
  4502  029B  01CE               	clrf	bmp280_get_regs@rslt
  4503  029C  03CE               	decf	bmp280_get_regs@rslt,f
  4504  029D                     l2162:	
  4505                           
  4506                           ;bmp280.c: 131: };bmp280.c: 133: return rslt;
  4507  029D  084E               	movf	bmp280_get_regs@rslt,w
  4508  029E  0008               	return
  4509  029F                     __end_of_bmp280_get_regs:	
  4510                           
  4511                           	psect	text4
  4512  0206                     __ptext4:	
  4513 ;; *************** function _BMP280_SPI_bus_read *****************
  4514 ;; Defined at:
  4515 ;;		line 35 in file "main.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  dev_addr        1    3[COMMON] unsigned char 
  4518 ;;  reg_addr        1    4[COMMON] unsigned char 
  4519 ;;  reg_data        1    5[COMMON] PTR unsigned char 
  4520 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4521 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4522 ;;  cnt             1    6[COMMON] unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  array          30    2[BANK0 ] char [30]
  4525 ;;  iError          4   32[BANK0 ] long 
  4526 ;;  stringpos       1   37[BANK0 ] unsigned char 
  4527 ;;  i               1   36[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      char 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Totals:         4      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;Total ram usage:       42 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    4
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;;		_bmp280_get_regs
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _BMP280_SPI_bus_read
  4554  0206                     _BMP280_SPI_bus_read:	
  4555                           
  4556                           ;main.c: 37: _delay((unsigned long)((1)*(4000000/4000.0)));
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _BMP280_SPI_bus_read: [wreg-fsr1h+status,2+status,0]
  4560  0206  30C8               	movlw	200
  4561  0207                     u3147:	
  4562  0207  3200               	nop2
  4563  0208  0B89               	decfsz	9,f
  4564  0209  2A07               	goto	u3147
  4565                           
  4566                           ;main.c: 38: int32_t iError=(0);
  4567  020A  3000               	movlw	0
  4568  020B  0140               	movlb	0	; select bank0
  4569  020C  00C3               	movwf	BMP280_SPI_bus_read@iError+3
  4570  020D  3000               	movlw	0
  4571  020E  00C2               	movwf	BMP280_SPI_bus_read@iError+2
  4572  020F  3000               	movlw	0
  4573  0210  00C1               	movwf	BMP280_SPI_bus_read@iError+1
  4574  0211  3000               	movlw	0
  4575  0212  00C0               	movwf	BMP280_SPI_bus_read@iError
  4576                           
  4577                           ;main.c: 39: int8_t array[30]={0xFF};
  4578  0213  3020               	movlw	low BMP280_SPI_bus_read@F6557
  4579  0214  0086               	movwf	6
  4580  0215  3001               	movlw	high BMP280_SPI_bus_read@F6557
  4581  0216  0087               	movwf	7
  4582  0217  3022               	movlw	low BMP280_SPI_bus_read@array
  4583  0218  0084               	movwf	4
  4584  0219  3000               	movlw	high BMP280_SPI_bus_read@array
  4585  021A  0085               	movwf	5
  4586  021B  301E               	movlw	30
  4587  021C  00A0               	movwf	??_BMP280_SPI_bus_read
  4588  021D                     u2200:	
  4589  021D  0016               	moviw fsr1++
  4590  021E  001A               	movwi fsr0++
  4591  021F  0BA0               	decfsz	??_BMP280_SPI_bus_read,f
  4592  0220  2A1D               	goto	u2200
  4593                           
  4594                           ;main.c: 40: uint8_t stringpos;;main.c: 41: array[0] = reg_addr|0x80;
  4595  0221  0874               	movf	BMP280_SPI_bus_read@reg_addr,w
  4596  0222  3880               	iorlw	-128
  4597  0223  00A0               	movwf	??_BMP280_SPI_bus_read
  4598  0224  0820               	movf	??_BMP280_SPI_bus_read,w
  4599  0225  00A2               	movwf	BMP280_SPI_bus_read@array
  4600                           
  4601                           ;main.c: 43: uint8_t i;;main.c: 45: for (i=0; i<cnt+1; i++){
  4602  0226  01C4               	clrf	BMP280_SPI_bus_read@i
  4603  0227                     l2106:	
  4604  0227  0876               	movf	BMP280_SPI_bus_read@cnt,w
  4605  0228  3E01               	addlw	1
  4606  0229  00A0               	movwf	??_BMP280_SPI_bus_read
  4607  022A  3000               	movlw	0
  4608  022B  1803               	skipnc
  4609  022C  3001               	movlw	1
  4610  022D  00A1               	movwf	??_BMP280_SPI_bus_read+1
  4611  022E  0821               	movf	??_BMP280_SPI_bus_read+1,w
  4612  022F  3A80               	xorlw	128
  4613  0230  3C80               	sublw	128
  4614  0231  1D03               	skipz
  4615  0232  2A35               	goto	u2215
  4616  0233  0820               	movf	??_BMP280_SPI_bus_read,w
  4617  0234  0244               	subwf	BMP280_SPI_bus_read@i,w
  4618  0235                     u2215:	
  4619  0235  1803               	btfsc	3,0
  4620  0236  2A3D               	goto	l2108
  4621  0237  3001               	movlw	1
  4622  0238  0140               	movlb	0	; select bank0
  4623  0239  00A0               	movwf	??_BMP280_SPI_bus_read
  4624  023A  0820               	movf	??_BMP280_SPI_bus_read,w
  4625  023B  07C4               	addwf	BMP280_SPI_bus_read@i,f
  4626  023C  2A27               	goto	l2106
  4627  023D                     l2108:	
  4628                           
  4629                           ;main.c: 47: };main.c: 50: for (stringpos = 0; stringpos < cnt; stringpos++) {
  4630  023D  0140               	movlb	0	; select bank0
  4631  023E  01C5               	clrf	BMP280_SPI_bus_read@stringpos
  4632  023F                     l2114:	
  4633  023F  0876               	movf	BMP280_SPI_bus_read@cnt,w
  4634  0240  0245               	subwf	BMP280_SPI_bus_read@stringpos,w
  4635  0241  1803               	btfsc	3,0
  4636  0242  2A57               	goto	l2116
  4637                           
  4638                           ;main.c: 51: *(reg_data + stringpos) = array[stringpos+1];
  4639  0243  0845               	movf	BMP280_SPI_bus_read@stringpos,w
  4640  0244  3E01               	addlw	1
  4641  0245  3E22               	addlw	(low (BMP280_SPI_bus_read@array| 0))& (0+255)
  4642  0246  0086               	movwf	6
  4643  0247  0187               	clrf	7
  4644  0248  0801               	movf	1,w
  4645  0249  00A0               	movwf	??_BMP280_SPI_bus_read
  4646  024A  0845               	movf	BMP280_SPI_bus_read@stringpos,w
  4647  024B  0775               	addwf	BMP280_SPI_bus_read@reg_data,w
  4648  024C  00A1               	movwf	??_BMP280_SPI_bus_read+1
  4649  024D  0821               	movf	??_BMP280_SPI_bus_read+1,w
  4650  024E  0086               	movwf	6
  4651  024F  0187               	clrf	7
  4652  0250  0820               	movf	??_BMP280_SPI_bus_read,w
  4653  0251  0081               	movwf	1
  4654  0252  3001               	movlw	1
  4655  0253  00A0               	movwf	??_BMP280_SPI_bus_read
  4656  0254  0820               	movf	??_BMP280_SPI_bus_read,w
  4657  0255  07C5               	addwf	BMP280_SPI_bus_read@stringpos,f
  4658  0256  2A3F               	goto	l2114
  4659  0257                     l2116:	
  4660                           
  4661                           ;main.c: 52: };main.c: 53: return (int8_t)iError;
  4662  0257  0840               	movf	BMP280_SPI_bus_read@iError,w
  4663  0258  0008               	return
  4664  0259                     __end_of_BMP280_SPI_bus_read:	
  4665                           
  4666                           	psect	text5
  4667  029F                     __ptext5:	
  4668 ;; *************** function _bmp280_soft_reset *****************
  4669 ;; Defined at:
  4670 ;;		line 189 in file "bmp280.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  dev             1    wreg     PTR const struct bmp280_
  4673 ;;		 -> bmp(42), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  dev             1   30[BANK0 ] PTR const struct bmp280_
  4676 ;;		 -> bmp(42), 
  4677 ;;  reg_addr        1   29[BANK0 ] unsigned char 
  4678 ;;  rslt            1   28[BANK0 ] char 
  4679 ;;  soft_rst_cmd    1   27[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      char 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:        7 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    6
  4696 ;; This function calls:
  4697 ;;		_BMP280_delay_msek
  4698 ;;		_bmp280_set_regs
  4699 ;;		_null_ptr_check
  4700 ;; This function is called by:
  4701 ;;		_bmp280_init
  4702 ;;		_conf_sensor
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _bmp280_soft_reset
  4708  029F                     _bmp280_soft_reset:	
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _bmp280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4712                           ;bmp280_soft_reset@dev stored from wreg
  4713  029F  0140               	movlb	0	; select bank0
  4714  02A0  00BE               	movwf	bmp280_soft_reset@dev
  4715                           
  4716                           ;bmp280.c: 191: int8_t rslt;;bmp280.c: 192: uint8_t reg_addr = (unsigned char) 0xE0;
  4717  02A1  30E0               	movlw	224
  4718  02A2  00B8               	movwf	??_bmp280_soft_reset
  4719  02A3  0838               	movf	??_bmp280_soft_reset,w
  4720  02A4  00BD               	movwf	bmp280_soft_reset@reg_addr
  4721                           
  4722                           ;bmp280.c: 193: uint8_t soft_rst_cmd = (unsigned char) 0xB6;
  4723  02A5  30B6               	movlw	182
  4724  02A6  00B8               	movwf	??_bmp280_soft_reset
  4725  02A7  0838               	movf	??_bmp280_soft_reset,w
  4726  02A8  00BB               	movwf	bmp280_soft_reset@soft_rst_cmd
  4727                           
  4728                           ;bmp280.c: 195: rslt = null_ptr_check(dev);
  4729  02A9  083E               	movf	bmp280_soft_reset@dev,w
  4730  02AA  3183  2353  3182   	fcall	_null_ptr_check
  4731  02AD  0140               	movlb	0	; select bank0
  4732  02AE  00B8               	movwf	??_bmp280_soft_reset
  4733  02AF  0838               	movf	??_bmp280_soft_reset,w
  4734  02B0  00BC               	movwf	bmp280_soft_reset@rslt
  4735                           
  4736                           ;bmp280.c: 197: if (rslt == (0)) {
  4737  02B1  083C               	movf	bmp280_soft_reset@rslt,w
  4738  02B2  1D03               	btfss	3,2
  4739  02B3  2AD7               	goto	l2220
  4740                           
  4741                           ;bmp280.c: 198: rslt = bmp280_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
  4742  02B4  303B               	movlw	(low (bmp280_soft_reset@soft_rst_cmd| 0))& (0+255)
  4743  02B5  00B8               	movwf	??_bmp280_soft_reset
  4744  02B6  0838               	movf	??_bmp280_soft_reset,w
  4745  02B7  00A4               	movwf	bmp280_set_regs@reg_data
  4746  02B8  01A5               	clrf	bmp280_set_regs@len
  4747  02B9  0AA5               	incf	bmp280_set_regs@len,f
  4748  02BA  083E               	movf	bmp280_soft_reset@dev,w
  4749  02BB  00B9               	movwf	??_bmp280_soft_reset+1
  4750  02BC  0839               	movf	??_bmp280_soft_reset+1,w
  4751  02BD  00A6               	movwf	bmp280_set_regs@dev
  4752  02BE  303D               	movlw	(low (bmp280_soft_reset@reg_addr| 0))& (0+255)
  4753  02BF  3181  2173  3182   	fcall	_bmp280_set_regs
  4754  02C2  0140               	movlb	0	; select bank0
  4755  02C3  00BA               	movwf	??_bmp280_soft_reset+2
  4756  02C4  083A               	movf	??_bmp280_soft_reset+2,w
  4757  02C5  00BC               	movwf	bmp280_soft_reset@rslt
  4758                           
  4759                           ;bmp280.c: 201: dev->delay_ms(2);
  4760  02C6  3000               	movlw	0
  4761  02C7  00F6               	movwf	BMP280_delay_msek@msek+3
  4762  02C8  3000               	movlw	0
  4763  02C9  00F5               	movwf	BMP280_delay_msek@msek+2
  4764  02CA  3000               	movlw	0
  4765  02CB  00F4               	movwf	BMP280_delay_msek@msek+1
  4766  02CC  3002               	movlw	2
  4767  02CD  00F3               	movwf	BMP280_delay_msek@msek
  4768  02CE  083E               	movf	bmp280_soft_reset@dev,w
  4769  02CF  3E07               	addlw	7
  4770  02D0  0086               	movwf	6
  4771  02D1  0187               	clrf	7
  4772  02D2  3F41               	moviw [1]fsr1
  4773  02D3  008A               	movwf	10
  4774  02D4  3F40               	moviw [0]fsr1
  4775  02D5  000A               	callw
  4776  02D6  3182               	pagesel	$
  4777  02D7                     l2220:	
  4778                           
  4779                           ;bmp280.c: 202: };bmp280.c: 204: return rslt;
  4780  02D7  0140               	movlb	0	; select bank0
  4781  02D8  083C               	movf	bmp280_soft_reset@rslt,w
  4782  02D9  0008               	return
  4783  02DA                     __end_of_bmp280_soft_reset:	
  4784                           
  4785                           	psect	text6
  4786  0173                     __ptext6:	
  4787 ;; *************** function _bmp280_set_regs *****************
  4788 ;; Defined at:
  4789 ;;		line 140 in file "bmp280.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  reg_addr        1    wreg     PTR unsigned char 
  4792 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4793 ;;  reg_data        1    4[BANK0 ] PTR const unsigned char 
  4794 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  4795 ;;  len             1    5[BANK0 ] unsigned char 
  4796 ;;  dev             1    6[BANK0 ] PTR const struct bmp280_
  4797 ;;		 -> bmp(42), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  reg_addr        1   23[BANK0 ] PTR unsigned char 
  4800 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4801 ;;  temp_buff       8   11[BANK0 ] unsigned char [8]
  4802 ;;  temp_len        2   19[BANK0 ] unsigned int 
  4803 ;;  rslt            1   22[BANK0 ] char 
  4804 ;;  reg_addr_cnt    1   21[BANK0 ] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      char 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4814 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;Total ram usage:       20 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    5
  4821 ;; This function calls:
  4822 ;;		_BMP280_SPI_bus_write
  4823 ;;		_interleave_data
  4824 ;;		_null_ptr_check
  4825 ;; This function is called by:
  4826 ;;		_bmp280_soft_reset
  4827 ;;		_conf_sensor
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _bmp280_set_regs
  4833  0173                     _bmp280_set_regs:	
  4834                           
  4835                           ;incstack = 0
  4836                           ; Regs used in _bmp280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4837                           ;bmp280_set_regs@reg_addr stored from wreg
  4838  0173  0140               	movlb	0	; select bank0
  4839  0174  00B7               	movwf	bmp280_set_regs@reg_addr
  4840                           
  4841                           ;bmp280.c: 142: int8_t rslt;;bmp280.c: 143: uint8_t temp_buff[8];;bmp280.c: 144: uint16_
      +                          t temp_len;;bmp280.c: 145: uint8_t reg_addr_cnt;;bmp280.c: 147: if (len > 4)
  4842  0175  3005               	movlw	5
  4843  0176  0225               	subwf	bmp280_set_regs@len,w
  4844  0177  1C03               	skipc
  4845  0178  297D               	goto	l2170
  4846                           
  4847                           ;bmp280.c: 148: len = 4;
  4848  0179  3004               	movlw	4
  4849  017A  00A7               	movwf	??_bmp280_set_regs
  4850  017B  0827               	movf	??_bmp280_set_regs,w
  4851  017C  00A5               	movwf	bmp280_set_regs@len
  4852  017D                     l2170:	
  4853                           
  4854                           ;bmp280.c: 150: rslt = null_ptr_check(dev);
  4855  017D  0826               	movf	bmp280_set_regs@dev,w
  4856  017E  3183  2353  3181   	fcall	_null_ptr_check
  4857  0181  0140               	movlb	0	; select bank0
  4858  0182  00A7               	movwf	??_bmp280_set_regs
  4859  0183  0827               	movf	??_bmp280_set_regs,w
  4860  0184  00B6               	movwf	bmp280_set_regs@rslt
  4861                           
  4862                           ;bmp280.c: 152: if ((rslt == (0)) && (reg_addr != (0)) && (reg_data != (0))) {
  4863  0185  0836               	movf	bmp280_set_regs@rslt,w
  4864  0186  1D03               	btfss	3,2
  4865  0187  2A02               	goto	l333
  4866  0188  0837               	movf	bmp280_set_regs@reg_addr,w
  4867  0189  1903               	btfsc	3,2
  4868  018A  2A02               	goto	l333
  4869  018B  0824               	movf	bmp280_set_regs@reg_data,w
  4870  018C  1903               	btfsc	3,2
  4871  018D  2A02               	goto	l333
  4872                           
  4873                           ;bmp280.c: 153: if (len != 0) {
  4874  018E  0825               	movf	bmp280_set_regs@len,w
  4875  018F  1903               	btfsc	3,2
  4876  0190  29FD               	goto	l2206
  4877                           
  4878                           ;bmp280.c: 154: temp_buff[0] = reg_data[0];
  4879  0191  0824               	movf	bmp280_set_regs@reg_data,w
  4880  0192  0086               	movwf	6
  4881  0193  0187               	clrf	7
  4882  0194  0801               	movf	1,w
  4883  0195  00A7               	movwf	??_bmp280_set_regs
  4884  0196  0827               	movf	??_bmp280_set_regs,w
  4885  0197  00AB               	movwf	bmp280_set_regs@temp_buff
  4886                           
  4887                           ;bmp280.c: 156: if (dev->intf == (unsigned char) 0) {
  4888  0198  0826               	movf	bmp280_set_regs@dev,w
  4889  0199  3E02               	addlw	2
  4890  019A  0086               	movwf	6
  4891  019B  0187               	clrf	7
  4892  019C  0801               	movf	1,w
  4893  019D  1D03               	btfss	3,2
  4894  019E  29BA               	goto	l2192
  4895                           
  4896                           ;bmp280.c: 159: for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
  4897  019F  01B5               	clrf	bmp280_set_regs@reg_addr_cnt
  4898  01A0                     l2190:	
  4899  01A0  0825               	movf	bmp280_set_regs@len,w
  4900  01A1  0235               	subwf	bmp280_set_regs@reg_addr_cnt,w
  4901  01A2  1803               	btfsc	3,0
  4902  01A3  29BA               	goto	l2192
  4903                           
  4904                           ;bmp280.c: 160: reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
  4905  01A4  0835               	movf	bmp280_set_regs@reg_addr_cnt,w
  4906  01A5  0737               	addwf	bmp280_set_regs@reg_addr,w
  4907  01A6  00A7               	movwf	??_bmp280_set_regs
  4908  01A7  0827               	movf	??_bmp280_set_regs,w
  4909  01A8  0086               	movwf	6
  4910  01A9  0187               	clrf	7
  4911  01AA  0801               	movf	1,w
  4912  01AB  397F               	andlw	127
  4913  01AC  00A8               	movwf	??_bmp280_set_regs+1
  4914  01AD  0835               	movf	bmp280_set_regs@reg_addr_cnt,w
  4915  01AE  0737               	addwf	bmp280_set_regs@reg_addr,w
  4916  01AF  00A9               	movwf	??_bmp280_set_regs+2
  4917  01B0  0829               	movf	??_bmp280_set_regs+2,w
  4918  01B1  0086               	movwf	6
  4919  01B2  0187               	clrf	7
  4920  01B3  0828               	movf	??_bmp280_set_regs+1,w
  4921  01B4  0081               	movwf	1
  4922  01B5  3001               	movlw	1
  4923  01B6  00A7               	movwf	??_bmp280_set_regs
  4924  01B7  0827               	movf	??_bmp280_set_regs,w
  4925  01B8  07B5               	addwf	bmp280_set_regs@reg_addr_cnt,f
  4926  01B9  29A0               	goto	l2190
  4927  01BA                     l2192:	
  4928                           
  4929                           ;bmp280.c: 161: };bmp280.c: 164: if (len > 1) {
  4930  01BA  3002               	movlw	2
  4931  01BB  0225               	subwf	bmp280_set_regs@len,w
  4932  01BC  1C03               	skipc
  4933  01BD  29DA               	goto	l2198
  4934                           
  4935                           ;bmp280.c: 166: interleave_data(reg_addr, temp_buff, reg_data, len);
  4936  01BE  302B               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  4937  01BF  00A7               	movwf	??_bmp280_set_regs
  4938  01C0  0827               	movf	??_bmp280_set_regs,w
  4939  01C1  00F3               	movwf	interleave_data@temp_buff
  4940  01C2  0824               	movf	bmp280_set_regs@reg_data,w
  4941  01C3  00A8               	movwf	??_bmp280_set_regs+1
  4942  01C4  0828               	movf	??_bmp280_set_regs+1,w
  4943  01C5  00F4               	movwf	interleave_data@reg_data
  4944  01C6  0825               	movf	bmp280_set_regs@len,w
  4945  01C7  00A9               	movwf	??_bmp280_set_regs+2
  4946  01C8  0829               	movf	??_bmp280_set_regs+2,w
  4947  01C9  00F5               	movwf	interleave_data@len
  4948  01CA  0837               	movf	bmp280_set_regs@reg_addr,w
  4949  01CB  3182  22DA  3181   	fcall	_interleave_data
  4950                           
  4951                           ;bmp280.c: 167: temp_len = ((len * 2) - 1);
  4952  01CE  0140               	movlb	0	; select bank0
  4953  01CF  0825               	movf	bmp280_set_regs@len,w
  4954  01D0  00A7               	movwf	??_bmp280_set_regs
  4955  01D1  01A8               	clrf	??_bmp280_set_regs+1
  4956  01D2  35A7               	lslf	??_bmp280_set_regs,f
  4957  01D3  0DA8               	rlf	??_bmp280_set_regs+1,f
  4958  01D4  0827               	movf	??_bmp280_set_regs,w
  4959  01D5  3EFF               	addlw	255
  4960  01D6  00B3               	movwf	bmp280_set_regs@temp_len
  4961  01D7  30FF               	movlw	255
  4962  01D8  3D28               	addwfc	??_bmp280_set_regs+1,w
  4963  01D9  29E0               	goto	L1
  4964  01DA                     l2198:	
  4965                           ;bmp280.c: 168: } else {
  4966                           
  4967                           
  4968                           ;bmp280.c: 169: temp_len = len;
  4969  01DA  0825               	movf	bmp280_set_regs@len,w
  4970  01DB  00A7               	movwf	??_bmp280_set_regs
  4971  01DC  01A8               	clrf	??_bmp280_set_regs+1
  4972  01DD  0827               	movf	??_bmp280_set_regs,w
  4973  01DE  00B3               	movwf	bmp280_set_regs@temp_len
  4974  01DF  0828               	movf	??_bmp280_set_regs+1,w
  4975  01E0                     L1:	
  4976  01E0  00B4               	movwf	bmp280_set_regs@temp_len+1
  4977                           
  4978                           ;bmp280.c: 170: };bmp280.c: 172: rslt = BMP280_SPI_bus_write(0, reg_addr[0], temp_buff, 
      +                          temp_len);
  4979  01E1  01F3               	clrf	BMP280_SPI_bus_write@dev_addr
  4980  01E2  0837               	movf	bmp280_set_regs@reg_addr,w
  4981  01E3  0086               	movwf	6
  4982  01E4  0187               	clrf	7
  4983  01E5  0801               	movf	1,w
  4984  01E6  00A7               	movwf	??_bmp280_set_regs
  4985  01E7  0827               	movf	??_bmp280_set_regs,w
  4986  01E8  00F4               	movwf	BMP280_SPI_bus_write@reg_addr
  4987  01E9  302B               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  4988  01EA  00A8               	movwf	??_bmp280_set_regs+1
  4989  01EB  0828               	movf	??_bmp280_set_regs+1,w
  4990  01EC  00F5               	movwf	BMP280_SPI_bus_write@reg_data
  4991  01ED  0833               	movf	bmp280_set_regs@temp_len,w
  4992  01EE  00A9               	movwf	??_bmp280_set_regs+2
  4993  01EF  0829               	movf	??_bmp280_set_regs+2,w
  4994  01F0  00F6               	movwf	BMP280_SPI_bus_write@cnt
  4995  01F1  3184  2417  3181   	fcall	_BMP280_SPI_bus_write
  4996  01F4  0140               	movlb	0	; select bank0
  4997  01F5  00AA               	movwf	??_bmp280_set_regs+3
  4998  01F6  082A               	movf	??_bmp280_set_regs+3,w
  4999  01F7  00B6               	movwf	bmp280_set_regs@rslt
  5000                           
  5001                           ;bmp280.c: 174: if (rslt != (0))
  5002  01F8  0836               	movf	bmp280_set_regs@rslt,w
  5003  01F9  1903               	btfsc	3,2
  5004  01FA  2A04               	goto	l2208
  5005                           
  5006                           ;bmp280.c: 175: rslt = (-4);
  5007  01FB  30FC               	movlw	252
  5008  01FC  29FE               	goto	L2
  5009  01FD                     l2206:	
  5010                           ;bmp280.c: 176: } else {
  5011                           
  5012                           
  5013                           ;bmp280.c: 177: rslt = (-3);
  5014  01FD  30FD               	movlw	253
  5015  01FE                     L2:	
  5016  01FE  00A7               	movwf	??_bmp280_set_regs
  5017  01FF  0827               	movf	??_bmp280_set_regs,w
  5018  0200  00B6               	movwf	bmp280_set_regs@rslt
  5019                           
  5020                           ;bmp280.c: 178: };bmp280.c: 179: } else {
  5021  0201  2A04               	goto	l2208
  5022  0202                     l333:	
  5023                           
  5024                           ;bmp280.c: 180: rslt = (-1);
  5025  0202  01B6               	clrf	bmp280_set_regs@rslt
  5026  0203  03B6               	decf	bmp280_set_regs@rslt,f
  5027  0204                     l2208:	
  5028                           
  5029                           ;bmp280.c: 181: };bmp280.c: 183: return rslt;
  5030  0204  0836               	movf	bmp280_set_regs@rslt,w
  5031  0205  0008               	return
  5032  0206                     __end_of_bmp280_set_regs:	
  5033                           
  5034                           	psect	text7
  5035  0353                     __ptext7:	
  5036 ;; *************** function _null_ptr_check *****************
  5037 ;; Defined at:
  5038 ;;		line 587 in file "bmp280.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  dev             1    wreg     PTR const struct bmp280_
  5041 ;;		 -> bmp(42), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  dev             1    6[COMMON] PTR const struct bmp280_
  5044 ;;		 -> bmp(42), 
  5045 ;;  rslt            1    5[COMMON] char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      char 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:        4 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    4
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_bmp280_get_regs
  5066 ;;		_bmp280_set_regs
  5067 ;;		_bmp280_soft_reset
  5068 ;;		_bmp280_init
  5069 ;;		_get_calib_param
  5070 ;;		_bmp280_get_config
  5071 ;;		_bmp280_get_status
  5072 ;;		_bmp280_get_power_mode
  5073 ;;		_bmp280_set_power_mode
  5074 ;;		_bmp280_get_uncomp_data
  5075 ;;		_bmp280_comp_temp_32bit
  5076 ;;		_bmp280_comp_pres_32bit
  5077 ;;		_bmp280_compute_meas_time
  5078 ;;		_conf_sensor
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _null_ptr_check
  5084  0353                     _null_ptr_check:	
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
  5088                           ;null_ptr_check@dev stored from wreg
  5089  0353  00F6               	movwf	null_ptr_check@dev
  5090                           
  5091                           ;bmp280.c: 589: int8_t rslt;;bmp280.c: 591: if ((dev == (0)) || (dev->read == (0)) || (d
      +                          ev->write == (0)) || (dev->delay_ms == (0))) {
  5092  0354  0876               	movf	null_ptr_check@dev,w
  5093  0355  1903               	btfsc	3,2
  5094  0356  2B6F               	goto	l422
  5095  0357  0876               	movf	null_ptr_check@dev,w
  5096  0358  3E03               	addlw	3
  5097  0359  0086               	movwf	6
  5098  035A  0187               	clrf	7
  5099  035B  0016               	moviw fsr1++
  5100  035C  0401               	iorwf	1,w
  5101  035D  1903               	btfsc	3,2
  5102  035E  2B6F               	goto	l422
  5103  035F  0876               	movf	null_ptr_check@dev,w
  5104  0360  3E05               	addlw	5
  5105  0361  0086               	movwf	6
  5106  0362  0187               	clrf	7
  5107  0363  0016               	moviw fsr1++
  5108  0364  0401               	iorwf	1,w
  5109  0365  1903               	btfsc	3,2
  5110  0366  2B6F               	goto	l422
  5111  0367  0876               	movf	null_ptr_check@dev,w
  5112  0368  3E07               	addlw	7
  5113  0369  0086               	movwf	6
  5114  036A  0187               	clrf	7
  5115  036B  0016               	moviw fsr1++
  5116  036C  0401               	iorwf	1,w
  5117  036D  1D03               	btfss	3,2
  5118  036E  2B72               	goto	l2132
  5119  036F                     l422:	
  5120                           
  5121                           ;bmp280.c: 593: rslt = (-1);
  5122  036F  01F5               	clrf	null_ptr_check@rslt
  5123  0370  03F5               	decf	null_ptr_check@rslt,f
  5124                           
  5125                           ;bmp280.c: 594: } else {
  5126  0371  2B73               	goto	l2134
  5127  0372                     l2132:	
  5128                           
  5129                           ;bmp280.c: 595: rslt = (0);
  5130  0372  01F5               	clrf	null_ptr_check@rslt
  5131  0373                     l2134:	
  5132                           
  5133                           ;bmp280.c: 596: };bmp280.c: 598: return rslt;
  5134  0373  0875               	movf	null_ptr_check@rslt,w
  5135  0374  0008               	return
  5136  0375                     __end_of_null_ptr_check:	
  5137                           
  5138                           	psect	text8
  5139  02DA                     __ptext8:	
  5140 ;; *************** function _interleave_data *****************
  5141 ;; Defined at:
  5142 ;;		line 605 in file "bmp280.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  reg_addr        1    wreg     PTR const unsigned char 
  5145 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5146 ;;  temp_buff       1    3[COMMON] PTR unsigned char 
  5147 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5148 ;;  reg_data        1    4[COMMON] PTR const unsigned char 
  5149 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  5150 ;;  len             1    5[COMMON] unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
  5153 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5154 ;;  index           1    7[COMMON] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5164 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    4
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_bmp280_set_regs
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _interleave_data
  5180  02DA                     _interleave_data:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _interleave_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  5184                           ;interleave_data@reg_addr stored from wreg
  5185  02DA  00F6               	movwf	interleave_data@reg_addr
  5186                           
  5187                           ;bmp280.c: 607: uint8_t index;;bmp280.c: 609: for (index = 1; index < len; index++) {
  5188  02DB  01F7               	clrf	interleave_data@index
  5189  02DC  0AF7               	incf	interleave_data@index,f
  5190  02DD                     l2144:	
  5191  02DD  0875               	movf	interleave_data@len,w
  5192  02DE  0277               	subwf	interleave_data@index,w
  5193  02DF  1803               	btfsc	3,0
  5194  02E0  0008               	return
  5195                           
  5196                           ;bmp280.c: 610: temp_buff[(index * 2) - 1] = reg_addr[index];
  5197  02E1  0877               	movf	interleave_data@index,w
  5198  02E2  0776               	addwf	interleave_data@reg_addr,w
  5199  02E3  0140               	movlb	0	; select bank0
  5200  02E4  00A0               	movwf	??_interleave_data
  5201  02E5  0820               	movf	??_interleave_data,w
  5202  02E6  0086               	movwf	6
  5203  02E7  0187               	clrf	7
  5204  02E8  0801               	movf	1,w
  5205  02E9  00A1               	movwf	??_interleave_data+1
  5206  02EA  3577               	lslf	interleave_data@index,w
  5207  02EB  3EFF               	addlw	-1
  5208  02EC  0773               	addwf	interleave_data@temp_buff,w
  5209  02ED  00A2               	movwf	??_interleave_data+2
  5210  02EE  0822               	movf	??_interleave_data+2,w
  5211  02EF  0086               	movwf	6
  5212  02F0  0187               	clrf	7
  5213  02F1  0821               	movf	??_interleave_data+1,w
  5214  02F2  0081               	movwf	1
  5215                           
  5216                           ;bmp280.c: 611: temp_buff[index * 2] = reg_data[index];
  5217  02F3  0877               	movf	interleave_data@index,w
  5218  02F4  0774               	addwf	interleave_data@reg_data,w
  5219  02F5  00A0               	movwf	??_interleave_data
  5220  02F6  0820               	movf	??_interleave_data,w
  5221  02F7  0086               	movwf	6
  5222  02F8  0187               	clrf	7
  5223  02F9  0801               	movf	1,w
  5224  02FA  00A1               	movwf	??_interleave_data+1
  5225  02FB  3577               	lslf	interleave_data@index,w
  5226  02FC  0773               	addwf	interleave_data@temp_buff,w
  5227  02FD  00A2               	movwf	??_interleave_data+2
  5228  02FE  0822               	movf	??_interleave_data+2,w
  5229  02FF  0086               	movwf	6
  5230  0300  0187               	clrf	7
  5231  0301  0821               	movf	??_interleave_data+1,w
  5232  0302  0081               	movwf	1
  5233  0303  3001               	movlw	1
  5234  0304  00A0               	movwf	??_interleave_data
  5235  0305  0820               	movf	??_interleave_data,w
  5236  0306  07F7               	addwf	interleave_data@index,f
  5237  0307  2ADD               	goto	l2144
  5238  0308                     __end_of_interleave_data:	
  5239                           
  5240                           	psect	text9
  5241  0417                     __ptext9:	
  5242 ;; *************** function _BMP280_SPI_bus_write *****************
  5243 ;; Defined at:
  5244 ;;		line 56 in file "main.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  dev_addr        1    3[COMMON] unsigned char 
  5247 ;;  reg_addr        1    4[COMMON] unsigned char 
  5248 ;;  reg_data        1    5[COMMON] PTR unsigned char 
  5249 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5250 ;;  cnt             1    6[COMMON] unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  iError          4    0[BANK0 ] long 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      char 
  5255 ;; Registers used:
  5256 ;;		wreg
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;Total ram usage:        8 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    4
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;;		_bmp280_set_regs
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _BMP280_SPI_bus_write
  5279  0417                     _BMP280_SPI_bus_write:	
  5280                           
  5281                           ;main.c: 58: int32_t iError=(0);
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _BMP280_SPI_bus_write: [wreg]
  5285  0417  3000               	movlw	0
  5286  0418  0140               	movlb	0	; select bank0
  5287  0419  00A3               	movwf	BMP280_SPI_bus_write@iError+3
  5288  041A  3000               	movlw	0
  5289  041B  00A2               	movwf	BMP280_SPI_bus_write@iError+2
  5290  041C  3000               	movlw	0
  5291  041D  00A1               	movwf	BMP280_SPI_bus_write@iError+1
  5292  041E  3000               	movlw	0
  5293  041F  00A0               	movwf	BMP280_SPI_bus_write@iError
  5294                           
  5295                           ;main.c: 69: return (int8_t)iError;
  5296  0420  0820               	movf	BMP280_SPI_bus_write@iError,w
  5297  0421  0008               	return
  5298  0422                     __end_of_BMP280_SPI_bus_write:	
  5299                           
  5300                           	psect	text10
  5301  0476                     __ptext10:	
  5302 ;; *************** function _BMP280_delay_msek *****************
  5303 ;; Defined at:
  5304 ;;		line 30 in file "main.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  msek            4    3[COMMON] unsigned long 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		None
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;Total ram usage:        4 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    4
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;;		_bmp280_soft_reset
  5330 ;;		_bmp280_init
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _BMP280_delay_msek
  5336  0476                     _BMP280_delay_msek:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _BMP280_delay_msek: []
  5340  0476  0008               	return
  5341  0477                     __end_of_BMP280_delay_msek:	
  5342                           
  5343                           	psect	text11
  5344  0471                     __ptext11:	
  5345 ;; *************** function _TMR0_StartTimer *****************
  5346 ;; Defined at:
  5347 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		None
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    4
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_main
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _TMR0_StartTimer
  5377  0471                     _TMR0_StartTimer:	
  5378                           
  5379                           ;tmr0.c: 98: T0CON0bits.T0EN = 1;
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _TMR0_StartTimer: []
  5383  0471  014B               	movlb	11	; select bank11
  5384  0472  179E               	bsf	30,7	;volatile
  5385  0473  0008               	return
  5386  0474                     __end_of_TMR0_StartTimer:	
  5387                           
  5388                           	psect	text12
  5389  03F8                     __ptext12:	
  5390 ;; *************** function _SYSTEM_Initialize *****************
  5391 ;; Defined at:
  5392 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0, pclath, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    6
  5413 ;; This function calls:
  5414 ;;		_ADC_Initialize
  5415 ;;		_EUSART1_Initialize
  5416 ;;		_OSCILLATOR_Initialize
  5417 ;;		_PIN_MANAGER_Initialize
  5418 ;;		_PMD_Initialize
  5419 ;;		_TMR0_Initialize
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _SYSTEM_Initialize
  5427  03F8                     _SYSTEM_Initialize:	
  5428                           
  5429                           ;mcc.c: 52: PMD_Initialize();
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5433  03F8  3184  2437  3183   	fcall	_PMD_Initialize
  5434                           
  5435                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5436  03FB  3183  2308  3183   	fcall	_PIN_MANAGER_Initialize
  5437                           
  5438                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5439  03FE  3184  242D  3183   	fcall	_OSCILLATOR_Initialize
  5440                           
  5441                           ;mcc.c: 55: ADC_Initialize();
  5442  0401  3184  243F  3183   	fcall	_ADC_Initialize
  5443                           
  5444                           ;mcc.c: 56: TMR0_Initialize();
  5445  0404  3183  23B3  3183   	fcall	_TMR0_Initialize
  5446                           
  5447                           ;mcc.c: 57: EUSART1_Initialize();
  5448  0407  3183  23CC         	fcall	_EUSART1_Initialize
  5449  0409  0008               	return
  5450  040A                     __end_of_SYSTEM_Initialize:	
  5451                           
  5452                           	psect	text13
  5453  03B3                     __ptext13:	
  5454 ;; *************** function _TMR0_Initialize *****************
  5455 ;; Defined at:
  5456 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0, pclath, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    5
  5477 ;; This function calls:
  5478 ;;		_TMR0_SetInterruptHandler
  5479 ;; This function is called by:
  5480 ;;		_SYSTEM_Initialize
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _TMR0_Initialize
  5486  03B3                     _TMR0_Initialize:	
  5487                           
  5488                           ;tmr0.c: 71: T0CON1 = 0x50;
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5492  03B3  3050               	movlw	80
  5493  03B4  014B               	movlb	11	; select bank11
  5494  03B5  009F               	movwf	31	;volatile
  5495                           
  5496                           ;tmr0.c: 74: TMR0H = 0x00;
  5497  03B6  019D               	clrf	29	;volatile
  5498                           
  5499                           ;tmr0.c: 77: TMR0L = 0x00;
  5500  03B7  019C               	clrf	28	;volatile
  5501                           
  5502                           ;tmr0.c: 80: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  5503  03B8  081D               	movf	29,w	;volatile
  5504  03B9  0141               	movlb	1	; select bank1
  5505  03BA  00DF               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  5506  03BB  014B               	movlb	11	; select bank11
  5507  03BC  081C               	movf	28,w	;volatile
  5508  03BD  0141               	movlb	1	; select bank1
  5509  03BE  00DE               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  5510                           
  5511                           ;tmr0.c: 83: PIR0bits.TMR0IF = 0;
  5512  03BF  014E               	movlb	14	; select bank14
  5513  03C0  128C               	bcf	12,5	;volatile
  5514                           
  5515                           ;tmr0.c: 86: PIE0bits.TMR0IE = 1;
  5516  03C1  1696               	bsf	22,5	;volatile
  5517                           
  5518                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  5519  03C2  3077               	movlw	low _TMR0_DefaultInterruptHandler
  5520  03C3  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5521  03C4  3004               	movlw	high _TMR0_DefaultInterruptHandler
  5522  03C5  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5523  03C6  3184  245A         	fcall	_TMR0_SetInterruptHandler
  5524                           
  5525                           ;tmr0.c: 92: T0CON0 = 0x90;
  5526  03C8  3090               	movlw	144
  5527  03C9  014B               	movlb	11	; select bank11
  5528  03CA  009E               	movwf	30	;volatile
  5529  03CB  0008               	return
  5530  03CC                     __end_of_TMR0_Initialize:	
  5531                           
  5532                           	psect	text14
  5533  045A                     __ptext14:	
  5534 ;; *************** function _TMR0_SetInterruptHandler *****************
  5535 ;; Defined at:
  5536 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  5539 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;Total ram usage:        2 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_TMR0_Initialize
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _TMR0_SetInterruptHandler
  5567  045A                     _TMR0_SetInterruptHandler:	
  5568                           
  5569                           ;tmr0.c: 160: TMR0_InterruptHandler = InterruptHandler;
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5573  045A  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5574  045B  0141               	movlb	1	; select bank1
  5575  045C  00DD               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5576  045D  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5577  045E  00DC               	movwf	_TMR0_InterruptHandler^(0+128)
  5578  045F  0008               	return
  5579  0460                     __end_of_TMR0_SetInterruptHandler:	
  5580                           
  5581                           	psect	text15
  5582  0437                     __ptext15:	
  5583 ;; *************** function _PMD_Initialize *****************
  5584 ;; Defined at:
  5585 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		status,2
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;Total ram usage:        0 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    4
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_SYSTEM_Initialize
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _PMD_Initialize
  5615  0437                     _PMD_Initialize:	
  5616                           
  5617                           ;mcc.c: 79: PMD0 = 0x00;
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _PMD_Initialize: [status,2]
  5621  0437  014F               	movlb	15	; select bank15
  5622  0438  0196               	clrf	22	;volatile
  5623                           
  5624                           ;mcc.c: 81: PMD1 = 0x00;
  5625  0439  0197               	clrf	23	;volatile
  5626                           
  5627                           ;mcc.c: 83: PMD2 = 0x00;
  5628  043A  0198               	clrf	24	;volatile
  5629                           
  5630                           ;mcc.c: 85: PMD3 = 0x00;
  5631  043B  0199               	clrf	25	;volatile
  5632                           
  5633                           ;mcc.c: 87: PMD4 = 0x00;
  5634  043C  019A               	clrf	26	;volatile
  5635                           
  5636                           ;mcc.c: 89: PMD5 = 0x00;
  5637  043D  019B               	clrf	27	;volatile
  5638  043E  0008               	return
  5639  043F                     __end_of_PMD_Initialize:	
  5640                           
  5641                           	psect	text16
  5642  0308                     __ptext16:	
  5643 ;; *************** function _PIN_MANAGER_Initialize *****************
  5644 ;; Defined at:
  5645 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    4
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_SYSTEM_Initialize
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function _PIN_MANAGER_Initialize
  5675  0308                     _PIN_MANAGER_Initialize:	
  5676                           
  5677                           ;pin_manager.c: 62: LATA = 0x00;
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5681  0308  0140               	movlb	0	; select bank0
  5682  0309  0198               	clrf	24	;volatile
  5683                           
  5684                           ;pin_manager.c: 63: LATC = 0x00;
  5685  030A  019A               	clrf	26	;volatile
  5686                           
  5687                           ;pin_manager.c: 68: TRISA = 0x33;
  5688  030B  3033               	movlw	51
  5689  030C  0092               	movwf	18	;volatile
  5690                           
  5691                           ;pin_manager.c: 69: TRISC = 0x0A;
  5692  030D  300A               	movlw	10
  5693  030E  0094               	movwf	20	;volatile
  5694                           
  5695                           ;pin_manager.c: 74: ANSELC = 0x04;
  5696  030F  3004               	movlw	4
  5697  0310  017E               	movlb	62	; select bank62
  5698  0311  00CE               	movwf	78	;volatile
  5699                           
  5700                           ;pin_manager.c: 75: ANSELA = 0x1B;
  5701  0312  301B               	movlw	27
  5702  0313  00B8               	movwf	56	;volatile
  5703                           
  5704                           ;pin_manager.c: 80: WPUA = 0x00;
  5705  0314  01B9               	clrf	57	;volatile
  5706                           
  5707                           ;pin_manager.c: 81: WPUC = 0x00;
  5708  0315  01CF               	clrf	79	;volatile
  5709                           
  5710                           ;pin_manager.c: 86: ODCONA = 0x00;
  5711  0316  01BA               	clrf	58	;volatile
  5712                           
  5713                           ;pin_manager.c: 87: ODCONC = 0x00;
  5714  0317  01D0               	clrf	80	;volatile
  5715                           
  5716                           ;pin_manager.c: 96: RC0PPS = 0x15;
  5717  0318  3015               	movlw	21
  5718  0319  00A0               	movwf	32	;volatile
  5719                           
  5720                           ;pin_manager.c: 97: SSP1CLKPPSbits.SSP1CLKPPS = 0x10;
  5721  031A  017D               	movlb	61	; select bank61
  5722  031B  0845               	movf	69,w	;volatile
  5723  031C  39C0               	andlw	-64
  5724  031D  3810               	iorlw	16
  5725  031E  00C5               	movwf	69	;volatile
  5726                           
  5727                           ;pin_manager.c: 98: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  5728  031F  0846               	movf	70,w	;volatile
  5729  0320  39C0               	andlw	-64
  5730  0321  3811               	iorlw	17
  5731  0322  00C6               	movwf	70	;volatile
  5732                           
  5733                           ;pin_manager.c: 99: RC4PPS = 0x0F;
  5734  0323  300F               	movlw	15
  5735  0324  017E               	movlb	62	; select bank62
  5736  0325  00A4               	movwf	36	;volatile
  5737                           
  5738                           ;pin_manager.c: 100: RC2PPS = 0x16;
  5739  0326  3016               	movlw	22
  5740  0327  00A2               	movwf	34	;volatile
  5741                           
  5742                           ;pin_manager.c: 101: RX1DTPPSbits.RX1DTPPS = 0x13;
  5743  0328  017D               	movlb	61	; select bank61
  5744  0329  084B               	movf	75,w	;volatile
  5745  032A  39C0               	andlw	-64
  5746  032B  3813               	iorlw	19
  5747  032C  00CB               	movwf	75	;volatile
  5748  032D  0008               	return
  5749  032E                     __end_of_PIN_MANAGER_Initialize:	
  5750                           
  5751                           	psect	text17
  5752  042D                     __ptext17:	
  5753 ;; *************** function _OSCILLATOR_Initialize *****************
  5754 ;; Defined at:
  5755 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    4
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_SYSTEM_Initialize
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _OSCILLATOR_Initialize
  5785  042D                     _OSCILLATOR_Initialize:	
  5786                           
  5787                           ;mcc.c: 63: OSCCON1 = 0x60;
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5791  042D  3060               	movlw	96
  5792  042E  0151               	movlb	17	; select bank17
  5793  042F  008D               	movwf	13	;volatile
  5794                           
  5795                           ;mcc.c: 65: OSCCON3 = 0x00;
  5796  0430  018F               	clrf	15	;volatile
  5797                           
  5798                           ;mcc.c: 67: OSCEN = 0x00;
  5799  0431  0191               	clrf	17	;volatile
  5800                           
  5801                           ;mcc.c: 69: OSCFRQ = 0x02;
  5802  0432  3002               	movlw	2
  5803  0433  0093               	movwf	19	;volatile
  5804                           
  5805                           ;mcc.c: 71: OSCSTAT = 0x00;
  5806  0434  0190               	clrf	16	;volatile
  5807                           
  5808                           ;mcc.c: 73: OSCTUNE = 0x00;
  5809  0435  0192               	clrf	18	;volatile
  5810  0436  0008               	return
  5811  0437                     __end_of_OSCILLATOR_Initialize:	
  5812                           
  5813                           	psect	text18
  5814  03CC                     __ptext18:	
  5815 ;; *************** function _EUSART1_Initialize *****************
  5816 ;; Defined at:
  5817 ;;		line 71 in file "mcc_generated_files/eusart1.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    5
  5838 ;; This function calls:
  5839 ;;		_EUSART1_SetRxInterruptHandler
  5840 ;; This function is called by:
  5841 ;;		_SYSTEM_Initialize
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _EUSART1_Initialize
  5847  03CC                     _EUSART1_Initialize:	
  5848                           
  5849                           ;eusart1.c: 74: PIE3bits.RC1IE = 0;
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5853  03CC  014E               	movlb	14	; select bank14
  5854  03CD  1299               	bcf	25,5	;volatile
  5855                           
  5856                           ;eusart1.c: 75: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  5857  03CE  302E               	movlw	low _EUSART1_Receive_ISR
  5858  03CF  00F3               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  5859  03D0  3003               	movlw	high _EUSART1_Receive_ISR
  5860  03D1  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  5861  03D2  3184  2460         	fcall	_EUSART1_SetRxInterruptHandler
  5862                           
  5863                           ;eusart1.c: 79: BAUD1CON = 0x08;
  5864  03D4  3008               	movlw	8
  5865  03D5  0142               	movlb	2	; select bank2
  5866  03D6  009F               	movwf	31	;volatile
  5867                           
  5868                           ;eusart1.c: 82: RC1STA = 0x90;
  5869  03D7  3090               	movlw	144
  5870  03D8  009D               	movwf	29	;volatile
  5871                           
  5872                           ;eusart1.c: 85: TX1STA = 0x24;
  5873  03D9  3024               	movlw	36
  5874  03DA  009E               	movwf	30	;volatile
  5875                           
  5876                           ;eusart1.c: 88: SP1BRGL = 0x08;
  5877  03DB  3008               	movlw	8
  5878  03DC  009B               	movwf	27	;volatile
  5879                           
  5880                           ;eusart1.c: 91: SP1BRGH = 0x00;
  5881  03DD  019C               	clrf	28	;volatile
  5882                           
  5883                           ;eusart1.c: 95: eusart1RxHead = 0;
  5884  03DE  01FA               	clrf	_eusart1RxHead	;volatile
  5885                           
  5886                           ;eusart1.c: 96: eusart1RxTail = 0;
  5887  03DF  01F9               	clrf	_eusart1RxTail	;volatile
  5888                           
  5889                           ;eusart1.c: 97: eusart1RxCount = 0;
  5890  03E0  01F8               	clrf	_eusart1RxCount	;volatile
  5891                           
  5892                           ;eusart1.c: 100: PIE3bits.RC1IE = 1;
  5893  03E1  014E               	movlb	14	; select bank14
  5894  03E2  1699               	bsf	25,5	;volatile
  5895  03E3  0008               	return
  5896  03E4                     __end_of_EUSART1_Initialize:	
  5897                           
  5898                           	psect	text19
  5899  0460                     __ptext19:	
  5900 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5901 ;; Defined at:
  5902 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  5905 ;;		 -> EUSART1_Receive_ISR(1), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_EUSART1_Initialize
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _EUSART1_SetRxInterruptHandler
  5933  0460                     _EUSART1_SetRxInterruptHandler:	
  5934                           
  5935                           ;eusart1.c: 174: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  5936                           
  5937                           ;incstack = 0
  5938                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  5939  0460  0874               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  5940  0461  0141               	movlb	1	; select bank1
  5941  0462  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  5942  0463  0873               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  5943  0464  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  5944  0465  0008               	return
  5945  0466                     __end_of_EUSART1_SetRxInterruptHandler:	
  5946                           
  5947                           	psect	text20
  5948  043F                     __ptext20:	
  5949 ;; *************** function _ADC_Initialize *****************
  5950 ;; Defined at:
  5951 ;;		line 64 in file "mcc_generated_files/adc.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;Total ram usage:        0 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    4
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_SYSTEM_Initialize
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function _ADC_Initialize
  5981  043F                     _ADC_Initialize:	
  5982                           
  5983                           ;adc.c: 69: ADCON0 = 0x01;
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5987  043F  3001               	movlw	1
  5988  0440  0141               	movlb	1	; select bank1
  5989  0441  009D               	movwf	29	;volatile
  5990                           
  5991                           ;adc.c: 72: ADCON1 = 0x00;
  5992  0442  019E               	clrf	30	;volatile
  5993                           
  5994                           ;adc.c: 75: ADACT = 0x00;
  5995  0443  019F               	clrf	31	;volatile
  5996                           
  5997                           ;adc.c: 78: ADRESL = 0x00;
  5998  0444  019B               	clrf	27	;volatile
  5999                           
  6000                           ;adc.c: 81: ADRESH = 0x00;
  6001  0445  019C               	clrf	28	;volatile
  6002  0446  0008               	return
  6003  0447                     __end_of_ADC_Initialize:	
  6004                           
  6005                           	psect	intentry
  6006  0004                     __pintentry:	
  6007 ;; *************** function _INTERRUPT_InterruptManager *****************
  6008 ;; Defined at:
  6009 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    3
  6030 ;; This function calls:
  6031 ;;		Absolute function
  6032 ;;		_EUSART1_Receive_ISR
  6033 ;;		_TMR0_ISR
  6034 ;; This function is called by:
  6035 ;;		Interrupt level 1
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039  0004                     _INTERRUPT_InterruptManager:	
  6040                           
  6041                           ;incstack = 0
  6042  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6043                           
  6044                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6045  0005  3180               	pagesel	$
  6046                           
  6047                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6048  0006  014E               	movlb	14	; select bank14
  6049  0007  1A96               	btfsc	22,5	;volatile
  6050  0008  1E8C               	btfss	12,5	;volatile
  6051  0009  280E               	goto	i1l524
  6052                           
  6053                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  6054  000A  3184  240A  3180   	fcall	_TMR0_ISR
  6055                           
  6056                           ;interrupt_manager.c: 58: }
  6057  000D  2819               	goto	i1l530
  6058  000E                     i1l524:	
  6059                           
  6060                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  6061  000E  1B0B               	btfsc	11,6	;volatile
  6062                           
  6063                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.RC1IE == 1 && PIR3bits.
      +                          RC1IF == 1)
  6064  000F  1E99               	btfss	25,5	;volatile
  6065  0010  2819               	goto	i1l530
  6066  0011  1E8F               	btfss	15,5	;volatile
  6067  0012  2819               	goto	i1l530
  6068                           
  6069                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  6070  0013  0141               	movlb	1	; select bank1
  6071  0014  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
  6072  0015  008A               	movwf	10
  6073  0016  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
  6074  0017  000A               	callw
  6075  0018  3180               	pagesel	$
  6076  0019                     i1l530:	
  6077                           ;interrupt_manager.c: 70: else;interrupt_manager.c: 71: {
  6078                           
  6079                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  6080                           
  6081                           ;interrupt_manager.c: 65: else;interrupt_manager.c: 66: {
  6082                           
  6083                           ;interrupt_manager.c: 64: }
  6084                           
  6085  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6086  001A  0009               	retfie
  6087  001B                     __end_of_INTERRUPT_InterruptManager:	
  6088                           
  6089                           	psect	text22
  6090  040A                     __ptext22:	
  6091 ;; *************** function _TMR0_ISR *****************
  6092 ;; Defined at:
  6093 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;		None
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      void 
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0, pclath, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;Total ram usage:        0 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    2
  6114 ;; This function calls:
  6115 ;;		_TMR0_CallBack
  6116 ;; This function is called by:
  6117 ;;		_INTERRUPT_InterruptManager
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function _TMR0_ISR
  6123  040A                     _TMR0_ISR:	
  6124                           
  6125                           ;tmr0.c: 137: PIR0bits.TMR0IF = 0;
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6129  040A  014E               	movlb	14	; select bank14
  6130  040B  128C               	bcf	12,5	;volatile
  6131                           
  6132                           ;tmr0.c: 139: TMR0H = timer0ReloadVal16bit >> 8;
  6133  040C  0141               	movlb	1	; select bank1
  6134  040D  085F               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  6135  040E  014B               	movlb	11	; select bank11
  6136  040F  009D               	movwf	29	;volatile
  6137                           
  6138                           ;tmr0.c: 140: TMR0L = (uint8_t) timer0ReloadVal16bit;
  6139  0410  0141               	movlb	1	; select bank1
  6140  0411  085E               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  6141  0412  014B               	movlb	11	; select bank11
  6142  0413  009C               	movwf	28	;volatile
  6143                           
  6144                           ;tmr0.c: 144: TMR0_CallBack();
  6145  0414  3184  2422         	fcall	_TMR0_CallBack
  6146  0416  0008               	return
  6147  0417                     __end_of_TMR0_ISR:	
  6148                           
  6149                           	psect	text23
  6150  0422                     __ptext23:	
  6151 ;; *************** function _TMR0_CallBack *****************
  6152 ;; Defined at:
  6153 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    1
  6174 ;; This function calls:
  6175 ;;		Absolute function
  6176 ;;		_TMR0_DefaultInterruptHandler
  6177 ;; This function is called by:
  6178 ;;		_TMR0_ISR
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _TMR0_CallBack
  6184  0422                     _TMR0_CallBack:	
  6185                           
  6186                           ;tmr0.c: 153: if(TMR0_InterruptHandler)
  6187                           
  6188                           ;incstack = 0
  6189                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6190  0422  0141               	movlb	1	; select bank1
  6191  0423  085C               	movf	_TMR0_InterruptHandler^(0+128),w
  6192  0424  045D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  6193  0425  1903               	btfsc	3,2
  6194  0426  0008               	return
  6195                           
  6196                           ;tmr0.c: 154: {;tmr0.c: 155: TMR0_InterruptHandler();
  6197  0427  085D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6198  0428  008A               	movwf	10
  6199  0429  085C               	movf	_TMR0_InterruptHandler^(0+128),w
  6200  042A  000A               	callw
  6201  042B  3184               	pagesel	$
  6202  042C  0008               	return
  6203  042D                     __end_of_TMR0_CallBack:	
  6204                           
  6205                           	psect	text24
  6206  0477                     __ptext24:	
  6207 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6208 ;; Defined at:
  6209 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		None
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;Total ram usage:        0 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_TMR0_Initialize
  6233 ;;		_TMR0_CallBack
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _TMR0_DefaultInterruptHandler
  6239  0477                     _TMR0_DefaultInterruptHandler:	
  6240                           
  6241                           ;incstack = 0
  6242                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6243  0477  0008               	return
  6244  0478                     __end_of_TMR0_DefaultInterruptHandler:	
  6245                           
  6246                           	psect	text25
  6247  032E                     __ptext25:	
  6248 ;; *************** function _EUSART1_Receive_ISR *****************
  6249 ;; Defined at:
  6250 ;;		line 149 in file "mcc_generated_files/eusart1.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  a               1    2[COMMON] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;Total ram usage:        2 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    1
  6271 ;; This function calls:
  6272 ;;		_EUSART1_Write
  6273 ;; This function is called by:
  6274 ;;		_EUSART1_Initialize
  6275 ;;		_INTERRUPT_InterruptManager
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _EUSART1_Receive_ISR
  6281  032E                     _EUSART1_Receive_ISR:	
  6282                           
  6283                           ;eusart1.c: 151: char a;;eusart1.c: 153: if(1 == RC1STAbits.OERR)
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6287  032E  0142               	movlb	2	; select bank2
  6288  032F  1C9D               	btfss	29,1	;volatile
  6289  0330  2B33               	goto	i1l1838
  6290                           
  6291                           ;eusart1.c: 154: {;eusart1.c: 157: RC1STAbits.CREN = 0;
  6292  0331  121D               	bcf	29,4	;volatile
  6293                           
  6294                           ;eusart1.c: 158: RC1STAbits.CREN = 1;
  6295  0332  161D               	bsf	29,4	;volatile
  6296  0333                     i1l1838:	
  6297                           
  6298                           ;eusart1.c: 159: };eusart1.c: 162: a = RC1REG;
  6299  0333  0819               	movf	25,w	;volatile
  6300  0334  00F1               	movwf	??_EUSART1_Receive_ISR
  6301  0335  0871               	movf	??_EUSART1_Receive_ISR,w
  6302  0336  00F2               	movwf	EUSART1_Receive_ISR@a
  6303                           
  6304                           ;eusart1.c: 163: eusart1RxBuffer[eusart1RxHead++] = a;
  6305  0337  0872               	movf	EUSART1_Receive_ISR@a,w
  6306  0338  00F1               	movwf	??_EUSART1_Receive_ISR
  6307  0339  087A               	movf	_eusart1RxHead,w
  6308  033A  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  6309  033B  0086               	movwf	6
  6310  033C  0187               	clrf	7
  6311  033D  0871               	movf	??_EUSART1_Receive_ISR,w
  6312  033E  0081               	movwf	1
  6313  033F  3001               	movlw	1
  6314  0340  00F1               	movwf	??_EUSART1_Receive_ISR
  6315  0341  0871               	movf	??_EUSART1_Receive_ISR,w
  6316  0342  07FA               	addwf	_eusart1RxHead,f	;volatile
  6317                           
  6318                           ;eusart1.c: 164: EUSART1_Write(a+1);
  6319  0343  0872               	movf	EUSART1_Receive_ISR@a,w
  6320  0344  3E01               	addlw	1
  6321  0345  00F1               	movwf	??_EUSART1_Receive_ISR
  6322  0346  0871               	movf	??_EUSART1_Receive_ISR,w
  6323  0347  00F0               	movwf	EUSART1_Write@txData
  6324  0348  3184  2447         	fcall	_EUSART1_Write
  6325                           
  6326                           ;eusart1.c: 165: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6327  034A  3008               	movlw	8
  6328  034B  027A               	subwf	_eusart1RxHead,w	;volatile
  6329  034C  1803               	btfsc	3,0
  6330                           
  6331                           ;eusart1.c: 166: {;eusart1.c: 167: eusart1RxHead = 0;
  6332  034D  01FA               	clrf	_eusart1RxHead	;volatile
  6333                           
  6334                           ;eusart1.c: 168: };eusart1.c: 169: eusart1RxCount++;
  6335  034E  3001               	movlw	1
  6336  034F  00F1               	movwf	??_EUSART1_Receive_ISR
  6337  0350  0871               	movf	??_EUSART1_Receive_ISR,w
  6338  0351  07F8               	addwf	_eusart1RxCount,f	;volatile
  6339  0352  0008               	return
  6340  0353                     __end_of_EUSART1_Receive_ISR:	
  6341                           
  6342                           	psect	text26
  6343  0447                     __ptext26:	
  6344 ;; *************** function _EUSART1_Write *****************
  6345 ;; Defined at:
  6346 ;;		line 138 in file "mcc_generated_files/eusart1.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  txData          1    0[COMMON] unsigned char 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6360 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;Total ram usage:        1 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_EUSART1_Receive_ISR
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function _EUSART1_Write
  6375  0447                     _EUSART1_Write:	
  6376  0447                     i1l219:	
  6377                           ;eusart1.c: 141: {
  6378                           
  6379                           ;eusart1.c: 140: while(0 == PIR3bits.TX1IF)
  6380                           
  6381                           ;incstack = 0
  6382                           ; Regs used in _EUSART1_Write: [wreg]
  6383                           
  6384  0447  014E               	movlb	14	; select bank14
  6385  0448  1E0F               	btfss	15,4	;volatile
  6386  0449  2C47               	goto	i1l219
  6387                           
  6388                           ;eusart1.c: 142: };eusart1.c: 144: TX1REG = txData;
  6389  044A  0870               	movf	EUSART1_Write@txData,w
  6390  044B  0142               	movlb	2	; select bank2
  6391  044C  009A               	movwf	26	;volatile
  6392  044D  0008               	return
  6393  044E                     __end_of_EUSART1_Write:	
  6394  007E                     btemp	set	126	;btemp
  6395  007E                     int$flags	set	126
  6396  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    31
    Data        32
    BSS         87
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80      5      73
    BANK2            80      0      54
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S35$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S579$4$2	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    BMP280_SPI_bus_write@reg_data	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    S579$3$2	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    conf_sensor@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    conf_sensor@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    conf_sensor@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    get_calib_param@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    get_calib_param@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    interleave_data@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_data@reg_addr	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    interleave_data@temp_buff	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    null_ptr_check@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_compute_meas_time@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_compute_meas_time@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_compute_meas_time@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_pres_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_pres_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_pres_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_temp_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_temp_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_temp_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_power_mode@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_power_mode@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_power_mode@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_config@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_config@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_config@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_soft_reset@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bmp280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    bmp280_set_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    bmp280_get_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    BMP280_SPI_bus_read@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    S579bmp280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    S579bmp280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    S579bmp280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    S35$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S35$TxDefaultISR	PTR FTN()void  size(2) Largest target is 0

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 0

    S35$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S35$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S35$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S35$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S35$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S35$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S35$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S35$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 


Critical Paths under _main in COMMON

    _get_calib_param->_null_ptr_check
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _bmp280_get_regs->_null_ptr_check
    _bmp280_set_regs->_interleave_data
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_EUSART1_Write

Critical Paths under _main in BANK0

    _main->_bmp280_init
    _bmp280_init->_get_calib_param
    _get_calib_param->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _bmp280_soft_reset->_bmp280_set_regs
    _bmp280_set_regs->_BMP280_SPI_bus_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_bmp280_init

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14230
                                              3 BANK1      2     2      0
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                        _bmp280_init
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          6     6      0   14055
                                             77 BANK0      3     3      0
                                              0 BANK1      3     3      0
                  _BMP280_delay_msek *
                    _bmp280_get_regs
                  _bmp280_soft_reset
                    _get_calib_param
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _get_calib_param                                     30    30      0    5219
                                             47 BANK0     30    30      0
                    _bmp280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_get_regs                                      9     6      3    3177
                                             38 BANK0      9     6      3
                _BMP280_SPI_bus_read *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_read                                 42    38      4     550
                                              3 COMMON     4     0      4
                                              0 BANK0     38    38      0
 ---------------------------------------------------------------------------------
 (2) _bmp280_soft_reset                                    7     7      0    4223
                                             24 BANK0      7     7      0
                  _BMP280_delay_msek *
                    _bmp280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_set_regs                                     20    17      3    3176
                                              4 BANK0     20    17      3
               _BMP280_SPI_bus_write
                    _interleave_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     623
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _interleave_data                                      8     5      3     580
                                              3 COMMON     5     2      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_write                                 8     4      4     330
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _BMP280_delay_msek                                    4     0      4     108
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0      86
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     131
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  2     2      0     131
                                              1 COMMON     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     0      1      86
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _bmp280_init
     _BMP280_delay_msek *
     _bmp280_get_regs *
       _BMP280_SPI_bus_read *
       _null_ptr_check *
     _bmp280_soft_reset *
       _BMP280_delay_msek *
       _bmp280_set_regs *
         _BMP280_SPI_bus_write
         _interleave_data
         _null_ptr_check
       _null_ptr_check *
     _get_calib_param *
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
         _null_ptr_check *
       _null_ptr_check
     _null_ptr_check *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     _EUSART1_Write
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      49       8       91.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      36      10       67.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 27 23:13:53 2018

                                    __CFG_CP$OFF 0000                                ??_bmp280_set_regs 0027  
                                    __CFG_LVP$ON 0000                                              l333 0202  
                                            l325 029B                                              l309 0394  
                                            l422 036F                                              _RC5 0075  
                       BMP280_SPI_bus_read@F6557 0120                                              _bmp 00B2  
                               ?_interleave_data 0073                          __size_of_PMD_Initialize 0008  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                                  __CFG_BBEN$OFF 0000                               interleave_data@len 0075  
                                   __CFG_ZCD$OFF 0000                                             l2114 023F  
                                           l2106 0227                                             l2132 0372  
                                           l2220 02D7                                             l2116 0257  
                                           l2108 023D                                             l2134 0373  
                                           l2206 01FD                                             l2144 02DD  
                                           l2208 0204                                             l2170 017D  
                                           l2162 029D                                             l2156 0275  
                                           l2236 0171                                             l2190 01A0  
                                           l2270 00B8                                             l2192 01BA  
                                           l2264 00A1                                             l2248 005D  
                                           l2274 00C1                                             l2258 008B  
                                           l2268 00B5                                             l2198 01DA  
                                           l2278 00DD                                             u2200 021D  
                                           _LATA 0018                                             u2215 0235  
                                           _LATC 001A                                             u2420 00EB  
                                           u3147 0207                                             _PMD0 0796  
                                           _PMD1 0797                                             _PMD2 0798  
                                           _PMD3 0799                                             _PMD4 079A  
                                           _PMD5 079B                         BMP280_SPI_bus_read@array 0022  
                                           _WPUA 1F39                                             _WPUC 1F4F  
                                  _EUSART1_Write 0447                                    __CFG_FCMEN$ON 0000  
                                           _main 0375                                  _TMR0_StartTimer 0471  
                                           _uart 03E4                                             fsr0h 0005  
                                           fsr1h 0007                                             indf0 0000  
                                           fsr0l 0004                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                                  __CFG_BOREN$ON 0000                                             start 001B  
                                  __CFG_CSWEN$ON 0000                                    __CFG_MCLRE$ON 0000  
                              _bmp280_soft_reset 029F                          __end_of_TMR0_Initialize 03CC  
                 ??_TMR0_DefaultInterruptHandler 0070                               ?_bmp280_soft_reset 0070  
                 __size_of_OSCILLATOR_Initialize 000A                    __end_of_OSCILLATOR_Initialize 0437  
                                          _ADACT 009F                                            ?_main 0070  
                                  __CFG_WDTE$OFF 0000                                            i1l219 0447  
                                          i1l530 0019                                            i1l524 000E  
                                          _OSCEN 0891                                            _TMR0H 059D  
                                          _TMR0L 059C                                            _TRISA 0012  
                                          _TRISC 0014                __size_of_TMR0_SetInterruptHandler 0006  
                       __size_of_get_calib_param 0094                              ??_bmp280_soft_reset 0038  
                      ?_TMR0_SetInterruptHandler 0073                                 __end_of_TMR0_ISR 0417  
                    __end_of_BMP280_SPI_bus_read 0259                                    __CFG_WRTB$OFF 0000  
                                  __CFG_WRTC$OFF 0000                             EUSART1_Receive_ISR@a 0072  
                        bmp280_get_regs@reg_addr 004D                          bmp280_set_regs@reg_addr 0037  
                        bmp280_get_regs@reg_data 0046                          bmp280_set_regs@reg_data 0024  
                                 ?_EUSART1_Write 0070                                            pclath 000A  
                                          status 0003                                            wtemp0 007E  
                        bmp280_set_regs@temp_len 0033                        __end_of_bmp280_soft_reset 02DA  
                                __initialization 001D                       __end_of_EUSART1_Initialize 03E4  
                                   __end_of_main 0395                                     __end_of_uart 03F8  
                                 __CFG_SAFEN$OFF 0000                             interleave_data@index 0077  
                    ?_INTERRUPT_InterruptManager 0070                                           ??_main 00E5  
                        interleave_data@reg_addr 0076                          interleave_data@reg_data 0074  
                               ??_null_ptr_check 0073                          __end_of_TMR0_StartTimer 0474  
                                         _ADCON0 009D                                           _ADCON1 009E  
                                         _ADRESH 009C                                           _ADRESL 009B  
                                         _ANSELA 1F38                                           _ANSELC 1F4E  
                             __CFG_RSTOSC$HFINT1 0000                                           _T0CON0 059E  
                                         _T0CON1 059F                                           _RC1REG 0119  
                                         _RC0PPS 1F20                                           _RC1STA 011D  
                                         _RC2PPS 1F22                                           _RC4PPS 1F24  
                                         _ODCONA 1F3A                                           _ODCONC 1F50  
                                         i1l1838 0333                                   __CFG_WDTCCS$SC 0000  
__end_ofbmp280_compute_meas_time@period_per_osrs 046A          bmp280_compute_meas_time@period_per_osrs 0466  
                                         _OSCFRQ 0893                                           _TX1REG 011A  
                                         _TX1STA 011E                             bmp280_init@try_count 00E2  
                                 __CFG_PWRTE$OFF 0000                     __end_of_BMP280_SPI_bus_write 0422  
                                 __CFG_STVREN$ON 0000                                 ?_TMR0_Initialize 0070  
                                 _PMD_Initialize 0437                                  _bmp280_get_regs 0259  
                          __end_of_TMR0_CallBack 042D                                _BMP280_delay_msek 0476  
                                ??_EUSART1_Write 0071         TMR0_SetInterruptHandler@InterruptHandler 0073  
                                _eusart1RxBuffer 00A0                         bmp280_set_regs@temp_buff 002B  
                             ?_BMP280_delay_msek 0073                                ??_get_calib_param 004F  
                              _SYSTEM_Initialize 03F8                          __end_of__initialization 0044  
                         bmp280_get_config@F6430 00B0                               ?_SYSTEM_Initialize 0070  
                                _bmp280_set_regs 0173                              ??_BMP280_delay_msek 0077  
                         BMP280_SPI_bus_read@cnt 0076                       __size_of_bmp280_soft_reset 003B  
                                 __pcstackCOMMON 0070                                     __pidataBANK1 0474  
                                   __pidataBANK2 0395                              ??_SYSTEM_Initialize 0075  
                                      ?_TMR0_ISR 0070                           __end_of_PMD_Initialize 043F  
                             _spi1_configuration 046E                        __end_of_BMP280_delay_msek 0477  
                    bmp280_set_regs@reg_addr_cnt 0035                      __end_of_EUSART1_Receive_ISR 0353  
                               ?_TMR0_StartTimer 0070                        __end_of_SYSTEM_Initialize 040A  
                                  _eusart1RxHead 007A                                    _eusart1RxTail 0079  
                                     __pbssBANK1 00A0                                       __pbssBANK2 013E  
                                  ??_bmp280_init 006D                  ??_EUSART1_SetRxInterruptHandler 0075  
                           BMP280_SPI_bus_read@i 0044                                   _SSP1DATPPSbits 1EC6  
                                     __pmaintext 0375                         interleave_data@temp_buff 0073  
               __end_of_TMR0_SetInterruptHandler 0460                                       ??_TMR0_ISR 0070  
                                __CFG_PPS1WAY$ON 0000                                       __pintentry 0004  
                                 _SSP1CLKPPSbits 1EC5                                  ?_PMD_Initialize 0070  
                        __end_of_bmp280_get_regs 029F                          __size_of_ADC_Initialize 0008  
                                        _SP1BRGH 011C                                          _SP1BRGL 011B  
                                        _OSCCON1 088D                                          _OSCCON3 088F  
                                        _OSCSTAT 0890                                          _OSCTUNE 0892  
                                        _SSP1ADD 018D                                          _SSP1BUF 018C  
                           _BMP280_SPI_bus_write 0417                          __end_of_bmp280_set_regs 0206  
                       __size_of_interleave_data 002E                              __end_of_bmp280_init 00DF  
                             bmp280_get_regs@dev 0048                               bmp280_get_regs@len 0047  
                            _EUSART1_is_rx_ready 0000                              _EUSART1_is_tx_ready 0000  
                                        __ptext1 0048                                          __ptext2 00DF  
                                        __ptext3 0259                                          __ptext4 0206  
                                        __ptext5 029F                                          __ptext6 0173  
                                        __ptext7 0353                                          __ptext8 02DA  
                                        __ptext9 0417                                  __CFG_WRTAPP$OFF 0000  
                          _OSCILLATOR_Initialize 042D                       __size_of_BMP280_delay_msek 0001  
                             _EUSART1_Initialize 03CC                         ??_PIN_MANAGER_Initialize 0073  
                                __CFG_WRTSAF$OFF 0000                       __size_of_SYSTEM_Initialize 0012  
                                        clrloop0 0455                            ?_BMP280_SPI_bus_write 0073  
                  bmp280_soft_reset@soft_rst_cmd 003B                             end_of_initialization 0044  
                            ?_EUSART1_Initialize 0070                                          init_ram 044E  
                   __size_of_BMP280_SPI_bus_read 0053                                          initloop 044F  
                          bmp280_soft_reset@rslt 003C            __end_of_EUSART1_SetRxInterruptHandler 0466  
         __size_of_EUSART1_SetRxInterruptHandler 0006                    _EUSART1_SetRxInterruptHandler 0460  
                           ??_EUSART1_Initialize 0075                            __CFG_WDTCPS$WDTCPS_31 0000  
                       _TMR0_SetInterruptHandler 045A                                 ?_bmp280_get_regs 0046  
                                _get_calib_param 00DF                               get_calib_param@dev 006C  
                                      _TRISCbits 0014                              EUSART1_Write@txData 0070  
                               __CFG_FEXTOSC$OFF 0000                                 ?_bmp280_set_regs 0024  
                                    _bmp280_init 0048                                     _EUSART1_Read 0000  
                              ??_interleave_data 0020                             _timer0ReloadVal16bit 00DE  
                              __size_of_TMR0_ISR 000D                                   _ADC_Initialize 043F  
                         ?_OSCILLATOR_Initialize 0070                              start_initialization 001D  
                   BMP280_SPI_bus_read@stringpos 0045                         __size_of_TMR0_Initialize 0019  
                __size_of_PIN_MANAGER_Initialize 0026                                  bmp280_init@rslt 00E3  
                         ??_BMP280_SPI_bus_write 0077          __end_ofbmp280_compute_meas_time@startup 046E  
                bmp280_compute_meas_time@startup 046A    EUSART1_SetRxInterruptHandler@interruptHandler 0073  
                          __end_of_EUSART1_Write 044E                          __size_of_null_ptr_check 0022  
                        BMP280_SPI_bus_write@cnt 0076                                 __CFG_LPBOREN$OFF 0000  
                               ??_PMD_Initialize 0073                          __end_of_get_calib_param 0173  
                         __size_of_TMR0_CallBack 000B                   ?_EUSART1_SetRxInterruptHandler 0073  
                         __end_of_ADC_Initialize 0447                                      __pdataBANK1 00E7  
                                    __pdataBANK2 0120                               null_ptr_check@rslt 0075  
                                 _eusart1RxCount 0078                                      __pbssCOMMON 0078  
              _EUSART1_RxDefaultInterruptHandler 00E0                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                    __pcstackBANK1 00E2  
                            bmp280_set_regs@rslt 0036                      bmp280_get_uncomp_data@F6465 00A8  
                   __size_of_EUSART1_Receive_ISR 0025                            _TMR0_InterruptHandler 00DC  
                                      __pnvBANK1 00DC                         __size_of_TMR0_StartTimer 0003  
                         _PIN_MANAGER_Initialize 0308                                  ?_ADC_Initialize 0070  
                      BMP280_SPI_bus_read@iError 0040                     ??_INTERRUPT_InterruptManager 0073  
                            _BMP280_SPI_bus_read 0206                                         _BAUD1CON 011F  
                                  _TMR0_CallBack 0422                               _EUSART1_is_tx_done 0000  
                   BMP280_SPI_bus_write@dev_addr 0073                                ??_TMR0_Initialize 0075  
                           ?_BMP280_SPI_bus_read 0073                            BMP280_delay_msek@msek 0073  
                                      clear_ram0 0454                                         _PIE0bits 0716  
                                       _PIE3bits 0719                             bmp280_soft_reset@dev 003E  
            __size_of_INTERRUPT_InterruptManager 0017                       ??_TMR0_SetInterruptHandler 0075  
                    BMP280_SPI_bus_read@dev_addr 0073                                         _PIR0bits 070C  
                                       _PIR3bits 070F                     BMP280_SPI_bus_write@reg_addr 0074  
                   BMP280_SPI_bus_write@reg_data 0075                                __CFG_BBSIZE$BB512 0000  
                                       _SSP1CON1 0190                                         _SSP1CON2 0191  
                                       _TMR0_ISR 040A                                         _SSP1STAT 018F  
                               ?_get_calib_param 0070                                       _ADCON0bits 009D  
                    BMP280_SPI_bus_read@reg_addr 0074                      BMP280_SPI_bus_read@reg_data 0075  
                                   _RX1DTPPSbits 1ECB                                   ?_TMR0_CallBack 0070  
                                _interleave_data 02DA                                   _null_ptr_check 0353  
                                   ?_bmp280_init 0070                            ??_BMP280_SPI_bus_read 0020  
                                 bmp280_init@dev 00E4                                null_ptr_check@dev 0076  
                        ??_OSCILLATOR_Initialize 0073                                ??_TMR0_StartTimer 0073  
                    __size_of_EUSART1_Initialize 0018                               bmp280_set_regs@dev 0026  
                             bmp280_set_regs@len 0025                              bmp280_get_regs@rslt 004E  
                                     _T0CON0bits 059E                                         __ptext10 0476  
                                       __ptext11 0471                                         __ptext20 043F  
                                       __ptext12 03F8                                         __ptext13 03B3  
                                       __ptext22 040A                                         __ptext14 045A  
                                       __ptext23 0422                                         __ptext15 0437  
                                       __ptext24 0477                                         __ptext16 0308  
                                       __ptext25 032E                                         __ptext17 042D  
                                       __ptext26 0447                                         __ptext18 03CC  
                                       __ptext19 0460                                     _SSP1CON1bits 0190  
                         __end_of_null_ptr_check 0375                         __size_of_bmp280_get_regs 0046  
                                  __size_of_main 0020             __end_of_TMR0_DefaultInterruptHandler 0478  
          __size_of_TMR0_DefaultInterruptHandler 0001                     _TMR0_DefaultInterruptHandler 0477  
                           __CFG_WDTCWS$WDTCWS_7 0000                                 conf_sensor@F6602 00AE  
                               conf_sensor@F6604 00E7                                       _RC1STAbits 011D  
                       __size_of_bmp280_set_regs 0093                                         int$flags 007E  
             __end_of_INTERRUPT_InterruptManager 001B                       _INTERRUPT_InterruptManager 0004  
                                       main@rslt 00E6                              _EUSART1_Receive_ISR 032E  
                        __end_of_interleave_data 0308                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0070                        bmp280_soft_reset@reg_addr 003D  
                                ?_null_ptr_check 0070                    __size_of_BMP280_SPI_bus_write 000B  
                                       intlevel1 0000                             ?_EUSART1_Receive_ISR 0070  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
                     BMP280_SPI_bus_write@iError 0020                                 ??_ADC_Initialize 0073  
                  ?_TMR0_DefaultInterruptHandler 0070                           __size_of_EUSART1_Write 0007  
                                  __pstringtext1 03E4                                    __pstringtext2 0466  
                                  __pstringtext3 046A                                    __pstringtext4 046E  
                                _TMR0_Initialize 03B3                             get_calib_param@F6534 013E  
                                     _TX1STAbits 011E                            ??_EUSART1_Receive_ISR 0071  
                 __end_of_PIN_MANAGER_Initialize 032E                             __size_of_bmp280_init 0097  
                              ??_bmp280_get_regs 0049                       __end_of_spi1_configuration 0471  
                            get_calib_param@temp 0053                              get_calib_param@rslt 006B  
