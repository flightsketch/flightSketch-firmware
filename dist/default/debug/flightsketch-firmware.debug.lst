

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 27 22:41:52 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F15325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.00
    55                           ; Generated 27/05/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F15325 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000E                     	;# 
   102  0012                     	;# 
   103  0014                     	;# 
   104  0018                     	;# 
   105  001A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0119                     	;# 
   113  0119                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011A                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011C                     	;# 
   125  011C                     	;# 
   126  011D                     	;# 
   127  011D                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  011E                     	;# 
   131  011E                     	;# 
   132  011F                     	;# 
   133  011F                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  018F                     	;# 
   141  0190                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  020C                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  020F                     	;# 
   149  020F                     	;# 
   150  0210                     	;# 
   151  0210                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  028C                     	;# 
   155  028C                     	;# 
   156  028D                     	;# 
   157  028D                     	;# 
   158  028E                     	;# 
   159  028F                     	;# 
   160  0290                     	;# 
   161  0291                     	;# 
   162  030C                     	;# 
   163  030C                     	;# 
   164  030D                     	;# 
   165  030E                     	;# 
   166  030F                     	;# 
   167  0310                     	;# 
   168  0310                     	;# 
   169  0311                     	;# 
   170  0312                     	;# 
   171  0313                     	;# 
   172  0314                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0316                     	;# 
   176  0318                     	;# 
   177  0318                     	;# 
   178  0319                     	;# 
   179  031A                     	;# 
   180  031C                     	;# 
   181  031C                     	;# 
   182  031D                     	;# 
   183  031E                     	;# 
   184  038C                     	;# 
   185  038C                     	;# 
   186  038D                     	;# 
   187  038E                     	;# 
   188  058C                     	;# 
   189  058C                     	;# 
   190  058D                     	;# 
   191  058E                     	;# 
   192  058F                     	;# 
   193  058F                     	;# 
   194  0590                     	;# 
   195  0591                     	;# 
   196  0592                     	;# 
   197  0593                     	;# 
   198  059C                     	;# 
   199  059C                     	;# 
   200  059D                     	;# 
   201  059D                     	;# 
   202  059E                     	;# 
   203  059F                     	;# 
   204  060C                     	;# 
   205  060D                     	;# 
   206  060E                     	;# 
   207  060F                     	;# 
   208  0610                     	;# 
   209  0611                     	;# 
   210  0612                     	;# 
   211  0613                     	;# 
   212  0614                     	;# 
   213  070C                     	;# 
   214  070D                     	;# 
   215  070E                     	;# 
   216  070F                     	;# 
   217  0710                     	;# 
   218  0711                     	;# 
   219  0712                     	;# 
   220  0713                     	;# 
   221  0716                     	;# 
   222  0717                     	;# 
   223  0718                     	;# 
   224  0719                     	;# 
   225  071A                     	;# 
   226  071B                     	;# 
   227  071C                     	;# 
   228  071D                     	;# 
   229  0796                     	;# 
   230  0797                     	;# 
   231  0798                     	;# 
   232  0799                     	;# 
   233  079A                     	;# 
   234  079B                     	;# 
   235  080C                     	;# 
   236  080D                     	;# 
   237  080E                     	;# 
   238  080F                     	;# 
   239  0810                     	;# 
   240  0811                     	;# 
   241  0812                     	;# 
   242  0813                     	;# 
   243  0814                     	;# 
   244  081A                     	;# 
   245  081A                     	;# 
   246  081B                     	;# 
   247  081C                     	;# 
   248  081C                     	;# 
   249  081D                     	;# 
   250  081E                     	;# 
   251  081F                     	;# 
   252  088C                     	;# 
   253  088D                     	;# 
   254  088E                     	;# 
   255  088F                     	;# 
   256  0890                     	;# 
   257  0891                     	;# 
   258  0892                     	;# 
   259  0893                     	;# 
   260  0895                     	;# 
   261  0896                     	;# 
   262  090C                     	;# 
   263  090E                     	;# 
   264  090F                     	;# 
   265  091F                     	;# 
   266  098F                     	;# 
   267  098F                     	;# 
   268  0990                     	;# 
   269  0991                     	;# 
   270  0992                     	;# 
   271  0993                     	;# 
   272  0994                     	;# 
   273  0995                     	;# 
   274  0996                     	;# 
   275  0997                     	;# 
   276  0A19                     	;# 
   277  0A19                     	;# 
   278  0A1A                     	;# 
   279  0A1A                     	;# 
   280  0A1B                     	;# 
   281  0A1B                     	;# 
   282  0A1B                     	;# 
   283  0A1C                     	;# 
   284  0A1C                     	;# 
   285  0A1D                     	;# 
   286  0A1D                     	;# 
   287  0A1E                     	;# 
   288  0A1E                     	;# 
   289  0A1F                     	;# 
   290  0A1F                     	;# 
   291  0A1F                     	;# 
   292  1E0F                     	;# 
   293  1E10                     	;# 
   294  1E11                     	;# 
   295  1E12                     	;# 
   296  1E13                     	;# 
   297  1E14                     	;# 
   298  1E15                     	;# 
   299  1E16                     	;# 
   300  1E17                     	;# 
   301  1E18                     	;# 
   302  1E19                     	;# 
   303  1E1A                     	;# 
   304  1E1B                     	;# 
   305  1E1C                     	;# 
   306  1E1D                     	;# 
   307  1E1E                     	;# 
   308  1E1F                     	;# 
   309  1E20                     	;# 
   310  1E21                     	;# 
   311  1E22                     	;# 
   312  1E23                     	;# 
   313  1E24                     	;# 
   314  1E25                     	;# 
   315  1E26                     	;# 
   316  1E27                     	;# 
   317  1E28                     	;# 
   318  1E29                     	;# 
   319  1E2A                     	;# 
   320  1E2B                     	;# 
   321  1E2C                     	;# 
   322  1E2D                     	;# 
   323  1E2E                     	;# 
   324  1E2F                     	;# 
   325  1E30                     	;# 
   326  1E31                     	;# 
   327  1E32                     	;# 
   328  1E33                     	;# 
   329  1E34                     	;# 
   330  1E35                     	;# 
   331  1E36                     	;# 
   332  1E37                     	;# 
   333  1E8F                     	;# 
   334  1E90                     	;# 
   335  1E91                     	;# 
   336  1E92                     	;# 
   337  1E93                     	;# 
   338  1E9C                     	;# 
   339  1EA1                     	;# 
   340  1EA2                     	;# 
   341  1EB1                     	;# 
   342  1EBB                     	;# 
   343  1EBC                     	;# 
   344  1EBD                     	;# 
   345  1EBE                     	;# 
   346  1EC3                     	;# 
   347  1EC5                     	;# 
   348  1EC6                     	;# 
   349  1EC7                     	;# 
   350  1ECB                     	;# 
   351  1ECC                     	;# 
   352  1ECD                     	;# 
   353  1ECE                     	;# 
   354  1F10                     	;# 
   355  1F11                     	;# 
   356  1F12                     	;# 
   357  1F13                     	;# 
   358  1F14                     	;# 
   359  1F15                     	;# 
   360  1F20                     	;# 
   361  1F21                     	;# 
   362  1F22                     	;# 
   363  1F23                     	;# 
   364  1F24                     	;# 
   365  1F25                     	;# 
   366  1F38                     	;# 
   367  1F39                     	;# 
   368  1F3A                     	;# 
   369  1F3B                     	;# 
   370  1F3C                     	;# 
   371  1F3D                     	;# 
   372  1F3E                     	;# 
   373  1F3F                     	;# 
   374  1F4E                     	;# 
   375  1F4F                     	;# 
   376  1F50                     	;# 
   377  1F51                     	;# 
   378  1F52                     	;# 
   379  1F53                     	;# 
   380  1F54                     	;# 
   381  1F55                     	;# 
   382  1FE4                     	;# 
   383  1FE5                     	;# 
   384  1FE6                     	;# 
   385  1FE7                     	;# 
   386  1FE8                     	;# 
   387  1FE8                     	;# 
   388  1FE9                     	;# 
   389  1FEA                     	;# 
   390  1FEA                     	;# 
   391  1FEB                     	;# 
   392  1FED                     	;# 
   393  1FEE                     	;# 
   394  1FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000E                     	;# 
   409  0012                     	;# 
   410  0014                     	;# 
   411  0018                     	;# 
   412  001A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  0119                     	;# 
   420  0119                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011A                     	;# 
   424  011A                     	;# 
   425  011B                     	;# 
   426  011B                     	;# 
   427  011B                     	;# 
   428  011B                     	;# 
   429  011B                     	;# 
   430  011C                     	;# 
   431  011C                     	;# 
   432  011C                     	;# 
   433  011D                     	;# 
   434  011D                     	;# 
   435  011D                     	;# 
   436  011E                     	;# 
   437  011E                     	;# 
   438  011E                     	;# 
   439  011F                     	;# 
   440  011F                     	;# 
   441  011F                     	;# 
   442  011F                     	;# 
   443  011F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  018E                     	;# 
   447  018F                     	;# 
   448  0190                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  020C                     	;# 
   452  020C                     	;# 
   453  020D                     	;# 
   454  020E                     	;# 
   455  020F                     	;# 
   456  020F                     	;# 
   457  0210                     	;# 
   458  0210                     	;# 
   459  0211                     	;# 
   460  0211                     	;# 
   461  028C                     	;# 
   462  028C                     	;# 
   463  028D                     	;# 
   464  028D                     	;# 
   465  028E                     	;# 
   466  028F                     	;# 
   467  0290                     	;# 
   468  0291                     	;# 
   469  030C                     	;# 
   470  030C                     	;# 
   471  030D                     	;# 
   472  030E                     	;# 
   473  030F                     	;# 
   474  0310                     	;# 
   475  0310                     	;# 
   476  0311                     	;# 
   477  0312                     	;# 
   478  0313                     	;# 
   479  0314                     	;# 
   480  0314                     	;# 
   481  0315                     	;# 
   482  0316                     	;# 
   483  0318                     	;# 
   484  0318                     	;# 
   485  0319                     	;# 
   486  031A                     	;# 
   487  031C                     	;# 
   488  031C                     	;# 
   489  031D                     	;# 
   490  031E                     	;# 
   491  038C                     	;# 
   492  038C                     	;# 
   493  038D                     	;# 
   494  038E                     	;# 
   495  058C                     	;# 
   496  058C                     	;# 
   497  058D                     	;# 
   498  058E                     	;# 
   499  058F                     	;# 
   500  058F                     	;# 
   501  0590                     	;# 
   502  0591                     	;# 
   503  0592                     	;# 
   504  0593                     	;# 
   505  059C                     	;# 
   506  059C                     	;# 
   507  059D                     	;# 
   508  059D                     	;# 
   509  059E                     	;# 
   510  059F                     	;# 
   511  060C                     	;# 
   512  060D                     	;# 
   513  060E                     	;# 
   514  060F                     	;# 
   515  0610                     	;# 
   516  0611                     	;# 
   517  0612                     	;# 
   518  0613                     	;# 
   519  0614                     	;# 
   520  070C                     	;# 
   521  070D                     	;# 
   522  070E                     	;# 
   523  070F                     	;# 
   524  0710                     	;# 
   525  0711                     	;# 
   526  0712                     	;# 
   527  0713                     	;# 
   528  0716                     	;# 
   529  0717                     	;# 
   530  0718                     	;# 
   531  0719                     	;# 
   532  071A                     	;# 
   533  071B                     	;# 
   534  071C                     	;# 
   535  071D                     	;# 
   536  0796                     	;# 
   537  0797                     	;# 
   538  0798                     	;# 
   539  0799                     	;# 
   540  079A                     	;# 
   541  079B                     	;# 
   542  080C                     	;# 
   543  080D                     	;# 
   544  080E                     	;# 
   545  080F                     	;# 
   546  0810                     	;# 
   547  0811                     	;# 
   548  0812                     	;# 
   549  0813                     	;# 
   550  0814                     	;# 
   551  081A                     	;# 
   552  081A                     	;# 
   553  081B                     	;# 
   554  081C                     	;# 
   555  081C                     	;# 
   556  081D                     	;# 
   557  081E                     	;# 
   558  081F                     	;# 
   559  088C                     	;# 
   560  088D                     	;# 
   561  088E                     	;# 
   562  088F                     	;# 
   563  0890                     	;# 
   564  0891                     	;# 
   565  0892                     	;# 
   566  0893                     	;# 
   567  0895                     	;# 
   568  0896                     	;# 
   569  090C                     	;# 
   570  090E                     	;# 
   571  090F                     	;# 
   572  091F                     	;# 
   573  098F                     	;# 
   574  098F                     	;# 
   575  0990                     	;# 
   576  0991                     	;# 
   577  0992                     	;# 
   578  0993                     	;# 
   579  0994                     	;# 
   580  0995                     	;# 
   581  0996                     	;# 
   582  0997                     	;# 
   583  0A19                     	;# 
   584  0A19                     	;# 
   585  0A1A                     	;# 
   586  0A1A                     	;# 
   587  0A1B                     	;# 
   588  0A1B                     	;# 
   589  0A1B                     	;# 
   590  0A1C                     	;# 
   591  0A1C                     	;# 
   592  0A1D                     	;# 
   593  0A1D                     	;# 
   594  0A1E                     	;# 
   595  0A1E                     	;# 
   596  0A1F                     	;# 
   597  0A1F                     	;# 
   598  0A1F                     	;# 
   599  1E0F                     	;# 
   600  1E10                     	;# 
   601  1E11                     	;# 
   602  1E12                     	;# 
   603  1E13                     	;# 
   604  1E14                     	;# 
   605  1E15                     	;# 
   606  1E16                     	;# 
   607  1E17                     	;# 
   608  1E18                     	;# 
   609  1E19                     	;# 
   610  1E1A                     	;# 
   611  1E1B                     	;# 
   612  1E1C                     	;# 
   613  1E1D                     	;# 
   614  1E1E                     	;# 
   615  1E1F                     	;# 
   616  1E20                     	;# 
   617  1E21                     	;# 
   618  1E22                     	;# 
   619  1E23                     	;# 
   620  1E24                     	;# 
   621  1E25                     	;# 
   622  1E26                     	;# 
   623  1E27                     	;# 
   624  1E28                     	;# 
   625  1E29                     	;# 
   626  1E2A                     	;# 
   627  1E2B                     	;# 
   628  1E2C                     	;# 
   629  1E2D                     	;# 
   630  1E2E                     	;# 
   631  1E2F                     	;# 
   632  1E30                     	;# 
   633  1E31                     	;# 
   634  1E32                     	;# 
   635  1E33                     	;# 
   636  1E34                     	;# 
   637  1E35                     	;# 
   638  1E36                     	;# 
   639  1E37                     	;# 
   640  1E8F                     	;# 
   641  1E90                     	;# 
   642  1E91                     	;# 
   643  1E92                     	;# 
   644  1E93                     	;# 
   645  1E9C                     	;# 
   646  1EA1                     	;# 
   647  1EA2                     	;# 
   648  1EB1                     	;# 
   649  1EBB                     	;# 
   650  1EBC                     	;# 
   651  1EBD                     	;# 
   652  1EBE                     	;# 
   653  1EC3                     	;# 
   654  1EC5                     	;# 
   655  1EC6                     	;# 
   656  1EC7                     	;# 
   657  1ECB                     	;# 
   658  1ECC                     	;# 
   659  1ECD                     	;# 
   660  1ECE                     	;# 
   661  1F10                     	;# 
   662  1F11                     	;# 
   663  1F12                     	;# 
   664  1F13                     	;# 
   665  1F14                     	;# 
   666  1F15                     	;# 
   667  1F20                     	;# 
   668  1F21                     	;# 
   669  1F22                     	;# 
   670  1F23                     	;# 
   671  1F24                     	;# 
   672  1F25                     	;# 
   673  1F38                     	;# 
   674  1F39                     	;# 
   675  1F3A                     	;# 
   676  1F3B                     	;# 
   677  1F3C                     	;# 
   678  1F3D                     	;# 
   679  1F3E                     	;# 
   680  1F3F                     	;# 
   681  1F4E                     	;# 
   682  1F4F                     	;# 
   683  1F50                     	;# 
   684  1F51                     	;# 
   685  1F52                     	;# 
   686  1F53                     	;# 
   687  1F54                     	;# 
   688  1F55                     	;# 
   689  1FE4                     	;# 
   690  1FE5                     	;# 
   691  1FE6                     	;# 
   692  1FE7                     	;# 
   693  1FE8                     	;# 
   694  1FE8                     	;# 
   695  1FE9                     	;# 
   696  1FEA                     	;# 
   697  1FEA                     	;# 
   698  1FEB                     	;# 
   699  1FED                     	;# 
   700  1FEE                     	;# 
   701  1FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000E                     	;# 
   716  0012                     	;# 
   717  0014                     	;# 
   718  0018                     	;# 
   719  001A                     	;# 
   720  009B                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  009F                     	;# 
   726  0119                     	;# 
   727  0119                     	;# 
   728  0119                     	;# 
   729  011A                     	;# 
   730  011A                     	;# 
   731  011A                     	;# 
   732  011B                     	;# 
   733  011B                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011C                     	;# 
   738  011C                     	;# 
   739  011C                     	;# 
   740  011D                     	;# 
   741  011D                     	;# 
   742  011D                     	;# 
   743  011E                     	;# 
   744  011E                     	;# 
   745  011E                     	;# 
   746  011F                     	;# 
   747  011F                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  018C                     	;# 
   752  018D                     	;# 
   753  018E                     	;# 
   754  018F                     	;# 
   755  0190                     	;# 
   756  0191                     	;# 
   757  0192                     	;# 
   758  020C                     	;# 
   759  020C                     	;# 
   760  020D                     	;# 
   761  020E                     	;# 
   762  020F                     	;# 
   763  020F                     	;# 
   764  0210                     	;# 
   765  0210                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  028C                     	;# 
   769  028C                     	;# 
   770  028D                     	;# 
   771  028D                     	;# 
   772  028E                     	;# 
   773  028F                     	;# 
   774  0290                     	;# 
   775  0291                     	;# 
   776  030C                     	;# 
   777  030C                     	;# 
   778  030D                     	;# 
   779  030E                     	;# 
   780  030F                     	;# 
   781  0310                     	;# 
   782  0310                     	;# 
   783  0311                     	;# 
   784  0312                     	;# 
   785  0313                     	;# 
   786  0314                     	;# 
   787  0314                     	;# 
   788  0315                     	;# 
   789  0316                     	;# 
   790  0318                     	;# 
   791  0318                     	;# 
   792  0319                     	;# 
   793  031A                     	;# 
   794  031C                     	;# 
   795  031C                     	;# 
   796  031D                     	;# 
   797  031E                     	;# 
   798  038C                     	;# 
   799  038C                     	;# 
   800  038D                     	;# 
   801  038E                     	;# 
   802  058C                     	;# 
   803  058C                     	;# 
   804  058D                     	;# 
   805  058E                     	;# 
   806  058F                     	;# 
   807  058F                     	;# 
   808  0590                     	;# 
   809  0591                     	;# 
   810  0592                     	;# 
   811  0593                     	;# 
   812  059C                     	;# 
   813  059C                     	;# 
   814  059D                     	;# 
   815  059D                     	;# 
   816  059E                     	;# 
   817  059F                     	;# 
   818  060C                     	;# 
   819  060D                     	;# 
   820  060E                     	;# 
   821  060F                     	;# 
   822  0610                     	;# 
   823  0611                     	;# 
   824  0612                     	;# 
   825  0613                     	;# 
   826  0614                     	;# 
   827  070C                     	;# 
   828  070D                     	;# 
   829  070E                     	;# 
   830  070F                     	;# 
   831  0710                     	;# 
   832  0711                     	;# 
   833  0712                     	;# 
   834  0713                     	;# 
   835  0716                     	;# 
   836  0717                     	;# 
   837  0718                     	;# 
   838  0719                     	;# 
   839  071A                     	;# 
   840  071B                     	;# 
   841  071C                     	;# 
   842  071D                     	;# 
   843  0796                     	;# 
   844  0797                     	;# 
   845  0798                     	;# 
   846  0799                     	;# 
   847  079A                     	;# 
   848  079B                     	;# 
   849  080C                     	;# 
   850  080D                     	;# 
   851  080E                     	;# 
   852  080F                     	;# 
   853  0810                     	;# 
   854  0811                     	;# 
   855  0812                     	;# 
   856  0813                     	;# 
   857  0814                     	;# 
   858  081A                     	;# 
   859  081A                     	;# 
   860  081B                     	;# 
   861  081C                     	;# 
   862  081C                     	;# 
   863  081D                     	;# 
   864  081E                     	;# 
   865  081F                     	;# 
   866  088C                     	;# 
   867  088D                     	;# 
   868  088E                     	;# 
   869  088F                     	;# 
   870  0890                     	;# 
   871  0891                     	;# 
   872  0892                     	;# 
   873  0893                     	;# 
   874  0895                     	;# 
   875  0896                     	;# 
   876  090C                     	;# 
   877  090E                     	;# 
   878  090F                     	;# 
   879  091F                     	;# 
   880  098F                     	;# 
   881  098F                     	;# 
   882  0990                     	;# 
   883  0991                     	;# 
   884  0992                     	;# 
   885  0993                     	;# 
   886  0994                     	;# 
   887  0995                     	;# 
   888  0996                     	;# 
   889  0997                     	;# 
   890  0A19                     	;# 
   891  0A19                     	;# 
   892  0A1A                     	;# 
   893  0A1A                     	;# 
   894  0A1B                     	;# 
   895  0A1B                     	;# 
   896  0A1B                     	;# 
   897  0A1C                     	;# 
   898  0A1C                     	;# 
   899  0A1D                     	;# 
   900  0A1D                     	;# 
   901  0A1E                     	;# 
   902  0A1E                     	;# 
   903  0A1F                     	;# 
   904  0A1F                     	;# 
   905  0A1F                     	;# 
   906  1E0F                     	;# 
   907  1E10                     	;# 
   908  1E11                     	;# 
   909  1E12                     	;# 
   910  1E13                     	;# 
   911  1E14                     	;# 
   912  1E15                     	;# 
   913  1E16                     	;# 
   914  1E17                     	;# 
   915  1E18                     	;# 
   916  1E19                     	;# 
   917  1E1A                     	;# 
   918  1E1B                     	;# 
   919  1E1C                     	;# 
   920  1E1D                     	;# 
   921  1E1E                     	;# 
   922  1E1F                     	;# 
   923  1E20                     	;# 
   924  1E21                     	;# 
   925  1E22                     	;# 
   926  1E23                     	;# 
   927  1E24                     	;# 
   928  1E25                     	;# 
   929  1E26                     	;# 
   930  1E27                     	;# 
   931  1E28                     	;# 
   932  1E29                     	;# 
   933  1E2A                     	;# 
   934  1E2B                     	;# 
   935  1E2C                     	;# 
   936  1E2D                     	;# 
   937  1E2E                     	;# 
   938  1E2F                     	;# 
   939  1E30                     	;# 
   940  1E31                     	;# 
   941  1E32                     	;# 
   942  1E33                     	;# 
   943  1E34                     	;# 
   944  1E35                     	;# 
   945  1E36                     	;# 
   946  1E37                     	;# 
   947  1E8F                     	;# 
   948  1E90                     	;# 
   949  1E91                     	;# 
   950  1E92                     	;# 
   951  1E93                     	;# 
   952  1E9C                     	;# 
   953  1EA1                     	;# 
   954  1EA2                     	;# 
   955  1EB1                     	;# 
   956  1EBB                     	;# 
   957  1EBC                     	;# 
   958  1EBD                     	;# 
   959  1EBE                     	;# 
   960  1EC3                     	;# 
   961  1EC5                     	;# 
   962  1EC6                     	;# 
   963  1EC7                     	;# 
   964  1ECB                     	;# 
   965  1ECC                     	;# 
   966  1ECD                     	;# 
   967  1ECE                     	;# 
   968  1F10                     	;# 
   969  1F11                     	;# 
   970  1F12                     	;# 
   971  1F13                     	;# 
   972  1F14                     	;# 
   973  1F15                     	;# 
   974  1F20                     	;# 
   975  1F21                     	;# 
   976  1F22                     	;# 
   977  1F23                     	;# 
   978  1F24                     	;# 
   979  1F25                     	;# 
   980  1F38                     	;# 
   981  1F39                     	;# 
   982  1F3A                     	;# 
   983  1F3B                     	;# 
   984  1F3C                     	;# 
   985  1F3D                     	;# 
   986  1F3E                     	;# 
   987  1F3F                     	;# 
   988  1F4E                     	;# 
   989  1F4F                     	;# 
   990  1F50                     	;# 
   991  1F51                     	;# 
   992  1F52                     	;# 
   993  1F53                     	;# 
   994  1F54                     	;# 
   995  1F55                     	;# 
   996  1FE4                     	;# 
   997  1FE5                     	;# 
   998  1FE6                     	;# 
   999  1FE7                     	;# 
  1000  1FE8                     	;# 
  1001  1FE8                     	;# 
  1002  1FE9                     	;# 
  1003  1FEA                     	;# 
  1004  1FEA                     	;# 
  1005  1FEB                     	;# 
  1006  1FED                     	;# 
  1007  1FEE                     	;# 
  1008  1FEF                     	;# 
  1009  0000                     	;# 
  1010  0001                     	;# 
  1011  0002                     	;# 
  1012  0003                     	;# 
  1013  0004                     	;# 
  1014  0005                     	;# 
  1015  0006                     	;# 
  1016  0007                     	;# 
  1017  0008                     	;# 
  1018  0009                     	;# 
  1019  000A                     	;# 
  1020  000B                     	;# 
  1021  000C                     	;# 
  1022  000E                     	;# 
  1023  0012                     	;# 
  1024  0014                     	;# 
  1025  0018                     	;# 
  1026  001A                     	;# 
  1027  009B                     	;# 
  1028  009B                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009E                     	;# 
  1032  009F                     	;# 
  1033  0119                     	;# 
  1034  0119                     	;# 
  1035  0119                     	;# 
  1036  011A                     	;# 
  1037  011A                     	;# 
  1038  011A                     	;# 
  1039  011B                     	;# 
  1040  011B                     	;# 
  1041  011B                     	;# 
  1042  011B                     	;# 
  1043  011B                     	;# 
  1044  011C                     	;# 
  1045  011C                     	;# 
  1046  011C                     	;# 
  1047  011D                     	;# 
  1048  011D                     	;# 
  1049  011D                     	;# 
  1050  011E                     	;# 
  1051  011E                     	;# 
  1052  011E                     	;# 
  1053  011F                     	;# 
  1054  011F                     	;# 
  1055  011F                     	;# 
  1056  011F                     	;# 
  1057  011F                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  018F                     	;# 
  1062  0190                     	;# 
  1063  0191                     	;# 
  1064  0192                     	;# 
  1065  020C                     	;# 
  1066  020C                     	;# 
  1067  020D                     	;# 
  1068  020E                     	;# 
  1069  020F                     	;# 
  1070  020F                     	;# 
  1071  0210                     	;# 
  1072  0210                     	;# 
  1073  0211                     	;# 
  1074  0211                     	;# 
  1075  028C                     	;# 
  1076  028C                     	;# 
  1077  028D                     	;# 
  1078  028D                     	;# 
  1079  028E                     	;# 
  1080  028F                     	;# 
  1081  0290                     	;# 
  1082  0291                     	;# 
  1083  030C                     	;# 
  1084  030C                     	;# 
  1085  030D                     	;# 
  1086  030E                     	;# 
  1087  030F                     	;# 
  1088  0310                     	;# 
  1089  0310                     	;# 
  1090  0311                     	;# 
  1091  0312                     	;# 
  1092  0313                     	;# 
  1093  0314                     	;# 
  1094  0314                     	;# 
  1095  0315                     	;# 
  1096  0316                     	;# 
  1097  0318                     	;# 
  1098  0318                     	;# 
  1099  0319                     	;# 
  1100  031A                     	;# 
  1101  031C                     	;# 
  1102  031C                     	;# 
  1103  031D                     	;# 
  1104  031E                     	;# 
  1105  038C                     	;# 
  1106  038C                     	;# 
  1107  038D                     	;# 
  1108  038E                     	;# 
  1109  058C                     	;# 
  1110  058C                     	;# 
  1111  058D                     	;# 
  1112  058E                     	;# 
  1113  058F                     	;# 
  1114  058F                     	;# 
  1115  0590                     	;# 
  1116  0591                     	;# 
  1117  0592                     	;# 
  1118  0593                     	;# 
  1119  059C                     	;# 
  1120  059C                     	;# 
  1121  059D                     	;# 
  1122  059D                     	;# 
  1123  059E                     	;# 
  1124  059F                     	;# 
  1125  060C                     	;# 
  1126  060D                     	;# 
  1127  060E                     	;# 
  1128  060F                     	;# 
  1129  0610                     	;# 
  1130  0611                     	;# 
  1131  0612                     	;# 
  1132  0613                     	;# 
  1133  0614                     	;# 
  1134  070C                     	;# 
  1135  070D                     	;# 
  1136  070E                     	;# 
  1137  070F                     	;# 
  1138  0710                     	;# 
  1139  0711                     	;# 
  1140  0712                     	;# 
  1141  0713                     	;# 
  1142  0716                     	;# 
  1143  0717                     	;# 
  1144  0718                     	;# 
  1145  0719                     	;# 
  1146  071A                     	;# 
  1147  071B                     	;# 
  1148  071C                     	;# 
  1149  071D                     	;# 
  1150  0796                     	;# 
  1151  0797                     	;# 
  1152  0798                     	;# 
  1153  0799                     	;# 
  1154  079A                     	;# 
  1155  079B                     	;# 
  1156  080C                     	;# 
  1157  080D                     	;# 
  1158  080E                     	;# 
  1159  080F                     	;# 
  1160  0810                     	;# 
  1161  0811                     	;# 
  1162  0812                     	;# 
  1163  0813                     	;# 
  1164  0814                     	;# 
  1165  081A                     	;# 
  1166  081A                     	;# 
  1167  081B                     	;# 
  1168  081C                     	;# 
  1169  081C                     	;# 
  1170  081D                     	;# 
  1171  081E                     	;# 
  1172  081F                     	;# 
  1173  088C                     	;# 
  1174  088D                     	;# 
  1175  088E                     	;# 
  1176  088F                     	;# 
  1177  0890                     	;# 
  1178  0891                     	;# 
  1179  0892                     	;# 
  1180  0893                     	;# 
  1181  0895                     	;# 
  1182  0896                     	;# 
  1183  090C                     	;# 
  1184  090E                     	;# 
  1185  090F                     	;# 
  1186  091F                     	;# 
  1187  098F                     	;# 
  1188  098F                     	;# 
  1189  0990                     	;# 
  1190  0991                     	;# 
  1191  0992                     	;# 
  1192  0993                     	;# 
  1193  0994                     	;# 
  1194  0995                     	;# 
  1195  0996                     	;# 
  1196  0997                     	;# 
  1197  0A19                     	;# 
  1198  0A19                     	;# 
  1199  0A1A                     	;# 
  1200  0A1A                     	;# 
  1201  0A1B                     	;# 
  1202  0A1B                     	;# 
  1203  0A1B                     	;# 
  1204  0A1C                     	;# 
  1205  0A1C                     	;# 
  1206  0A1D                     	;# 
  1207  0A1D                     	;# 
  1208  0A1E                     	;# 
  1209  0A1E                     	;# 
  1210  0A1F                     	;# 
  1211  0A1F                     	;# 
  1212  0A1F                     	;# 
  1213  1E0F                     	;# 
  1214  1E10                     	;# 
  1215  1E11                     	;# 
  1216  1E12                     	;# 
  1217  1E13                     	;# 
  1218  1E14                     	;# 
  1219  1E15                     	;# 
  1220  1E16                     	;# 
  1221  1E17                     	;# 
  1222  1E18                     	;# 
  1223  1E19                     	;# 
  1224  1E1A                     	;# 
  1225  1E1B                     	;# 
  1226  1E1C                     	;# 
  1227  1E1D                     	;# 
  1228  1E1E                     	;# 
  1229  1E1F                     	;# 
  1230  1E20                     	;# 
  1231  1E21                     	;# 
  1232  1E22                     	;# 
  1233  1E23                     	;# 
  1234  1E24                     	;# 
  1235  1E25                     	;# 
  1236  1E26                     	;# 
  1237  1E27                     	;# 
  1238  1E28                     	;# 
  1239  1E29                     	;# 
  1240  1E2A                     	;# 
  1241  1E2B                     	;# 
  1242  1E2C                     	;# 
  1243  1E2D                     	;# 
  1244  1E2E                     	;# 
  1245  1E2F                     	;# 
  1246  1E30                     	;# 
  1247  1E31                     	;# 
  1248  1E32                     	;# 
  1249  1E33                     	;# 
  1250  1E34                     	;# 
  1251  1E35                     	;# 
  1252  1E36                     	;# 
  1253  1E37                     	;# 
  1254  1E8F                     	;# 
  1255  1E90                     	;# 
  1256  1E91                     	;# 
  1257  1E92                     	;# 
  1258  1E93                     	;# 
  1259  1E9C                     	;# 
  1260  1EA1                     	;# 
  1261  1EA2                     	;# 
  1262  1EB1                     	;# 
  1263  1EBB                     	;# 
  1264  1EBC                     	;# 
  1265  1EBD                     	;# 
  1266  1EBE                     	;# 
  1267  1EC3                     	;# 
  1268  1EC5                     	;# 
  1269  1EC6                     	;# 
  1270  1EC7                     	;# 
  1271  1ECB                     	;# 
  1272  1ECC                     	;# 
  1273  1ECD                     	;# 
  1274  1ECE                     	;# 
  1275  1F10                     	;# 
  1276  1F11                     	;# 
  1277  1F12                     	;# 
  1278  1F13                     	;# 
  1279  1F14                     	;# 
  1280  1F15                     	;# 
  1281  1F20                     	;# 
  1282  1F21                     	;# 
  1283  1F22                     	;# 
  1284  1F23                     	;# 
  1285  1F24                     	;# 
  1286  1F25                     	;# 
  1287  1F38                     	;# 
  1288  1F39                     	;# 
  1289  1F3A                     	;# 
  1290  1F3B                     	;# 
  1291  1F3C                     	;# 
  1292  1F3D                     	;# 
  1293  1F3E                     	;# 
  1294  1F3F                     	;# 
  1295  1F4E                     	;# 
  1296  1F4F                     	;# 
  1297  1F50                     	;# 
  1298  1F51                     	;# 
  1299  1F52                     	;# 
  1300  1F53                     	;# 
  1301  1F54                     	;# 
  1302  1F55                     	;# 
  1303  1FE4                     	;# 
  1304  1FE5                     	;# 
  1305  1FE6                     	;# 
  1306  1FE7                     	;# 
  1307  1FE8                     	;# 
  1308  1FE8                     	;# 
  1309  1FE9                     	;# 
  1310  1FEA                     	;# 
  1311  1FEA                     	;# 
  1312  1FEB                     	;# 
  1313  1FED                     	;# 
  1314  1FEE                     	;# 
  1315  1FEF                     	;# 
  1316  0000                     	;# 
  1317  0001                     	;# 
  1318  0002                     	;# 
  1319  0003                     	;# 
  1320  0004                     	;# 
  1321  0005                     	;# 
  1322  0006                     	;# 
  1323  0007                     	;# 
  1324  0008                     	;# 
  1325  0009                     	;# 
  1326  000A                     	;# 
  1327  000B                     	;# 
  1328  000C                     	;# 
  1329  000E                     	;# 
  1330  0012                     	;# 
  1331  0014                     	;# 
  1332  0018                     	;# 
  1333  001A                     	;# 
  1334  009B                     	;# 
  1335  009B                     	;# 
  1336  009C                     	;# 
  1337  009D                     	;# 
  1338  009E                     	;# 
  1339  009F                     	;# 
  1340  0119                     	;# 
  1341  0119                     	;# 
  1342  0119                     	;# 
  1343  011A                     	;# 
  1344  011A                     	;# 
  1345  011A                     	;# 
  1346  011B                     	;# 
  1347  011B                     	;# 
  1348  011B                     	;# 
  1349  011B                     	;# 
  1350  011B                     	;# 
  1351  011C                     	;# 
  1352  011C                     	;# 
  1353  011C                     	;# 
  1354  011D                     	;# 
  1355  011D                     	;# 
  1356  011D                     	;# 
  1357  011E                     	;# 
  1358  011E                     	;# 
  1359  011E                     	;# 
  1360  011F                     	;# 
  1361  011F                     	;# 
  1362  011F                     	;# 
  1363  011F                     	;# 
  1364  011F                     	;# 
  1365  018C                     	;# 
  1366  018D                     	;# 
  1367  018E                     	;# 
  1368  018F                     	;# 
  1369  0190                     	;# 
  1370  0191                     	;# 
  1371  0192                     	;# 
  1372  020C                     	;# 
  1373  020C                     	;# 
  1374  020D                     	;# 
  1375  020E                     	;# 
  1376  020F                     	;# 
  1377  020F                     	;# 
  1378  0210                     	;# 
  1379  0210                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  028C                     	;# 
  1383  028C                     	;# 
  1384  028D                     	;# 
  1385  028D                     	;# 
  1386  028E                     	;# 
  1387  028F                     	;# 
  1388  0290                     	;# 
  1389  0291                     	;# 
  1390  030C                     	;# 
  1391  030C                     	;# 
  1392  030D                     	;# 
  1393  030E                     	;# 
  1394  030F                     	;# 
  1395  0310                     	;# 
  1396  0310                     	;# 
  1397  0311                     	;# 
  1398  0312                     	;# 
  1399  0313                     	;# 
  1400  0314                     	;# 
  1401  0314                     	;# 
  1402  0315                     	;# 
  1403  0316                     	;# 
  1404  0318                     	;# 
  1405  0318                     	;# 
  1406  0319                     	;# 
  1407  031A                     	;# 
  1408  031C                     	;# 
  1409  031C                     	;# 
  1410  031D                     	;# 
  1411  031E                     	;# 
  1412  038C                     	;# 
  1413  038C                     	;# 
  1414  038D                     	;# 
  1415  038E                     	;# 
  1416  058C                     	;# 
  1417  058C                     	;# 
  1418  058D                     	;# 
  1419  058E                     	;# 
  1420  058F                     	;# 
  1421  058F                     	;# 
  1422  0590                     	;# 
  1423  0591                     	;# 
  1424  0592                     	;# 
  1425  0593                     	;# 
  1426  059C                     	;# 
  1427  059C                     	;# 
  1428  059D                     	;# 
  1429  059D                     	;# 
  1430  059E                     	;# 
  1431  059F                     	;# 
  1432  060C                     	;# 
  1433  060D                     	;# 
  1434  060E                     	;# 
  1435  060F                     	;# 
  1436  0610                     	;# 
  1437  0611                     	;# 
  1438  0612                     	;# 
  1439  0613                     	;# 
  1440  0614                     	;# 
  1441  070C                     	;# 
  1442  070D                     	;# 
  1443  070E                     	;# 
  1444  070F                     	;# 
  1445  0710                     	;# 
  1446  0711                     	;# 
  1447  0712                     	;# 
  1448  0713                     	;# 
  1449  0716                     	;# 
  1450  0717                     	;# 
  1451  0718                     	;# 
  1452  0719                     	;# 
  1453  071A                     	;# 
  1454  071B                     	;# 
  1455  071C                     	;# 
  1456  071D                     	;# 
  1457  0796                     	;# 
  1458  0797                     	;# 
  1459  0798                     	;# 
  1460  0799                     	;# 
  1461  079A                     	;# 
  1462  079B                     	;# 
  1463  080C                     	;# 
  1464  080D                     	;# 
  1465  080E                     	;# 
  1466  080F                     	;# 
  1467  0810                     	;# 
  1468  0811                     	;# 
  1469  0812                     	;# 
  1470  0813                     	;# 
  1471  0814                     	;# 
  1472  081A                     	;# 
  1473  081A                     	;# 
  1474  081B                     	;# 
  1475  081C                     	;# 
  1476  081C                     	;# 
  1477  081D                     	;# 
  1478  081E                     	;# 
  1479  081F                     	;# 
  1480  088C                     	;# 
  1481  088D                     	;# 
  1482  088E                     	;# 
  1483  088F                     	;# 
  1484  0890                     	;# 
  1485  0891                     	;# 
  1486  0892                     	;# 
  1487  0893                     	;# 
  1488  0895                     	;# 
  1489  0896                     	;# 
  1490  090C                     	;# 
  1491  090E                     	;# 
  1492  090F                     	;# 
  1493  091F                     	;# 
  1494  098F                     	;# 
  1495  098F                     	;# 
  1496  0990                     	;# 
  1497  0991                     	;# 
  1498  0992                     	;# 
  1499  0993                     	;# 
  1500  0994                     	;# 
  1501  0995                     	;# 
  1502  0996                     	;# 
  1503  0997                     	;# 
  1504  0A19                     	;# 
  1505  0A19                     	;# 
  1506  0A1A                     	;# 
  1507  0A1A                     	;# 
  1508  0A1B                     	;# 
  1509  0A1B                     	;# 
  1510  0A1B                     	;# 
  1511  0A1C                     	;# 
  1512  0A1C                     	;# 
  1513  0A1D                     	;# 
  1514  0A1D                     	;# 
  1515  0A1E                     	;# 
  1516  0A1E                     	;# 
  1517  0A1F                     	;# 
  1518  0A1F                     	;# 
  1519  0A1F                     	;# 
  1520  1E0F                     	;# 
  1521  1E10                     	;# 
  1522  1E11                     	;# 
  1523  1E12                     	;# 
  1524  1E13                     	;# 
  1525  1E14                     	;# 
  1526  1E15                     	;# 
  1527  1E16                     	;# 
  1528  1E17                     	;# 
  1529  1E18                     	;# 
  1530  1E19                     	;# 
  1531  1E1A                     	;# 
  1532  1E1B                     	;# 
  1533  1E1C                     	;# 
  1534  1E1D                     	;# 
  1535  1E1E                     	;# 
  1536  1E1F                     	;# 
  1537  1E20                     	;# 
  1538  1E21                     	;# 
  1539  1E22                     	;# 
  1540  1E23                     	;# 
  1541  1E24                     	;# 
  1542  1E25                     	;# 
  1543  1E26                     	;# 
  1544  1E27                     	;# 
  1545  1E28                     	;# 
  1546  1E29                     	;# 
  1547  1E2A                     	;# 
  1548  1E2B                     	;# 
  1549  1E2C                     	;# 
  1550  1E2D                     	;# 
  1551  1E2E                     	;# 
  1552  1E2F                     	;# 
  1553  1E30                     	;# 
  1554  1E31                     	;# 
  1555  1E32                     	;# 
  1556  1E33                     	;# 
  1557  1E34                     	;# 
  1558  1E35                     	;# 
  1559  1E36                     	;# 
  1560  1E37                     	;# 
  1561  1E8F                     	;# 
  1562  1E90                     	;# 
  1563  1E91                     	;# 
  1564  1E92                     	;# 
  1565  1E93                     	;# 
  1566  1E9C                     	;# 
  1567  1EA1                     	;# 
  1568  1EA2                     	;# 
  1569  1EB1                     	;# 
  1570  1EBB                     	;# 
  1571  1EBC                     	;# 
  1572  1EBD                     	;# 
  1573  1EBE                     	;# 
  1574  1EC3                     	;# 
  1575  1EC5                     	;# 
  1576  1EC6                     	;# 
  1577  1EC7                     	;# 
  1578  1ECB                     	;# 
  1579  1ECC                     	;# 
  1580  1ECD                     	;# 
  1581  1ECE                     	;# 
  1582  1F10                     	;# 
  1583  1F11                     	;# 
  1584  1F12                     	;# 
  1585  1F13                     	;# 
  1586  1F14                     	;# 
  1587  1F15                     	;# 
  1588  1F20                     	;# 
  1589  1F21                     	;# 
  1590  1F22                     	;# 
  1591  1F23                     	;# 
  1592  1F24                     	;# 
  1593  1F25                     	;# 
  1594  1F38                     	;# 
  1595  1F39                     	;# 
  1596  1F3A                     	;# 
  1597  1F3B                     	;# 
  1598  1F3C                     	;# 
  1599  1F3D                     	;# 
  1600  1F3E                     	;# 
  1601  1F3F                     	;# 
  1602  1F4E                     	;# 
  1603  1F4F                     	;# 
  1604  1F50                     	;# 
  1605  1F51                     	;# 
  1606  1F52                     	;# 
  1607  1F53                     	;# 
  1608  1F54                     	;# 
  1609  1F55                     	;# 
  1610  1FE4                     	;# 
  1611  1FE5                     	;# 
  1612  1FE6                     	;# 
  1613  1FE7                     	;# 
  1614  1FE8                     	;# 
  1615  1FE8                     	;# 
  1616  1FE9                     	;# 
  1617  1FEA                     	;# 
  1618  1FEA                     	;# 
  1619  1FEB                     	;# 
  1620  1FED                     	;# 
  1621  1FEE                     	;# 
  1622  1FEF                     	;# 
  1623  0000                     	;# 
  1624  0001                     	;# 
  1625  0002                     	;# 
  1626  0003                     	;# 
  1627  0004                     	;# 
  1628  0005                     	;# 
  1629  0006                     	;# 
  1630  0007                     	;# 
  1631  0008                     	;# 
  1632  0009                     	;# 
  1633  000A                     	;# 
  1634  000B                     	;# 
  1635  000C                     	;# 
  1636  000E                     	;# 
  1637  0012                     	;# 
  1638  0014                     	;# 
  1639  0018                     	;# 
  1640  001A                     	;# 
  1641  009B                     	;# 
  1642  009B                     	;# 
  1643  009C                     	;# 
  1644  009D                     	;# 
  1645  009E                     	;# 
  1646  009F                     	;# 
  1647  0119                     	;# 
  1648  0119                     	;# 
  1649  0119                     	;# 
  1650  011A                     	;# 
  1651  011A                     	;# 
  1652  011A                     	;# 
  1653  011B                     	;# 
  1654  011B                     	;# 
  1655  011B                     	;# 
  1656  011B                     	;# 
  1657  011B                     	;# 
  1658  011C                     	;# 
  1659  011C                     	;# 
  1660  011C                     	;# 
  1661  011D                     	;# 
  1662  011D                     	;# 
  1663  011D                     	;# 
  1664  011E                     	;# 
  1665  011E                     	;# 
  1666  011E                     	;# 
  1667  011F                     	;# 
  1668  011F                     	;# 
  1669  011F                     	;# 
  1670  011F                     	;# 
  1671  011F                     	;# 
  1672  018C                     	;# 
  1673  018D                     	;# 
  1674  018E                     	;# 
  1675  018F                     	;# 
  1676  0190                     	;# 
  1677  0191                     	;# 
  1678  0192                     	;# 
  1679  020C                     	;# 
  1680  020C                     	;# 
  1681  020D                     	;# 
  1682  020E                     	;# 
  1683  020F                     	;# 
  1684  020F                     	;# 
  1685  0210                     	;# 
  1686  0210                     	;# 
  1687  0211                     	;# 
  1688  0211                     	;# 
  1689  028C                     	;# 
  1690  028C                     	;# 
  1691  028D                     	;# 
  1692  028D                     	;# 
  1693  028E                     	;# 
  1694  028F                     	;# 
  1695  0290                     	;# 
  1696  0291                     	;# 
  1697  030C                     	;# 
  1698  030C                     	;# 
  1699  030D                     	;# 
  1700  030E                     	;# 
  1701  030F                     	;# 
  1702  0310                     	;# 
  1703  0310                     	;# 
  1704  0311                     	;# 
  1705  0312                     	;# 
  1706  0313                     	;# 
  1707  0314                     	;# 
  1708  0314                     	;# 
  1709  0315                     	;# 
  1710  0316                     	;# 
  1711  0318                     	;# 
  1712  0318                     	;# 
  1713  0319                     	;# 
  1714  031A                     	;# 
  1715  031C                     	;# 
  1716  031C                     	;# 
  1717  031D                     	;# 
  1718  031E                     	;# 
  1719  038C                     	;# 
  1720  038C                     	;# 
  1721  038D                     	;# 
  1722  038E                     	;# 
  1723  058C                     	;# 
  1724  058C                     	;# 
  1725  058D                     	;# 
  1726  058E                     	;# 
  1727  058F                     	;# 
  1728  058F                     	;# 
  1729  0590                     	;# 
  1730  0591                     	;# 
  1731  0592                     	;# 
  1732  0593                     	;# 
  1733  059C                     	;# 
  1734  059C                     	;# 
  1735  059D                     	;# 
  1736  059D                     	;# 
  1737  059E                     	;# 
  1738  059F                     	;# 
  1739  060C                     	;# 
  1740  060D                     	;# 
  1741  060E                     	;# 
  1742  060F                     	;# 
  1743  0610                     	;# 
  1744  0611                     	;# 
  1745  0612                     	;# 
  1746  0613                     	;# 
  1747  0614                     	;# 
  1748  070C                     	;# 
  1749  070D                     	;# 
  1750  070E                     	;# 
  1751  070F                     	;# 
  1752  0710                     	;# 
  1753  0711                     	;# 
  1754  0712                     	;# 
  1755  0713                     	;# 
  1756  0716                     	;# 
  1757  0717                     	;# 
  1758  0718                     	;# 
  1759  0719                     	;# 
  1760  071A                     	;# 
  1761  071B                     	;# 
  1762  071C                     	;# 
  1763  071D                     	;# 
  1764  0796                     	;# 
  1765  0797                     	;# 
  1766  0798                     	;# 
  1767  0799                     	;# 
  1768  079A                     	;# 
  1769  079B                     	;# 
  1770  080C                     	;# 
  1771  080D                     	;# 
  1772  080E                     	;# 
  1773  080F                     	;# 
  1774  0810                     	;# 
  1775  0811                     	;# 
  1776  0812                     	;# 
  1777  0813                     	;# 
  1778  0814                     	;# 
  1779  081A                     	;# 
  1780  081A                     	;# 
  1781  081B                     	;# 
  1782  081C                     	;# 
  1783  081C                     	;# 
  1784  081D                     	;# 
  1785  081E                     	;# 
  1786  081F                     	;# 
  1787  088C                     	;# 
  1788  088D                     	;# 
  1789  088E                     	;# 
  1790  088F                     	;# 
  1791  0890                     	;# 
  1792  0891                     	;# 
  1793  0892                     	;# 
  1794  0893                     	;# 
  1795  0895                     	;# 
  1796  0896                     	;# 
  1797  090C                     	;# 
  1798  090E                     	;# 
  1799  090F                     	;# 
  1800  091F                     	;# 
  1801  098F                     	;# 
  1802  098F                     	;# 
  1803  0990                     	;# 
  1804  0991                     	;# 
  1805  0992                     	;# 
  1806  0993                     	;# 
  1807  0994                     	;# 
  1808  0995                     	;# 
  1809  0996                     	;# 
  1810  0997                     	;# 
  1811  0A19                     	;# 
  1812  0A19                     	;# 
  1813  0A1A                     	;# 
  1814  0A1A                     	;# 
  1815  0A1B                     	;# 
  1816  0A1B                     	;# 
  1817  0A1B                     	;# 
  1818  0A1C                     	;# 
  1819  0A1C                     	;# 
  1820  0A1D                     	;# 
  1821  0A1D                     	;# 
  1822  0A1E                     	;# 
  1823  0A1E                     	;# 
  1824  0A1F                     	;# 
  1825  0A1F                     	;# 
  1826  0A1F                     	;# 
  1827  1E0F                     	;# 
  1828  1E10                     	;# 
  1829  1E11                     	;# 
  1830  1E12                     	;# 
  1831  1E13                     	;# 
  1832  1E14                     	;# 
  1833  1E15                     	;# 
  1834  1E16                     	;# 
  1835  1E17                     	;# 
  1836  1E18                     	;# 
  1837  1E19                     	;# 
  1838  1E1A                     	;# 
  1839  1E1B                     	;# 
  1840  1E1C                     	;# 
  1841  1E1D                     	;# 
  1842  1E1E                     	;# 
  1843  1E1F                     	;# 
  1844  1E20                     	;# 
  1845  1E21                     	;# 
  1846  1E22                     	;# 
  1847  1E23                     	;# 
  1848  1E24                     	;# 
  1849  1E25                     	;# 
  1850  1E26                     	;# 
  1851  1E27                     	;# 
  1852  1E28                     	;# 
  1853  1E29                     	;# 
  1854  1E2A                     	;# 
  1855  1E2B                     	;# 
  1856  1E2C                     	;# 
  1857  1E2D                     	;# 
  1858  1E2E                     	;# 
  1859  1E2F                     	;# 
  1860  1E30                     	;# 
  1861  1E31                     	;# 
  1862  1E32                     	;# 
  1863  1E33                     	;# 
  1864  1E34                     	;# 
  1865  1E35                     	;# 
  1866  1E36                     	;# 
  1867  1E37                     	;# 
  1868  1E8F                     	;# 
  1869  1E90                     	;# 
  1870  1E91                     	;# 
  1871  1E92                     	;# 
  1872  1E93                     	;# 
  1873  1E9C                     	;# 
  1874  1EA1                     	;# 
  1875  1EA2                     	;# 
  1876  1EB1                     	;# 
  1877  1EBB                     	;# 
  1878  1EBC                     	;# 
  1879  1EBD                     	;# 
  1880  1EBE                     	;# 
  1881  1EC3                     	;# 
  1882  1EC5                     	;# 
  1883  1EC6                     	;# 
  1884  1EC7                     	;# 
  1885  1ECB                     	;# 
  1886  1ECC                     	;# 
  1887  1ECD                     	;# 
  1888  1ECE                     	;# 
  1889  1F10                     	;# 
  1890  1F11                     	;# 
  1891  1F12                     	;# 
  1892  1F13                     	;# 
  1893  1F14                     	;# 
  1894  1F15                     	;# 
  1895  1F20                     	;# 
  1896  1F21                     	;# 
  1897  1F22                     	;# 
  1898  1F23                     	;# 
  1899  1F24                     	;# 
  1900  1F25                     	;# 
  1901  1F38                     	;# 
  1902  1F39                     	;# 
  1903  1F3A                     	;# 
  1904  1F3B                     	;# 
  1905  1F3C                     	;# 
  1906  1F3D                     	;# 
  1907  1F3E                     	;# 
  1908  1F3F                     	;# 
  1909  1F4E                     	;# 
  1910  1F4F                     	;# 
  1911  1F50                     	;# 
  1912  1F51                     	;# 
  1913  1F52                     	;# 
  1914  1F53                     	;# 
  1915  1F54                     	;# 
  1916  1F55                     	;# 
  1917  1FE4                     	;# 
  1918  1FE5                     	;# 
  1919  1FE6                     	;# 
  1920  1FE7                     	;# 
  1921  1FE8                     	;# 
  1922  1FE8                     	;# 
  1923  1FE9                     	;# 
  1924  1FEA                     	;# 
  1925  1FEA                     	;# 
  1926  1FEB                     	;# 
  1927  1FED                     	;# 
  1928  1FEE                     	;# 
  1929  1FEF                     	;# 
  1930  0000                     	;# 
  1931  0001                     	;# 
  1932  0002                     	;# 
  1933  0003                     	;# 
  1934  0004                     	;# 
  1935  0005                     	;# 
  1936  0006                     	;# 
  1937  0007                     	;# 
  1938  0008                     	;# 
  1939  0009                     	;# 
  1940  000A                     	;# 
  1941  000B                     	;# 
  1942  000C                     	;# 
  1943  000E                     	;# 
  1944  0012                     	;# 
  1945  0014                     	;# 
  1946  0018                     	;# 
  1947  001A                     	;# 
  1948  009B                     	;# 
  1949  009B                     	;# 
  1950  009C                     	;# 
  1951  009D                     	;# 
  1952  009E                     	;# 
  1953  009F                     	;# 
  1954  0119                     	;# 
  1955  0119                     	;# 
  1956  0119                     	;# 
  1957  011A                     	;# 
  1958  011A                     	;# 
  1959  011A                     	;# 
  1960  011B                     	;# 
  1961  011B                     	;# 
  1962  011B                     	;# 
  1963  011B                     	;# 
  1964  011B                     	;# 
  1965  011C                     	;# 
  1966  011C                     	;# 
  1967  011C                     	;# 
  1968  011D                     	;# 
  1969  011D                     	;# 
  1970  011D                     	;# 
  1971  011E                     	;# 
  1972  011E                     	;# 
  1973  011E                     	;# 
  1974  011F                     	;# 
  1975  011F                     	;# 
  1976  011F                     	;# 
  1977  011F                     	;# 
  1978  011F                     	;# 
  1979  018C                     	;# 
  1980  018D                     	;# 
  1981  018E                     	;# 
  1982  018F                     	;# 
  1983  0190                     	;# 
  1984  0191                     	;# 
  1985  0192                     	;# 
  1986  020C                     	;# 
  1987  020C                     	;# 
  1988  020D                     	;# 
  1989  020E                     	;# 
  1990  020F                     	;# 
  1991  020F                     	;# 
  1992  0210                     	;# 
  1993  0210                     	;# 
  1994  0211                     	;# 
  1995  0211                     	;# 
  1996  028C                     	;# 
  1997  028C                     	;# 
  1998  028D                     	;# 
  1999  028D                     	;# 
  2000  028E                     	;# 
  2001  028F                     	;# 
  2002  0290                     	;# 
  2003  0291                     	;# 
  2004  030C                     	;# 
  2005  030C                     	;# 
  2006  030D                     	;# 
  2007  030E                     	;# 
  2008  030F                     	;# 
  2009  0310                     	;# 
  2010  0310                     	;# 
  2011  0311                     	;# 
  2012  0312                     	;# 
  2013  0313                     	;# 
  2014  0314                     	;# 
  2015  0314                     	;# 
  2016  0315                     	;# 
  2017  0316                     	;# 
  2018  0318                     	;# 
  2019  0318                     	;# 
  2020  0319                     	;# 
  2021  031A                     	;# 
  2022  031C                     	;# 
  2023  031C                     	;# 
  2024  031D                     	;# 
  2025  031E                     	;# 
  2026  038C                     	;# 
  2027  038C                     	;# 
  2028  038D                     	;# 
  2029  038E                     	;# 
  2030  058C                     	;# 
  2031  058C                     	;# 
  2032  058D                     	;# 
  2033  058E                     	;# 
  2034  058F                     	;# 
  2035  058F                     	;# 
  2036  0590                     	;# 
  2037  0591                     	;# 
  2038  0592                     	;# 
  2039  0593                     	;# 
  2040  059C                     	;# 
  2041  059C                     	;# 
  2042  059D                     	;# 
  2043  059D                     	;# 
  2044  059E                     	;# 
  2045  059F                     	;# 
  2046  060C                     	;# 
  2047  060D                     	;# 
  2048  060E                     	;# 
  2049  060F                     	;# 
  2050  0610                     	;# 
  2051  0611                     	;# 
  2052  0612                     	;# 
  2053  0613                     	;# 
  2054  0614                     	;# 
  2055  070C                     	;# 
  2056  070D                     	;# 
  2057  070E                     	;# 
  2058  070F                     	;# 
  2059  0710                     	;# 
  2060  0711                     	;# 
  2061  0712                     	;# 
  2062  0713                     	;# 
  2063  0716                     	;# 
  2064  0717                     	;# 
  2065  0718                     	;# 
  2066  0719                     	;# 
  2067  071A                     	;# 
  2068  071B                     	;# 
  2069  071C                     	;# 
  2070  071D                     	;# 
  2071  0796                     	;# 
  2072  0797                     	;# 
  2073  0798                     	;# 
  2074  0799                     	;# 
  2075  079A                     	;# 
  2076  079B                     	;# 
  2077  080C                     	;# 
  2078  080D                     	;# 
  2079  080E                     	;# 
  2080  080F                     	;# 
  2081  0810                     	;# 
  2082  0811                     	;# 
  2083  0812                     	;# 
  2084  0813                     	;# 
  2085  0814                     	;# 
  2086  081A                     	;# 
  2087  081A                     	;# 
  2088  081B                     	;# 
  2089  081C                     	;# 
  2090  081C                     	;# 
  2091  081D                     	;# 
  2092  081E                     	;# 
  2093  081F                     	;# 
  2094  088C                     	;# 
  2095  088D                     	;# 
  2096  088E                     	;# 
  2097  088F                     	;# 
  2098  0890                     	;# 
  2099  0891                     	;# 
  2100  0892                     	;# 
  2101  0893                     	;# 
  2102  0895                     	;# 
  2103  0896                     	;# 
  2104  090C                     	;# 
  2105  090E                     	;# 
  2106  090F                     	;# 
  2107  091F                     	;# 
  2108  098F                     	;# 
  2109  098F                     	;# 
  2110  0990                     	;# 
  2111  0991                     	;# 
  2112  0992                     	;# 
  2113  0993                     	;# 
  2114  0994                     	;# 
  2115  0995                     	;# 
  2116  0996                     	;# 
  2117  0997                     	;# 
  2118  0A19                     	;# 
  2119  0A19                     	;# 
  2120  0A1A                     	;# 
  2121  0A1A                     	;# 
  2122  0A1B                     	;# 
  2123  0A1B                     	;# 
  2124  0A1B                     	;# 
  2125  0A1C                     	;# 
  2126  0A1C                     	;# 
  2127  0A1D                     	;# 
  2128  0A1D                     	;# 
  2129  0A1E                     	;# 
  2130  0A1E                     	;# 
  2131  0A1F                     	;# 
  2132  0A1F                     	;# 
  2133  0A1F                     	;# 
  2134  1E0F                     	;# 
  2135  1E10                     	;# 
  2136  1E11                     	;# 
  2137  1E12                     	;# 
  2138  1E13                     	;# 
  2139  1E14                     	;# 
  2140  1E15                     	;# 
  2141  1E16                     	;# 
  2142  1E17                     	;# 
  2143  1E18                     	;# 
  2144  1E19                     	;# 
  2145  1E1A                     	;# 
  2146  1E1B                     	;# 
  2147  1E1C                     	;# 
  2148  1E1D                     	;# 
  2149  1E1E                     	;# 
  2150  1E1F                     	;# 
  2151  1E20                     	;# 
  2152  1E21                     	;# 
  2153  1E22                     	;# 
  2154  1E23                     	;# 
  2155  1E24                     	;# 
  2156  1E25                     	;# 
  2157  1E26                     	;# 
  2158  1E27                     	;# 
  2159  1E28                     	;# 
  2160  1E29                     	;# 
  2161  1E2A                     	;# 
  2162  1E2B                     	;# 
  2163  1E2C                     	;# 
  2164  1E2D                     	;# 
  2165  1E2E                     	;# 
  2166  1E2F                     	;# 
  2167  1E30                     	;# 
  2168  1E31                     	;# 
  2169  1E32                     	;# 
  2170  1E33                     	;# 
  2171  1E34                     	;# 
  2172  1E35                     	;# 
  2173  1E36                     	;# 
  2174  1E37                     	;# 
  2175  1E8F                     	;# 
  2176  1E90                     	;# 
  2177  1E91                     	;# 
  2178  1E92                     	;# 
  2179  1E93                     	;# 
  2180  1E9C                     	;# 
  2181  1EA1                     	;# 
  2182  1EA2                     	;# 
  2183  1EB1                     	;# 
  2184  1EBB                     	;# 
  2185  1EBC                     	;# 
  2186  1EBD                     	;# 
  2187  1EBE                     	;# 
  2188  1EC3                     	;# 
  2189  1EC5                     	;# 
  2190  1EC6                     	;# 
  2191  1EC7                     	;# 
  2192  1ECB                     	;# 
  2193  1ECC                     	;# 
  2194  1ECD                     	;# 
  2195  1ECE                     	;# 
  2196  1F10                     	;# 
  2197  1F11                     	;# 
  2198  1F12                     	;# 
  2199  1F13                     	;# 
  2200  1F14                     	;# 
  2201  1F15                     	;# 
  2202  1F20                     	;# 
  2203  1F21                     	;# 
  2204  1F22                     	;# 
  2205  1F23                     	;# 
  2206  1F24                     	;# 
  2207  1F25                     	;# 
  2208  1F38                     	;# 
  2209  1F39                     	;# 
  2210  1F3A                     	;# 
  2211  1F3B                     	;# 
  2212  1F3C                     	;# 
  2213  1F3D                     	;# 
  2214  1F3E                     	;# 
  2215  1F3F                     	;# 
  2216  1F4E                     	;# 
  2217  1F4F                     	;# 
  2218  1F50                     	;# 
  2219  1F51                     	;# 
  2220  1F52                     	;# 
  2221  1F53                     	;# 
  2222  1F54                     	;# 
  2223  1F55                     	;# 
  2224  1FE4                     	;# 
  2225  1FE5                     	;# 
  2226  1FE6                     	;# 
  2227  1FE7                     	;# 
  2228  1FE8                     	;# 
  2229  1FE8                     	;# 
  2230  1FE9                     	;# 
  2231  1FEA                     	;# 
  2232  1FEA                     	;# 
  2233  1FEB                     	;# 
  2234  1FED                     	;# 
  2235  1FEE                     	;# 
  2236  1FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000E                     	;# 
  2251  0012                     	;# 
  2252  0014                     	;# 
  2253  0018                     	;# 
  2254  001A                     	;# 
  2255  009B                     	;# 
  2256  009B                     	;# 
  2257  009C                     	;# 
  2258  009D                     	;# 
  2259  009E                     	;# 
  2260  009F                     	;# 
  2261  0119                     	;# 
  2262  0119                     	;# 
  2263  0119                     	;# 
  2264  011A                     	;# 
  2265  011A                     	;# 
  2266  011A                     	;# 
  2267  011B                     	;# 
  2268  011B                     	;# 
  2269  011B                     	;# 
  2270  011B                     	;# 
  2271  011B                     	;# 
  2272  011C                     	;# 
  2273  011C                     	;# 
  2274  011C                     	;# 
  2275  011D                     	;# 
  2276  011D                     	;# 
  2277  011D                     	;# 
  2278  011E                     	;# 
  2279  011E                     	;# 
  2280  011E                     	;# 
  2281  011F                     	;# 
  2282  011F                     	;# 
  2283  011F                     	;# 
  2284  011F                     	;# 
  2285  011F                     	;# 
  2286  018C                     	;# 
  2287  018D                     	;# 
  2288  018E                     	;# 
  2289  018F                     	;# 
  2290  0190                     	;# 
  2291  0191                     	;# 
  2292  0192                     	;# 
  2293  020C                     	;# 
  2294  020C                     	;# 
  2295  020D                     	;# 
  2296  020E                     	;# 
  2297  020F                     	;# 
  2298  020F                     	;# 
  2299  0210                     	;# 
  2300  0210                     	;# 
  2301  0211                     	;# 
  2302  0211                     	;# 
  2303  028C                     	;# 
  2304  028C                     	;# 
  2305  028D                     	;# 
  2306  028D                     	;# 
  2307  028E                     	;# 
  2308  028F                     	;# 
  2309  0290                     	;# 
  2310  0291                     	;# 
  2311  030C                     	;# 
  2312  030C                     	;# 
  2313  030D                     	;# 
  2314  030E                     	;# 
  2315  030F                     	;# 
  2316  0310                     	;# 
  2317  0310                     	;# 
  2318  0311                     	;# 
  2319  0312                     	;# 
  2320  0313                     	;# 
  2321  0314                     	;# 
  2322  0314                     	;# 
  2323  0315                     	;# 
  2324  0316                     	;# 
  2325  0318                     	;# 
  2326  0318                     	;# 
  2327  0319                     	;# 
  2328  031A                     	;# 
  2329  031C                     	;# 
  2330  031C                     	;# 
  2331  031D                     	;# 
  2332  031E                     	;# 
  2333  038C                     	;# 
  2334  038C                     	;# 
  2335  038D                     	;# 
  2336  038E                     	;# 
  2337  058C                     	;# 
  2338  058C                     	;# 
  2339  058D                     	;# 
  2340  058E                     	;# 
  2341  058F                     	;# 
  2342  058F                     	;# 
  2343  0590                     	;# 
  2344  0591                     	;# 
  2345  0592                     	;# 
  2346  0593                     	;# 
  2347  059C                     	;# 
  2348  059C                     	;# 
  2349  059D                     	;# 
  2350  059D                     	;# 
  2351  059E                     	;# 
  2352  059F                     	;# 
  2353  060C                     	;# 
  2354  060D                     	;# 
  2355  060E                     	;# 
  2356  060F                     	;# 
  2357  0610                     	;# 
  2358  0611                     	;# 
  2359  0612                     	;# 
  2360  0613                     	;# 
  2361  0614                     	;# 
  2362  070C                     	;# 
  2363  070D                     	;# 
  2364  070E                     	;# 
  2365  070F                     	;# 
  2366  0710                     	;# 
  2367  0711                     	;# 
  2368  0712                     	;# 
  2369  0713                     	;# 
  2370  0716                     	;# 
  2371  0717                     	;# 
  2372  0718                     	;# 
  2373  0719                     	;# 
  2374  071A                     	;# 
  2375  071B                     	;# 
  2376  071C                     	;# 
  2377  071D                     	;# 
  2378  0796                     	;# 
  2379  0797                     	;# 
  2380  0798                     	;# 
  2381  0799                     	;# 
  2382  079A                     	;# 
  2383  079B                     	;# 
  2384  080C                     	;# 
  2385  080D                     	;# 
  2386  080E                     	;# 
  2387  080F                     	;# 
  2388  0810                     	;# 
  2389  0811                     	;# 
  2390  0812                     	;# 
  2391  0813                     	;# 
  2392  0814                     	;# 
  2393  081A                     	;# 
  2394  081A                     	;# 
  2395  081B                     	;# 
  2396  081C                     	;# 
  2397  081C                     	;# 
  2398  081D                     	;# 
  2399  081E                     	;# 
  2400  081F                     	;# 
  2401  088C                     	;# 
  2402  088D                     	;# 
  2403  088E                     	;# 
  2404  088F                     	;# 
  2405  0890                     	;# 
  2406  0891                     	;# 
  2407  0892                     	;# 
  2408  0893                     	;# 
  2409  0895                     	;# 
  2410  0896                     	;# 
  2411  090C                     	;# 
  2412  090E                     	;# 
  2413  090F                     	;# 
  2414  091F                     	;# 
  2415  098F                     	;# 
  2416  098F                     	;# 
  2417  0990                     	;# 
  2418  0991                     	;# 
  2419  0992                     	;# 
  2420  0993                     	;# 
  2421  0994                     	;# 
  2422  0995                     	;# 
  2423  0996                     	;# 
  2424  0997                     	;# 
  2425  0A19                     	;# 
  2426  0A19                     	;# 
  2427  0A1A                     	;# 
  2428  0A1A                     	;# 
  2429  0A1B                     	;# 
  2430  0A1B                     	;# 
  2431  0A1B                     	;# 
  2432  0A1C                     	;# 
  2433  0A1C                     	;# 
  2434  0A1D                     	;# 
  2435  0A1D                     	;# 
  2436  0A1E                     	;# 
  2437  0A1E                     	;# 
  2438  0A1F                     	;# 
  2439  0A1F                     	;# 
  2440  0A1F                     	;# 
  2441  1E0F                     	;# 
  2442  1E10                     	;# 
  2443  1E11                     	;# 
  2444  1E12                     	;# 
  2445  1E13                     	;# 
  2446  1E14                     	;# 
  2447  1E15                     	;# 
  2448  1E16                     	;# 
  2449  1E17                     	;# 
  2450  1E18                     	;# 
  2451  1E19                     	;# 
  2452  1E1A                     	;# 
  2453  1E1B                     	;# 
  2454  1E1C                     	;# 
  2455  1E1D                     	;# 
  2456  1E1E                     	;# 
  2457  1E1F                     	;# 
  2458  1E20                     	;# 
  2459  1E21                     	;# 
  2460  1E22                     	;# 
  2461  1E23                     	;# 
  2462  1E24                     	;# 
  2463  1E25                     	;# 
  2464  1E26                     	;# 
  2465  1E27                     	;# 
  2466  1E28                     	;# 
  2467  1E29                     	;# 
  2468  1E2A                     	;# 
  2469  1E2B                     	;# 
  2470  1E2C                     	;# 
  2471  1E2D                     	;# 
  2472  1E2E                     	;# 
  2473  1E2F                     	;# 
  2474  1E30                     	;# 
  2475  1E31                     	;# 
  2476  1E32                     	;# 
  2477  1E33                     	;# 
  2478  1E34                     	;# 
  2479  1E35                     	;# 
  2480  1E36                     	;# 
  2481  1E37                     	;# 
  2482  1E8F                     	;# 
  2483  1E90                     	;# 
  2484  1E91                     	;# 
  2485  1E92                     	;# 
  2486  1E93                     	;# 
  2487  1E9C                     	;# 
  2488  1EA1                     	;# 
  2489  1EA2                     	;# 
  2490  1EB1                     	;# 
  2491  1EBB                     	;# 
  2492  1EBC                     	;# 
  2493  1EBD                     	;# 
  2494  1EBE                     	;# 
  2495  1EC3                     	;# 
  2496  1EC5                     	;# 
  2497  1EC6                     	;# 
  2498  1EC7                     	;# 
  2499  1ECB                     	;# 
  2500  1ECC                     	;# 
  2501  1ECD                     	;# 
  2502  1ECE                     	;# 
  2503  1F10                     	;# 
  2504  1F11                     	;# 
  2505  1F12                     	;# 
  2506  1F13                     	;# 
  2507  1F14                     	;# 
  2508  1F15                     	;# 
  2509  1F20                     	;# 
  2510  1F21                     	;# 
  2511  1F22                     	;# 
  2512  1F23                     	;# 
  2513  1F24                     	;# 
  2514  1F25                     	;# 
  2515  1F38                     	;# 
  2516  1F39                     	;# 
  2517  1F3A                     	;# 
  2518  1F3B                     	;# 
  2519  1F3C                     	;# 
  2520  1F3D                     	;# 
  2521  1F3E                     	;# 
  2522  1F3F                     	;# 
  2523  1F4E                     	;# 
  2524  1F4F                     	;# 
  2525  1F50                     	;# 
  2526  1F51                     	;# 
  2527  1F52                     	;# 
  2528  1F53                     	;# 
  2529  1F54                     	;# 
  2530  1F55                     	;# 
  2531  1FE4                     	;# 
  2532  1FE5                     	;# 
  2533  1FE6                     	;# 
  2534  1FE7                     	;# 
  2535  1FE8                     	;# 
  2536  1FE8                     	;# 
  2537  1FE9                     	;# 
  2538  1FEA                     	;# 
  2539  1FEA                     	;# 
  2540  1FEB                     	;# 
  2541  1FED                     	;# 
  2542  1FEE                     	;# 
  2543  1FEF                     	;# 
  2544  0000                     	;# 
  2545  0001                     	;# 
  2546  0002                     	;# 
  2547  0003                     	;# 
  2548  0004                     	;# 
  2549  0005                     	;# 
  2550  0006                     	;# 
  2551  0007                     	;# 
  2552  0008                     	;# 
  2553  0009                     	;# 
  2554  000A                     	;# 
  2555  000B                     	;# 
  2556  000C                     	;# 
  2557  000E                     	;# 
  2558  0012                     	;# 
  2559  0014                     	;# 
  2560  0018                     	;# 
  2561  001A                     	;# 
  2562  009B                     	;# 
  2563  009B                     	;# 
  2564  009C                     	;# 
  2565  009D                     	;# 
  2566  009E                     	;# 
  2567  009F                     	;# 
  2568  0119                     	;# 
  2569  0119                     	;# 
  2570  0119                     	;# 
  2571  011A                     	;# 
  2572  011A                     	;# 
  2573  011A                     	;# 
  2574  011B                     	;# 
  2575  011B                     	;# 
  2576  011B                     	;# 
  2577  011B                     	;# 
  2578  011B                     	;# 
  2579  011C                     	;# 
  2580  011C                     	;# 
  2581  011C                     	;# 
  2582  011D                     	;# 
  2583  011D                     	;# 
  2584  011D                     	;# 
  2585  011E                     	;# 
  2586  011E                     	;# 
  2587  011E                     	;# 
  2588  011F                     	;# 
  2589  011F                     	;# 
  2590  011F                     	;# 
  2591  011F                     	;# 
  2592  011F                     	;# 
  2593  018C                     	;# 
  2594  018D                     	;# 
  2595  018E                     	;# 
  2596  018F                     	;# 
  2597  0190                     	;# 
  2598  0191                     	;# 
  2599  0192                     	;# 
  2600  020C                     	;# 
  2601  020C                     	;# 
  2602  020D                     	;# 
  2603  020E                     	;# 
  2604  020F                     	;# 
  2605  020F                     	;# 
  2606  0210                     	;# 
  2607  0210                     	;# 
  2608  0211                     	;# 
  2609  0211                     	;# 
  2610  028C                     	;# 
  2611  028C                     	;# 
  2612  028D                     	;# 
  2613  028D                     	;# 
  2614  028E                     	;# 
  2615  028F                     	;# 
  2616  0290                     	;# 
  2617  0291                     	;# 
  2618  030C                     	;# 
  2619  030C                     	;# 
  2620  030D                     	;# 
  2621  030E                     	;# 
  2622  030F                     	;# 
  2623  0310                     	;# 
  2624  0310                     	;# 
  2625  0311                     	;# 
  2626  0312                     	;# 
  2627  0313                     	;# 
  2628  0314                     	;# 
  2629  0314                     	;# 
  2630  0315                     	;# 
  2631  0316                     	;# 
  2632  0318                     	;# 
  2633  0318                     	;# 
  2634  0319                     	;# 
  2635  031A                     	;# 
  2636  031C                     	;# 
  2637  031C                     	;# 
  2638  031D                     	;# 
  2639  031E                     	;# 
  2640  038C                     	;# 
  2641  038C                     	;# 
  2642  038D                     	;# 
  2643  038E                     	;# 
  2644  058C                     	;# 
  2645  058C                     	;# 
  2646  058D                     	;# 
  2647  058E                     	;# 
  2648  058F                     	;# 
  2649  058F                     	;# 
  2650  0590                     	;# 
  2651  0591                     	;# 
  2652  0592                     	;# 
  2653  0593                     	;# 
  2654  059C                     	;# 
  2655  059C                     	;# 
  2656  059D                     	;# 
  2657  059D                     	;# 
  2658  059E                     	;# 
  2659  059F                     	;# 
  2660  060C                     	;# 
  2661  060D                     	;# 
  2662  060E                     	;# 
  2663  060F                     	;# 
  2664  0610                     	;# 
  2665  0611                     	;# 
  2666  0612                     	;# 
  2667  0613                     	;# 
  2668  0614                     	;# 
  2669  070C                     	;# 
  2670  070D                     	;# 
  2671  070E                     	;# 
  2672  070F                     	;# 
  2673  0710                     	;# 
  2674  0711                     	;# 
  2675  0712                     	;# 
  2676  0713                     	;# 
  2677  0716                     	;# 
  2678  0717                     	;# 
  2679  0718                     	;# 
  2680  0719                     	;# 
  2681  071A                     	;# 
  2682  071B                     	;# 
  2683  071C                     	;# 
  2684  071D                     	;# 
  2685  0796                     	;# 
  2686  0797                     	;# 
  2687  0798                     	;# 
  2688  0799                     	;# 
  2689  079A                     	;# 
  2690  079B                     	;# 
  2691  080C                     	;# 
  2692  080D                     	;# 
  2693  080E                     	;# 
  2694  080F                     	;# 
  2695  0810                     	;# 
  2696  0811                     	;# 
  2697  0812                     	;# 
  2698  0813                     	;# 
  2699  0814                     	;# 
  2700  081A                     	;# 
  2701  081A                     	;# 
  2702  081B                     	;# 
  2703  081C                     	;# 
  2704  081C                     	;# 
  2705  081D                     	;# 
  2706  081E                     	;# 
  2707  081F                     	;# 
  2708  088C                     	;# 
  2709  088D                     	;# 
  2710  088E                     	;# 
  2711  088F                     	;# 
  2712  0890                     	;# 
  2713  0891                     	;# 
  2714  0892                     	;# 
  2715  0893                     	;# 
  2716  0895                     	;# 
  2717  0896                     	;# 
  2718  090C                     	;# 
  2719  090E                     	;# 
  2720  090F                     	;# 
  2721  091F                     	;# 
  2722  098F                     	;# 
  2723  098F                     	;# 
  2724  0990                     	;# 
  2725  0991                     	;# 
  2726  0992                     	;# 
  2727  0993                     	;# 
  2728  0994                     	;# 
  2729  0995                     	;# 
  2730  0996                     	;# 
  2731  0997                     	;# 
  2732  0A19                     	;# 
  2733  0A19                     	;# 
  2734  0A1A                     	;# 
  2735  0A1A                     	;# 
  2736  0A1B                     	;# 
  2737  0A1B                     	;# 
  2738  0A1B                     	;# 
  2739  0A1C                     	;# 
  2740  0A1C                     	;# 
  2741  0A1D                     	;# 
  2742  0A1D                     	;# 
  2743  0A1E                     	;# 
  2744  0A1E                     	;# 
  2745  0A1F                     	;# 
  2746  0A1F                     	;# 
  2747  0A1F                     	;# 
  2748  1E0F                     	;# 
  2749  1E10                     	;# 
  2750  1E11                     	;# 
  2751  1E12                     	;# 
  2752  1E13                     	;# 
  2753  1E14                     	;# 
  2754  1E15                     	;# 
  2755  1E16                     	;# 
  2756  1E17                     	;# 
  2757  1E18                     	;# 
  2758  1E19                     	;# 
  2759  1E1A                     	;# 
  2760  1E1B                     	;# 
  2761  1E1C                     	;# 
  2762  1E1D                     	;# 
  2763  1E1E                     	;# 
  2764  1E1F                     	;# 
  2765  1E20                     	;# 
  2766  1E21                     	;# 
  2767  1E22                     	;# 
  2768  1E23                     	;# 
  2769  1E24                     	;# 
  2770  1E25                     	;# 
  2771  1E26                     	;# 
  2772  1E27                     	;# 
  2773  1E28                     	;# 
  2774  1E29                     	;# 
  2775  1E2A                     	;# 
  2776  1E2B                     	;# 
  2777  1E2C                     	;# 
  2778  1E2D                     	;# 
  2779  1E2E                     	;# 
  2780  1E2F                     	;# 
  2781  1E30                     	;# 
  2782  1E31                     	;# 
  2783  1E32                     	;# 
  2784  1E33                     	;# 
  2785  1E34                     	;# 
  2786  1E35                     	;# 
  2787  1E36                     	;# 
  2788  1E37                     	;# 
  2789  1E8F                     	;# 
  2790  1E90                     	;# 
  2791  1E91                     	;# 
  2792  1E92                     	;# 
  2793  1E93                     	;# 
  2794  1E9C                     	;# 
  2795  1EA1                     	;# 
  2796  1EA2                     	;# 
  2797  1EB1                     	;# 
  2798  1EBB                     	;# 
  2799  1EBC                     	;# 
  2800  1EBD                     	;# 
  2801  1EBE                     	;# 
  2802  1EC3                     	;# 
  2803  1EC5                     	;# 
  2804  1EC6                     	;# 
  2805  1EC7                     	;# 
  2806  1ECB                     	;# 
  2807  1ECC                     	;# 
  2808  1ECD                     	;# 
  2809  1ECE                     	;# 
  2810  1F10                     	;# 
  2811  1F11                     	;# 
  2812  1F12                     	;# 
  2813  1F13                     	;# 
  2814  1F14                     	;# 
  2815  1F15                     	;# 
  2816  1F20                     	;# 
  2817  1F21                     	;# 
  2818  1F22                     	;# 
  2819  1F23                     	;# 
  2820  1F24                     	;# 
  2821  1F25                     	;# 
  2822  1F38                     	;# 
  2823  1F39                     	;# 
  2824  1F3A                     	;# 
  2825  1F3B                     	;# 
  2826  1F3C                     	;# 
  2827  1F3D                     	;# 
  2828  1F3E                     	;# 
  2829  1F3F                     	;# 
  2830  1F4E                     	;# 
  2831  1F4F                     	;# 
  2832  1F50                     	;# 
  2833  1F51                     	;# 
  2834  1F52                     	;# 
  2835  1F53                     	;# 
  2836  1F54                     	;# 
  2837  1F55                     	;# 
  2838  1FE4                     	;# 
  2839  1FE5                     	;# 
  2840  1FE6                     	;# 
  2841  1FE7                     	;# 
  2842  1FE8                     	;# 
  2843  1FE8                     	;# 
  2844  1FE9                     	;# 
  2845  1FEA                     	;# 
  2846  1FEA                     	;# 
  2847  1FEB                     	;# 
  2848  1FED                     	;# 
  2849  1FEE                     	;# 
  2850  1FEF                     	;# 
  2851  0000                     	;# 
  2852  0001                     	;# 
  2853  0002                     	;# 
  2854  0003                     	;# 
  2855  0004                     	;# 
  2856  0005                     	;# 
  2857  0006                     	;# 
  2858  0007                     	;# 
  2859  0008                     	;# 
  2860  0009                     	;# 
  2861  000A                     	;# 
  2862  000B                     	;# 
  2863  000C                     	;# 
  2864  000E                     	;# 
  2865  0012                     	;# 
  2866  0014                     	;# 
  2867  0018                     	;# 
  2868  001A                     	;# 
  2869  009B                     	;# 
  2870  009B                     	;# 
  2871  009C                     	;# 
  2872  009D                     	;# 
  2873  009E                     	;# 
  2874  009F                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  0119                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011A                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011C                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011D                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011E                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  018C                     	;# 
  2901  018D                     	;# 
  2902  018E                     	;# 
  2903  018F                     	;# 
  2904  0190                     	;# 
  2905  0191                     	;# 
  2906  0192                     	;# 
  2907  020C                     	;# 
  2908  020C                     	;# 
  2909  020D                     	;# 
  2910  020E                     	;# 
  2911  020F                     	;# 
  2912  020F                     	;# 
  2913  0210                     	;# 
  2914  0210                     	;# 
  2915  0211                     	;# 
  2916  0211                     	;# 
  2917  028C                     	;# 
  2918  028C                     	;# 
  2919  028D                     	;# 
  2920  028D                     	;# 
  2921  028E                     	;# 
  2922  028F                     	;# 
  2923  0290                     	;# 
  2924  0291                     	;# 
  2925  030C                     	;# 
  2926  030C                     	;# 
  2927  030D                     	;# 
  2928  030E                     	;# 
  2929  030F                     	;# 
  2930  0310                     	;# 
  2931  0310                     	;# 
  2932  0311                     	;# 
  2933  0312                     	;# 
  2934  0313                     	;# 
  2935  0314                     	;# 
  2936  0314                     	;# 
  2937  0315                     	;# 
  2938  0316                     	;# 
  2939  0318                     	;# 
  2940  0318                     	;# 
  2941  0319                     	;# 
  2942  031A                     	;# 
  2943  031C                     	;# 
  2944  031C                     	;# 
  2945  031D                     	;# 
  2946  031E                     	;# 
  2947  038C                     	;# 
  2948  038C                     	;# 
  2949  038D                     	;# 
  2950  038E                     	;# 
  2951  058C                     	;# 
  2952  058C                     	;# 
  2953  058D                     	;# 
  2954  058E                     	;# 
  2955  058F                     	;# 
  2956  058F                     	;# 
  2957  0590                     	;# 
  2958  0591                     	;# 
  2959  0592                     	;# 
  2960  0593                     	;# 
  2961  059C                     	;# 
  2962  059C                     	;# 
  2963  059D                     	;# 
  2964  059D                     	;# 
  2965  059E                     	;# 
  2966  059F                     	;# 
  2967  060C                     	;# 
  2968  060D                     	;# 
  2969  060E                     	;# 
  2970  060F                     	;# 
  2971  0610                     	;# 
  2972  0611                     	;# 
  2973  0612                     	;# 
  2974  0613                     	;# 
  2975  0614                     	;# 
  2976  070C                     	;# 
  2977  070D                     	;# 
  2978  070E                     	;# 
  2979  070F                     	;# 
  2980  0710                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0716                     	;# 
  2985  0717                     	;# 
  2986  0718                     	;# 
  2987  0719                     	;# 
  2988  071A                     	;# 
  2989  071B                     	;# 
  2990  071C                     	;# 
  2991  071D                     	;# 
  2992  0796                     	;# 
  2993  0797                     	;# 
  2994  0798                     	;# 
  2995  0799                     	;# 
  2996  079A                     	;# 
  2997  079B                     	;# 
  2998  080C                     	;# 
  2999  080D                     	;# 
  3000  080E                     	;# 
  3001  080F                     	;# 
  3002  0810                     	;# 
  3003  0811                     	;# 
  3004  0812                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  081A                     	;# 
  3008  081A                     	;# 
  3009  081B                     	;# 
  3010  081C                     	;# 
  3011  081C                     	;# 
  3012  081D                     	;# 
  3013  081E                     	;# 
  3014  081F                     	;# 
  3015  088C                     	;# 
  3016  088D                     	;# 
  3017  088E                     	;# 
  3018  088F                     	;# 
  3019  0890                     	;# 
  3020  0891                     	;# 
  3021  0892                     	;# 
  3022  0893                     	;# 
  3023  0895                     	;# 
  3024  0896                     	;# 
  3025  090C                     	;# 
  3026  090E                     	;# 
  3027  090F                     	;# 
  3028  091F                     	;# 
  3029  098F                     	;# 
  3030  098F                     	;# 
  3031  0990                     	;# 
  3032  0991                     	;# 
  3033  0992                     	;# 
  3034  0993                     	;# 
  3035  0994                     	;# 
  3036  0995                     	;# 
  3037  0996                     	;# 
  3038  0997                     	;# 
  3039  0A19                     	;# 
  3040  0A19                     	;# 
  3041  0A1A                     	;# 
  3042  0A1A                     	;# 
  3043  0A1B                     	;# 
  3044  0A1B                     	;# 
  3045  0A1B                     	;# 
  3046  0A1C                     	;# 
  3047  0A1C                     	;# 
  3048  0A1D                     	;# 
  3049  0A1D                     	;# 
  3050  0A1E                     	;# 
  3051  0A1E                     	;# 
  3052  0A1F                     	;# 
  3053  0A1F                     	;# 
  3054  0A1F                     	;# 
  3055  1E0F                     	;# 
  3056  1E10                     	;# 
  3057  1E11                     	;# 
  3058  1E12                     	;# 
  3059  1E13                     	;# 
  3060  1E14                     	;# 
  3061  1E15                     	;# 
  3062  1E16                     	;# 
  3063  1E17                     	;# 
  3064  1E18                     	;# 
  3065  1E19                     	;# 
  3066  1E1A                     	;# 
  3067  1E1B                     	;# 
  3068  1E1C                     	;# 
  3069  1E1D                     	;# 
  3070  1E1E                     	;# 
  3071  1E1F                     	;# 
  3072  1E20                     	;# 
  3073  1E21                     	;# 
  3074  1E22                     	;# 
  3075  1E23                     	;# 
  3076  1E24                     	;# 
  3077  1E25                     	;# 
  3078  1E26                     	;# 
  3079  1E27                     	;# 
  3080  1E28                     	;# 
  3081  1E29                     	;# 
  3082  1E2A                     	;# 
  3083  1E2B                     	;# 
  3084  1E2C                     	;# 
  3085  1E2D                     	;# 
  3086  1E2E                     	;# 
  3087  1E2F                     	;# 
  3088  1E30                     	;# 
  3089  1E31                     	;# 
  3090  1E32                     	;# 
  3091  1E33                     	;# 
  3092  1E34                     	;# 
  3093  1E35                     	;# 
  3094  1E36                     	;# 
  3095  1E37                     	;# 
  3096  1E8F                     	;# 
  3097  1E90                     	;# 
  3098  1E91                     	;# 
  3099  1E92                     	;# 
  3100  1E93                     	;# 
  3101  1E9C                     	;# 
  3102  1EA1                     	;# 
  3103  1EA2                     	;# 
  3104  1EB1                     	;# 
  3105  1EBB                     	;# 
  3106  1EBC                     	;# 
  3107  1EBD                     	;# 
  3108  1EBE                     	;# 
  3109  1EC3                     	;# 
  3110  1EC5                     	;# 
  3111  1EC6                     	;# 
  3112  1EC7                     	;# 
  3113  1ECB                     	;# 
  3114  1ECC                     	;# 
  3115  1ECD                     	;# 
  3116  1ECE                     	;# 
  3117  1F10                     	;# 
  3118  1F11                     	;# 
  3119  1F12                     	;# 
  3120  1F13                     	;# 
  3121  1F14                     	;# 
  3122  1F15                     	;# 
  3123  1F20                     	;# 
  3124  1F21                     	;# 
  3125  1F22                     	;# 
  3126  1F23                     	;# 
  3127  1F24                     	;# 
  3128  1F25                     	;# 
  3129  1F38                     	;# 
  3130  1F39                     	;# 
  3131  1F3A                     	;# 
  3132  1F3B                     	;# 
  3133  1F3C                     	;# 
  3134  1F3D                     	;# 
  3135  1F3E                     	;# 
  3136  1F3F                     	;# 
  3137  1F4E                     	;# 
  3138  1F4F                     	;# 
  3139  1F50                     	;# 
  3140  1F51                     	;# 
  3141  1F52                     	;# 
  3142  1F53                     	;# 
  3143  1F54                     	;# 
  3144  1F55                     	;# 
  3145  1FE4                     	;# 
  3146  1FE5                     	;# 
  3147  1FE6                     	;# 
  3148  1FE7                     	;# 
  3149  1FE8                     	;# 
  3150  1FE8                     	;# 
  3151  1FE9                     	;# 
  3152  1FEA                     	;# 
  3153  1FEA                     	;# 
  3154  1FEB                     	;# 
  3155  1FED                     	;# 
  3156  1FEE                     	;# 
  3157  1FEF                     	;# 
  3158                           
  3159 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  3160  0000                     
  3161 ;; Function _EUSART1_is_rx_ready is unused but had its address taken
  3162  0000                     
  3163 ;; Function _EUSART1_is_tx_done is unused but had its address taken
  3164  0000                     
  3165 ;; Function _EUSART1_Read is unused but had its address taken
  3166  0000                     
  3167 ;; Function _EUSART1_Write is unused but had its address taken
  3168  0000                     
  3169                           	psect	idataBANK1
  3170  04A5                     __pidataBANK1:	
  3171                           
  3172                           ;initializer for conf_sensor@F6604
  3173  04A5  34F4               	retlw	244
  3174  04A6  34F5               	retlw	245
  3175                           
  3176                           	psect	idataBANK2
  3177  03C0                     __pidataBANK2:	
  3178                           
  3179                           ;initializer for BMP280_SPI_bus_read@F6566
  3180  03C0  34FF               	retlw	-1
  3181  03C1  3400               	retlw	0
  3182  03C2  3400               	retlw	0
  3183  03C3  3400               	retlw	0
  3184  03C4  3400               	retlw	0
  3185  03C5  3400               	retlw	0
  3186  03C6  3400               	retlw	0
  3187  03C7  3400               	retlw	0
  3188  03C8  3400               	retlw	0
  3189  03C9  3400               	retlw	0
  3190  03CA  3400               	retlw	0
  3191  03CB  3400               	retlw	0
  3192  03CC  3400               	retlw	0
  3193  03CD  3400               	retlw	0
  3194  03CE  3400               	retlw	0
  3195  03CF  3400               	retlw	0
  3196  03D0  3400               	retlw	0
  3197  03D1  3400               	retlw	0
  3198  03D2  3400               	retlw	0
  3199  03D3  3400               	retlw	0
  3200  03D4  3400               	retlw	0
  3201  03D5  3400               	retlw	0
  3202  03D6  3400               	retlw	0
  3203  03D7  3400               	retlw	0
  3204  03D8  3400               	retlw	0
  3205  03D9  3400               	retlw	0
  3206  03DA  3400               	retlw	0
  3207  03DB  3400               	retlw	0
  3208  03DC  3400               	retlw	0
  3209  03DD  3400               	retlw	0
  3210                           
  3211                           	psect	stringtext1
  3212  0413                     __pstringtext1:	
  3213  0413                     _uart:	
  3214  0413  3400               	retlw	0
  3215  0414  3400               	retlw	0
  3216  0415  3407               	retlw	low _EUSART1_Initialize
  3217  0416  3403               	retlw	high _EUSART1_Initialize
  3218  0417  3400               	retlw	0
  3219  0418  3400               	retlw	0
  3220  0419  34DE               	retlw	low _EUSART1_Receive_ISR
  3221  041A  3403               	retlw	high _EUSART1_Receive_ISR
  3222  041B  348D               	retlw	low _EUSART1_SetRxInterruptHandler
  3223  041C  3404               	retlw	high _EUSART1_SetRxInterruptHandler
  3224  041D  3487               	retlw	low _EUSART1_SetTxInterruptHandler
  3225  041E  3404               	retlw	high _EUSART1_SetTxInterruptHandler
  3226  041F  3400               	retlw	0
  3227  0420  3400               	retlw	0
  3228  0421  3400               	retlw	0
  3229  0422  3400               	retlw	0
  3230  0423  34A1               	retlw	low _EUSART1_Transmit_ISR
  3231  0424  3403               	retlw	high _EUSART1_Transmit_ISR
  3232  0425  3400               	retlw	0
  3233  0426  3400               	retlw	0
  3234  0427                     __end_of_uart:	
  3235                           
  3236                           	psect	stringtext2
  3237  0493                     __pstringtext2:	
  3238  0493                     bmp280_compute_meas_time@period_per_osrs:	
  3239  0493  34D0               	retlw	208
  3240  0494  3407               	retlw	7
  3241  0495  3400               	retlw	0
  3242  0496  3400               	retlw	0
  3243  0497                     __end_ofbmp280_compute_meas_time@period_per_osrs:	
  3244                           
  3245                           	psect	stringtext3
  3246  0497                     __pstringtext3:	
  3247  0497                     bmp280_compute_meas_time@startup:	
  3248  0497  34E8               	retlw	232
  3249  0498  3403               	retlw	3
  3250  0499  3400               	retlw	0
  3251  049A  3400               	retlw	0
  3252  049B                     __end_ofbmp280_compute_meas_time@startup:	
  3253                           
  3254                           	psect	stringtext4
  3255  049F                     __pstringtext4:	
  3256  049F                     _spi1_configuration:	
  3257  049F  3410               	retlw	16
  3258  04A0  3400               	retlw	0
  3259  04A1  3407               	retlw	7
  3260  04A2                     __end_of_spi1_configuration:	
  3261                           
  3262                           	psect	nvBANK1
  3263  00E5                     __pnvBANK1:	
  3264  00E5                     _TMR0_InterruptHandler:	
  3265  00E5                     	ds	2
  3266  00E7                     _timer0ReloadVal16bit:	
  3267  00E7                     	ds	2
  3268  00E9                     _EUSART1_RxDefaultInterruptHandler:	
  3269  00E9                     	ds	2
  3270  00EB                     _EUSART1_TxDefaultInterruptHandler:	
  3271  00EB                     	ds	2
  3272  00ED                     _eusart1TxBufferRemaining:	
  3273  00ED                     	ds	1
  3274  000B                     _INTCONbits	set	11
  3275  0014                     _TRISC	set	20
  3276  0012                     _TRISA	set	18
  3277  001A                     _LATC	set	26
  3278  0018                     _LATA	set	24
  3279  0014                     _TRISCbits	set	20
  3280  0075                     _RC5	set	117
  3281  009D                     _ADCON0bits	set	157
  3282  009C                     _ADRESH	set	156
  3283  009B                     _ADRESL	set	155
  3284  009F                     _ADACT	set	159
  3285  009E                     _ADCON1	set	158
  3286  009D                     _ADCON0	set	157
  3287  0119                     _RC1REG	set	281
  3288  011D                     _RC1STAbits	set	285
  3289  011A                     _TX1REG	set	282
  3290  011E                     _TX1STAbits	set	286
  3291  011C                     _SP1BRGH	set	284
  3292  011B                     _SP1BRGL	set	283
  3293  011E                     _TX1STA	set	286
  3294  011D                     _RC1STA	set	285
  3295  011F                     _BAUD1CON	set	287
  3296  018C                     _SSP1BUF	set	396
  3297  018D                     _SSP1ADD	set	397
  3298  0191                     _SSP1CON2	set	401
  3299  0190                     _SSP1CON1	set	400
  3300  018F                     _SSP1STAT	set	399
  3301  0190                     _SSP1CON1bits	set	400
  3302  059E                     _T0CON0bits	set	1438
  3303  059E                     _T0CON0	set	1438
  3304  059C                     _TMR0L	set	1436
  3305  059D                     _TMR0H	set	1437
  3306  059F                     _T0CON1	set	1439
  3307  0716                     _PIE0bits	set	1814
  3308  070C                     _PIR0bits	set	1804
  3309  0719                     _PIE3bits	set	1817
  3310  070F                     _PIR3bits	set	1807
  3311  079B                     _PMD5	set	1947
  3312  079A                     _PMD4	set	1946
  3313  0799                     _PMD3	set	1945
  3314  0798                     _PMD2	set	1944
  3315  0797                     _PMD1	set	1943
  3316  0796                     _PMD0	set	1942
  3317  0892                     _OSCTUNE	set	2194
  3318  0890                     _OSCSTAT	set	2192
  3319  0893                     _OSCFRQ	set	2195
  3320  0891                     _OSCEN	set	2193
  3321  088F                     _OSCCON3	set	2191
  3322  088D                     _OSCCON1	set	2189
  3323  1ECB                     _RX1DTPPSbits	set	7883
  3324  1EC6                     _SSP1DATPPSbits	set	7878
  3325  1EC5                     _SSP1CLKPPSbits	set	7877
  3326  1F22                     _RC2PPS	set	7970
  3327  1F24                     _RC4PPS	set	7972
  3328  1F20                     _RC0PPS	set	7968
  3329  1F50                     _ODCONC	set	8016
  3330  1F3A                     _ODCONA	set	7994
  3331  1F4F                     _WPUC	set	8015
  3332  1F39                     _WPUA	set	7993
  3333  1F38                     _ANSELA	set	7992
  3334  1F4E                     _ANSELC	set	8014
  3335                           
  3336                           ; #config settings
  3337  0000                     
  3338                           	psect	cinit
  3339  0027                     start_initialization:	
  3340  0027                     __initialization:	
  3341                           
  3342                           ; Initialize objects allocated to BANK1
  3343  0027  0141               	movlb	1	; select bank1
  3344  0028  3184  24A5  3180   	fcall	__pidataBANK1	;fetch initializer
  3345  002B  00EE               	movwf	__pdataBANK1& (0+127)
  3346  002C  3184  24A6  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3347  002F  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  3348                           
  3349                           ; Initialize objects allocated to BANK2
  3350  0030  30C0               	movlw	low __pidataBANK2
  3351  0031  0084               	movwf	4
  3352  0032  3083               	movlw	(high __pidataBANK2)| (0+128)
  3353  0033  0085               	movwf	5
  3354  0034  3020               	movlw	low __pdataBANK2
  3355  0035  0086               	movwf	6
  3356  0036  3001               	movlw	high __pdataBANK2
  3357  0037  0087               	movwf	7
  3358  0038  301E               	movlw	30
  3359  0039  3184  2475  3180   	fcall	init_ram
  3360                           
  3361                           ; Clear objects allocated to COMMON
  3362  003C  01FC               	clrf	__pbssCOMMON& (0+127)
  3363                           
  3364                           ; Clear objects allocated to BANK0
  3365  003D  0140               	movlb	0	; select bank0
  3366  003E  01ED               	clrf	__pbssBANK0& (0+127)
  3367  003F  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3368  0040  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  3369                           
  3370                           ; Clear objects allocated to BANK1
  3371  0041  30A0               	movlw	low __pbssBANK1
  3372  0042  0084               	movwf	4
  3373  0043  3000               	movlw	high __pbssBANK1
  3374  0044  0085               	movwf	5
  3375  0045  3045               	movlw	69
  3376  0046  3184  247B  3180   	fcall	clear_ram0
  3377                           
  3378                           ; Clear objects allocated to BANK2
  3379  0049  303E               	movlw	low __pbssBANK2
  3380  004A  0084               	movwf	4
  3381  004B  3001               	movlw	high __pbssBANK2
  3382  004C  0085               	movwf	5
  3383  004D  3018               	movlw	24
  3384  004E  3184  247B         	fcall	clear_ram0
  3385  0050                     end_of_initialization:	
  3386                           ;End of C runtime variable initialization code
  3387                           
  3388  0050                     __end_of__initialization:	
  3389  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3390  0051  0140               	movlb	0
  3391  0052  3183  2B32         	ljmp	_main	;jump to C main() function
  3392                           
  3393                           	psect	bssCOMMON
  3394  007C                     __pbssCOMMON:	
  3395  007C                     _eusart1TxHead:	
  3396  007C                     	ds	1
  3397                           
  3398                           	psect	bssBANK0
  3399  006D                     __pbssBANK0:	
  3400  006D                     _eusart1RxTail:	
  3401  006D                     	ds	1
  3402  006E                     _eusart1RxHead:	
  3403  006E                     	ds	1
  3404  006F                     _eusart1TxTail:	
  3405  006F                     	ds	1
  3406                           
  3407                           	psect	bssBANK1
  3408  00A0                     __pbssBANK1:	
  3409  00A0                     _eusart1RxBuffer:	
  3410  00A0                     	ds	8
  3411  00A8                     _eusart1TxBuffer:	
  3412  00A8                     	ds	8
  3413  00B0                     bmp280_get_uncomp_data@F6465:	
  3414  00B0                     	ds	6
  3415  00B6                     conf_sensor@F6602:	
  3416  00B6                     	ds	2
  3417  00B8                     bmp280_get_config@F6430:	
  3418  00B8                     	ds	2
  3419  00BA                     _eusart1RxCount:	
  3420  00BA                     	ds	1
  3421  00BB                     _bmp:	
  3422  00BB                     	ds	42
  3423                           
  3424                           	psect	dataBANK1
  3425  00EE                     __pdataBANK1:	
  3426  00EE                     conf_sensor@F6604:	
  3427  00EE                     	ds	2
  3428                           
  3429                           	psect	bssBANK2
  3430  013E                     __pbssBANK2:	
  3431  013E                     get_calib_param@F6534:	
  3432  013E                     	ds	24
  3433                           
  3434                           	psect	dataBANK2
  3435  0120                     __pdataBANK2:	
  3436  0120                     BMP280_SPI_bus_read@F6566:	
  3437  0120                     	ds	30
  3438                           
  3439                           	psect	inittext
  3440  0475                     init_ram:	
  3441  0475  00FE               	movwf	126
  3442  0476                     initloop:	
  3443  0476  0012               	moviw fsr0++
  3444  0477  001E               	movwi fsr1++
  3445  0478  0BFE               	decfsz	126,f
  3446  0479  2C76               	goto	initloop
  3447  047A  3400               	retlw	0
  3448                           
  3449                           	psect	clrtext
  3450  047B                     clear_ram0:	
  3451                           ;	Called with FSR0 containing the base address, and
  3452                           ;	WREG with the size to clear
  3453                           
  3454  047B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3455  047C                     clrloop0:	
  3456  047C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3457  047D  3101               	addfsr 0,1
  3458  047E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3459  047F  2C7C               	goto	clrloop0	;have we reached the end yet?
  3460  0480  3400               	retlw	0	;all done for this memory range, return
  3461                           
  3462                           	psect	cstackBANK2
  3463  0156                     __pcstackBANK2:	
  3464  0156                     main@rslt:	
  3465                           
  3466                           ; 1 bytes @ 0x0
  3467  0156                     	ds	1
  3468                           
  3469                           	psect	cstackCOMMON
  3470  0070                     __pcstackCOMMON:	
  3471  0070                     ?_EUSART1_Initialize:	
  3472  0070                     ?_EUSART1_Receive_ISR:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0070                     ??_EUSART1_Receive_ISR:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0070                     ?_EUSART1_Transmit_ISR:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0070                     ??_EUSART1_Transmit_ISR:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0070                     ?_PMD_Initialize:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0070                     ?_PIN_MANAGER_Initialize:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0070                     ?_OSCILLATOR_Initialize:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493  0070                     ?_ADC_Initialize:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496  0070                     ?_TMR0_Initialize:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0070                     ?_TMR0_StartTimer:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0070                     ?_bmp280_init:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0070                     ?_null_ptr_check:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508  0070                     ?_get_calib_param:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511  0070                     ?_TMR0_DefaultInterruptHandler:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514  0070                     ??_TMR0_DefaultInterruptHandler:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517  0070                     ?_TMR0_CallBack:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520  0070                     ??_TMR0_CallBack:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523  0070                     ?_SYSTEM_Initialize:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526  0070                     ?_tmr_fire:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529  0070                     ??_tmr_fire:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532  0070                     ?_main:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535  0070                     ?_bmp280_soft_reset:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538  0070                     ?_TMR0_ISR:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541  0070                     ??_TMR0_ISR:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544  0070                     ?_INTERRUPT_InterruptManager:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547                           
  3548                           ; 1 bytes @ 0x0
  3549  0070                     	ds	1
  3550  0071                     ?_EUSART1_SetRxInterruptHandler:	
  3551  0071                     ?_EUSART1_SetTxInterruptHandler:	
  3552                           ; 1 bytes @ 0x1
  3553                           
  3554  0071                     ??_PMD_Initialize:	
  3555                           ; 1 bytes @ 0x1
  3556                           
  3557  0071                     ??_PIN_MANAGER_Initialize:	
  3558                           ; 1 bytes @ 0x1
  3559                           
  3560  0071                     ??_OSCILLATOR_Initialize:	
  3561                           ; 1 bytes @ 0x1
  3562                           
  3563  0071                     ??_ADC_Initialize:	
  3564                           ; 1 bytes @ 0x1
  3565                           
  3566  0071                     ?_TMR0_SetInterruptHandler:	
  3567                           ; 1 bytes @ 0x1
  3568                           
  3569  0071                     ??_TMR0_StartTimer:	
  3570                           ; 1 bytes @ 0x1
  3571                           
  3572  0071                     ??_null_ptr_check:	
  3573                           ; 1 bytes @ 0x1
  3574                           
  3575  0071                     ?_interleave_data:	
  3576                           ; 1 bytes @ 0x1
  3577                           
  3578  0071                     ?_BMP280_delay_msek:	
  3579                           ; 1 bytes @ 0x1
  3580                           
  3581  0071                     ?_BMP280_SPI_bus_read:	
  3582                           ; 1 bytes @ 0x1
  3583                           
  3584  0071                     ?_BMP280_SPI_bus_write:	
  3585                           ; 1 bytes @ 0x1
  3586                           
  3587  0071                     ??_INTERRUPT_InterruptManager:	
  3588                           ; 1 bytes @ 0x1
  3589                           
  3590  0071                     BMP280_SPI_bus_read@dev_addr:	
  3591                           ; 1 bytes @ 0x1
  3592                           
  3593  0071                     BMP280_SPI_bus_write@dev_addr:	
  3594                           ; 1 bytes @ 0x1
  3595                           
  3596  0071                     interleave_data@temp_buff:	
  3597                           ; 1 bytes @ 0x1
  3598                           
  3599  0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  3600                           ; 1 bytes @ 0x1
  3601                           
  3602  0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  3603                           ; 2 bytes @ 0x1
  3604                           
  3605  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  3606                           ; 2 bytes @ 0x1
  3607                           
  3608  0071                     BMP280_delay_msek@msek:	
  3609                           ; 2 bytes @ 0x1
  3610                           
  3611                           
  3612                           ; 4 bytes @ 0x1
  3613  0071                     	ds	1
  3614  0072                     BMP280_SPI_bus_read@reg_addr:	
  3615  0072                     BMP280_SPI_bus_write@reg_addr:	
  3616                           ; 1 bytes @ 0x2
  3617                           
  3618  0072                     interleave_data@reg_data:	
  3619                           ; 1 bytes @ 0x2
  3620                           
  3621                           
  3622                           ; 1 bytes @ 0x2
  3623  0072                     	ds	1
  3624  0073                     ??_EUSART1_Initialize:	
  3625  0073                     ??_EUSART1_SetRxInterruptHandler:	
  3626                           ; 1 bytes @ 0x3
  3627                           
  3628  0073                     ??_EUSART1_SetTxInterruptHandler:	
  3629                           ; 1 bytes @ 0x3
  3630                           
  3631  0073                     ??_TMR0_Initialize:	
  3632                           ; 1 bytes @ 0x3
  3633                           
  3634  0073                     ??_TMR0_SetInterruptHandler:	
  3635                           ; 1 bytes @ 0x3
  3636                           
  3637  0073                     BMP280_SPI_bus_read@reg_data:	
  3638                           ; 1 bytes @ 0x3
  3639                           
  3640  0073                     BMP280_SPI_bus_write@reg_data:	
  3641                           ; 1 bytes @ 0x3
  3642                           
  3643  0073                     null_ptr_check@rslt:	
  3644                           ; 1 bytes @ 0x3
  3645                           
  3646  0073                     interleave_data@len:	
  3647                           ; 1 bytes @ 0x3
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x3
  3651  0073                     	ds	1
  3652  0074                     ??_interleave_data:	
  3653  0074                     ??_SYSTEM_Initialize:	
  3654                           ; 1 bytes @ 0x4
  3655                           
  3656  0074                     BMP280_SPI_bus_read@cnt:	
  3657                           ; 1 bytes @ 0x4
  3658                           
  3659  0074                     BMP280_SPI_bus_write@cnt:	
  3660                           ; 1 bytes @ 0x4
  3661                           
  3662  0074                     null_ptr_check@dev:	
  3663                           ; 1 bytes @ 0x4
  3664                           
  3665                           
  3666                           ; 1 bytes @ 0x4
  3667  0074                     	ds	1
  3668  0075                     ??_BMP280_delay_msek:	
  3669  0075                     ??_BMP280_SPI_bus_read:	
  3670                           ; 1 bytes @ 0x5
  3671                           
  3672  0075                     ??_BMP280_SPI_bus_write:	
  3673                           ; 1 bytes @ 0x5
  3674                           
  3675  0075                     BMP280_SPI_bus_write@iError:	
  3676                           ; 1 bytes @ 0x5
  3677                           
  3678                           
  3679                           ; 4 bytes @ 0x5
  3680  0075                     	ds	2
  3681  0077                     ?_bmp280_get_regs:	
  3682  0077                     bmp280_get_regs@reg_data:	
  3683                           ; 1 bytes @ 0x7
  3684                           
  3685  0077                     interleave_data@reg_addr:	
  3686                           ; 1 bytes @ 0x7
  3687                           
  3688                           
  3689                           ; 1 bytes @ 0x7
  3690  0077                     	ds	1
  3691  0078                     bmp280_get_regs@len:	
  3692  0078                     interleave_data@index:	
  3693                           ; 1 bytes @ 0x8
  3694                           
  3695                           
  3696                           ; 1 bytes @ 0x8
  3697  0078                     	ds	1
  3698  0079                     ?_bmp280_set_regs:	
  3699  0079                     bmp280_get_regs@dev:	
  3700                           ; 1 bytes @ 0x9
  3701                           
  3702  0079                     bmp280_set_regs@reg_data:	
  3703                           ; 1 bytes @ 0x9
  3704                           
  3705                           
  3706                           ; 1 bytes @ 0x9
  3707  0079                     	ds	1
  3708  007A                     bmp280_get_regs@reg_addr:	
  3709  007A                     bmp280_set_regs@len:	
  3710                           ; 1 bytes @ 0xA
  3711                           
  3712                           
  3713                           ; 1 bytes @ 0xA
  3714  007A                     	ds	1
  3715  007B                     bmp280_get_regs@rslt:	
  3716  007B                     bmp280_set_regs@dev:	
  3717                           ; 1 bytes @ 0xB
  3718                           
  3719                           
  3720                           ; 1 bytes @ 0xB
  3721  007B                     	ds	1
  3722                           
  3723                           	psect	cstackBANK0
  3724  0020                     __pcstackBANK0:	
  3725  0020                     ??_bmp280_set_regs:	
  3726  0020                     BMP280_SPI_bus_read@array:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729                           
  3730                           ; 30 bytes @ 0x0
  3731  0020                     	ds	4
  3732  0024                     bmp280_set_regs@temp_buff:	
  3733                           
  3734                           ; 8 bytes @ 0x4
  3735  0024                     	ds	8
  3736  002C                     bmp280_set_regs@temp_len:	
  3737                           
  3738                           ; 2 bytes @ 0xC
  3739  002C                     	ds	2
  3740  002E                     bmp280_set_regs@reg_addr_cnt:	
  3741                           
  3742                           ; 1 bytes @ 0xE
  3743  002E                     	ds	1
  3744  002F                     bmp280_set_regs@rslt:	
  3745                           
  3746                           ; 1 bytes @ 0xF
  3747  002F                     	ds	1
  3748  0030                     bmp280_set_regs@reg_addr:	
  3749                           
  3750                           ; 1 bytes @ 0x10
  3751  0030                     	ds	1
  3752  0031                     ??_bmp280_soft_reset:	
  3753                           
  3754                           ; 1 bytes @ 0x11
  3755  0031                     	ds	3
  3756  0034                     bmp280_soft_reset@soft_rst_cmd:	
  3757                           
  3758                           ; 1 bytes @ 0x14
  3759  0034                     	ds	1
  3760  0035                     bmp280_soft_reset@rslt:	
  3761                           
  3762                           ; 1 bytes @ 0x15
  3763  0035                     	ds	1
  3764  0036                     bmp280_soft_reset@reg_addr:	
  3765                           
  3766                           ; 1 bytes @ 0x16
  3767  0036                     	ds	1
  3768  0037                     bmp280_soft_reset@dev:	
  3769                           
  3770                           ; 1 bytes @ 0x17
  3771  0037                     	ds	7
  3772  003E                     BMP280_SPI_bus_read@iError:	
  3773                           
  3774                           ; 4 bytes @ 0x1E
  3775  003E                     	ds	4
  3776  0042                     BMP280_SPI_bus_read@i:	
  3777                           
  3778                           ; 1 bytes @ 0x22
  3779  0042                     	ds	1
  3780  0043                     BMP280_SPI_bus_read@stringpos:	
  3781                           
  3782                           ; 1 bytes @ 0x23
  3783  0043                     	ds	1
  3784  0044                     ??_bmp280_get_regs:	
  3785                           
  3786                           ; 1 bytes @ 0x24
  3787  0044                     	ds	4
  3788  0048                     ??_get_calib_param:	
  3789                           
  3790                           ; 1 bytes @ 0x28
  3791  0048                     	ds	4
  3792  004C                     get_calib_param@temp:	
  3793                           
  3794                           ; 24 bytes @ 0x2C
  3795  004C                     	ds	24
  3796  0064                     get_calib_param@rslt:	
  3797                           
  3798                           ; 1 bytes @ 0x44
  3799  0064                     	ds	1
  3800  0065                     get_calib_param@dev:	
  3801                           
  3802                           ; 1 bytes @ 0x45
  3803  0065                     	ds	1
  3804  0066                     ??_bmp280_init:	
  3805                           
  3806                           ; 1 bytes @ 0x46
  3807  0066                     	ds	3
  3808  0069                     bmp280_init@try_count:	
  3809                           
  3810                           ; 1 bytes @ 0x49
  3811  0069                     	ds	1
  3812  006A                     bmp280_init@rslt:	
  3813                           
  3814                           ; 1 bytes @ 0x4A
  3815  006A                     	ds	1
  3816  006B                     bmp280_init@dev:	
  3817                           
  3818                           ; 1 bytes @ 0x4B
  3819  006B                     	ds	1
  3820  006C                     ??_main:	
  3821                           
  3822                           ; 1 bytes @ 0x4C
  3823  006C                     	ds	1
  3824                           
  3825                           	psect	maintext
  3826  0332                     __pmaintext:	
  3827 ;;
  3828 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3829 ;;
  3830 ;; *************** function _main *****************
  3831 ;; Defined at:
  3832 ;;		line 76 in file "main.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  rslt            1    0[BANK2 ] char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : B3F/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;Total ram usage:        2 bytes
  3851 ;; Hardware stack levels required when called:    8
  3852 ;; This function calls:
  3853 ;;		_SYSTEM_Initialize
  3854 ;;		_TMR0_SetInterruptHandler
  3855 ;;		_TMR0_StartTimer
  3856 ;;		_bmp280_init
  3857 ;; This function is called by:
  3858 ;;		Startup code after reset
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _main
  3864  0332                     _main:	
  3865                           
  3866                           ;main.c: 78: SYSTEM_Initialize();
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3870  0332  3184  2427  3183   	fcall	_SYSTEM_Initialize
  3871                           
  3872                           ;main.c: 79: INTCONbits.GIE = 1;
  3873  0335  178B               	bsf	11,7	;volatile
  3874                           
  3875                           ;main.c: 80: TMR0_SetInterruptHandler(tmr_fire);
  3876  0336  309B               	movlw	low _tmr_fire
  3877  0337  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3878  0338  3004               	movlw	high _tmr_fire
  3879  0339  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3880  033A  3184  2481  3183   	fcall	_TMR0_SetInterruptHandler
  3881                           
  3882                           ;main.c: 81: TMR0_StartTimer();
  3883  033D  3184  24A2  3183   	fcall	_TMR0_StartTimer
  3884                           
  3885                           ;main.c: 82: int8_t rslt;;main.c: 83: bmp.dev_id = 0;
  3886  0340  0141               	movlb	1	; select bank1
  3887  0341  01BC               	clrf	(_bmp^(0+128)+1)
  3888                           
  3889                           ;main.c: 84: bmp.intf = (unsigned char) 0;
  3890  0342  01BD               	clrf	(_bmp^(0+128)+2)
  3891                           
  3892                           ;main.c: 85: bmp.read = BMP280_SPI_bus_read;
  3893  0343  3007               	movlw	low _BMP280_SPI_bus_read
  3894  0344  00BE               	movwf	(low ((_bmp| 0+3)))^(0+128)
  3895  0345  3002               	movlw	high _BMP280_SPI_bus_read
  3896  0346  00BF               	movwf	((low ((_bmp| 0+3)))^(0+128)+1)
  3897                           
  3898                           ;main.c: 86: bmp.write = BMP280_SPI_bus_write;
  3899  0347  3051               	movlw	low _BMP280_SPI_bus_write
  3900  0348  00C0               	movwf	(low ((_bmp| 0+5)))^(0+128)
  3901  0349  3004               	movlw	high _BMP280_SPI_bus_write
  3902  034A  00C1               	movwf	((low ((_bmp| 0+5)))^(0+128)+1)
  3903                           
  3904                           ;main.c: 87: bmp.delay_ms = BMP280_delay_msek;
  3905  034B  30A7               	movlw	low _BMP280_delay_msek
  3906  034C  00C2               	movwf	(low ((_bmp| 0+7)))^(0+128)
  3907  034D  3004               	movlw	high _BMP280_delay_msek
  3908  034E  00C3               	movwf	((low ((_bmp| 0+7)))^(0+128)+1)
  3909                           
  3910                           ;main.c: 89: rslt = bmp280_init(&bmp);
  3911  034F  30BB               	movlw	(low (_bmp| 0))& (0+255)
  3912  0350  3181  217B  3183   	fcall	_bmp280_init
  3913  0353  0140               	movlb	0	; select bank0
  3914  0354  00EC               	movwf	??_main
  3915  0355  086C               	movf	??_main,w
  3916  0356  0142               	movlb	2	; select bank2
  3917  0357  00D6               	movwf	main@rslt^(0+256)
  3918  0358                     l347:	
  3919                           ;main.c: 91: while(1){
  3920                           
  3921  0358  2B58               	goto	l347
  3922  0359                     __end_of_main:	
  3923                           ;main.c: 92: };main.c: 95: return;
  3924                           
  3925                           
  3926                           	psect	text1
  3927  017B                     __ptext1:	
  3928 ;; *************** function _bmp280_init *****************
  3929 ;; Defined at:
  3930 ;;		line 211 in file "bmp280.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  dev             1    wreg     PTR struct bmp280_dev
  3933 ;;		 -> bmp(42), 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  dev             1   75[BANK0 ] PTR struct bmp280_dev
  3936 ;;		 -> bmp(42), 
  3937 ;;  rslt            1   74[BANK0 ] char 
  3938 ;;  try_count       1   73[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      char 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;Total ram usage:        6 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    7
  3955 ;; This function calls:
  3956 ;;		_BMP280_delay_msek
  3957 ;;		_bmp280_get_regs
  3958 ;;		_bmp280_soft_reset
  3959 ;;		_get_calib_param
  3960 ;;		_null_ptr_check
  3961 ;; This function is called by:
  3962 ;;		_main
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _bmp280_init
  3968  017B                     _bmp280_init:	
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _bmp280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3972                           ;bmp280_init@dev stored from wreg
  3973  017B  0140               	movlb	0	; select bank0
  3974  017C  00EB               	movwf	bmp280_init@dev
  3975                           
  3976                           ;bmp280.c: 213: int8_t rslt;;bmp280.c: 215: uint8_t try_count = 5;
  3977  017D  3005               	movlw	5
  3978  017E  00E6               	movwf	??_bmp280_init
  3979  017F  0866               	movf	??_bmp280_init,w
  3980  0180  00E9               	movwf	bmp280_init@try_count
  3981                           
  3982                           ;bmp280.c: 217: rslt = null_ptr_check(dev);
  3983  0181  086B               	movf	bmp280_init@dev,w
  3984  0182  3183  237F  3181   	fcall	_null_ptr_check
  3985  0185  0140               	movlb	0	; select bank0
  3986  0186  00E6               	movwf	??_bmp280_init
  3987  0187  0866               	movf	??_bmp280_init,w
  3988  0188  00EA               	movwf	bmp280_init@rslt
  3989                           
  3990                           ;bmp280.c: 219: if (rslt == (0)) {
  3991  0189  086A               	movf	bmp280_init@rslt,w
  3992  018A  1903               	btfsc	3,2
  3993  018B  29DF               	goto	l2482
  3994  018C  2A05               	goto	l2492
  3995  018D                     l2462:	
  3996                           ;bmp280.c: 220: while (try_count) {
  3997                           
  3998                           
  3999                           ;bmp280.c: 221: rslt = bmp280_get_regs((unsigned char) 0xD0, &dev->chip_id, 1, dev);
  4000  018D  086B               	movf	bmp280_init@dev,w
  4001  018E  00E6               	movwf	??_bmp280_init
  4002  018F  0866               	movf	??_bmp280_init,w
  4003  0190  00F7               	movwf	bmp280_get_regs@reg_data
  4004  0191  01F8               	clrf	bmp280_get_regs@len
  4005  0192  0AF8               	incf	bmp280_get_regs@len,f
  4006  0193  086B               	movf	bmp280_init@dev,w
  4007  0194  00E7               	movwf	??_bmp280_init+1
  4008  0195  0867               	movf	??_bmp280_init+1,w
  4009  0196  00F9               	movwf	bmp280_get_regs@dev
  4010  0197  30D0               	movlw	208
  4011  0198  3182  225A  3181   	fcall	_bmp280_get_regs
  4012  019B  0140               	movlb	0	; select bank0
  4013  019C  00E8               	movwf	??_bmp280_init+2
  4014  019D  0868               	movf	??_bmp280_init+2,w
  4015  019E  00EA               	movwf	bmp280_init@rslt
  4016                           
  4017                           ;bmp280.c: 224: if ((rslt == (0)) && (dev->chip_id == (unsigned char) 0x56;bmp280.c: 225
      +                          : || dev->chip_id == (unsigned char) 0x57;bmp280.c: 226: || dev->chip_id == (unsigned ch
      +                          ar) 0x58)) {
  4018  019F  086A               	movf	bmp280_init@rslt,w
  4019  01A0  1D03               	btfss	3,2
  4020  01A1  29CB               	goto	l2478
  4021  01A2  086B               	movf	bmp280_init@dev,w
  4022  01A3  0086               	movwf	6
  4023  01A4  0187               	clrf	7
  4024  01A5  3056               	movlw	86
  4025  01A6  0601               	xorwf	1,w
  4026  01A7  1903               	btfsc	3,2
  4027  01A8  29B7               	goto	l2472
  4028  01A9  086B               	movf	bmp280_init@dev,w
  4029  01AA  0086               	movwf	6
  4030  01AB  0187               	clrf	7
  4031  01AC  3057               	movlw	87
  4032  01AD  0601               	xorwf	1,w
  4033  01AE  1903               	btfsc	3,2
  4034  01AF  29B7               	goto	l2472
  4035  01B0  086B               	movf	bmp280_init@dev,w
  4036  01B1  0086               	movwf	6
  4037  01B2  0187               	clrf	7
  4038  01B3  3058               	movlw	88
  4039  01B4  0601               	xorwf	1,w
  4040  01B5  1D03               	btfss	3,2
  4041  01B6  29CB               	goto	l2478
  4042  01B7                     l2472:	
  4043                           
  4044                           ;bmp280.c: 228: rslt = bmp280_soft_reset(dev);
  4045  01B7  086B               	movf	bmp280_init@dev,w
  4046  01B8  3182  229F  3181   	fcall	_bmp280_soft_reset
  4047  01BB  0140               	movlb	0	; select bank0
  4048  01BC  00E6               	movwf	??_bmp280_init
  4049  01BD  0866               	movf	??_bmp280_init,w
  4050  01BE  00EA               	movwf	bmp280_init@rslt
  4051                           
  4052                           ;bmp280.c: 230: if (rslt == (0))
  4053  01BF  086A               	movf	bmp280_init@rslt,w
  4054  01C0  1D03               	btfss	3,2
  4055  01C1  29E2               	goto	l2484
  4056                           
  4057                           ;bmp280.c: 231: rslt = get_calib_param(dev);
  4058  01C2  086B               	movf	bmp280_init@dev,w
  4059  01C3  3180  2054  3181   	fcall	_get_calib_param
  4060  01C6  0140               	movlb	0	; select bank0
  4061  01C7  00E6               	movwf	??_bmp280_init
  4062  01C8  0866               	movf	??_bmp280_init,w
  4063  01C9  00EA               	movwf	bmp280_init@rslt
  4064                           
  4065                           ;bmp280.c: 232: break;
  4066  01CA  29E2               	goto	l2484
  4067  01CB                     l2478:	
  4068                           
  4069                           ;bmp280.c: 233: };bmp280.c: 236: dev->delay_ms(10);
  4070  01CB  3000               	movlw	0
  4071  01CC  00F4               	movwf	BMP280_delay_msek@msek+3
  4072  01CD  3000               	movlw	0
  4073  01CE  00F3               	movwf	BMP280_delay_msek@msek+2
  4074  01CF  3000               	movlw	0
  4075  01D0  00F2               	movwf	BMP280_delay_msek@msek+1
  4076  01D1  300A               	movlw	10
  4077  01D2  00F1               	movwf	BMP280_delay_msek@msek
  4078  01D3  086B               	movf	bmp280_init@dev,w
  4079  01D4  3E07               	addlw	7
  4080  01D5  0086               	movwf	6
  4081  01D6  0187               	clrf	7
  4082  01D7  3F41               	moviw [1]fsr1
  4083  01D8  008A               	movwf	10
  4084  01D9  3F40               	moviw [0]fsr1
  4085  01DA  000A               	callw
  4086  01DB  3181               	pagesel	$
  4087                           
  4088                           ;bmp280.c: 237: --try_count;
  4089  01DC  3001               	movlw	1
  4090  01DD  0140               	movlb	0	; select bank0
  4091  01DE  02E9               	subwf	bmp280_init@try_count,f
  4092  01DF                     l2482:	
  4093  01DF  0869               	movf	bmp280_init@try_count,w
  4094  01E0  1D03               	btfss	3,2
  4095  01E1  298D               	goto	l2462
  4096  01E2                     l2484:	
  4097                           
  4098                           ;bmp280.c: 238: };bmp280.c: 241: if (!try_count)
  4099  01E2  0869               	movf	bmp280_init@try_count,w
  4100  01E3  1D03               	btfss	3,2
  4101  01E4  29E9               	goto	l2488
  4102                           
  4103                           ;bmp280.c: 242: rslt = (-2);
  4104  01E5  30FE               	movlw	254
  4105  01E6  00E6               	movwf	??_bmp280_init
  4106  01E7  0866               	movf	??_bmp280_init,w
  4107  01E8  00EA               	movwf	bmp280_init@rslt
  4108  01E9                     l2488:	
  4109                           
  4110                           ;bmp280.c: 244: if (rslt == (0)) {
  4111  01E9  086A               	movf	bmp280_init@rslt,w
  4112  01EA  1D03               	btfss	3,2
  4113  01EB  2A05               	goto	l2492
  4114                           
  4115                           ;bmp280.c: 246: dev->conf.filter = (unsigned char) 0x00;
  4116  01EC  086B               	movf	bmp280_init@dev,w
  4117  01ED  3E28               	addlw	40
  4118  01EE  0086               	movwf	6
  4119  01EF  0187               	clrf	7
  4120  01F0  0181               	clrf	1
  4121                           
  4122                           ;bmp280.c: 247: dev->conf.os_pres = (unsigned char) 0x00;
  4123  01F1  086B               	movf	bmp280_init@dev,w
  4124  01F2  3E26               	addlw	38
  4125  01F3  0086               	movwf	6
  4126  01F4  0187               	clrf	7
  4127  01F5  0181               	clrf	1
  4128                           
  4129                           ;bmp280.c: 248: dev->conf.os_temp = (unsigned char) 0x00;
  4130  01F6  086B               	movf	bmp280_init@dev,w
  4131  01F7  3E25               	addlw	37
  4132  01F8  0086               	movwf	6
  4133  01F9  0187               	clrf	7
  4134  01FA  0181               	clrf	1
  4135                           
  4136                           ;bmp280.c: 249: dev->conf.odr = (unsigned char) 0x00;
  4137  01FB  086B               	movf	bmp280_init@dev,w
  4138  01FC  3E27               	addlw	39
  4139  01FD  0086               	movwf	6
  4140  01FE  0187               	clrf	7
  4141  01FF  0181               	clrf	1
  4142                           
  4143                           ;bmp280.c: 250: dev->conf.spi3w_en = (unsigned char) 0;
  4144  0200  086B               	movf	bmp280_init@dev,w
  4145  0201  3E29               	addlw	41
  4146  0202  0086               	movwf	6
  4147  0203  0187               	clrf	7
  4148  0204  0181               	clrf	1
  4149  0205                     l2492:	
  4150                           
  4151                           ;bmp280.c: 251: };bmp280.c: 252: };bmp280.c: 254: return rslt;
  4152  0205  086A               	movf	bmp280_init@rslt,w
  4153  0206  0008               	return
  4154  0207                     __end_of_bmp280_init:	
  4155                           
  4156                           	psect	text2
  4157  0054                     __ptext2:	
  4158 ;; *************** function _get_calib_param *****************
  4159 ;; Defined at:
  4160 ;;		line 619 in file "bmp280.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  dev             1    wreg     PTR struct bmp280_dev
  4163 ;;		 -> bmp(42), 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  dev             1   69[BANK0 ] PTR struct bmp280_dev
  4166 ;;		 -> bmp(42), 
  4167 ;;  temp           24   44[BANK0 ] unsigned char [24]
  4168 ;;  rslt            1   68[BANK0 ] char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      char 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:       30 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    6
  4185 ;; This function calls:
  4186 ;;		_bmp280_get_regs
  4187 ;;		_null_ptr_check
  4188 ;; This function is called by:
  4189 ;;		_bmp280_init
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _get_calib_param
  4195  0054                     _get_calib_param:	
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _get_calib_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4199                           ;get_calib_param@dev stored from wreg
  4200  0054  0140               	movlb	0	; select bank0
  4201  0055  00E5               	movwf	get_calib_param@dev
  4202                           
  4203                           ;bmp280.c: 621: int8_t rslt;;bmp280.c: 622: uint8_t temp[(unsigned char) 24] = {0};
  4204  0056  303E               	movlw	low get_calib_param@F6534
  4205  0057  0086               	movwf	6
  4206  0058  3001               	movlw	high get_calib_param@F6534
  4207  0059  0087               	movwf	7
  4208  005A  304C               	movlw	low get_calib_param@temp
  4209  005B  0084               	movwf	4
  4210  005C  3000               	movlw	high get_calib_param@temp
  4211  005D  0085               	movwf	5
  4212  005E  3018               	movlw	24
  4213  005F  00C8               	movwf	??_get_calib_param
  4214  0060                     u2520:	
  4215  0060  0016               	moviw fsr1++
  4216  0061  001A               	movwi fsr0++
  4217  0062  0BC8               	decfsz	??_get_calib_param,f
  4218  0063  2860               	goto	u2520
  4219                           
  4220                           ;bmp280.c: 624: rslt = null_ptr_check(dev);
  4221  0064  0865               	movf	get_calib_param@dev,w
  4222  0065  3183  237F  3180   	fcall	_null_ptr_check
  4223  0068  0140               	movlb	0	; select bank0
  4224  0069  00C8               	movwf	??_get_calib_param
  4225  006A  0848               	movf	??_get_calib_param,w
  4226  006B  00E4               	movwf	get_calib_param@rslt
  4227                           
  4228                           ;bmp280.c: 626: if (rslt == (0)) {
  4229  006C  0864               	movf	get_calib_param@rslt,w
  4230  006D  1D03               	btfss	3,2
  4231  006E  28E6               	goto	l2436
  4232                           
  4233                           ;bmp280.c: 627: rslt = bmp280_get_regs((unsigned char) 0x88, temp, (unsigned char) 24, d
      +                          ev);
  4234  006F  304C               	movlw	(low (get_calib_param@temp| 0))& (0+255)
  4235  0070  00C8               	movwf	??_get_calib_param
  4236  0071  0848               	movf	??_get_calib_param,w
  4237  0072  00F7               	movwf	bmp280_get_regs@reg_data
  4238  0073  3018               	movlw	24
  4239  0074  00C9               	movwf	??_get_calib_param+1
  4240  0075  0849               	movf	??_get_calib_param+1,w
  4241  0076  00F8               	movwf	bmp280_get_regs@len
  4242  0077  0865               	movf	get_calib_param@dev,w
  4243  0078  00CA               	movwf	??_get_calib_param+2
  4244  0079  084A               	movf	??_get_calib_param+2,w
  4245  007A  00F9               	movwf	bmp280_get_regs@dev
  4246  007B  3088               	movlw	136
  4247  007C  3182  225A  3180   	fcall	_bmp280_get_regs
  4248  007F  0140               	movlb	0	; select bank0
  4249  0080  00CB               	movwf	??_get_calib_param+3
  4250  0081  084B               	movf	??_get_calib_param+3,w
  4251  0082  00E4               	movwf	get_calib_param@rslt
  4252                           
  4253                           ;bmp280.c: 629: if (rslt == (0)) {
  4254  0083  0864               	movf	get_calib_param@rslt,w
  4255  0084  1D03               	btfss	3,2
  4256  0085  28E6               	goto	l2436
  4257                           
  4258                           ;bmp280.c: 630: dev->calib_param.dig_t1 = (uint16_t) (((uint16_t) temp[(unsigned char) 1
      +                          ] << 8);bmp280.c: 631: | ((uint16_t) temp[(unsigned char) 0]));
  4259  0086  0865               	movf	get_calib_param@dev,w
  4260  0087  3E09               	addlw	9
  4261  0088  0086               	movwf	6
  4262  0089  0187               	clrf	7
  4263  008A  084C               	movf	get_calib_param@temp,w
  4264  008B  3FC0               	movwi [0]fsr1
  4265  008C  084D               	movf	get_calib_param@temp+1,w
  4266  008D  3FC1               	movwi [1]fsr1
  4267                           
  4268                           ;bmp280.c: 632: dev->calib_param.dig_t2 = (int16_t) (((int16_t) temp[(unsigned char) 3] 
      +                          << 8);bmp280.c: 633: | ((int16_t) temp[(unsigned char) 2]));
  4269  008E  0865               	movf	get_calib_param@dev,w
  4270  008F  3E0B               	addlw	11
  4271  0090  0086               	movwf	6
  4272  0091  0187               	clrf	7
  4273  0092  084E               	movf	get_calib_param@temp+2,w
  4274  0093  3FC0               	movwi [0]fsr1
  4275  0094  084F               	movf	get_calib_param@temp+3,w
  4276  0095  3FC1               	movwi [1]fsr1
  4277                           
  4278                           ;bmp280.c: 634: dev->calib_param.dig_t3 = (int16_t) (((int16_t) temp[(unsigned char) 5] 
      +                          << 8);bmp280.c: 635: | ((int16_t) temp[(unsigned char) 4]));
  4279  0096  0865               	movf	get_calib_param@dev,w
  4280  0097  3E0D               	addlw	13
  4281  0098  0086               	movwf	6
  4282  0099  0187               	clrf	7
  4283  009A  0850               	movf	get_calib_param@temp+4,w
  4284  009B  3FC0               	movwi [0]fsr1
  4285  009C  0851               	movf	get_calib_param@temp+5,w
  4286  009D  3FC1               	movwi [1]fsr1
  4287                           
  4288                           ;bmp280.c: 636: dev->calib_param.dig_p1 = (uint16_t) (((uint16_t) temp[(unsigned char) 7
      +                          ] << 8);bmp280.c: 637: | ((uint16_t) temp[(unsigned char) 6]));
  4289  009E  0865               	movf	get_calib_param@dev,w
  4290  009F  3E0F               	addlw	15
  4291  00A0  0086               	movwf	6
  4292  00A1  0187               	clrf	7
  4293  00A2  0852               	movf	get_calib_param@temp+6,w
  4294  00A3  3FC0               	movwi [0]fsr1
  4295  00A4  0853               	movf	get_calib_param@temp+7,w
  4296  00A5  3FC1               	movwi [1]fsr1
  4297                           
  4298                           ;bmp280.c: 638: dev->calib_param.dig_p2 = (int16_t) (((int16_t) temp[(unsigned char) 9] 
      +                          << 8);bmp280.c: 639: | ((int16_t) temp[(unsigned char) 8]));
  4299  00A6  0865               	movf	get_calib_param@dev,w
  4300  00A7  3E11               	addlw	17
  4301  00A8  0086               	movwf	6
  4302  00A9  0187               	clrf	7
  4303  00AA  0854               	movf	get_calib_param@temp+8,w
  4304  00AB  3FC0               	movwi [0]fsr1
  4305  00AC  0855               	movf	get_calib_param@temp+9,w
  4306  00AD  3FC1               	movwi [1]fsr1
  4307                           
  4308                           ;bmp280.c: 640: dev->calib_param.dig_p3 = (int16_t) (((int16_t) temp[(unsigned char) 11]
      +                           << 8);bmp280.c: 641: | ((int16_t) temp[(unsigned char) 10]));
  4309  00AE  0865               	movf	get_calib_param@dev,w
  4310  00AF  3E13               	addlw	19
  4311  00B0  0086               	movwf	6
  4312  00B1  0187               	clrf	7
  4313  00B2  0856               	movf	get_calib_param@temp+10,w
  4314  00B3  3FC0               	movwi [0]fsr1
  4315  00B4  0857               	movf	get_calib_param@temp+11,w
  4316  00B5  3FC1               	movwi [1]fsr1
  4317                           
  4318                           ;bmp280.c: 642: dev->calib_param.dig_p4 = (int16_t) (((int16_t) temp[(unsigned char) 13]
      +                           << 8);bmp280.c: 643: | ((int16_t) temp[(unsigned char) 12]));
  4319  00B6  0865               	movf	get_calib_param@dev,w
  4320  00B7  3E15               	addlw	21
  4321  00B8  0086               	movwf	6
  4322  00B9  0187               	clrf	7
  4323  00BA  0858               	movf	get_calib_param@temp+12,w
  4324  00BB  3FC0               	movwi [0]fsr1
  4325  00BC  0859               	movf	get_calib_param@temp+13,w
  4326  00BD  3FC1               	movwi [1]fsr1
  4327                           
  4328                           ;bmp280.c: 644: dev->calib_param.dig_p5 = (int16_t) (((int16_t) temp[(unsigned char) 15]
      +                           << 8);bmp280.c: 645: | ((int16_t) temp[(unsigned char) 14]));
  4329  00BE  0865               	movf	get_calib_param@dev,w
  4330  00BF  3E17               	addlw	23
  4331  00C0  0086               	movwf	6
  4332  00C1  0187               	clrf	7
  4333  00C2  085A               	movf	get_calib_param@temp+14,w
  4334  00C3  3FC0               	movwi [0]fsr1
  4335  00C4  085B               	movf	get_calib_param@temp+15,w
  4336  00C5  3FC1               	movwi [1]fsr1
  4337                           
  4338                           ;bmp280.c: 646: dev->calib_param.dig_p6 = (int16_t) (((int16_t) temp[(unsigned char) 17]
      +                           << 8);bmp280.c: 647: | ((int16_t) temp[(unsigned char) 16]));
  4339  00C6  0865               	movf	get_calib_param@dev,w
  4340  00C7  3E19               	addlw	25
  4341  00C8  0086               	movwf	6
  4342  00C9  0187               	clrf	7
  4343  00CA  085C               	movf	get_calib_param@temp+16,w
  4344  00CB  3FC0               	movwi [0]fsr1
  4345  00CC  085D               	movf	get_calib_param@temp+17,w
  4346  00CD  3FC1               	movwi [1]fsr1
  4347                           
  4348                           ;bmp280.c: 648: dev->calib_param.dig_p7 = (int16_t) (((int16_t) temp[(unsigned char) 19]
      +                           << 8);bmp280.c: 649: | ((int16_t) temp[(unsigned char) 18]));
  4349  00CE  0865               	movf	get_calib_param@dev,w
  4350  00CF  3E1B               	addlw	27
  4351  00D0  0086               	movwf	6
  4352  00D1  0187               	clrf	7
  4353  00D2  085E               	movf	get_calib_param@temp+18,w
  4354  00D3  3FC0               	movwi [0]fsr1
  4355  00D4  085F               	movf	get_calib_param@temp+19,w
  4356  00D5  3FC1               	movwi [1]fsr1
  4357                           
  4358                           ;bmp280.c: 650: dev->calib_param.dig_p8 = (int16_t) (((int16_t) temp[(unsigned char) 21]
      +                           << 8);bmp280.c: 651: | ((int16_t) temp[(unsigned char) 20]));
  4359  00D6  0865               	movf	get_calib_param@dev,w
  4360  00D7  3E1D               	addlw	29
  4361  00D8  0086               	movwf	6
  4362  00D9  0187               	clrf	7
  4363  00DA  0860               	movf	get_calib_param@temp+20,w
  4364  00DB  3FC0               	movwi [0]fsr1
  4365  00DC  0861               	movf	get_calib_param@temp+21,w
  4366  00DD  3FC1               	movwi [1]fsr1
  4367                           
  4368                           ;bmp280.c: 652: dev->calib_param.dig_p9 = (int16_t) (((int16_t) temp[(unsigned char) 23]
      +                           << 8);bmp280.c: 653: | ((int16_t) temp[(unsigned char) 22]));
  4369  00DE  0865               	movf	get_calib_param@dev,w
  4370  00DF  3E1F               	addlw	31
  4371  00E0  0086               	movwf	6
  4372  00E1  0187               	clrf	7
  4373  00E2  0862               	movf	get_calib_param@temp+22,w
  4374  00E3  3FC0               	movwi [0]fsr1
  4375  00E4  0863               	movf	get_calib_param@temp+23,w
  4376  00E5  3FC1               	movwi [1]fsr1
  4377  00E6                     l2436:	
  4378                           
  4379                           ;bmp280.c: 654: };bmp280.c: 655: };bmp280.c: 657: return rslt;
  4380  00E6  0864               	movf	get_calib_param@rslt,w
  4381  00E7  0008               	return
  4382  00E8                     __end_of_get_calib_param:	
  4383                           
  4384                           	psect	text3
  4385  025A                     __ptext3:	
  4386 ;; *************** function _bmp280_get_regs *****************
  4387 ;; Defined at:
  4388 ;;		line 114 in file "bmp280.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  reg_addr        1    wreg     unsigned char 
  4391 ;;  reg_data        1    7[COMMON] PTR unsigned char 
  4392 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4393 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4394 ;;  len             1    8[COMMON] unsigned char 
  4395 ;;  dev             1    9[COMMON] PTR const struct bmp280_
  4396 ;;		 -> bmp(42), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  reg_addr        1   10[COMMON] unsigned char 
  4399 ;;  rslt            1   11[COMMON] char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      char 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4409 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;Total ram usage:        9 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    5
  4416 ;; This function calls:
  4417 ;;		_BMP280_SPI_bus_read
  4418 ;;		_null_ptr_check
  4419 ;; This function is called by:
  4420 ;;		_bmp280_init
  4421 ;;		_get_calib_param
  4422 ;;		_bmp280_get_config
  4423 ;;		_bmp280_get_status
  4424 ;;		_bmp280_get_power_mode
  4425 ;;		_bmp280_get_uncomp_data
  4426 ;;		_conf_sensor
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _bmp280_get_regs
  4432  025A                     _bmp280_get_regs:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _bmp280_get_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4436                           ;bmp280_get_regs@reg_addr stored from wreg
  4437  025A  00FA               	movwf	bmp280_get_regs@reg_addr
  4438                           
  4439                           ;bmp280.c: 116: int8_t rslt;;bmp280.c: 118: rslt = null_ptr_check(dev);
  4440  025B  0879               	movf	bmp280_get_regs@dev,w
  4441  025C  3183  237F  3182   	fcall	_null_ptr_check
  4442  025F  0140               	movlb	0	; select bank0
  4443  0260  00C4               	movwf	??_bmp280_get_regs
  4444  0261  0844               	movf	??_bmp280_get_regs,w
  4445  0262  00FB               	movwf	bmp280_get_regs@rslt
  4446                           
  4447                           ;bmp280.c: 120: if ((rslt == (0)) && (reg_data != (0))) {
  4448  0263  087B               	movf	bmp280_get_regs@rslt,w
  4449  0264  1D03               	btfss	3,2
  4450  0265  2A9B               	goto	l363
  4451  0266  0877               	movf	bmp280_get_regs@reg_data,w
  4452  0267  1903               	btfsc	3,2
  4453  0268  2A9B               	goto	l363
  4454                           
  4455                           ;bmp280.c: 122: if (dev->intf == (unsigned char) 0)
  4456  0269  0879               	movf	bmp280_get_regs@dev,w
  4457  026A  3E02               	addlw	2
  4458  026B  0086               	movwf	6
  4459  026C  0187               	clrf	7
  4460  026D  0801               	movf	1,w
  4461  026E  1D03               	btfss	3,2
  4462  026F  2A75               	goto	l2268
  4463                           
  4464                           ;bmp280.c: 123: reg_addr = reg_addr | 0x80;
  4465  0270  087A               	movf	bmp280_get_regs@reg_addr,w
  4466  0271  3880               	iorlw	128
  4467  0272  00C4               	movwf	??_bmp280_get_regs
  4468  0273  0844               	movf	??_bmp280_get_regs,w
  4469  0274  00FA               	movwf	bmp280_get_regs@reg_addr
  4470  0275                     l2268:	
  4471                           
  4472                           ;bmp280.c: 125: rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
  4473  0275  0879               	movf	bmp280_get_regs@dev,w
  4474  0276  0086               	movwf	6
  4475  0277  0187               	clrf	7
  4476  0278  3F41               	moviw [1]fsr1
  4477  0279  00F1               	movwf	BMP280_SPI_bus_read@dev_addr
  4478  027A  087A               	movf	bmp280_get_regs@reg_addr,w
  4479  027B  00C4               	movwf	??_bmp280_get_regs
  4480  027C  0844               	movf	??_bmp280_get_regs,w
  4481  027D  00F2               	movwf	BMP280_SPI_bus_read@reg_addr
  4482  027E  0877               	movf	bmp280_get_regs@reg_data,w
  4483  027F  00C5               	movwf	??_bmp280_get_regs+1
  4484  0280  0845               	movf	??_bmp280_get_regs+1,w
  4485  0281  00F3               	movwf	BMP280_SPI_bus_read@reg_data
  4486  0282  0878               	movf	bmp280_get_regs@len,w
  4487  0283  00C6               	movwf	??_bmp280_get_regs+2
  4488  0284  0846               	movf	??_bmp280_get_regs+2,w
  4489  0285  00F4               	movwf	BMP280_SPI_bus_read@cnt
  4490  0286  0879               	movf	bmp280_get_regs@dev,w
  4491  0287  3E03               	addlw	3
  4492  0288  0086               	movwf	6
  4493  0289  0187               	clrf	7
  4494  028A  3F41               	moviw [1]fsr1
  4495  028B  008A               	movwf	10
  4496  028C  3F40               	moviw [0]fsr1
  4497  028D  000A               	callw
  4498  028E  3182               	pagesel	$
  4499  028F  0140               	movlb	0	; select bank0
  4500  0290  00C7               	movwf	??_bmp280_get_regs+3
  4501  0291  0847               	movf	??_bmp280_get_regs+3,w
  4502  0292  00FB               	movwf	bmp280_get_regs@rslt
  4503                           
  4504                           ;bmp280.c: 127: if (rslt != (0))
  4505  0293  087B               	movf	bmp280_get_regs@rslt,w
  4506  0294  1903               	btfsc	3,2
  4507  0295  2A9D               	goto	l2274
  4508                           
  4509                           ;bmp280.c: 128: rslt = (-4);
  4510  0296  30FC               	movlw	252
  4511  0297  00C4               	movwf	??_bmp280_get_regs
  4512  0298  0844               	movf	??_bmp280_get_regs,w
  4513  0299  00FB               	movwf	bmp280_get_regs@rslt
  4514                           
  4515                           ;bmp280.c: 129: } else {
  4516  029A  2A9D               	goto	l2274
  4517  029B                     l363:	
  4518                           
  4519                           ;bmp280.c: 130: rslt = (-1);
  4520  029B  01FB               	clrf	bmp280_get_regs@rslt
  4521  029C  03FB               	decf	bmp280_get_regs@rslt,f
  4522  029D                     l2274:	
  4523                           
  4524                           ;bmp280.c: 131: };bmp280.c: 133: return rslt;
  4525  029D  087B               	movf	bmp280_get_regs@rslt,w
  4526  029E  0008               	return
  4527  029F                     __end_of_bmp280_get_regs:	
  4528                           
  4529                           	psect	text4
  4530  0207                     __ptext4:	
  4531 ;; *************** function _BMP280_SPI_bus_read *****************
  4532 ;; Defined at:
  4533 ;;		line 35 in file "main.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  dev_addr        1    1[COMMON] unsigned char 
  4536 ;;  reg_addr        1    2[COMMON] unsigned char 
  4537 ;;  reg_data        1    3[COMMON] PTR unsigned char 
  4538 ;;		 -> conf_sensor@temp(2), get_calib_param@temp(24), bmp280_get_uncomp_data@temp(6), bmp280_get_power_mode@temp(1), 
  4539 ;;		 -> bmp280_get_status@temp(1), bmp280_get_config@temp(2), bmp(42), 
  4540 ;;  cnt             1    4[COMMON] unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  array          30    0[BANK0 ] char [30]
  4543 ;;  iError          4   30[BANK0 ] long 
  4544 ;;  stringpos       1   35[BANK0 ] unsigned char 
  4545 ;;  i               1   34[BANK0 ] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      char 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Totals:         6      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;Total ram usage:       42 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    4
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;;		_bmp280_get_regs
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _BMP280_SPI_bus_read
  4572  0207                     _BMP280_SPI_bus_read:	
  4573                           
  4574                           ;main.c: 37: _delay((unsigned long)((1)*(4000000/4000.0)));
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in _BMP280_SPI_bus_read: [wreg-fsr1h+status,2+status,0]
  4578  0207  30C8               	movlw	200
  4579  0208                     u3247:	
  4580  0208  3200               	nop2
  4581  0209  0B89               	decfsz	9,f
  4582  020A  2A08               	goto	u3247
  4583                           
  4584                           ;main.c: 38: int32_t iError=(0);
  4585  020B  3000               	movlw	0
  4586  020C  0140               	movlb	0	; select bank0
  4587  020D  00C1               	movwf	BMP280_SPI_bus_read@iError+3
  4588  020E  3000               	movlw	0
  4589  020F  00C0               	movwf	BMP280_SPI_bus_read@iError+2
  4590  0210  3000               	movlw	0
  4591  0211  00BF               	movwf	BMP280_SPI_bus_read@iError+1
  4592  0212  3000               	movlw	0
  4593  0213  00BE               	movwf	BMP280_SPI_bus_read@iError
  4594                           
  4595                           ;main.c: 39: int8_t array[30]={0xFF};
  4596  0214  3020               	movlw	low BMP280_SPI_bus_read@F6566
  4597  0215  0086               	movwf	6
  4598  0216  3001               	movlw	high BMP280_SPI_bus_read@F6566
  4599  0217  0087               	movwf	7
  4600  0218  3020               	movlw	low BMP280_SPI_bus_read@array
  4601  0219  0084               	movwf	4
  4602  021A  3000               	movlw	high BMP280_SPI_bus_read@array
  4603  021B  0085               	movwf	5
  4604  021C  301E               	movlw	30
  4605  021D  00F5               	movwf	??_BMP280_SPI_bus_read
  4606  021E                     u2300:	
  4607  021E  0016               	moviw fsr1++
  4608  021F  001A               	movwi fsr0++
  4609  0220  0BF5               	decfsz	??_BMP280_SPI_bus_read,f
  4610  0221  2A1E               	goto	u2300
  4611                           
  4612                           ;main.c: 40: uint8_t stringpos;;main.c: 41: array[0] = reg_addr|0x80;
  4613  0222  0872               	movf	BMP280_SPI_bus_read@reg_addr,w
  4614  0223  3880               	iorlw	-128
  4615  0224  00F5               	movwf	??_BMP280_SPI_bus_read
  4616  0225  0875               	movf	??_BMP280_SPI_bus_read,w
  4617  0226  00A0               	movwf	BMP280_SPI_bus_read@array
  4618                           
  4619                           ;main.c: 43: uint8_t i;;main.c: 45: for (i=0; i<cnt+1; i++){
  4620  0227  01C2               	clrf	BMP280_SPI_bus_read@i
  4621  0228                     l2212:	
  4622  0228  0874               	movf	BMP280_SPI_bus_read@cnt,w
  4623  0229  3E01               	addlw	1
  4624  022A  00F5               	movwf	??_BMP280_SPI_bus_read
  4625  022B  3000               	movlw	0
  4626  022C  1803               	skipnc
  4627  022D  3001               	movlw	1
  4628  022E  00F6               	movwf	??_BMP280_SPI_bus_read+1
  4629  022F  0876               	movf	??_BMP280_SPI_bus_read+1,w
  4630  0230  3A80               	xorlw	128
  4631  0231  3C80               	sublw	128
  4632  0232  1D03               	skipz
  4633  0233  2A36               	goto	u2315
  4634  0234  0875               	movf	??_BMP280_SPI_bus_read,w
  4635  0235  0242               	subwf	BMP280_SPI_bus_read@i,w
  4636  0236                     u2315:	
  4637  0236  1803               	btfsc	3,0
  4638  0237  2A3E               	goto	l2214
  4639  0238  3001               	movlw	1
  4640  0239  00F5               	movwf	??_BMP280_SPI_bus_read
  4641  023A  0875               	movf	??_BMP280_SPI_bus_read,w
  4642  023B  0140               	movlb	0	; select bank0
  4643  023C  07C2               	addwf	BMP280_SPI_bus_read@i,f
  4644  023D  2A28               	goto	l2212
  4645  023E                     l2214:	
  4646                           
  4647                           ;main.c: 47: };main.c: 50: for (stringpos = 0; stringpos < cnt; stringpos++) {
  4648  023E  0140               	movlb	0	; select bank0
  4649  023F  01C3               	clrf	BMP280_SPI_bus_read@stringpos
  4650  0240                     l2220:	
  4651  0240  0874               	movf	BMP280_SPI_bus_read@cnt,w
  4652  0241  0243               	subwf	BMP280_SPI_bus_read@stringpos,w
  4653  0242  1803               	btfsc	3,0
  4654  0243  2A58               	goto	l2222
  4655                           
  4656                           ;main.c: 51: *(reg_data + stringpos) = array[stringpos+1];
  4657  0244  0843               	movf	BMP280_SPI_bus_read@stringpos,w
  4658  0245  3E01               	addlw	1
  4659  0246  3E20               	addlw	(low (BMP280_SPI_bus_read@array| 0))& (0+255)
  4660  0247  0086               	movwf	6
  4661  0248  0187               	clrf	7
  4662  0249  0801               	movf	1,w
  4663  024A  00F5               	movwf	??_BMP280_SPI_bus_read
  4664  024B  0843               	movf	BMP280_SPI_bus_read@stringpos,w
  4665  024C  0773               	addwf	BMP280_SPI_bus_read@reg_data,w
  4666  024D  00F6               	movwf	??_BMP280_SPI_bus_read+1
  4667  024E  0876               	movf	??_BMP280_SPI_bus_read+1,w
  4668  024F  0086               	movwf	6
  4669  0250  0187               	clrf	7
  4670  0251  0875               	movf	??_BMP280_SPI_bus_read,w
  4671  0252  0081               	movwf	1
  4672  0253  3001               	movlw	1
  4673  0254  00F5               	movwf	??_BMP280_SPI_bus_read
  4674  0255  0875               	movf	??_BMP280_SPI_bus_read,w
  4675  0256  07C3               	addwf	BMP280_SPI_bus_read@stringpos,f
  4676  0257  2A40               	goto	l2220
  4677  0258                     l2222:	
  4678                           
  4679                           ;main.c: 52: };main.c: 53: return (int8_t)iError;
  4680  0258  083E               	movf	BMP280_SPI_bus_read@iError,w
  4681  0259  0008               	return
  4682  025A                     __end_of_BMP280_SPI_bus_read:	
  4683                           
  4684                           	psect	text5
  4685  029F                     __ptext5:	
  4686 ;; *************** function _bmp280_soft_reset *****************
  4687 ;; Defined at:
  4688 ;;		line 189 in file "bmp280.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  dev             1    wreg     PTR const struct bmp280_
  4691 ;;		 -> bmp(42), 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  dev             1   23[BANK0 ] PTR const struct bmp280_
  4694 ;;		 -> bmp(42), 
  4695 ;;  reg_addr        1   22[BANK0 ] unsigned char 
  4696 ;;  rslt            1   21[BANK0 ] char 
  4697 ;;  soft_rst_cmd    1   20[BANK0 ] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      char 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        7 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    6
  4714 ;; This function calls:
  4715 ;;		_BMP280_delay_msek
  4716 ;;		_bmp280_set_regs
  4717 ;;		_null_ptr_check
  4718 ;; This function is called by:
  4719 ;;		_bmp280_init
  4720 ;;		_conf_sensor
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _bmp280_soft_reset
  4726  029F                     _bmp280_soft_reset:	
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _bmp280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4730                           ;bmp280_soft_reset@dev stored from wreg
  4731  029F  0140               	movlb	0	; select bank0
  4732  02A0  00B7               	movwf	bmp280_soft_reset@dev
  4733                           
  4734                           ;bmp280.c: 191: int8_t rslt;;bmp280.c: 192: uint8_t reg_addr = (unsigned char) 0xE0;
  4735  02A1  30E0               	movlw	224
  4736  02A2  00B1               	movwf	??_bmp280_soft_reset
  4737  02A3  0831               	movf	??_bmp280_soft_reset,w
  4738  02A4  00B6               	movwf	bmp280_soft_reset@reg_addr
  4739                           
  4740                           ;bmp280.c: 193: uint8_t soft_rst_cmd = (unsigned char) 0xB6;
  4741  02A5  30B6               	movlw	182
  4742  02A6  00B1               	movwf	??_bmp280_soft_reset
  4743  02A7  0831               	movf	??_bmp280_soft_reset,w
  4744  02A8  00B4               	movwf	bmp280_soft_reset@soft_rst_cmd
  4745                           
  4746                           ;bmp280.c: 195: rslt = null_ptr_check(dev);
  4747  02A9  0837               	movf	bmp280_soft_reset@dev,w
  4748  02AA  3183  237F  3182   	fcall	_null_ptr_check
  4749  02AD  0140               	movlb	0	; select bank0
  4750  02AE  00B1               	movwf	??_bmp280_soft_reset
  4751  02AF  0831               	movf	??_bmp280_soft_reset,w
  4752  02B0  00B5               	movwf	bmp280_soft_reset@rslt
  4753                           
  4754                           ;bmp280.c: 197: if (rslt == (0)) {
  4755  02B1  0835               	movf	bmp280_soft_reset@rslt,w
  4756  02B2  1D03               	btfss	3,2
  4757  02B3  2AD7               	goto	l2420
  4758                           
  4759                           ;bmp280.c: 198: rslt = bmp280_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
  4760  02B4  3034               	movlw	(low (bmp280_soft_reset@soft_rst_cmd| 0))& (0+255)
  4761  02B5  00B1               	movwf	??_bmp280_soft_reset
  4762  02B6  0831               	movf	??_bmp280_soft_reset,w
  4763  02B7  00F9               	movwf	bmp280_set_regs@reg_data
  4764  02B8  01FA               	clrf	bmp280_set_regs@len
  4765  02B9  0AFA               	incf	bmp280_set_regs@len,f
  4766  02BA  0837               	movf	bmp280_soft_reset@dev,w
  4767  02BB  00B2               	movwf	??_bmp280_soft_reset+1
  4768  02BC  0832               	movf	??_bmp280_soft_reset+1,w
  4769  02BD  00FB               	movwf	bmp280_set_regs@dev
  4770  02BE  3036               	movlw	(low (bmp280_soft_reset@reg_addr| 0))& (0+255)
  4771  02BF  3180  20E8  3182   	fcall	_bmp280_set_regs
  4772  02C2  0140               	movlb	0	; select bank0
  4773  02C3  00B3               	movwf	??_bmp280_soft_reset+2
  4774  02C4  0833               	movf	??_bmp280_soft_reset+2,w
  4775  02C5  00B5               	movwf	bmp280_soft_reset@rslt
  4776                           
  4777                           ;bmp280.c: 201: dev->delay_ms(2);
  4778  02C6  3000               	movlw	0
  4779  02C7  00F4               	movwf	BMP280_delay_msek@msek+3
  4780  02C8  3000               	movlw	0
  4781  02C9  00F3               	movwf	BMP280_delay_msek@msek+2
  4782  02CA  3000               	movlw	0
  4783  02CB  00F2               	movwf	BMP280_delay_msek@msek+1
  4784  02CC  3002               	movlw	2
  4785  02CD  00F1               	movwf	BMP280_delay_msek@msek
  4786  02CE  0837               	movf	bmp280_soft_reset@dev,w
  4787  02CF  3E07               	addlw	7
  4788  02D0  0086               	movwf	6
  4789  02D1  0187               	clrf	7
  4790  02D2  3F41               	moviw [1]fsr1
  4791  02D3  008A               	movwf	10
  4792  02D4  3F40               	moviw [0]fsr1
  4793  02D5  000A               	callw
  4794  02D6  3182               	pagesel	$
  4795  02D7                     l2420:	
  4796                           
  4797                           ;bmp280.c: 202: };bmp280.c: 204: return rslt;
  4798  02D7  0140               	movlb	0	; select bank0
  4799  02D8  0835               	movf	bmp280_soft_reset@rslt,w
  4800  02D9  0008               	return
  4801  02DA                     __end_of_bmp280_soft_reset:	
  4802                           
  4803                           	psect	text6
  4804  00E8                     __ptext6:	
  4805 ;; *************** function _bmp280_set_regs *****************
  4806 ;; Defined at:
  4807 ;;		line 140 in file "bmp280.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  reg_addr        1    wreg     PTR unsigned char 
  4810 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4811 ;;  reg_data        1    9[COMMON] PTR const unsigned char 
  4812 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  4813 ;;  len             1   10[COMMON] unsigned char 
  4814 ;;  dev             1   11[COMMON] PTR const struct bmp280_
  4815 ;;		 -> bmp(42), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  reg_addr        1   16[BANK0 ] PTR unsigned char 
  4818 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  4819 ;;  temp_buff       8    4[BANK0 ] unsigned char [8]
  4820 ;;  temp_len        2   12[BANK0 ] unsigned int 
  4821 ;;  rslt            1   15[BANK0 ] char 
  4822 ;;  reg_addr_cnt    1   14[BANK0 ] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      char 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Totals:         3      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;Total ram usage:       20 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    5
  4839 ;; This function calls:
  4840 ;;		_BMP280_SPI_bus_write
  4841 ;;		_interleave_data
  4842 ;;		_null_ptr_check
  4843 ;; This function is called by:
  4844 ;;		_bmp280_soft_reset
  4845 ;;		_conf_sensor
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _bmp280_set_regs
  4851  00E8                     _bmp280_set_regs:	
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in _bmp280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4855                           ;bmp280_set_regs@reg_addr stored from wreg
  4856  00E8  0140               	movlb	0	; select bank0
  4857  00E9  00B0               	movwf	bmp280_set_regs@reg_addr
  4858                           
  4859                           ;bmp280.c: 142: int8_t rslt;;bmp280.c: 143: uint8_t temp_buff[8];;bmp280.c: 144: uint16_
      +                          t temp_len;;bmp280.c: 145: uint8_t reg_addr_cnt;;bmp280.c: 147: if (len > 4)
  4860  00EA  3005               	movlw	5
  4861  00EB  027A               	subwf	bmp280_set_regs@len,w
  4862  00EC  1C03               	skipc
  4863  00ED  28F2               	goto	l2282
  4864                           
  4865                           ;bmp280.c: 148: len = 4;
  4866  00EE  3004               	movlw	4
  4867  00EF  00A0               	movwf	??_bmp280_set_regs
  4868  00F0  0820               	movf	??_bmp280_set_regs,w
  4869  00F1  00FA               	movwf	bmp280_set_regs@len
  4870  00F2                     l2282:	
  4871                           
  4872                           ;bmp280.c: 150: rslt = null_ptr_check(dev);
  4873  00F2  087B               	movf	bmp280_set_regs@dev,w
  4874  00F3  3183  237F  3180   	fcall	_null_ptr_check
  4875  00F6  0140               	movlb	0	; select bank0
  4876  00F7  00A0               	movwf	??_bmp280_set_regs
  4877  00F8  0820               	movf	??_bmp280_set_regs,w
  4878  00F9  00AF               	movwf	bmp280_set_regs@rslt
  4879                           
  4880                           ;bmp280.c: 152: if ((rslt == (0)) && (reg_addr != (0)) && (reg_data != (0))) {
  4881  00FA  082F               	movf	bmp280_set_regs@rslt,w
  4882  00FB  1D03               	btfss	3,2
  4883  00FC  2977               	goto	l371
  4884  00FD  0830               	movf	bmp280_set_regs@reg_addr,w
  4885  00FE  1903               	btfsc	3,2
  4886  00FF  2977               	goto	l371
  4887  0100  0879               	movf	bmp280_set_regs@reg_data,w
  4888  0101  1903               	btfsc	3,2
  4889  0102  2977               	goto	l371
  4890                           
  4891                           ;bmp280.c: 153: if (len != 0) {
  4892  0103  087A               	movf	bmp280_set_regs@len,w
  4893  0104  1903               	btfsc	3,2
  4894  0105  2972               	goto	l2318
  4895                           
  4896                           ;bmp280.c: 154: temp_buff[0] = reg_data[0];
  4897  0106  0879               	movf	bmp280_set_regs@reg_data,w
  4898  0107  0086               	movwf	6
  4899  0108  0187               	clrf	7
  4900  0109  0801               	movf	1,w
  4901  010A  00A0               	movwf	??_bmp280_set_regs
  4902  010B  0820               	movf	??_bmp280_set_regs,w
  4903  010C  00A4               	movwf	bmp280_set_regs@temp_buff
  4904                           
  4905                           ;bmp280.c: 156: if (dev->intf == (unsigned char) 0) {
  4906  010D  087B               	movf	bmp280_set_regs@dev,w
  4907  010E  3E02               	addlw	2
  4908  010F  0086               	movwf	6
  4909  0110  0187               	clrf	7
  4910  0111  0801               	movf	1,w
  4911  0112  1D03               	btfss	3,2
  4912  0113  292F               	goto	l2304
  4913                           
  4914                           ;bmp280.c: 159: for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
  4915  0114  01AE               	clrf	bmp280_set_regs@reg_addr_cnt
  4916  0115                     l2302:	
  4917  0115  087A               	movf	bmp280_set_regs@len,w
  4918  0116  022E               	subwf	bmp280_set_regs@reg_addr_cnt,w
  4919  0117  1803               	btfsc	3,0
  4920  0118  292F               	goto	l2304
  4921                           
  4922                           ;bmp280.c: 160: reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
  4923  0119  082E               	movf	bmp280_set_regs@reg_addr_cnt,w
  4924  011A  0730               	addwf	bmp280_set_regs@reg_addr,w
  4925  011B  00A0               	movwf	??_bmp280_set_regs
  4926  011C  0820               	movf	??_bmp280_set_regs,w
  4927  011D  0086               	movwf	6
  4928  011E  0187               	clrf	7
  4929  011F  0801               	movf	1,w
  4930  0120  397F               	andlw	127
  4931  0121  00A1               	movwf	??_bmp280_set_regs+1
  4932  0122  082E               	movf	bmp280_set_regs@reg_addr_cnt,w
  4933  0123  0730               	addwf	bmp280_set_regs@reg_addr,w
  4934  0124  00A2               	movwf	??_bmp280_set_regs+2
  4935  0125  0822               	movf	??_bmp280_set_regs+2,w
  4936  0126  0086               	movwf	6
  4937  0127  0187               	clrf	7
  4938  0128  0821               	movf	??_bmp280_set_regs+1,w
  4939  0129  0081               	movwf	1
  4940  012A  3001               	movlw	1
  4941  012B  00A0               	movwf	??_bmp280_set_regs
  4942  012C  0820               	movf	??_bmp280_set_regs,w
  4943  012D  07AE               	addwf	bmp280_set_regs@reg_addr_cnt,f
  4944  012E  2915               	goto	l2302
  4945  012F                     l2304:	
  4946                           
  4947                           ;bmp280.c: 161: };bmp280.c: 164: if (len > 1) {
  4948  012F  3002               	movlw	2
  4949  0130  027A               	subwf	bmp280_set_regs@len,w
  4950  0131  1C03               	skipc
  4951  0132  294F               	goto	l2310
  4952                           
  4953                           ;bmp280.c: 166: interleave_data(reg_addr, temp_buff, reg_data, len);
  4954  0133  3024               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  4955  0134  00A0               	movwf	??_bmp280_set_regs
  4956  0135  0820               	movf	??_bmp280_set_regs,w
  4957  0136  00F1               	movwf	interleave_data@temp_buff
  4958  0137  0879               	movf	bmp280_set_regs@reg_data,w
  4959  0138  00A1               	movwf	??_bmp280_set_regs+1
  4960  0139  0821               	movf	??_bmp280_set_regs+1,w
  4961  013A  00F2               	movwf	interleave_data@reg_data
  4962  013B  087A               	movf	bmp280_set_regs@len,w
  4963  013C  00A2               	movwf	??_bmp280_set_regs+2
  4964  013D  0822               	movf	??_bmp280_set_regs+2,w
  4965  013E  00F3               	movwf	interleave_data@len
  4966  013F  0830               	movf	bmp280_set_regs@reg_addr,w
  4967  0140  3182  22DA  3180   	fcall	_interleave_data
  4968                           
  4969                           ;bmp280.c: 167: temp_len = ((len * 2) - 1);
  4970  0143  087A               	movf	bmp280_set_regs@len,w
  4971  0144  0140               	movlb	0	; select bank0
  4972  0145  00A0               	movwf	??_bmp280_set_regs
  4973  0146  01A1               	clrf	??_bmp280_set_regs+1
  4974  0147  35A0               	lslf	??_bmp280_set_regs,f
  4975  0148  0DA1               	rlf	??_bmp280_set_regs+1,f
  4976  0149  0820               	movf	??_bmp280_set_regs,w
  4977  014A  3EFF               	addlw	255
  4978  014B  00AC               	movwf	bmp280_set_regs@temp_len
  4979  014C  30FF               	movlw	255
  4980  014D  3D21               	addwfc	??_bmp280_set_regs+1,w
  4981  014E  2955               	goto	L1
  4982  014F                     l2310:	
  4983                           ;bmp280.c: 168: } else {
  4984                           
  4985                           
  4986                           ;bmp280.c: 169: temp_len = len;
  4987  014F  087A               	movf	bmp280_set_regs@len,w
  4988  0150  00A0               	movwf	??_bmp280_set_regs
  4989  0151  01A1               	clrf	??_bmp280_set_regs+1
  4990  0152  0820               	movf	??_bmp280_set_regs,w
  4991  0153  00AC               	movwf	bmp280_set_regs@temp_len
  4992  0154  0821               	movf	??_bmp280_set_regs+1,w
  4993  0155                     L1:	
  4994  0155  00AD               	movwf	bmp280_set_regs@temp_len+1
  4995                           
  4996                           ;bmp280.c: 170: };bmp280.c: 172: rslt = BMP280_SPI_bus_write(0, reg_addr[0], temp_buff, 
      +                          temp_len);
  4997  0156  01F1               	clrf	BMP280_SPI_bus_write@dev_addr
  4998  0157  0830               	movf	bmp280_set_regs@reg_addr,w
  4999  0158  0086               	movwf	6
  5000  0159  0187               	clrf	7
  5001  015A  0801               	movf	1,w
  5002  015B  00A0               	movwf	??_bmp280_set_regs
  5003  015C  0820               	movf	??_bmp280_set_regs,w
  5004  015D  00F2               	movwf	BMP280_SPI_bus_write@reg_addr
  5005  015E  3024               	movlw	(low (bmp280_set_regs@temp_buff| 0))& (0+255)
  5006  015F  00A1               	movwf	??_bmp280_set_regs+1
  5007  0160  0821               	movf	??_bmp280_set_regs+1,w
  5008  0161  00F3               	movwf	BMP280_SPI_bus_write@reg_data
  5009  0162  082C               	movf	bmp280_set_regs@temp_len,w
  5010  0163  00A2               	movwf	??_bmp280_set_regs+2
  5011  0164  0822               	movf	??_bmp280_set_regs+2,w
  5012  0165  00F4               	movwf	BMP280_SPI_bus_write@cnt
  5013  0166  3184  2451  3180   	fcall	_BMP280_SPI_bus_write
  5014  0169  0140               	movlb	0	; select bank0
  5015  016A  00A3               	movwf	??_bmp280_set_regs+3
  5016  016B  0823               	movf	??_bmp280_set_regs+3,w
  5017  016C  00AF               	movwf	bmp280_set_regs@rslt
  5018                           
  5019                           ;bmp280.c: 174: if (rslt != (0))
  5020  016D  082F               	movf	bmp280_set_regs@rslt,w
  5021  016E  1903               	btfsc	3,2
  5022  016F  2979               	goto	l2320
  5023                           
  5024                           ;bmp280.c: 175: rslt = (-4);
  5025  0170  30FC               	movlw	252
  5026  0171  2973               	goto	L2
  5027  0172                     l2318:	
  5028                           ;bmp280.c: 176: } else {
  5029                           
  5030                           
  5031                           ;bmp280.c: 177: rslt = (-3);
  5032  0172  30FD               	movlw	253
  5033  0173                     L2:	
  5034  0173  00A0               	movwf	??_bmp280_set_regs
  5035  0174  0820               	movf	??_bmp280_set_regs,w
  5036  0175  00AF               	movwf	bmp280_set_regs@rslt
  5037                           
  5038                           ;bmp280.c: 178: };bmp280.c: 179: } else {
  5039  0176  2979               	goto	l2320
  5040  0177                     l371:	
  5041                           
  5042                           ;bmp280.c: 180: rslt = (-1);
  5043  0177  01AF               	clrf	bmp280_set_regs@rslt
  5044  0178  03AF               	decf	bmp280_set_regs@rslt,f
  5045  0179                     l2320:	
  5046                           
  5047                           ;bmp280.c: 181: };bmp280.c: 183: return rslt;
  5048  0179  082F               	movf	bmp280_set_regs@rslt,w
  5049  017A  0008               	return
  5050  017B                     __end_of_bmp280_set_regs:	
  5051                           
  5052                           	psect	text7
  5053  037F                     __ptext7:	
  5054 ;; *************** function _null_ptr_check *****************
  5055 ;; Defined at:
  5056 ;;		line 587 in file "bmp280.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  dev             1    wreg     PTR const struct bmp280_
  5059 ;;		 -> bmp(42), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  dev             1    4[COMMON] PTR const struct bmp280_
  5062 ;;		 -> bmp(42), 
  5063 ;;  rslt            1    3[COMMON] char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      char 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        4 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    4
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_bmp280_get_regs
  5084 ;;		_bmp280_set_regs
  5085 ;;		_bmp280_soft_reset
  5086 ;;		_bmp280_init
  5087 ;;		_get_calib_param
  5088 ;;		_bmp280_get_config
  5089 ;;		_bmp280_get_status
  5090 ;;		_bmp280_get_power_mode
  5091 ;;		_bmp280_set_power_mode
  5092 ;;		_bmp280_get_uncomp_data
  5093 ;;		_bmp280_comp_temp_32bit
  5094 ;;		_bmp280_comp_pres_32bit
  5095 ;;		_bmp280_compute_meas_time
  5096 ;;		_conf_sensor
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _null_ptr_check
  5102  037F                     _null_ptr_check:	
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
  5106                           ;null_ptr_check@dev stored from wreg
  5107  037F  00F4               	movwf	null_ptr_check@dev
  5108                           
  5109                           ;bmp280.c: 589: int8_t rslt;;bmp280.c: 591: if ((dev == (0)) || (dev->read == (0)) || (d
      +                          ev->write == (0)) || (dev->delay_ms == (0))) {
  5110  0380  0874               	movf	null_ptr_check@dev,w
  5111  0381  1903               	btfsc	3,2
  5112  0382  2B9B               	goto	l460
  5113  0383  0874               	movf	null_ptr_check@dev,w
  5114  0384  3E03               	addlw	3
  5115  0385  0086               	movwf	6
  5116  0386  0187               	clrf	7
  5117  0387  0016               	moviw fsr1++
  5118  0388  0401               	iorwf	1,w
  5119  0389  1903               	btfsc	3,2
  5120  038A  2B9B               	goto	l460
  5121  038B  0874               	movf	null_ptr_check@dev,w
  5122  038C  3E05               	addlw	5
  5123  038D  0086               	movwf	6
  5124  038E  0187               	clrf	7
  5125  038F  0016               	moviw fsr1++
  5126  0390  0401               	iorwf	1,w
  5127  0391  1903               	btfsc	3,2
  5128  0392  2B9B               	goto	l460
  5129  0393  0874               	movf	null_ptr_check@dev,w
  5130  0394  3E07               	addlw	7
  5131  0395  0086               	movwf	6
  5132  0396  0187               	clrf	7
  5133  0397  0016               	moviw fsr1++
  5134  0398  0401               	iorwf	1,w
  5135  0399  1D03               	btfss	3,2
  5136  039A  2B9E               	goto	l2238
  5137  039B                     l460:	
  5138                           
  5139                           ;bmp280.c: 593: rslt = (-1);
  5140  039B  01F3               	clrf	null_ptr_check@rslt
  5141  039C  03F3               	decf	null_ptr_check@rslt,f
  5142                           
  5143                           ;bmp280.c: 594: } else {
  5144  039D  2B9F               	goto	l2240
  5145  039E                     l2238:	
  5146                           
  5147                           ;bmp280.c: 595: rslt = (0);
  5148  039E  01F3               	clrf	null_ptr_check@rslt
  5149  039F                     l2240:	
  5150                           
  5151                           ;bmp280.c: 596: };bmp280.c: 598: return rslt;
  5152  039F  0873               	movf	null_ptr_check@rslt,w
  5153  03A0  0008               	return
  5154  03A1                     __end_of_null_ptr_check:	
  5155                           
  5156                           	psect	text8
  5157  02DA                     __ptext8:	
  5158 ;; *************** function _interleave_data *****************
  5159 ;; Defined at:
  5160 ;;		line 605 in file "bmp280.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  reg_addr        1    wreg     PTR const unsigned char 
  5163 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5164 ;;  temp_buff       1    1[COMMON] PTR unsigned char 
  5165 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5166 ;;  reg_data        1    2[COMMON] PTR const unsigned char 
  5167 ;;		 -> conf_sensor@temp(2), bmp280_soft_reset@soft_rst_cmd(1), 
  5168 ;;  len             1    3[COMMON] unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  reg_addr        1    7[COMMON] PTR const unsigned char 
  5171 ;;		 -> conf_sensor@reg_addr(2), bmp280_soft_reset@reg_addr(1), 
  5172 ;;  index           1    8[COMMON] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;Total ram usage:        8 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    4
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_bmp280_set_regs
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function _interleave_data
  5198  02DA                     _interleave_data:	
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in _interleave_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  5202                           ;interleave_data@reg_addr stored from wreg
  5203  02DA  00F7               	movwf	interleave_data@reg_addr
  5204                           
  5205                           ;bmp280.c: 607: uint8_t index;;bmp280.c: 609: for (index = 1; index < len; index++) {
  5206  02DB  01F8               	clrf	interleave_data@index
  5207  02DC  0AF8               	incf	interleave_data@index,f
  5208  02DD                     l2250:	
  5209  02DD  0873               	movf	interleave_data@len,w
  5210  02DE  0278               	subwf	interleave_data@index,w
  5211  02DF  1803               	btfsc	3,0
  5212  02E0  0008               	return
  5213                           
  5214                           ;bmp280.c: 610: temp_buff[(index * 2) - 1] = reg_addr[index];
  5215  02E1  0878               	movf	interleave_data@index,w
  5216  02E2  0777               	addwf	interleave_data@reg_addr,w
  5217  02E3  00F4               	movwf	??_interleave_data
  5218  02E4  0874               	movf	??_interleave_data,w
  5219  02E5  0086               	movwf	6
  5220  02E6  0187               	clrf	7
  5221  02E7  0801               	movf	1,w
  5222  02E8  00F5               	movwf	??_interleave_data+1
  5223  02E9  3578               	lslf	interleave_data@index,w
  5224  02EA  3EFF               	addlw	-1
  5225  02EB  0771               	addwf	interleave_data@temp_buff,w
  5226  02EC  00F6               	movwf	??_interleave_data+2
  5227  02ED  0876               	movf	??_interleave_data+2,w
  5228  02EE  0086               	movwf	6
  5229  02EF  0187               	clrf	7
  5230  02F0  0875               	movf	??_interleave_data+1,w
  5231  02F1  0081               	movwf	1
  5232                           
  5233                           ;bmp280.c: 611: temp_buff[index * 2] = reg_data[index];
  5234  02F2  0878               	movf	interleave_data@index,w
  5235  02F3  0772               	addwf	interleave_data@reg_data,w
  5236  02F4  00F4               	movwf	??_interleave_data
  5237  02F5  0874               	movf	??_interleave_data,w
  5238  02F6  0086               	movwf	6
  5239  02F7  0187               	clrf	7
  5240  02F8  0801               	movf	1,w
  5241  02F9  00F5               	movwf	??_interleave_data+1
  5242  02FA  3578               	lslf	interleave_data@index,w
  5243  02FB  0771               	addwf	interleave_data@temp_buff,w
  5244  02FC  00F6               	movwf	??_interleave_data+2
  5245  02FD  0876               	movf	??_interleave_data+2,w
  5246  02FE  0086               	movwf	6
  5247  02FF  0187               	clrf	7
  5248  0300  0875               	movf	??_interleave_data+1,w
  5249  0301  0081               	movwf	1
  5250  0302  3001               	movlw	1
  5251  0303  00F4               	movwf	??_interleave_data
  5252  0304  0874               	movf	??_interleave_data,w
  5253  0305  07F8               	addwf	interleave_data@index,f
  5254  0306  2ADD               	goto	l2250
  5255  0307                     __end_of_interleave_data:	
  5256                           
  5257                           	psect	text9
  5258  0451                     __ptext9:	
  5259 ;; *************** function _BMP280_SPI_bus_write *****************
  5260 ;; Defined at:
  5261 ;;		line 56 in file "main.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  dev_addr        1    1[COMMON] unsigned char 
  5264 ;;  reg_addr        1    2[COMMON] unsigned char 
  5265 ;;  reg_data        1    3[COMMON] PTR unsigned char 
  5266 ;;		 -> bmp280_set_regs@temp_buff(8), 
  5267 ;;  cnt             1    4[COMMON] unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  iError          4    5[COMMON] long 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      char 
  5272 ;; Registers used:
  5273 ;;		wreg
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;Total ram usage:        8 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    4
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;;		_bmp280_set_regs
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function _BMP280_SPI_bus_write
  5296  0451                     _BMP280_SPI_bus_write:	
  5297                           
  5298                           ;main.c: 58: int32_t iError=(0);
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _BMP280_SPI_bus_write: [wreg]
  5302  0451  3000               	movlw	0
  5303  0452  00F8               	movwf	BMP280_SPI_bus_write@iError+3
  5304  0453  3000               	movlw	0
  5305  0454  00F7               	movwf	BMP280_SPI_bus_write@iError+2
  5306  0455  3000               	movlw	0
  5307  0456  00F6               	movwf	BMP280_SPI_bus_write@iError+1
  5308  0457  3000               	movlw	0
  5309  0458  00F5               	movwf	BMP280_SPI_bus_write@iError
  5310                           
  5311                           ;main.c: 69: return (int8_t)iError;
  5312  0459  0875               	movf	BMP280_SPI_bus_write@iError,w
  5313  045A  0008               	return
  5314  045B                     __end_of_BMP280_SPI_bus_write:	
  5315                           
  5316                           	psect	text10
  5317  04A7                     __ptext10:	
  5318 ;; *************** function _BMP280_delay_msek *****************
  5319 ;; Defined at:
  5320 ;;		line 30 in file "main.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  msek            4    1[COMMON] unsigned long 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		None
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;Total ram usage:        4 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    4
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_main
  5345 ;;		_bmp280_soft_reset
  5346 ;;		_bmp280_init
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _BMP280_delay_msek
  5352  04A7                     _BMP280_delay_msek:	
  5353                           
  5354                           ;incstack = 0
  5355                           ; Regs used in _BMP280_delay_msek: []
  5356  04A7  0008               	return
  5357  04A8                     __end_of_BMP280_delay_msek:	
  5358                           
  5359                           	psect	text11
  5360  04A2                     __ptext11:	
  5361 ;; *************** function _TMR0_StartTimer *****************
  5362 ;; Defined at:
  5363 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		None
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    4
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function _TMR0_StartTimer
  5393  04A2                     _TMR0_StartTimer:	
  5394                           
  5395                           ;tmr0.c: 98: T0CON0bits.T0EN = 1;
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _TMR0_StartTimer: []
  5399  04A2  014B               	movlb	11	; select bank11
  5400  04A3  179E               	bsf	30,7	;volatile
  5401  04A4  0008               	return
  5402  04A5                     __end_of_TMR0_StartTimer:	
  5403                           
  5404                           	psect	text12
  5405  0427                     __ptext12:	
  5406 ;; *************** function _SYSTEM_Initialize *****************
  5407 ;; Defined at:
  5408 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    6
  5429 ;; This function calls:
  5430 ;;		_ADC_Initialize
  5431 ;;		_EUSART1_Initialize
  5432 ;;		_OSCILLATOR_Initialize
  5433 ;;		_PIN_MANAGER_Initialize
  5434 ;;		_PMD_Initialize
  5435 ;;		_TMR0_Initialize
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _SYSTEM_Initialize
  5443  0427                     _SYSTEM_Initialize:	
  5444                           
  5445                           ;mcc.c: 52: PMD_Initialize();
  5446                           
  5447                           ;incstack = 0
  5448                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5449  0427  3184  2465  3184   	fcall	_PMD_Initialize
  5450                           
  5451                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5452  042A  3183  2359  3184   	fcall	_PIN_MANAGER_Initialize
  5453                           
  5454                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5455  042D  3184  245B  3184   	fcall	_OSCILLATOR_Initialize
  5456                           
  5457                           ;mcc.c: 55: ADC_Initialize();
  5458  0430  3184  246D  3184   	fcall	_ADC_Initialize
  5459                           
  5460                           ;mcc.c: 56: TMR0_Initialize();
  5461  0433  3183  23FA  3184   	fcall	_TMR0_Initialize
  5462                           
  5463                           ;mcc.c: 57: EUSART1_Initialize();
  5464  0436  3183  2307         	fcall	_EUSART1_Initialize
  5465  0438  0008               	return
  5466  0439                     __end_of_SYSTEM_Initialize:	
  5467                           
  5468                           	psect	text13
  5469  03FA                     __ptext13:	
  5470 ;; *************** function _TMR0_Initialize *****************
  5471 ;; Defined at:
  5472 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0, pclath, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    5
  5493 ;; This function calls:
  5494 ;;		_TMR0_SetInterruptHandler
  5495 ;; This function is called by:
  5496 ;;		_SYSTEM_Initialize
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _TMR0_Initialize
  5502  03FA                     _TMR0_Initialize:	
  5503                           
  5504                           ;tmr0.c: 71: T0CON1 = 0x50;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5508  03FA  3050               	movlw	80
  5509  03FB  014B               	movlb	11	; select bank11
  5510  03FC  009F               	movwf	31	;volatile
  5511                           
  5512                           ;tmr0.c: 74: TMR0H = 0x00;
  5513  03FD  019D               	clrf	29	;volatile
  5514                           
  5515                           ;tmr0.c: 77: TMR0L = 0x00;
  5516  03FE  019C               	clrf	28	;volatile
  5517                           
  5518                           ;tmr0.c: 80: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  5519  03FF  081D               	movf	29,w	;volatile
  5520  0400  0141               	movlb	1	; select bank1
  5521  0401  00E8               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  5522  0402  014B               	movlb	11	; select bank11
  5523  0403  081C               	movf	28,w	;volatile
  5524  0404  0141               	movlb	1	; select bank1
  5525  0405  00E7               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  5526                           
  5527                           ;tmr0.c: 83: PIR0bits.TMR0IF = 0;
  5528  0406  014E               	movlb	14	; select bank14
  5529  0407  128C               	bcf	12,5	;volatile
  5530                           
  5531                           ;tmr0.c: 86: PIE0bits.TMR0IE = 1;
  5532  0408  1696               	bsf	22,5	;volatile
  5533                           
  5534                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  5535  0409  30A8               	movlw	low _TMR0_DefaultInterruptHandler
  5536  040A  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5537  040B  3004               	movlw	high _TMR0_DefaultInterruptHandler
  5538  040C  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5539  040D  3184  2481         	fcall	_TMR0_SetInterruptHandler
  5540                           
  5541                           ;tmr0.c: 92: T0CON0 = 0x90;
  5542  040F  3090               	movlw	144
  5543  0410  014B               	movlb	11	; select bank11
  5544  0411  009E               	movwf	30	;volatile
  5545  0412  0008               	return
  5546  0413                     __end_of_TMR0_Initialize:	
  5547                           
  5548                           	psect	text14
  5549  0481                     __ptext14:	
  5550 ;; *************** function _TMR0_SetInterruptHandler *****************
  5551 ;; Defined at:
  5552 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  5555 ;;		 -> TMR0_DefaultInterruptHandler(1), tmr_fire(1), 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;Total ram usage:        2 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    4
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_main
  5578 ;;		_TMR0_Initialize
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _TMR0_SetInterruptHandler
  5584  0481                     _TMR0_SetInterruptHandler:	
  5585                           
  5586                           ;tmr0.c: 160: TMR0_InterruptHandler = InterruptHandler;
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5590  0481  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5591  0482  0141               	movlb	1	; select bank1
  5592  0483  00E6               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5593  0484  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5594  0485  00E5               	movwf	_TMR0_InterruptHandler^(0+128)
  5595  0486  0008               	return
  5596  0487                     __end_of_TMR0_SetInterruptHandler:	
  5597                           
  5598                           	psect	text15
  5599  0465                     __ptext15:	
  5600 ;; *************** function _PMD_Initialize *****************
  5601 ;; Defined at:
  5602 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		status,2
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    4
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_SYSTEM_Initialize
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _PMD_Initialize
  5632  0465                     _PMD_Initialize:	
  5633                           
  5634                           ;mcc.c: 79: PMD0 = 0x00;
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in _PMD_Initialize: [status,2]
  5638  0465  014F               	movlb	15	; select bank15
  5639  0466  0196               	clrf	22	;volatile
  5640                           
  5641                           ;mcc.c: 81: PMD1 = 0x00;
  5642  0467  0197               	clrf	23	;volatile
  5643                           
  5644                           ;mcc.c: 83: PMD2 = 0x00;
  5645  0468  0198               	clrf	24	;volatile
  5646                           
  5647                           ;mcc.c: 85: PMD3 = 0x00;
  5648  0469  0199               	clrf	25	;volatile
  5649                           
  5650                           ;mcc.c: 87: PMD4 = 0x00;
  5651  046A  019A               	clrf	26	;volatile
  5652                           
  5653                           ;mcc.c: 89: PMD5 = 0x00;
  5654  046B  019B               	clrf	27	;volatile
  5655  046C  0008               	return
  5656  046D                     __end_of_PMD_Initialize:	
  5657                           
  5658                           	psect	text16
  5659  0359                     __ptext16:	
  5660 ;; *************** function _PIN_MANAGER_Initialize *****************
  5661 ;; Defined at:
  5662 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    4
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_SYSTEM_Initialize
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _PIN_MANAGER_Initialize
  5692  0359                     _PIN_MANAGER_Initialize:	
  5693                           
  5694                           ;pin_manager.c: 62: LATA = 0x00;
  5695                           
  5696                           ;incstack = 0
  5697                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5698  0359  0140               	movlb	0	; select bank0
  5699  035A  0198               	clrf	24	;volatile
  5700                           
  5701                           ;pin_manager.c: 63: LATC = 0x00;
  5702  035B  019A               	clrf	26	;volatile
  5703                           
  5704                           ;pin_manager.c: 68: TRISA = 0x33;
  5705  035C  3033               	movlw	51
  5706  035D  0092               	movwf	18	;volatile
  5707                           
  5708                           ;pin_manager.c: 69: TRISC = 0x0A;
  5709  035E  300A               	movlw	10
  5710  035F  0094               	movwf	20	;volatile
  5711                           
  5712                           ;pin_manager.c: 74: ANSELC = 0x04;
  5713  0360  3004               	movlw	4
  5714  0361  017E               	movlb	62	; select bank62
  5715  0362  00CE               	movwf	78	;volatile
  5716                           
  5717                           ;pin_manager.c: 75: ANSELA = 0x1B;
  5718  0363  301B               	movlw	27
  5719  0364  00B8               	movwf	56	;volatile
  5720                           
  5721                           ;pin_manager.c: 80: WPUA = 0x00;
  5722  0365  01B9               	clrf	57	;volatile
  5723                           
  5724                           ;pin_manager.c: 81: WPUC = 0x00;
  5725  0366  01CF               	clrf	79	;volatile
  5726                           
  5727                           ;pin_manager.c: 86: ODCONA = 0x00;
  5728  0367  01BA               	clrf	58	;volatile
  5729                           
  5730                           ;pin_manager.c: 87: ODCONC = 0x00;
  5731  0368  01D0               	clrf	80	;volatile
  5732                           
  5733                           ;pin_manager.c: 96: RC0PPS = 0x15;
  5734  0369  3015               	movlw	21
  5735  036A  00A0               	movwf	32	;volatile
  5736                           
  5737                           ;pin_manager.c: 97: SSP1CLKPPSbits.SSP1CLKPPS = 0x10;
  5738  036B  017D               	movlb	61	; select bank61
  5739  036C  0845               	movf	69,w	;volatile
  5740  036D  39C0               	andlw	-64
  5741  036E  3810               	iorlw	16
  5742  036F  00C5               	movwf	69	;volatile
  5743                           
  5744                           ;pin_manager.c: 98: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  5745  0370  0846               	movf	70,w	;volatile
  5746  0371  39C0               	andlw	-64
  5747  0372  3811               	iorlw	17
  5748  0373  00C6               	movwf	70	;volatile
  5749                           
  5750                           ;pin_manager.c: 99: RC4PPS = 0x0F;
  5751  0374  300F               	movlw	15
  5752  0375  017E               	movlb	62	; select bank62
  5753  0376  00A4               	movwf	36	;volatile
  5754                           
  5755                           ;pin_manager.c: 100: RC2PPS = 0x16;
  5756  0377  3016               	movlw	22
  5757  0378  00A2               	movwf	34	;volatile
  5758                           
  5759                           ;pin_manager.c: 101: RX1DTPPSbits.RX1DTPPS = 0x13;
  5760  0379  017D               	movlb	61	; select bank61
  5761  037A  084B               	movf	75,w	;volatile
  5762  037B  39C0               	andlw	-64
  5763  037C  3813               	iorlw	19
  5764  037D  00CB               	movwf	75	;volatile
  5765  037E  0008               	return
  5766  037F                     __end_of_PIN_MANAGER_Initialize:	
  5767                           
  5768                           	psect	text17
  5769  045B                     __ptext17:	
  5770 ;; *************** function _OSCILLATOR_Initialize *****************
  5771 ;; Defined at:
  5772 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    4
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_SYSTEM_Initialize
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _OSCILLATOR_Initialize
  5802  045B                     _OSCILLATOR_Initialize:	
  5803                           
  5804                           ;mcc.c: 63: OSCCON1 = 0x60;
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5808  045B  3060               	movlw	96
  5809  045C  0151               	movlb	17	; select bank17
  5810  045D  008D               	movwf	13	;volatile
  5811                           
  5812                           ;mcc.c: 65: OSCCON3 = 0x00;
  5813  045E  018F               	clrf	15	;volatile
  5814                           
  5815                           ;mcc.c: 67: OSCEN = 0x00;
  5816  045F  0191               	clrf	17	;volatile
  5817                           
  5818                           ;mcc.c: 69: OSCFRQ = 0x02;
  5819  0460  3002               	movlw	2
  5820  0461  0093               	movwf	19	;volatile
  5821                           
  5822                           ;mcc.c: 71: OSCSTAT = 0x00;
  5823  0462  0190               	clrf	16	;volatile
  5824                           
  5825                           ;mcc.c: 73: OSCTUNE = 0x00;
  5826  0463  0192               	clrf	18	;volatile
  5827  0464  0008               	return
  5828  0465                     __end_of_OSCILLATOR_Initialize:	
  5829                           
  5830                           	psect	text18
  5831  0307                     __ptext18:	
  5832 ;; *************** function _EUSART1_Initialize *****************
  5833 ;; Defined at:
  5834 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;Total ram usage:        1 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    5
  5855 ;; This function calls:
  5856 ;;		_EUSART1_SetRxInterruptHandler
  5857 ;;		_EUSART1_SetTxInterruptHandler
  5858 ;; This function is called by:
  5859 ;;		_SYSTEM_Initialize
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _EUSART1_Initialize
  5865  0307                     _EUSART1_Initialize:	
  5866                           
  5867                           ;eusart1.c: 78: PIE3bits.RC1IE = 0;
  5868                           
  5869                           ;incstack = 0
  5870                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5871  0307  014E               	movlb	14	; select bank14
  5872  0308  1299               	bcf	25,5	;volatile
  5873                           
  5874                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  5875  0309  30DE               	movlw	low _EUSART1_Receive_ISR
  5876  030A  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  5877  030B  3003               	movlw	high _EUSART1_Receive_ISR
  5878  030C  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  5879  030D  3184  248D  3183   	fcall	_EUSART1_SetRxInterruptHandler
  5880                           
  5881                           ;eusart1.c: 80: PIE3bits.TX1IE = 0;
  5882  0310  014E               	movlb	14	; select bank14
  5883  0311  1219               	bcf	25,4	;volatile
  5884                           
  5885                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  5886  0312  30A1               	movlw	low _EUSART1_Transmit_ISR
  5887  0313  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  5888  0314  3003               	movlw	high _EUSART1_Transmit_ISR
  5889  0315  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  5890  0316  3184  2487         	fcall	_EUSART1_SetTxInterruptHandler
  5891                           
  5892                           ;eusart1.c: 85: BAUD1CON = 0x08;
  5893  0318  3008               	movlw	8
  5894  0319  0142               	movlb	2	; select bank2
  5895  031A  009F               	movwf	31	;volatile
  5896                           
  5897                           ;eusart1.c: 88: RC1STA = 0x90;
  5898  031B  3090               	movlw	144
  5899  031C  009D               	movwf	29	;volatile
  5900                           
  5901                           ;eusart1.c: 91: TX1STA = 0x24;
  5902  031D  3024               	movlw	36
  5903  031E  009E               	movwf	30	;volatile
  5904                           
  5905                           ;eusart1.c: 94: SP1BRGL = 0x08;
  5906  031F  3008               	movlw	8
  5907  0320  009B               	movwf	27	;volatile
  5908                           
  5909                           ;eusart1.c: 97: SP1BRGH = 0x00;
  5910  0321  019C               	clrf	28	;volatile
  5911                           
  5912                           ;eusart1.c: 101: eusart1TxHead = 0;
  5913  0322  01FC               	clrf	_eusart1TxHead	;volatile
  5914                           
  5915                           ;eusart1.c: 102: eusart1TxTail = 0;
  5916  0323  0140               	movlb	0	; select bank0
  5917  0324  01EF               	clrf	_eusart1TxTail	;volatile
  5918                           
  5919                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  5920  0325  3008               	movlw	8
  5921  0326  00F3               	movwf	??_EUSART1_Initialize
  5922  0327  0873               	movf	??_EUSART1_Initialize,w
  5923  0328  0141               	movlb	1	; select bank1
  5924  0329  00ED               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  5925                           
  5926                           ;eusart1.c: 105: eusart1RxHead = 0;
  5927  032A  0140               	movlb	0	; select bank0
  5928  032B  01EE               	clrf	_eusart1RxHead	;volatile
  5929                           
  5930                           ;eusart1.c: 106: eusart1RxTail = 0;
  5931  032C  01ED               	clrf	_eusart1RxTail	;volatile
  5932                           
  5933                           ;eusart1.c: 107: eusart1RxCount = 0;
  5934  032D  0141               	movlb	1	; select bank1
  5935  032E  01BA               	clrf	_eusart1RxCount^(0+128)	;volatile
  5936                           
  5937                           ;eusart1.c: 110: PIE3bits.RC1IE = 1;
  5938  032F  014E               	movlb	14	; select bank14
  5939  0330  1699               	bsf	25,5	;volatile
  5940  0331  0008               	return
  5941  0332                     __end_of_EUSART1_Initialize:	
  5942                           
  5943                           	psect	text19
  5944  0487                     __ptext19:	
  5945 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  5946 ;; Defined at:
  5947 ;;		line 211 in file "mcc_generated_files/eusart1.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  5950 ;;		 -> EUSART1_Transmit_ISR(1), 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		wreg
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    4
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_EUSART1_Initialize
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _EUSART1_SetTxInterruptHandler
  5978  0487                     _EUSART1_SetTxInterruptHandler:	
  5979                           
  5980                           ;eusart1.c: 212: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  5984  0487  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  5985  0488  0141               	movlb	1	; select bank1
  5986  0489  00EC               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
  5987  048A  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  5988  048B  00EB               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
  5989  048C  0008               	return
  5990  048D                     __end_of_EUSART1_SetTxInterruptHandler:	
  5991                           
  5992                           	psect	text20
  5993  048D                     __ptext20:	
  5994 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5995 ;; Defined at:
  5996 ;;		line 215 in file "mcc_generated_files/eusart1.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  5999 ;;		 -> EUSART1_Receive_ISR(1), 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;Total ram usage:        2 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    4
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_EUSART1_Initialize
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           
  6026                           ;psect for function _EUSART1_SetRxInterruptHandler
  6027  048D                     _EUSART1_SetRxInterruptHandler:	
  6028                           
  6029                           ;eusart1.c: 216: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  6030                           
  6031                           ;incstack = 0
  6032                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  6033  048D  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  6034  048E  0141               	movlb	1	; select bank1
  6035  048F  00EA               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  6036  0490  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  6037  0491  00E9               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  6038  0492  0008               	return
  6039  0493                     __end_of_EUSART1_SetRxInterruptHandler:	
  6040                           
  6041                           	psect	text21
  6042  046D                     __ptext21:	
  6043 ;; *************** function _ADC_Initialize *****************
  6044 ;; Defined at:
  6045 ;;		line 64 in file "mcc_generated_files/adc.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    4
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_SYSTEM_Initialize
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _ADC_Initialize
  6075  046D                     _ADC_Initialize:	
  6076                           
  6077                           ;adc.c: 69: ADCON0 = 0x01;
  6078                           
  6079                           ;incstack = 0
  6080                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6081  046D  3001               	movlw	1
  6082  046E  0141               	movlb	1	; select bank1
  6083  046F  009D               	movwf	29	;volatile
  6084                           
  6085                           ;adc.c: 72: ADCON1 = 0x00;
  6086  0470  019E               	clrf	30	;volatile
  6087                           
  6088                           ;adc.c: 75: ADACT = 0x00;
  6089  0471  019F               	clrf	31	;volatile
  6090                           
  6091                           ;adc.c: 78: ADRESL = 0x00;
  6092  0472  019B               	clrf	27	;volatile
  6093                           
  6094                           ;adc.c: 81: ADRESH = 0x00;
  6095  0473  019C               	clrf	28	;volatile
  6096  0474  0008               	return
  6097  0475                     __end_of_ADC_Initialize:	
  6098                           
  6099                           	psect	intentry
  6100  0004                     __pintentry:	
  6101 ;; *************** function _INTERRUPT_InterruptManager *****************
  6102 ;; Defined at:
  6103 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;		None
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;Total ram usage:        0 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    3
  6124 ;; This function calls:
  6125 ;;		Absolute function
  6126 ;;		_EUSART1_Receive_ISR
  6127 ;;		_EUSART1_Transmit_ISR
  6128 ;;		_TMR0_ISR
  6129 ;; This function is called by:
  6130 ;;		Interrupt level 1
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134  0004                     _INTERRUPT_InterruptManager:	
  6135                           
  6136                           ;incstack = 0
  6137  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6138                           
  6139                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6140  0005  3180               	pagesel	$
  6141                           
  6142                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6143  0006  014E               	movlb	14	; select bank14
  6144  0007  1A96               	btfsc	22,5	;volatile
  6145  0008  1E8C               	btfss	12,5	;volatile
  6146  0009  280E               	goto	i1l564
  6147                           
  6148                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  6149  000A  3184  2439  3180   	fcall	_TMR0_ISR
  6150                           
  6151                           ;interrupt_manager.c: 58: }
  6152  000D  2823               	goto	i1l572
  6153  000E                     i1l564:	
  6154                           
  6155                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  6156  000E  1F0B               	btfss	11,6	;volatile
  6157  000F  2823               	goto	i1l572
  6158                           
  6159                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.TX1IE == 1 && PIR3bits.
      +                          TX1IF == 1)
  6160  0010  1A19               	btfsc	25,4	;volatile
  6161  0011  1E0F               	btfss	15,4	;volatile
  6162  0012  281A               	goto	i1l567
  6163                           
  6164                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART1_TxDefaultInterruptHandler()
      +                          ;
  6165  0013  0141               	movlb	1	; select bank1
  6166  0014  086C               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
  6167  0015  008A               	movwf	10
  6168  0016  086B               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
  6169  0017  000A               	callw
  6170  0018  3180               	pagesel	$
  6171                           
  6172                           ;interrupt_manager.c: 64: }
  6173  0019  2823               	goto	i1l572
  6174  001A                     i1l567:	
  6175                           
  6176                           ;interrupt_manager.c: 65: else if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  6177  001A  1A99               	btfsc	25,5	;volatile
  6178  001B  1E8F               	btfss	15,5	;volatile
  6179  001C  2823               	goto	i1l572
  6180                           
  6181                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  6182  001D  0141               	movlb	1	; select bank1
  6183  001E  086A               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
  6184  001F  008A               	movwf	10
  6185  0020  0869               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
  6186  0021  000A               	callw
  6187  0022  3180               	pagesel	$
  6188  0023                     i1l572:	
  6189                           ;interrupt_manager.c: 74: else;interrupt_manager.c: 75: {
  6190                           
  6191                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: }
  6192                           
  6193                           ;interrupt_manager.c: 69: else;interrupt_manager.c: 70: {
  6194                           
  6195                           ;interrupt_manager.c: 68: }
  6196                           
  6197  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6198  0024  0009               	retfie
  6199  0025                     __end_of_INTERRUPT_InterruptManager:	
  6200                           
  6201                           	psect	text23
  6202  0439                     __ptext23:	
  6203 ;; *************** function _TMR0_ISR *****************
  6204 ;; Defined at:
  6205 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0, pclath, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    2
  6226 ;; This function calls:
  6227 ;;		_TMR0_CallBack
  6228 ;; This function is called by:
  6229 ;;		_INTERRUPT_InterruptManager
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           
  6234                           ;psect for function _TMR0_ISR
  6235  0439                     _TMR0_ISR:	
  6236                           
  6237                           ;tmr0.c: 137: PIR0bits.TMR0IF = 0;
  6238                           
  6239                           ;incstack = 0
  6240                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6241  0439  014E               	movlb	14	; select bank14
  6242  043A  128C               	bcf	12,5	;volatile
  6243                           
  6244                           ;tmr0.c: 139: TMR0H = timer0ReloadVal16bit >> 8;
  6245  043B  0141               	movlb	1	; select bank1
  6246  043C  0868               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  6247  043D  014B               	movlb	11	; select bank11
  6248  043E  009D               	movwf	29	;volatile
  6249                           
  6250                           ;tmr0.c: 140: TMR0L = (uint8_t) timer0ReloadVal16bit;
  6251  043F  0141               	movlb	1	; select bank1
  6252  0440  0867               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  6253  0441  014B               	movlb	11	; select bank11
  6254  0442  009C               	movwf	28	;volatile
  6255                           
  6256                           ;tmr0.c: 144: TMR0_CallBack();
  6257  0443  3184  2446         	fcall	_TMR0_CallBack
  6258  0445  0008               	return
  6259  0446                     __end_of_TMR0_ISR:	
  6260                           
  6261                           	psect	text24
  6262  0446                     __ptext24:	
  6263 ;; *************** function _TMR0_CallBack *****************
  6264 ;; Defined at:
  6265 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, pclath, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    1
  6286 ;; This function calls:
  6287 ;;		Absolute function
  6288 ;;		_TMR0_DefaultInterruptHandler
  6289 ;;		_tmr_fire
  6290 ;; This function is called by:
  6291 ;;		_TMR0_ISR
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _TMR0_CallBack
  6297  0446                     _TMR0_CallBack:	
  6298                           
  6299                           ;tmr0.c: 153: if(TMR0_InterruptHandler)
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6303  0446  0141               	movlb	1	; select bank1
  6304  0447  0865               	movf	_TMR0_InterruptHandler^(0+128),w
  6305  0448  0466               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  6306  0449  1903               	btfsc	3,2
  6307  044A  0008               	return
  6308                           
  6309                           ;tmr0.c: 154: {;tmr0.c: 155: TMR0_InterruptHandler();
  6310  044B  0866               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6311  044C  008A               	movwf	10
  6312  044D  0865               	movf	_TMR0_InterruptHandler^(0+128),w
  6313  044E  000A               	callw
  6314  044F  3184               	pagesel	$
  6315  0450  0008               	return
  6316  0451                     __end_of_TMR0_CallBack:	
  6317                           
  6318                           	psect	text25
  6319  04A8                     __ptext25:	
  6320 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6321 ;; Defined at:
  6322 ;;		line 163 in file "mcc_generated_files/tmr0.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;		None
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		None
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_TMR0_Initialize
  6346 ;;		_TMR0_CallBack
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           
  6351                           ;psect for function _TMR0_DefaultInterruptHandler
  6352  04A8                     _TMR0_DefaultInterruptHandler:	
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6356  04A8  0008               	return
  6357  04A9                     __end_of_TMR0_DefaultInterruptHandler:	
  6358                           
  6359                           	psect	text26
  6360  049B                     __ptext26:	
  6361 ;; *************** function _tmr_fire *****************
  6362 ;; Defined at:
  6363 ;;		line 72 in file "main.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_main
  6387 ;;		_TMR0_CallBack
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _tmr_fire
  6393  049B                     _tmr_fire:	
  6394                           
  6395                           ;main.c: 73: RC5 = !RC5;
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _tmr_fire: [wreg]
  6399  049B  3020               	movlw	32
  6400  049C  0140               	movlb	0	; select bank0
  6401  049D  068E               	xorwf	14,f
  6402  049E  0008               	return
  6403  049F                     __end_of_tmr_fire:	
  6404                           
  6405                           	psect	text27
  6406  03A1                     __ptext27:	
  6407 ;; *************** function _EUSART1_Transmit_ISR *****************
  6408 ;; Defined at:
  6409 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_EUSART1_Initialize
  6433 ;;		_INTERRUPT_InterruptManager
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _EUSART1_Transmit_ISR
  6439  03A1                     _EUSART1_Transmit_ISR:	
  6440                           
  6441                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6445  03A1  3008               	movlw	8
  6446  03A2  0141               	movlb	1	; select bank1
  6447  03A3  026D               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
  6448  03A4  1803               	skipnc
  6449  03A5  2BBD               	goto	i1l250
  6450                           
  6451                           ;eusart1.c: 177: {;eusart1.c: 178: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  6452  03A6  0140               	movlb	0	; select bank0
  6453  03A7  086F               	movf	_eusart1TxTail,w
  6454  03A8  3EA8               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  6455  03A9  0086               	movwf	6
  6456  03AA  0187               	clrf	7
  6457  03AB  0801               	movf	1,w
  6458  03AC  0142               	movlb	2	; select bank2
  6459  03AD  009A               	movwf	26	;volatile
  6460  03AE  3001               	movlw	1
  6461  03AF  00F0               	movwf	??_EUSART1_Transmit_ISR
  6462  03B0  0870               	movf	??_EUSART1_Transmit_ISR,w
  6463  03B1  0140               	movlb	0	; select bank0
  6464  03B2  07EF               	addwf	_eusart1TxTail,f	;volatile
  6465                           
  6466                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6467  03B3  3008               	movlw	8
  6468  03B4  026F               	subwf	_eusart1TxTail,w	;volatile
  6469  03B5  1803               	btfsc	3,0
  6470                           
  6471                           ;eusart1.c: 180: {;eusart1.c: 181: eusart1TxTail = 0;
  6472  03B6  01EF               	clrf	_eusart1TxTail	;volatile
  6473                           
  6474                           ;eusart1.c: 182: };eusart1.c: 183: eusart1TxBufferRemaining++;
  6475  03B7  3001               	movlw	1
  6476  03B8  00F0               	movwf	??_EUSART1_Transmit_ISR
  6477  03B9  0870               	movf	??_EUSART1_Transmit_ISR,w
  6478  03BA  0141               	movlb	1	; select bank1
  6479  03BB  07ED               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
  6480                           
  6481                           ;eusart1.c: 184: }
  6482  03BC  0008               	return
  6483  03BD                     i1l250:	
  6484                           
  6485                           ;eusart1.c: 185: else;eusart1.c: 186: {;eusart1.c: 187: PIE3bits.TX1IE = 0;
  6486  03BD  014E               	movlb	14	; select bank14
  6487  03BE  1219               	bcf	25,4	;volatile
  6488  03BF  0008               	return
  6489  03C0                     __end_of_EUSART1_Transmit_ISR:	
  6490                           
  6491                           	psect	text28
  6492  03DE                     __ptext28:	
  6493 ;; *************** function _EUSART1_Receive_ISR *****************
  6494 ;; Defined at:
  6495 ;;		line 191 in file "mcc_generated_files/eusart1.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;Total ram usage:        1 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_EUSART1_Initialize
  6519 ;;		_INTERRUPT_InterruptManager
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function _EUSART1_Receive_ISR
  6525  03DE                     _EUSART1_Receive_ISR:	
  6526                           
  6527                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  6528                           
  6529                           ;incstack = 0
  6530                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6531  03DE  0142               	movlb	2	; select bank2
  6532  03DF  1C9D               	btfss	29,1	;volatile
  6533  03E0  2BE3               	goto	i1l1928
  6534                           
  6535                           ;eusart1.c: 195: {;eusart1.c: 198: RC1STAbits.CREN = 0;
  6536  03E1  121D               	bcf	29,4	;volatile
  6537                           
  6538                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  6539  03E2  161D               	bsf	29,4	;volatile
  6540  03E3                     i1l1928:	
  6541                           
  6542                           ;eusart1.c: 200: };eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  6543  03E3  0819               	movf	25,w	;volatile
  6544  03E4  00F0               	movwf	??_EUSART1_Receive_ISR
  6545  03E5  0140               	movlb	0	; select bank0
  6546  03E6  086E               	movf	_eusart1RxHead,w
  6547  03E7  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  6548  03E8  0086               	movwf	6
  6549  03E9  0187               	clrf	7
  6550  03EA  0870               	movf	??_EUSART1_Receive_ISR,w
  6551  03EB  0081               	movwf	1
  6552  03EC  3001               	movlw	1
  6553  03ED  00F0               	movwf	??_EUSART1_Receive_ISR
  6554  03EE  0870               	movf	??_EUSART1_Receive_ISR,w
  6555  03EF  07EE               	addwf	_eusart1RxHead,f	;volatile
  6556                           
  6557                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6558  03F0  3008               	movlw	8
  6559  03F1  026E               	subwf	_eusart1RxHead,w	;volatile
  6560  03F2  1803               	btfsc	3,0
  6561                           
  6562                           ;eusart1.c: 205: {;eusart1.c: 206: eusart1RxHead = 0;
  6563  03F3  01EE               	clrf	_eusart1RxHead	;volatile
  6564                           
  6565                           ;eusart1.c: 207: };eusart1.c: 208: eusart1RxCount++;
  6566  03F4  3001               	movlw	1
  6567  03F5  00F0               	movwf	??_EUSART1_Receive_ISR
  6568  03F6  0870               	movf	??_EUSART1_Receive_ISR,w
  6569  03F7  0141               	movlb	1	; select bank1
  6570  03F8  07BA               	addwf	_eusart1RxCount^(0+128),f	;volatile
  6571  03F9  0008               	return
  6572  03FA                     __end_of_EUSART1_Receive_ISR:	
  6573  007E                     btemp	set	126	;btemp
  6574  007E                     int$flags	set	126
  6575  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    31
    Data        32
    BSS         97
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     77      80
    BANK1            80      0      80
    BANK2            80      1      55
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S36$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S36$5$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S598$4$2	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    BMP280_SPI_bus_write@reg_data	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    S598$3$2	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), tmr_fire(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), tmr_fire(), 

    conf_sensor@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    conf_sensor@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    conf_sensor@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    get_calib_param@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    get_calib_param@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    get_calib_param@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    interleave_data@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_data@reg_addr	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    interleave_data@temp_buff	PTR unsigned char  size(1) Largest target is 8
		 -> bmp280_set_regs@temp_buff(BANK0[8]), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    null_ptr_check@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_compute_meas_time@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_compute_meas_time@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_compute_meas_time@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_pres_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_pres_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_pres_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_comp_temp_32bit@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_comp_temp_32bit@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_comp_temp_32bit@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_power_mode@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_power_mode@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_power_mode@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_config@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_config@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_config@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_init@dev	PTR struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_soft_reset@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 2
		 -> conf_sensor@temp(COMMON[2]), bmp280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bmp280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 2
		 -> conf_sensor@reg_addr(COMMON[2]), bmp280_soft_reset@reg_addr(BANK0[1]), 

    bmp280_set_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    bmp280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    bmp280_get_regs@dev	PTR const struct bmp280_dev size(1) Largest target is 42
		 -> bmp(BANK1[42]), 

    BMP280_SPI_bus_read@reg_data	PTR unsigned char  size(1) Largest target is 42
		 -> conf_sensor@temp(COMMON[2]), get_calib_param@temp(BANK0[24]), bmp280_get_uncomp_data@temp(COMMON[6]), bmp280_get_power_mode@temp(COMMON[1]), 
		 -> bmp280_get_status@temp(COMMON[1]), bmp280_get_config@temp(COMMON[2]), bmp(BANK1[42]), 

    S598bmp280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    bmp.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> BMP280_delay_msek(), 

    S598bmp280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    bmp.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_write(), 

    S598bmp280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    bmp.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned int ,)char  size(2) Largest target is 1
		 -> BMP280_SPI_bus_read(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    S36$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S36$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S36$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S36$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S36$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    S36$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S36$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S36$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S36$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S36$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 


Critical Paths under _main in COMMON

    _bmp280_init->_bmp280_get_regs
    _get_calib_param->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _bmp280_soft_reset->_bmp280_set_regs
    _bmp280_set_regs->_BMP280_SPI_bus_write
    _bmp280_set_regs->_interleave_data
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_bmp280_init
    _bmp280_init->_get_calib_param
    _get_calib_param->_bmp280_get_regs
    _bmp280_get_regs->_BMP280_SPI_bus_read
    _bmp280_soft_reset->_bmp280_set_regs

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14644
                                             76 BANK0      1     1      0
                                              0 BANK2      1     1      0
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                        _bmp280_init
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          6     6      0   14055
                                             70 BANK0      6     6      0
                  _BMP280_delay_msek *
                    _bmp280_get_regs
                  _bmp280_soft_reset
                    _get_calib_param
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _get_calib_param                                     30    30      0    5219
                                             40 BANK0     30    30      0
                    _bmp280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_get_regs                                      9     6      3    3177
                                              7 COMMON     5     2      3
                                             36 BANK0      4     4      0
                _BMP280_SPI_bus_read *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_read                                 42    38      4     550
                                              1 COMMON     6     2      4
                                              0 BANK0     36    36      0
 ---------------------------------------------------------------------------------
 (2) _bmp280_soft_reset                                    7     7      0    4223
                                             17 BANK0      7     7      0
                  _BMP280_delay_msek *
                    _bmp280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _bmp280_set_regs                                     20    17      3    3176
                                              9 COMMON     3     0      3
                                              0 BANK0     17    17      0
               _BMP280_SPI_bus_write
                    _interleave_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     623
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _interleave_data                                      8     5      3     580
                                              1 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (4) _BMP280_SPI_bus_write                                 8     4      4     330
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _BMP280_delay_msek                                    4     0      4     108
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     401
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     185
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     185
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     216
                                              3 COMMON     1     1      0
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     108
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     108
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _tmr_fire *
 ---------------------------------------------------------------------------------
 (8) _tmr_fire                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _bmp280_init
     _BMP280_delay_msek *
     _bmp280_get_regs *
       _BMP280_SPI_bus_read *
       _null_ptr_check *
     _bmp280_soft_reset *
       _BMP280_delay_msek *
       _bmp280_set_regs *
         _BMP280_SPI_bus_write
         _interleave_data
         _null_ptr_check
       _null_ptr_check *
     _get_calib_param *
       _bmp280_get_regs
         _BMP280_SPI_bus_read *
         _null_ptr_check *
       _null_ptr_check
     _null_ptr_check *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _tmr_fire *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      37      10       68.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 27 22:41:52 2018

                       _eusart1TxBufferRemaining 00ED                                      __CFG_CP$OFF 0000  
                              ??_bmp280_set_regs 0020                                      __CFG_LVP$ON 0000  
                                            l371 0177                                              l363 029B  
                                            l347 0358                                              l460 039B  
                                            _RC5 0075                         BMP280_SPI_bus_read@F6566 0120  
                                            _bmp 00BB                                 ?_interleave_data 0071  
                        __size_of_PMD_Initialize 0008                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                    __CFG_BBEN$OFF 0000  
                             interleave_data@len 0073                                     __CFG_ZCD$OFF 0000  
                                           l2220 0240                                             l2212 0228  
                                           l2310 014F                                             l2302 0115  
                                           l2222 0258                                             l2214 023E  
                                           l2240 039F                                             l2320 0179  
                                           l2304 012F                                             l2250 02DD  
                                           l2420 02D7                                             l2238 039E  
                                           l2318 0172                                             l2282 00F2  
                                           l2274 029D                                             l2268 0275  
                                           l2436 00E6                                             l2462 018D  
                                           l2472 01B7                                             l2482 01DF  
                                           l2484 01E2                                             l2492 0205  
                                           l2478 01CB                                             l2488 01E9  
                                           u2300 021E                                             _LATA 0018  
                                           _LATC 001A                                             u2315 0236  
                                           u2520 0060                                             u3247 0208  
                                           _PMD0 0796                                             _PMD1 0797  
                                           _PMD2 0798                                             _PMD3 0799  
                                           _PMD4 079A                                             _PMD5 079B  
                       BMP280_SPI_bus_read@array 0020                                             _WPUA 1F39  
                                           _WPUC 1F4F                                    _EUSART1_Write 0000  
                                  __CFG_FCMEN$ON 0000                                             _main 0332  
                                _TMR0_StartTimer 04A2                                             _uart 0413  
                                           fsr0h 0005                                             fsr1h 0007  
                                           indf0 0000                                             fsr0l 0004  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                    __CFG_BOREN$ON 0000  
                                           start 0025                                    __CFG_CSWEN$ON 0000  
                                  __CFG_MCLRE$ON 0000                                _bmp280_soft_reset 029F  
                        __end_of_TMR0_Initialize 0413                   ??_TMR0_DefaultInterruptHandler 0070  
                             ?_bmp280_soft_reset 0070                   __size_of_OSCILLATOR_Initialize 000A  
                  __end_of_OSCILLATOR_Initialize 0465                                            _ADACT 009F  
                                          ?_main 0070                                    __CFG_WDTE$OFF 0000  
                                          i1l250 03BD                                            i1l572 0023  
                                          i1l564 000E                                            i1l567 001A  
                                          _OSCEN 0891                                            _TMR0H 059D  
                                          _TMR0L 059C                                            _TRISA 0012  
                                          _TRISC 0014                __size_of_TMR0_SetInterruptHandler 0006  
                       __size_of_get_calib_param 0094                              ??_bmp280_soft_reset 0031  
                      ?_TMR0_SetInterruptHandler 0071                             _EUSART1_Transmit_ISR 03A1  
                               __end_of_TMR0_ISR 0446                      __end_of_BMP280_SPI_bus_read 025A  
                                  __CFG_WRTB$OFF 0000                                    __CFG_WRTC$OFF 0000  
                        bmp280_get_regs@reg_addr 007A                          bmp280_set_regs@reg_addr 0030  
                        bmp280_get_regs@reg_data 0077                          bmp280_set_regs@reg_data 0079  
                                          pclath 000A                                            status 0003  
                                          wtemp0 007E                          bmp280_set_regs@temp_len 002C  
                      __end_of_bmp280_soft_reset 02DA                                  __initialization 0027  
                     __end_of_EUSART1_Initialize 0332                                     __end_of_main 0359  
                                   __end_of_uart 0427                                   __CFG_SAFEN$OFF 0000  
                           interleave_data@index 0078                      ?_INTERRUPT_InterruptManager 0070  
                                         ??_main 006C                          interleave_data@reg_addr 0077  
                        interleave_data@reg_data 0072                                 ??_null_ptr_check 0071  
                          ?_EUSART1_Transmit_ISR 0070                          __end_of_TMR0_StartTimer 04A5  
                                         _ADCON0 009D                                           _ADCON1 009E  
                                         _ADRESH 009C                                           _ADRESL 009B  
                                         _ANSELA 1F38                                           _ANSELC 1F4E  
                             __CFG_RSTOSC$HFINT1 0000                                           _T0CON0 059E  
                                         _T0CON1 059F                                           _RC1REG 0119  
                                         _RC0PPS 1F20                                           _RC1STA 011D  
                                         _RC2PPS 1F22                                           _RC4PPS 1F24  
                                         _ODCONA 1F3A                                           _ODCONC 1F50  
                                         i1l1928 03E3                                   __CFG_WDTCCS$SC 0000  
__end_ofbmp280_compute_meas_time@period_per_osrs 0497          bmp280_compute_meas_time@period_per_osrs 0493  
                                         _OSCFRQ 0893                                           _TX1REG 011A  
                                         _TX1STA 011E                             bmp280_init@try_count 0069  
                                 __CFG_PWRTE$OFF 0000                     __end_of_BMP280_SPI_bus_write 045B  
                                 __CFG_STVREN$ON 0000                                 ?_TMR0_Initialize 0070  
                                 _PMD_Initialize 0465                                  _bmp280_get_regs 025A  
                               __end_of_tmr_fire 049F                            __end_of_TMR0_CallBack 0451  
                              _BMP280_delay_msek 04A7         TMR0_SetInterruptHandler@InterruptHandler 0071  
                                _eusart1RxBuffer 00A0                         bmp280_set_regs@temp_buff 0024  
                             ?_BMP280_delay_msek 0071                                  _eusart1TxBuffer 00A8  
                              ??_get_calib_param 0048                                _SYSTEM_Initialize 0427  
                        __end_of__initialization 0050                           bmp280_get_config@F6430 00B8  
                             ?_SYSTEM_Initialize 0070                                  _bmp280_set_regs 00E8  
                            ??_BMP280_delay_msek 0075                           BMP280_SPI_bus_read@cnt 0074  
                     __size_of_bmp280_soft_reset 003B                                   __pcstackCOMMON 0070  
                                   __pidataBANK1 04A5                                     __pidataBANK2 03C0  
                            ??_SYSTEM_Initialize 0074                                        ?_TMR0_ISR 0070  
                         __end_of_PMD_Initialize 046D                           ??_EUSART1_Transmit_ISR 0070  
                             _spi1_configuration 049F                        __end_of_BMP280_delay_msek 04A8  
                    bmp280_set_regs@reg_addr_cnt 002E                      __end_of_EUSART1_Receive_ISR 03FA  
                               ?_TMR0_StartTimer 0070                        __end_of_SYSTEM_Initialize 0439  
                                  _eusart1RxHead 006E                                    _eusart1TxHead 007C  
                                  _eusart1RxTail 006D                                       __pbssBANK0 006D  
                                     __pbssBANK1 00A0                                       __pbssBANK2 013E  
                                  ??_bmp280_init 0066                                    _eusart1TxTail 006F  
              _EUSART1_TxDefaultInterruptHandler 00EB                  ??_EUSART1_SetRxInterruptHandler 0073  
                           BMP280_SPI_bus_read@i 0042                                   _SSP1DATPPSbits 1EC6  
                                     __pmaintext 0332                         interleave_data@temp_buff 0071  
               __end_of_TMR0_SetInterruptHandler 0487                                       ??_TMR0_ISR 0070  
                                __CFG_PPS1WAY$ON 0000                                       __pintentry 0004  
                                 _SSP1CLKPPSbits 1EC5                                  ?_PMD_Initialize 0070  
                        __end_of_bmp280_get_regs 029F                          __size_of_ADC_Initialize 0008  
                                        _SP1BRGH 011C                                          _SP1BRGL 011B  
                                        _OSCCON1 088D                                          _OSCCON3 088F  
                                        _OSCSTAT 0890                                          _OSCTUNE 0892  
                                        _SSP1ADD 018D                                          _SSP1BUF 018C  
                           _BMP280_SPI_bus_write 0451                          __end_of_bmp280_set_regs 017B  
                       __size_of_interleave_data 002D                              __end_of_bmp280_init 0207  
                                      ?_tmr_fire 0070                               bmp280_get_regs@dev 0079  
                             bmp280_get_regs@len 0078                              _EUSART1_is_rx_ready 0000  
                            _EUSART1_is_tx_ready 0000                                          __ptext1 017B  
                                        __ptext2 0054                                          __ptext3 025A  
                                        __ptext4 0207                                          __ptext5 029F  
                                        __ptext6 00E8                                          __ptext7 037F  
                                        __ptext8 02DA                                          __ptext9 0451  
                                __CFG_WRTAPP$OFF 0000                            _OSCILLATOR_Initialize 045B  
                     __size_of_BMP280_delay_msek 0001                               _EUSART1_Initialize 0307  
                       ??_PIN_MANAGER_Initialize 0071                                  __CFG_WRTSAF$OFF 0000  
                     __size_of_SYSTEM_Initialize 0012                                          clrloop0 047C  
                          ?_BMP280_SPI_bus_write 0071                    bmp280_soft_reset@soft_rst_cmd 0034  
                           end_of_initialization 0050                              ?_EUSART1_Initialize 0070  
                                        init_ram 0475                     __size_of_BMP280_SPI_bus_read 0053  
                                        initloop 0476                            bmp280_soft_reset@rslt 0035  
          __end_of_EUSART1_SetRxInterruptHandler 0493           __size_of_EUSART1_SetRxInterruptHandler 0006  
                  _EUSART1_SetRxInterruptHandler 048D                                       ??_tmr_fire 0070  
                           ??_EUSART1_Initialize 0073                            __CFG_WDTCPS$WDTCPS_31 0000  
                       _TMR0_SetInterruptHandler 0481                                 ?_bmp280_get_regs 0077  
                                _get_calib_param 0054                               get_calib_param@dev 0065  
                                      _TRISCbits 0014                                 __CFG_FEXTOSC$OFF 0000  
                               ?_bmp280_set_regs 0079                                      _bmp280_init 017B  
                                   _EUSART1_Read 0000                                ??_interleave_data 0074  
                           _timer0ReloadVal16bit 00E7                                __size_of_TMR0_ISR 000D  
                                 _ADC_Initialize 046D                           ?_OSCILLATOR_Initialize 0070  
                            start_initialization 0027                     BMP280_SPI_bus_read@stringpos 0043  
                       __size_of_TMR0_Initialize 0019                  __size_of_PIN_MANAGER_Initialize 0026  
                                bmp280_init@rslt 006A                           ??_BMP280_SPI_bus_write 0075  
        __end_ofbmp280_compute_meas_time@startup 049B                  bmp280_compute_meas_time@startup 0497  
  EUSART1_SetRxInterruptHandler@interruptHandler 0071    EUSART1_SetTxInterruptHandler@interruptHandler 0071  
                        __size_of_null_ptr_check 0022                          BMP280_SPI_bus_write@cnt 0074  
                               __CFG_LPBOREN$OFF 0000                                 ??_PMD_Initialize 0071  
                        __end_of_get_calib_param 00E8                           __size_of_TMR0_CallBack 000B  
                 ?_EUSART1_SetRxInterruptHandler 0071                           __end_of_ADC_Initialize 0475  
                                    __pdataBANK1 00EE                                      __pdataBANK2 0120  
                             null_ptr_check@rslt 0073                                   _eusart1RxCount 00BA  
                                    __pbssCOMMON 007C                _EUSART1_RxDefaultInterruptHandler 00E9  
                                      ___latbits 0002                    __size_of_EUSART1_Transmit_ISR 001F  
                                  __pcstackBANK0 0020                                    __pcstackBANK2 0156  
                            bmp280_set_regs@rslt 002F                  ??_EUSART1_SetTxInterruptHandler 0073  
                    bmp280_get_uncomp_data@F6465 00B0                     __size_of_EUSART1_Receive_ISR 001C  
                          _TMR0_InterruptHandler 00E5                                        __pnvBANK1 00E5  
                       __size_of_TMR0_StartTimer 0003                           _PIN_MANAGER_Initialize 0359  
                                ?_ADC_Initialize 0070                        BMP280_SPI_bus_read@iError 003E  
                   ??_INTERRUPT_InterruptManager 0071                                __size_of_tmr_fire 0004  
                            _BMP280_SPI_bus_read 0207                                         _BAUD1CON 011F  
                                  _TMR0_CallBack 0446                               _EUSART1_is_tx_done 0000  
                   BMP280_SPI_bus_write@dev_addr 0071                                ??_TMR0_Initialize 0073  
                           ?_BMP280_SPI_bus_read 0071                            BMP280_delay_msek@msek 0071  
                                      clear_ram0 047B                                         _PIE0bits 0716  
                                       _PIE3bits 0719                             bmp280_soft_reset@dev 0037  
            __size_of_INTERRUPT_InterruptManager 0021                       ??_TMR0_SetInterruptHandler 0073  
                    BMP280_SPI_bus_read@dev_addr 0071                                         _PIR0bits 070C  
                                       _PIR3bits 070F                     BMP280_SPI_bus_write@reg_addr 0072  
                   BMP280_SPI_bus_write@reg_data 0073                                __CFG_BBSIZE$BB512 0000  
                                       _SSP1CON1 0190                                         _SSP1CON2 0191  
                                       _TMR0_ISR 0439                                         _SSP1STAT 018F  
                               ?_get_calib_param 0070                                       _ADCON0bits 009D  
                    BMP280_SPI_bus_read@reg_addr 0072                      BMP280_SPI_bus_read@reg_data 0073  
                                   _RX1DTPPSbits 1ECB                                   ?_TMR0_CallBack 0070  
                                _interleave_data 02DA                                   _null_ptr_check 037F  
                                   ?_bmp280_init 0070                            ??_BMP280_SPI_bus_read 0075  
                                 bmp280_init@dev 006B            __end_of_EUSART1_SetTxInterruptHandler 048D  
         __size_of_EUSART1_SetTxInterruptHandler 0006                    _EUSART1_SetTxInterruptHandler 0487  
                              null_ptr_check@dev 0074                          ??_OSCILLATOR_Initialize 0071  
                              ??_TMR0_StartTimer 0071                      __size_of_EUSART1_Initialize 002B  
                             bmp280_set_regs@dev 007B                               bmp280_set_regs@len 007A  
                            bmp280_get_regs@rslt 007B                                       _T0CON0bits 059E  
                                       __ptext10 04A7                                         __ptext11 04A2  
                                       __ptext20 048D                                         __ptext12 0427  
                                       __ptext21 046D                                         __ptext13 03FA  
                                       __ptext14 0481                                         __ptext23 0439  
                                       __ptext15 0465                                         __ptext24 0446  
                                       __ptext16 0359                                         __ptext25 04A8  
                                       __ptext17 045B                                         __ptext26 049B  
                                       __ptext18 0307                                         __ptext27 03A1  
                                       __ptext19 0487                                         __ptext28 03DE  
                                   _SSP1CON1bits 0190                           __end_of_null_ptr_check 03A1  
                       __size_of_bmp280_get_regs 0045                                    __size_of_main 0027  
           __end_of_TMR0_DefaultInterruptHandler 04A9            __size_of_TMR0_DefaultInterruptHandler 0001  
                   _TMR0_DefaultInterruptHandler 04A8                             __CFG_WDTCWS$WDTCWS_7 0000  
                               conf_sensor@F6602 00B6                                 conf_sensor@F6604 00EE  
                                     _RC1STAbits 011D                         __size_of_bmp280_set_regs 0093  
                                       int$flags 007E                                         _tmr_fire 049B  
             __end_of_INTERRUPT_InterruptManager 0025                       _INTERRUPT_InterruptManager 0004  
                                       main@rslt 0156                              _EUSART1_Receive_ISR 03DE  
                        __end_of_interleave_data 0307                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0070                        bmp280_soft_reset@reg_addr 0036  
                                ?_null_ptr_check 0070                    __size_of_BMP280_SPI_bus_write 000A  
                                       intlevel1 0000                             ?_EUSART1_Receive_ISR 0070  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
                     BMP280_SPI_bus_write@iError 0075                     __end_of_EUSART1_Transmit_ISR 03C0  
                               ??_ADC_Initialize 0071                    ?_TMR0_DefaultInterruptHandler 0070  
                 ?_EUSART1_SetTxInterruptHandler 0071                                    __pstringtext1 0413  
                                  __pstringtext2 0493                                    __pstringtext3 0497  
                                  __pstringtext4 049F                                  _TMR0_Initialize 03FA  
                           get_calib_param@F6534 013E                                       _TX1STAbits 011E  
                          ??_EUSART1_Receive_ISR 0070                   __end_of_PIN_MANAGER_Initialize 037F  
                           __size_of_bmp280_init 008C                                ??_bmp280_get_regs 0044  
                     __end_of_spi1_configuration 04A2                              get_calib_param@temp 004C  
                            get_calib_param@rslt 0064  
